[10010010] |<article>Algorithm</article>
[10010020] |In [[mathematics]], [[computing]], [[linguistics]] and related disciplines, an '''algorithm''' is a sequence of instructions, often used for [[calculation]] and [[data processing]].
[10010030] |It is formally a type of [[effective method]] in which a list of well-defined instructions for completing a task will, when given an initial state, proceed through a well-defined series of successive states, eventually terminating in an end-state.
[10010040] |The transition from one state to the next is not necessarily [[deterministic]]; some algorithms, known as [[probabilistic algorithms]], incorporate randomness.
[10010050] |A partial formalization of the concept began with attempts to solve the [[Entscheidungsproblem]] (the "decision problem") posed by [[David Hilbert]] in 1928.
[10010060] |Subsequent formalizations were framed as attempts to define "[[effective calculability]]" (Kleene 1943:274) or "effective method" (Rosser 1939:225); those formalizations included the Gödel-Herbrand-Kleene [[Recursion (computer science)|recursive function]]s of 1930, 1934 and 1935, [[Alonzo Church]]'s [[lambda calculus]] of 1936, [[Emil Post]]'s "Formulation I" of 1936, and [[Alan Turing]]'s [[Turing machines]] of 1936-7 and 1939.
[10010070] |==Etymology== 
[10010080] |[[Muhammad ibn Mūsā al-Khwārizmī|Al-Khwārizmī]], [[Persian people|Persian]] [[astronomer]] and [[mathematician]], wrote a [[treatise]] in [[Arabic]] in 825 AD, ''On Calculation with Hindu Numerals''.
[10010090] |(See [[algorism]]).
[10010100] |It was translated into [[Latin]] in the 12th century as ''Algoritmi de numero Indorum'' (al-Daffa 1977), which title was likely intended to mean "Algoritmi on the numbers of the Indians", where "Algoritmi" was the translator's rendition of the author's name; but people misunderstanding the title treated ''Algoritmi'' as a Latin plural and this led to the word "algorithm" (Latin ''algorismus'') coming to mean "calculation method".
[10010110] |The intrusive "th" is most likely due to a [[false cognate]] with the [[Greek language|Greek]] {{lang|grc|ἀριθμός}} (''arithmos'') meaning "number".
[10010120] |== Why algorithms are necessary: an informal definition == 
[10010130] |No generally accepted ''formal'' definition of "algorithm" exists yet.
[10010140] |An informal definition could be "an algorithm is a computer program that calculates something."
[10010150] |For some people, a program is only an algorithm if it stops eventually.
[10010160] |For others, a program is only an algorithm if it stops before a given number of calculation steps.
[10010170] |A prototypical example of an "algorithm" is Euclid's algorithm to determine the maximum common divisor of two integers greater than one: "subtract the smallest number from the biggest one, repeat until you get a zero or a one".
[10010180] |This procedure is know to stop always, and the number of subtractions needed is always smaller than the biggest of the two numbers.
[10010190] |We can derive clues to the issues involved and an informal meaning of the word from the following quotation from {{Harvtxt|Boolos|Jeffrey|1974, 1999}} (boldface added):
[10010200] |<blockquote>  No human being can write fast enough, or long enough, or small enough to list all members of an enumerably infinite set by writing out their names, one after another, in some notation.
[10010210] |But humans can do something equally useful, in the case of certain enumerably infinite sets: They can give '''explicit instructions for determining the nth member of the set''', for arbitrary finite n.
[10010220] |Such instructions are to be given quite explicitly, in a form in which '''they could be followed by a computing machine''', or by a '''human who is capable of carrying out only very elementary operations on symbols'''  </blockquote>
[10010230] |The words "enumerably infinite" mean "countable using integers perhaps extending to infinity".
[10010240] |Thus Boolos and Jeffrey are saying that an algorithm ''implies'' instructions for a process that "creates" output integers from an ''arbitrary'' "input" integer or integers that, in theory, can be chosen from 0 to infinity.
[10010250] |Thus we might expect an algorithm to be an algebraic equation such as '''y = m + n''' — two arbitrary "input variables" '''m''' and '''n''' that produce an output '''y'''.
[10010260] |As we see in [[Algorithm characterizations]] — the word algorithm implies much more than this, something on the order of (for our addition example): 
[10010270] |:Precise instructions (in language understood by "the computer") for a "fast, efficient, good" ''process'' that specifies the "moves" of "the computer" (machine or human, equipped with the necessary internally-contained information and capabilities) to find, decode, and then munch arbitrary input integers/symbols '''m''' and '''n''', symbols '''+''' and '''=''' ... and (reliably, correctly, "effectively") produce, in a "reasonable" [[time]], output-integer '''y''' at a specified place and in a specified format.
[10010280] |The concept of ''algorithm'' is also used to define the notion of [[decidability (logic)|decidability]].
[10010290] |That notion is central for explaining how [[formal system]]s come into being starting from a small set of [[axiom]]s and rules.
[10010300] |In [[logic]], the time that an algorithm requires to complete cannot be measured, as it is not apparently related with our customary physical dimension.
[10010310] |From such uncertainties, that characterize ongoing work, stems the unavailability of a definition of ''algorithm'' that suits both concrete (in some sense) and abstract usage of the term.
[10010320] |:''For a detailed presentation of the various points of view around the definition of "algorithm" see [[Algorithm characterizations]].
[10010330] |For examples of simple addition algorithms specified in the detailed manner described in [[Algorithm characterizations]], see [[Algorithm examples]].''
[10010340] |== Formalization of algorithms == 
[10010350] |Algorithms are essential to the way [[computer]]s process information, because a [[computer program]] is essentially an algorithm that tells the computer what specific steps to perform (in what specific order) in order to carry out a specified task, such as calculating employees’ paychecks or printing students’ report cards.
[10010360] |Thus, an algorithm can be considered to be any sequence of operations that can be performed by a [[Turing completeness|Turing-complete]] system.
[10010370] |Authors who assert this thesis include Savage (1987) and Gurevich (2000):
[10010380] |<blockquote>  ...Turing's informal argument in favor of his thesis justifies a stronger thesis: every algorithm can be simulated by a Turing machine (Gurevich 2000:1)...according to Savage [1987], an algorithm is a computational process defined by a Turing machine.
[10010390] |(Gurevich 2000:3)  </blockquote>
[10010400] |Typically, when an algorithm is associated with processing information, data are read from an input source or device, written to an output sink or device, and/or stored for further processing.
[10010410] |Stored data are regarded as part of the internal state of the entity performing the algorithm.
[10010420] |In practice, the state is stored in a [[data structure]], but an algorithm requires the internal data only for specific operation sets called [[abstract data type]]s.
[10010430] |For any such computational process, the algorithm must be rigorously defined: specified in the way it applies in all possible circumstances that could arise.
[10010440] |That is, any conditional steps must be systematically dealt with, case-by-case; the criteria for each case must be clear (and computable).
[10010450] |Because an algorithm is a precise list of precise steps, the order of computation will almost always be critical to the functioning of the algorithm.
[10010460] |Instructions are usually assumed to be listed explicitly, and are described as starting "from the top" and going "down to the bottom", an idea that is described more formally by ''[[control flow|flow of control]]''.
[10010470] |So far, this discussion of the formalization of an algorithm has assumed the premises of [[imperative programming]].
[10010480] |This is the most common conception, and it attempts to describe a task in discrete, "mechanical" means.
[10010490] |Unique to this conception of formalized algorithms is the [[assignment operation]], setting the value of a variable.
[10010500] |It derives from the intuition of "[[memory]]" as a scratchpad.
[10010510] |There is an example below of such an assignment.
[10010520] |For some alternate conceptions of what constitutes an algorithm see [[functional programming]] and [[logic programming]] .
[10010530] |=== Termination === 
[10010540] |Some writers restrict the definition of ''algorithm'' to procedures that eventually finish.
[10010550] |In such a category Kleene places the "''decision procedure'' or ''decision method'' or ''algorithm'' for the question" (Kleene 1952:136).
[10010560] |Others, including Kleene, include procedures that could run forever without stopping; such a procedure has been called a "computational method" (Knuth 1997:5) or "''calculation procedure'' or ''algorithm''" (Kleene 1952:137); however, Kleene notes that such a method must eventually exhibit "some object" (Kleene 1952:137).
[10010570] |Minsky makes the pertinent observation, in regards to determining whether an algorithm will eventually terminate (from a particular starting state): 
[10010580] |<blockquote>  But if the length of the process is not known in advance, then "trying" it may not be decisive, because if the process does go on forever — then at no time will we ever be sure of the answer (Minsky 1967:105).</blockquote>
[10010590] |As it happens, no other method can do any better, as was shown by [[Alan Turing]] with his celebrated result on the undecidability of the so-called [[halting problem]].
[10010600] |There is no algorithmic procedure for determining of arbitrary algorithms whether or not they terminate from given starting states.
[10010610] |The analysis of algorithms for their likelihood of termination is called [[termination analysis]].
[10010620] |See the examples of (im-)"proper" subtraction at [[partial function]] for more about what can happen when an algorithm fails for certain of its input numbers — e.g., (i) non-termination, (ii) production of "junk" (output in the wrong format to be considered a number) or no number(s) at all (halt ends the computation with no output), (iii) wrong number(s), or (iv) a combination of these.
[10010630] |Kleene proposed that the production of "junk" or failure to produce a number is solved by having the algorithm detect these instances and produce e.g., an error message (he suggested "0"), or preferably, force the algorithm into an endless loop (Kleene 1952:322).
[10010640] |Davis does this to his subtraction algorithm — he fixes his algorithm in a second example so that it is proper subtraction (Davis 1958:12-15).
[10010650] |Along with the logical outcomes "true" and "false" Kleene also proposes the use of a third logical symbol "u" — undecided (Kleene 1952:326) — thus an algorithm will always produce ''something'' when confronted with a "proposition".
[10010660] |The problem of wrong answers must be solved with an independent "proof" of the algorithm e.g., using induction: 
[10010670] |<blockquote>  We normally require auxiliary evidence for this (that the algorithm correctly defines a [[mu recursive function]]), e.g., in the form of an inductive proof that, for each argument value, the computation terminates with a unique value (Minsky 1967:186).</blockquote>
[10010680] |=== Expressing algorithms === 
[10010690] |Algorithms can be expressed in many kinds of notation, including [[natural language]]s, [[pseudocode]], [[flowchart]]s, and [[programming language]]s.
[10010700] |Natural language expressions of algorithms tend to be verbose and ambiguous, and are rarely used for complex or technical algorithms.
[10010710] |Pseudocode and flowcharts are structured ways to express algorithms that avoid many of the ambiguities common in natural language statements, while remaining independent of a particular implementation language.
[10010720] |Programming languages are primarily intended for expressing algorithms in a form that can be executed by a [[computer]], but are often used as a way to define or document algorithms.
[10010730] |There is a wide variety of representations possible and one can express a given [[Turing machine]] program as a sequence of machine tables (see more at [[finite state machine]] and [[state transition table]]), as flowcharts (see more at [[state diagram]]), or as a form of rudimentary [[machine code]] or [[assembly code]] called "sets of quadruples" (see more at [[Turing machine]]).
[10010740] |Sometimes it is helpful in the description of an algorithm to supplement small "flow charts" (state diagrams) with natural-language and/or arithmetic expressions written inside "[[block diagram]]s" to summarize what the "flow charts" are accomplishing.
[10010750] |Representations of algorithms are generally classed into three accepted levels of Turing machine description (Sipser 2006:157): 
[10010760] |*'''1 High-level description''':
[10010770] |:: "...prose to describe an algorithm, ignoring the implementation details.
[10010780] |At this level we do not need to mention how the machine manages its tape or head" 
[10010790] |*'''2 Implementation description''':
[10010800] |:: "...prose used to define the way the Turing machine uses its head and the way that it stores data on its tape.
[10010810] |At this level we do not give details of states or transition function" 
[10010820] |*'''3 Formal description''':
[10010830] |:: Most detailed, "lowest level", gives the Turing machine's "state table".
[10010840] |:''For an example of the simple algorithm "Add m+n" described in all three levels see [[Algorithm examples]].''
[10010850] |=== Implementation === 
[10010860] |Most algorithms are intended to be implemented as [[computer programs]].
[10010870] |However, algorithms are also implemented by other means, such as in a biological [[neural network]] (for example, the [[human brain]] implementing [[arithmetic]] or an insect looking for food), in an [[electrical circuit]], or in a mechanical device.
[10010880] |== Example == 
[10010890] |One of the simplest algorithms is to find the largest number in an (unsorted) list of numbers.
[10010900] |The solution necessarily requires looking at every number in the list, but only once at each.
[10010910] |From this follows a simple algorithm, which can be stated in a high-level description [[English language|English]] prose, as:
[10010920] |'''High-level description:''' 
[10010930] |# Assume the first item is largest.
[10010940] |# Look at each of the remaining items in the list and if it is larger than the largest item so far, make a note of it.
[10010950] |# The last noted item is the largest in the list when the process is complete.
[10010960] |'''(Quasi-)formal description:''' Written in prose but much closer to the high-level language of a computer program, the following is the more formal coding of the algorithm in [[pseudocode]] or [[pidgin code]]:
[10010970] |Input: A non-empty list of numbers ''L''.
[10010980] |Output: The ''largest'' number in the list ''L''. ''largest'' ← ''L''<sub>0</sub> '''for each''' ''item'' '''in''' the list ''L<sub>≥1</sub>'', '''do''' '''if''' the ''item'' > ''largest'', '''then''' ''largest'' ← the ''item'' '''return''' ''largest''
[10010990] |For a more complex example of an algorithm, see [[Euclid's algorithm]] for the [[greatest common divisor]], one of the earliest algorithms known.
[10011000] |=== Algorithm analysis === 
[10011010] |As it happens, it is important to know how much of a particular resource (such as time or storage) is required for a given algorithm.
[10011020] |Methods have been developed for the [[analysis of algorithms]] to obtain such quantitative answers; for example, the algorithm above has a time requirement of O(''n''), using the [[big O notation]] with ''n'' as the length of the list.
[10011030] |At all times the algorithm only needs to remember two values: the largest number found so far, and its current position in the input list.
[10011040] |Therefore it is said to have a space requirement of ''O(1)'', if the space required to store the input numbers is not counted, or O (log ''n'') if it is counted.
[10011050] |Different algorithms may complete the same task with a different set of instructions in less or more time, space, or effort than others.
[10011060] |For example, given two different recipes for making potato salad, one may have ''peel the potato'' before ''boil the potato'' while the other presents the steps in the reverse order, yet they both call for these steps to be repeated for all potatoes and end when the potato salad is ready to be eaten.
[10011070] |The [[analysis of algorithms|analysis and study of algorithms]] is a discipline of [[computer science]], and is often practiced abstractly without the use of a specific [[programming language]] or implementation.
[10011080] |In this sense, algorithm analysis resembles other mathematical disciplines in that it focuses on the underlying properties of the algorithm and not on the specifics of any particular implementation.
[10011090] |Usually [[pseudocode]] is used for analysis as it is the simplest and most general representation.
[10011100] |== Classes == 
[10011110] |There are various ways to classify algorithms, each with its own merits.
[10011120] |=== Classification by implementation === 
[10011130] |One way to classify algorithms is by implementation means.
[10011140] |* '''Recursion''' or '''iteration''': A [[recursive algorithm]] is one that invokes (makes reference to) itself repeatedly until a certain condition matches, which is a method common to [[functional programming]].
[10011150] |[[Iteration|Iterative]] algorithms use repetitive constructs like [[Control flow#Loops|loops]] and sometimes additional data structures like [[Stack (data structure)|stacks]] to solve the given problems.
[10011160] |Some problems are naturally suited for one implementation or the other.
[10011170] |For example, [[towers of hanoi]] is well understood in recursive implementation.
[10011180] |Every recursive version has an equivalent (but possibly more or less complex) iterative version, and vice versa.
[10011190] |* '''Logical''': An algorithm may be viewed as controlled [[Deductive reasoning|logical deduction]].
[10011200] |This notion may be expressed as: '''Algorithm = logic + control''' (Kowalski 1979).
[10011210] |The logic component expresses the axioms that may be used in the computation and the control component determines the way in which deduction is applied to the axioms.
[10011220] |This is the basis for the [[logic programming]] paradigm.
[10011230] |In pure logic programming languages the control component is fixed and algorithms are specified by supplying only the logic component.
[10011240] |The appeal of this approach is the elegant [[Formal semantics of programming languages|semantics]]: a change in the axioms has a well defined change in the algorithm.
[10011250] |* '''Serial''' or '''parallel''' or '''distributed''': Algorithms are usually discussed with the assumption that computers execute one instruction of an algorithm at a time.
[10011260] |Those computers are sometimes called serial computers.
[10011270] |An algorithm designed for such an environment is called a serial algorithm, as opposed to [[parallel algorithm]]s or [[distributed algorithms]].
[10011280] |Parallel algorithms take advantage of computer architectures where several processors can work on a problem at the same time, whereas distributed algorithms utilize multiple machines connected with a [[Computer Network|network]].
[10011290] |Parallel or distributed algorithms divide the problem into more symmetrical or asymmetrical subproblems and collect the results back together.
[10011300] |The resource consumption in such algorithms is not only processor cycles on each processor but also the communication overhead between the processors.
[10011310] |Sorting algorithms can be parallelized efficiently, but their communication overhead is expensive.
[10011320] |Iterative algorithms are generally parallelizable.
[10011330] |Some problems have no parallel algorithms, and are called inherently serial problems.
[10011340] |* '''Deterministic''' or '''non-deterministic''': [[Deterministic algorithm]]s solve the problem with exact decision at every step of the algorithm whereas [[non-deterministic algorithm]] solve problems via guessing although typical guesses are made more accurate through the use of [[heuristics]].
[10011350] |* '''Exact''' or '''approximate''': While many algorithms reach an exact solution, [[approximation algorithm]]s seek an approximation that is close to the true solution.
[10011360] |Approximation may use either a deterministic or a random strategy.
[10011370] |Such algorithms have practical value for many hard problems.
[10011380] |=== Classification by design paradigm === 
[10011390] |Another way of classifying algorithms is by their design methodology or paradigm.
[10011400] |There is a certain number of paradigms, each different from the other.
[10011410] |Furthermore, each of these categories will include many different types of algorithms.
[10011420] |Some commonly found paradigms include:
[10011430] |* '''Divide and conquer'''.
[10011440] |A [[divide and conquer algorithm]] repeatedly reduces an instance of a problem to one or more smaller instances of the same problem (usually [[recursion|recursively]]), until the instances are small enough to solve easily.
[10011450] |One such example of divide and conquer is [[mergesort|merge sorting]].
[10011460] |Sorting can be done on each segment of data after dividing data into segments and sorting of entire data can be obtained in conquer phase by merging them.
[10011470] |A simpler variant of divide and conquer is called '''decrease and conquer algorithm''', that solves an identical subproblem and uses the solution of this subproblem to solve the bigger problem.
[10011480] |Divide and conquer divides the problem into multiple subproblems and so conquer stage will be more complex than decrease and conquer algorithms.
[10011490] |An example of decrease and conquer algorithm is [[binary search algorithm]].
[10011500] |* '''[[Dynamic programming]]'''.
[10011510] |When a problem shows [[optimal substructure]], meaning the optimal solution to a problem can be constructed from optimal solutions to subproblems, and [[overlapping subproblems]], meaning the same subproblems are used to solve many different problem instances, a quicker approach called ''dynamic programming'' avoids recomputing solutions that have already been computed.
[10011520] |For example, the shortest path to a goal from a vertex in a weighted [[graph (mathematics)|graph]] can be found by using the shortest path to the goal from all adjacent vertices.
[10011530] |Dynamic programming and [[memoization]] go together.
[10011540] |The main difference between dynamic programming and divide and conquer is that subproblems are more or less independent in divide and conquer, whereas subproblems overlap in dynamic programming.
[10011550] |The difference between dynamic programming and straightforward recursion is in caching or memoization of recursive calls.
[10011560] |When subproblems are independent and there is no repetition, memoization does not help; hence dynamic programming is not a solution for all complex problems.
[10011570] |By using memoization or maintaining a [[Mathematical table|table]] of subproblems already solved, dynamic programming reduces the exponential nature of many problems to polynomial complexity.
[10011580] |* '''The greedy method'''.
[10011590] |A [[greedy algorithm]] is similar to a [[dynamic programming|dynamic programming algorithm]], but the difference is that solutions to the subproblems do not have to be known at each stage; instead a "greedy" choice can be made of what looks best for the moment.
[10011600] |The greedy method extends the solution with the best possible decision (not all feasible decisions) at an algorithmic stage based on the current local optimum and the best decision (not all possible decisions) made in previous stage.
[10011610] |It is not exhaustive, and does not give accurate answer to many problems.
[10011620] |But when it works, it will be the fastest method.
[10011630] |The most popular greedy algorithm is finding the minimal spanning tree as given by [[kruskal's algorithm|Kruskal]].
[10011640] |* '''Linear programming'''.
[10011650] |When solving a problem using [[linear programming]], specific [[inequality|inequalities]] involving the inputs are found and then an attempt is made to maximize (or minimize) some linear function of the inputs.
[10011660] |Many problems (such as the [[Maximum flow problem|maximum flow]] for directed [[graph (mathematics)|graphs]]) can be stated in a linear programming way, and then be solved by a 'generic' algorithm such as the [[simplex algorithm]].
[10011670] |A more complex variant of linear programming is called integer programming, where the solution space is restricted to the [[integers]].
[10011680] |* '''[[Reduction (complexity)|Reduction]]'''.
[10011690] |This technique involves solving a difficult problem by transforming it into a better known problem for which we have (hopefully) [[asymptotically optimal]] algorithms.
[10011700] |The goal is to find a reducing algorithm whose [[Computational complexity theory|complexity]] is not dominated by the resulting reduced algorithm's.
[10011710] |For example, one [[selection algorithm]] for finding the median in an unsorted list involves first sorting the list (the expensive portion) and then pulling out the middle element in the sorted list (the cheap portion).
[10011720] |This technique is also known as ''transform and conquer''.
[10011730] |* '''Search and enumeration'''.
[10011740] |Many problems (such as playing [[chess]]) can be modeled as problems on [[graph theory|graphs]].
[10011750] |A [[graph exploration algorithm]] specifies rules for moving around a graph and is useful for such problems.
[10011760] |This category also includes [[search algorithm]]s, [[branch and bound]] enumeration and [[backtracking]].
[10011770] |* '''The probabilistic and heuristic paradigm'''.
[10011780] |Algorithms belonging to this class fit the definition of an algorithm more loosely.
[10011790] |# [[Probabilistic algorithm]]s are those that make some choices randomly (or pseudo-randomly); for some problems, it can in fact be proven that the fastest solutions must involve some [[randomness]].
[10011800] |# [[Genetic algorithm]]s attempt to find solutions to problems by mimicking biological [[evolution]]ary processes, with a cycle of random mutations yielding successive generations of "solutions".
[10011810] |Thus, they emulate reproduction and "survival of the fittest".
[10011820] |In [[genetic programming]], this approach is extended to algorithms, by regarding the algorithm itself as a "solution" to a problem.
[10011830] |# [[Heuristic]] algorithms, whose general purpose is not to find an optimal solution, but an approximate solution where the time or resources are limited.
[10011840] |They are not practical to find perfect solutions.
[10011850] |An example of this would be [[local search (optimization)|local search]], [[tabu search]], or [[simulated annealing]] algorithms, a class of heuristic probabilistic algorithms that vary the solution of a problem by a random amount.
[10011860] |The name "[[simulated annealing]]" alludes to the metallurgic term meaning the heating and cooling of metal to achieve freedom from defects.
[10011870] |The purpose of the random variance is to find close to globally optimal solutions rather than simply locally optimal ones, the idea being that the random element will be decreased as the algorithm settles down to a solution.
[10011880] |=== Classification by field of study === 
[10011890] |Every field of science has its own problems and needs efficient algorithms.
[10011900] |Related problems in one field are often studied together.
[10011910] |Some example classes are [[search algorithm]]s, [[sorting algorithm]]s, [[merge algorithm]]s, [[numerical analysis|numerical algorithms]], [[graph theory|graph algorithms]], [[string algorithms]], [[computational geometry|computational geometric algorithms]], [[combinatorial|combinatorial algorithms]], [[machine learning]], [[cryptography]], [[data compression]] algorithms and [[parsing|parsing techniques]].
[10011920] |Fields tend to overlap with each other, and algorithm advances in one field may improve those of other, sometimes completely unrelated, fields.
[10011930] |For example, dynamic programming was originally invented for optimization of resource consumption in industry, but is now used in solving a broad range of problems in many fields.
[10011940] |=== Classification by complexity === 
[10011950] |Algorithms can be classified by the amount of time they need to complete compared to their input size.
[10011960] |There is a wide variety: some algorithms complete in linear time relative to input size, some do so in an exponential amount of time or even worse, and some never halt.
[10011970] |Additionally, some problems may have multiple algorithms of differing complexity, while other problems might have no algorithms or no known efficient algorithms.
[10011980] |There are also mappings from some problems to other problems.
[10011990] |Owing to this, it was found to be more suitable to classify the problems themselves instead of the algorithms into equivalence classes based on the complexity of the best possible algorithms for them.
[10012000] |=== Classification by computing power === 
[10012010] |Another way to classify algorithms is by computing power.
[10012020] |This is typically done by considering some collection (class) of algorithms.
[10012030] |A recursive class of algorithms is one that includes algorithms for all Turing computable functions.
[10012040] |Looking at classes of algorithms allows for the possibility of restricting the available computational resources (time and memory) used in a computation.
[10012050] |A subrecursive class of algorithms is one in which not all Turing computable functions can be obtained.
[10012060] |For example, the algorithms that run in [[P (complexity)|polynomial time]] suffice for many important types of computation but do not exhaust all Turing computable functions.
[10012070] |The class algorithms implemented by [[primitive recursive function]]s is another subrecursive class.
[10012080] |Burgin (2005, p. 24) uses a generalized definition of algorithms that relaxes the common requirement that the output of the algorithm that computes a function must be determined after a finite number of steps.
[10012090] |He defines a super-recursive class of algorithms as "a class of algorithms in which it is possible to compute functions not computable by any Turing machine" (Burgin 2005, p. 107).
[10012100] |This is closely related to the study of methods of [[hypercomputation]].
[10012110] |== Legal issues == 
[10012120] |:''See also: [[Software patents]] for a general overview of the patentability of software, including computer-implemented algorithms.''
[10012130] |Algorithms, by themselves, are not usually patentable.
[10012140] |In the [[United States]], a claim consisting solely of simple manipulations of abstract concepts, numbers, or signals do not constitute "processes" (USPTO 2006) and hence algorithms are not patentable (as in [[Gottschalk v. Benson]]).
[10012150] |However, practical applications of algorithms are sometimes patentable.
[10012160] |For example, in [[Diamond v. Diehr]], the application of a simple [[feedback]] algorithm to aid in the curing of [[synthetic rubber]] was deemed patentable.
[10012170] |The [[Software patent debate|patenting of software]] is highly controversial, and there are highly criticized patents involving algorithms, especially [[data compression]] algorithms, such as [[Unisys]]' [[Graphics Interchange Format#Unisys and LZW patent enforcement|LZW patent]].
[10012180] |Additionally, some cryptographic algorithms have export restrictions (see [[export of cryptography]]).
[10012190] |== History: Development of the notion of "algorithm" == 
[10012200] |=== Origin of the word === 
[10012210] |The word ''algorithm'' comes from the name of the 9th century [[Persian people|Persian]] mathematician [[al-Khwarizmi|Abu Abdullah Muhammad ibn Musa al-Khwarizmi]] whose works introduced Indian numerals and algebraic concepts.
[10012220] |He worked in [[Baghdad]] at the time when it was the centre of scientific studies and trade.
[10012230] |The word ''[[algorism]]'' originally referred only to the rules of performing [[arithmetic]] using [[Hindu-Arabic numeral system|Arabic numerals]] but evolved via European Latin translation of al-Khwarizmi's name into ''algorithm'' by the 18th century.
[10012240] |The word evolved to include all definite procedures for solving problems or performing tasks.
[10012250] |=== Discrete and distinguishable symbols === 
[10012260] |'''Tally-marks''': To keep track of their flocks, their sacks of grain and their money the ancients used tallying: accumulating stones or marks scratched on sticks, or making discrete symbols in clay.
[10012270] |Through the Babylonian and Egyptian use of marks and symbols, eventually [[Roman numerals]] and the [[abacus]] evolved (Dilson, p.16–41).
[10012280] |Tally marks appear prominently in [[unary numeral system]] arithmetic used in [[Turing machine]] and [[Post-Turing machine]] computations.
[10012290] |=== Manipulation of symbols as "place holders" for numbers: algebra === 
[10012300] |The work of the Ancient Greek geometers, Persian mathematician [[Al-Khwarizmi]] (often considered as the "father of [[algebra]]"), and Western European mathematicians culminated in [[Leibniz]]'s notion of the [[calculus ratiocinator]] (ca 1680): 
[10012310] |:"A good century and a half ahead of his time, Leibniz proposed an algebra of logic, an algebra that would specify the rules for manipulating logical concepts in the manner that ordinary algebra specifies the rules for manipulating numbers" (Davis 2000:1)
[10012320] |=== Mechanical contrivances with discrete states === 
[10012330] |'''The clock''': Bolter credits the invention of the weight-driven [[clock]] as “The key invention [of Europe in the Middle Ages]", in particular the [[verge escapement]]< (Bolter 1984:24) that provides us with the tick and tock of a mechanical clock.
[10012340] |“The accurate automatic machine” (Bolter 1984:26) led immediately to "mechanical [[automata]]" beginning in the thirteenth century and finally to “computational machines" – the [[difference engine]] and [[analytical engine]]s of [[Charles Babbage]] and Countess [[Ada Lovelace]] (Bolter p.33–34, p.204–206).
[10012350] |'''Jacquard loom, Hollerith punch cards, telegraphy and telephony — the electromechanical relay''': Bell and Newell (1971) indicate that the [[Jacquard loom]] (1801), precursor to [[Hollerith cards]] (punch cards, 1887), and “telephone switching technologies” were the roots of a tree leading to the development of the first computers (Bell and Newell diagram p. 39, cf Davis 2000).
[10012360] |By the mid-1800s the [[telegraph]], the precursor of the telephone, was in use throughout the world, its discrete and distinguishable encoding of letters as “dots and dashes” a common sound.
[10012370] |By the late 1800s the [[ticker tape]] (ca 1870s) was in use, as was the use of [[Hollerith cards]] in the 1890 U.S. census.
[10012380] |Then came the [[Teletype]] (ca 1910) with its punched-paper use of [[Baudot code]] on tape.
[10012390] |Telephone-switching networks of electromechanical [[relay]]s (invented 1835) was behind the work of [[George Stibitz]] (1937), the inventor of the digital adding device.
[10012400] |As he worked in Bell Laboratories, he observed the “burdensome’ use of mechanical calculators with gears.
[10012410] |"He went home one evening in 1937 intending to test his idea....
[10012420] |When the tinkering was over, Stibitz had constructed a binary adding device".
[10012430] |(Valley News, p. 13).
[10012440] |Davis (2000) observes the particular importance of the electromechanical relay (with its two "binary states" ''open'' and ''closed''): 
[10012450] |: It was only with the development, beginning in the 1930s, of electromechanical calculators using electrical relays, that machines were built having the scope Babbage had envisioned."
[10012460] |(Davis, p. 14).
[10012470] |=== Mathematics during the 1800s up to the mid-1900s === 
[10012480] |'''Symbols and rules''': In rapid succession the mathematics of [[George Boole]] (1847, 1854), [[Gottlob Frege]] (1879), and [[Giuseppe Peano]] (1888–1889) reduced arithmetic to a sequence of symbols manipulated by rules.
[10012490] |Peano's ''The principles of arithmetic, presented by a new method'' (1888) was "the first attempt at an axiomatization of mathematics in a symbolic language" (van Heijenoort:81ff).
[10012500] |But Heijenoort gives Frege (1879) this kudos: Frege’s is "perhaps the most important single work ever written in logic. ... in which we see a " 'formula language', that is a ''lingua characterica'', a language written with special symbols, "for pure thought", that is, free from rhetorical embellishments ... constructed from specific symbols that are manipulated according to definite rules" (van Heijenoort:1).
[10012510] |The work of Frege was further simplified and amplified by [[Alfred North Whitehead]] and [[Bertrand Russell]] in their [[Principia Mathematica]] (1910–1913).
[10012520] |'''The paradoxes''': At the same time a number of disturbing paradoxes appeared in the literature, in particular the [[Burali-Forti paradox]] (1897), the [[Russell paradox]] (1902–03), and the [[Richard Paradox]] (Dixon 1906, cf Kleene 1952:36–40).
[10012530] |The resultant considerations led to [[Kurt Gödel]]’s paper (1931) — he specifically cites the paradox of the liar — that completely reduces rules of [[recursion]] to numbers.
[10012540] |'''Effective calculability''': In an effort to solve the [[Entscheidungsproblem]] defined precisely by Hilbert in 1928, mathematicians first set about to define what was meant by an "effective method" or "effective calculation" or "effective calculability" (i.e., a calculation that would succeed).
[10012550] |In rapid succession the following appeared: [[Alonzo Church]], [[Stephen Kleene]] and [[J.B. Rosser]]'s [[λ-calculus]], (cf footnote in [[Alonzo Church]] 1936a:90, 1936b:110) a finely-honed definition of "general recursion" from the work of Gödel acting on suggestions of [[Jacques Herbrand]] (cf Gödel's Princeton lectures of 1934) and subsequent simplifications by Kleene (1935-6:237ff, 1943:255ff). Church's proof (1936:88ff) that the [[Entscheidungsproblem]] was unsolvable, [[Emil Post]]'s definition of effective calculability as a worker mindlessly following a list of instructions to move left or right through a sequence of rooms and while there either mark or erase a paper or observe the paper and make a yes-no decision about the next instruction (cf "Formulation I", Post 1936:289-290).
[10012560] |[[Alan Turing]]'s proof of that the Entscheidungsproblem was unsolvable by use of his "a- [automatic-] machine"(Turing 1936-7:116ff) -- in effect almost identical to Post's "formulation", [[J. Barkley Rosser]]'s definition of "effective method" in terms of "a machine" (Rosser 1939:226).
[10012570] |[[S. C. Kleene]]'s proposal of a precursor to "[[Church thesis]]" that he called "Thesis I" (Kleene 1943:273–274), and a few years later Kleene's renaming his Thesis "Church's Thesis" (Kleene 1952:300, 317) and proposing "Turing's Thesis" (Kleene 1952:376).
[10012580] |=== Emil Post (1936) and Alan Turing (1936-7, 1939)=== 
[10012590] |Here is a remarkable coincidence of two men not knowing each other but describing a process of men-as-computers working on computations — and they yield virtually identical definitions.
[10012600] |[[Emil Post]] (1936) described the actions of a "computer" (human being) as follows: 
[10012610] |:"...two concepts are involved: that of a ''symbol space'' in which the work leading from problem to answer is to be carried out, and a fixed unalterable ''set of directions''.
[10012620] |His symbol space would be 
[10012630] |:"a two way infinite sequence of spaces or boxes...
[10012640] |The problem solver or worker is to move and work in this symbol space, being capable of being in, and operating in but one box at a time.... a box is to admit of but two possible conditions, i.e., being empty or unmarked, and having a single mark in it, say a vertical stroke.
[10012650] |:"One box is to be singled out and called the starting point. ...a specific problem is to be given in symbolic form by a finite number of boxes [i.e., INPUT] being marked with a stroke.
[10012660] |Likewise the answer [i.e., OUTPUT] is to be given in symbolic form by such a configuration of marked boxes....
[10012670] |:"A set of directions applicable to a general problem sets up a deterministic process when applied to each specific problem.
[10012680] |This process will terminate only when it comes to the direction of type (C ) [i.e., STOP]." (U p. 289–290)
[10012685] |See more at [[Post-Turing machine]]
[10012690] |[[Alan Turing]]’s work (1936, 1939:160) preceded that of Stibitz (1937); it is unknown whether Stibitz knew of the work of Turing.
[10012700] |Turing’s biographer believed that Turing’s use of a typewriter-like model derived from a youthful interest: “Alan had dreamt of inventing typewriters as a boy; Mrs. Turing had a typewriter; and he could well have begun by asking himself what was meant by calling a typewriter 'mechanical'" (Hodges, p. 96).
[10012710] |Given the prevalence of Morse code and telegraphy, ticker tape machines, and Teletypes we might conjecture that all were influences.
[10012720] |Turing — his model of computation is now called a [[Turing machine]] — begins, as did Post, with an analysis of a human computer that he whittles down to a simple set of basic motions and "states of mind".
[10012730] |But he continues a step further and creates a machine as a model of computation of numbers (Turing 1936-7:116).
[10012740] |:"Computing is normally done by writing certain symbols on paper.
[10012750] |We may suppose this paper is divided into squares like a child's arithmetic book....I assume then that the computation is carried out on one-dimensional paper, i.e., on a tape divided into squares.
[10012760] |I shall also suppose that the number of symbols which may be printed is finite....
[10012770] |:"The behavior of the computer at any moment is determined by the symbols which he is observing, and his "state of mind" at that moment.
[10012780] |We may suppose that there is a bound B to the number of symbols or squares which the computer can observe at one moment.
[10012790] |If he wishes to observe more, he must use successive observations.
[10012800] |We will also suppose that the number of states of mind which need be taken into account is finite...
[10012810] |:"Let us imagine that the operations performed by the computer to be split up into 'simple operations' which are so elementary that it is not easy to imagine them further divided" (Turing 1936-7:136).
[10012820] |Turing's reduction yields the following:
[10012830] |:"The simple operations must therefore include:
[10012840] |::"(a) Changes of the symbol on one of the observed squares
[10012850] |::"(b) Changes of one of the squares observed to another square within L squares of one of the previously observed squares.
[10012860] |"It may be that some of these change necessarily invoke a change of state of mind.
[10012870] |The most general single operation must therefore be taken to be one of the following: 
[10012880] |::"(A) A possible change (a) of symbol together with a possible change of state of mind.
[10012890] |::"(B) A possible change (b) of observed squares, together with a possible change of state of mind"
[10012900] |:"We may now construct a machine to do the work of this computer."
[10012910] |(Turing 1936-7:136)
[10012920] |A few years later, Turing expanded his analysis (thesis, definition) with this forceful expression of it: 
[10012930] |:"A function is said to be "effectively calculable" if its values can be found by some purely mechanical process.
[10012940] |Although it is fairly easy to get an intuitive grasp of this idea, it is neverthessless desirable to have some more definite, mathematical expressible definition . . . [he discusses the history of the definition pretty much as presented above with respect to Gödel, Herbrand, Kleene, Church, Turing and Post] . . .
[10012950] |We may take this statement literally, understanding by a purely mechanical process one which could be carried out by a machine.
[10012960] |It is possible to give a mathematical description, in a certain normal form, of the structures of these machines.
[10012970] |The development of these ideas leads to the author's definition of a computable function, and to an identification of computability † with effective calculability . . . .
[10012980] |::"† We shall use the expression "computable function" to mean a function calculable by a machine, and we let "effectively calculabile" refer to the intuitive idea without particular identification with any one of these definitions."(Turing 1939:160)
[10012990] |=== J. B. Rosser (1939) and S. C. Kleene (1943) === 
[10013000] |'''[[J. Barkley Rosser]]''' boldly defined an ‘effective [mathematical] method’ in the following manner (boldface added): 
[10013010] |:"'Effective method' is used here in the rather special sense of a method each step of which is precisely determined and which is certain to produce the answer in a finite number of steps.
[10013020] |With this special meaning, three different precise definitions have been given to date. [his footnote #5; see discussion immediately below].
[10013030] |The simplest of these to state (due to Post and Turing) says essentially that '''an effective method of solving certain sets of problems exists if one can build a machine which will then solve any problem of the set with no human intervention beyond inserting the question and (later) reading the answer'''.
[10013040] |All three definitions are equivalent, so it doesn't matter which one is used.
[10013050] |Moreover, the fact that all three are equivalent is a very strong argument for the correctness of any one."
[10013060] |(Rosser 1939:225–6)
[10013070] |Rosser's footnote #5 references the work of (1) Church and Kleene and their definition of λ-definability, in particular Church's use of it in his ''An Unsolvable Problem of Elementary Number Theory'' (1936); (2) Herbrand and Gödel and their use of recursion in particular Gödel's use in his famous paper ''On Formally Undecidable Propositions of Principia Mathematica and Related Systems I'' (1931); and (3) Post (1936) and Turing (1936-7) in their mechanism-models of computation.
[10013080] |'''[[Stephen C. Kleene]]''' defined as his now-famous "Thesis I" known as the [[Church-Turing thesis]].
[10013090] |But he did this in the following context (boldface in original): 
[10013100] |:"12.
[10013110] |'''Algorithmic theories'''...
[10013120] |In setting up a complete algorithmic theory, what we do is to describe a procedure, performable for each set of values of the independent variables, which procedure necessarily terminates and in such manner that from the outcome we can read a definite answer, "yes" or "no," to the question, "is the predicate value true?”"
[10013130] |(Kleene 1943:273)
[10013140] |=== History after 1950 === 
[10013150] |A number of efforts have been directed toward further refinement of the definition of "algorithm", and activity is on-going because of issues surrounding, in particular, [[foundations of mathematics]] (especially the [[Church-Turing Thesis]]) and [[philosophy of mind]] (especially arguments around [[artificial intelligence]]).
[10013160] |For more, see [[Algorithm characterizations]].
[10013170] |==Algorithmic Repositories== 
[10013180] |*LEDA
[10013190] |*Stanford GraphBase
[10013200] |*Combinatorica
[10013210] |*Netlib
[10013220] |*XTango
[10020010] |<article>Ambiguity</article>
[10020020] |'''Ambiguity''' is the property of being '''ambiguous''', where a [[word]], term, notation, sign, [[symbol]], [[phrase]], [[Sentence (linguistics)|sentence]], or any other form used for [[communication]], is called ambiguous if it can be interpreted in more than one way.
[10020030] |Ambiguity is distinct from ''[[vagueness]]'', which arises when the boundaries of meaning are indistinct.
[10020040] |Ambiguity is context-dependent: the same communication may be ambiguous in one context and unambiguous in another context.
[10020050] |For a word, ambiguity typically refers to an unclear choice between different definitions as may be found in a [[dictionary]].
[10020060] |A sentence may be ambiguous due to different ways of [[parsing]] the same sequence of words.
[10020070] |== Linguistic forms == 
[10020080] |'''[[Polysemy|Lexical ambiguity]]''' arises when [[context]] is insufficient to determine the sense of a single word that has more than one meaning.
[10020090] |For example, the word “bank” has several distinct definitions, including “financial institution” and “edge of a river,” but if someone says “I deposited $100 in the bank,” most people would not think you used a shovel to dig in the mud.
[10020100] |The word "run" has 130 ambiguous definitions in some [[lexicon]]s.
[10020110] |"Biweekly" can mean "fortnightly" (once every two weeks - 26 times a year), OR "twice a week" (104 times a year).
[10020120] |Stating a specific context like "meeting schedule" does NOT disambiguate "biweekly."
[10020130] |Many people believe that such lexically-ambiguous, miscommunication-prone words should be avoided altogether, since the user generally has to waste time, effort, and [[attention span]] to define what is meant when they are used.
[10020140] |The use of multi-defined words requires the author or speaker to clarify their context, and sometimes elaborate on their specific intended meaning (in which case, a less ambiguous term should have been used).
[10020150] |The goal of clear concise communication is that the receiver(s) have no misunderstanding about what was meant to be conveyed.
[10020160] |An exception to this could include a politician whose "wiggle words" and [[obfuscation]] are necessary to gain support from multiple [[constituent (politics)]] with [[mutually exclusive]] conflicting desires from their candidate of choice.
[10020170] |Ambiguity is a powerful tool of [[political science]].
[10020180] |More problematic are words whose senses express closely-related concepts.
[10020190] |“Good,” for example, can mean “useful” or “functional” (''That’s a good hammer''), “exemplary” (''She’s a good student''), “pleasing” (''This is good soup''), “moral” (''a good person'' versus ''the lesson to be learned from a story''), "[[righteous]]", etc.
[10020200] |“I have a good daughter” is not clear about which sense is intended.
[10020210] |The various ways to apply [[prefix]]es and [[suffix]]es can also create ambiguity (“unlockable” can mean “capable of being unlocked” or “impossible to lock”, and therefore should not be used).
[10020220] |'''[[Syntactic ambiguity]]''' arises when a sentence can be [[parsing|parsed]] in more than one way.
[10020230] |“He ate the cookies on the couch,” for example, could mean that he ate those cookies which were on the couch (as opposed to those that were on the table), or it could mean that he was sitting on the couch when he ate the cookies.
[10020240] |[[Spoken language]] can contain many more types of ambiguities, where there is more than one way to compose a set of sounds into words, for example “ice cream” and “I scream.”
[10020250] |Such ambiguity is generally resolved based on the context.
[10020260] |A mishearing of such, based on incorrectly-resolved ambiguity, is called a [[mondegreen]].
[10020270] |'''[[Meaning (non-linguistic)|Semantic ambiguity]]''' arises when a word or concept has an inherently diffuse meaning based on widespread or informal usage.
[10020280] |This is often the case, for example, with idiomatic expressions whose definitions are rarely or never well-defined, and are presented in the context of a larger argument that invites a conclusion.
[10020290] |For example, “You could do with a new automobile.
[10020300] |How about a test drive?”
[10020310] |The clause “You could do with” presents a statement with such wide possible interpretation as to be essentially meaningless.
[10020320] |Lexical ambiguity is contrasted with semantic ambiguity.
[10020330] |The former represents a choice between a finite number of known and meaningful context-dependent interpretations.
[10020340] |The latter represents a choice between any number of possible interpretations, none of which may have a standard agreed-upon meaning.
[10020350] |This form of ambiguity is closely related to [[vagueness]].
[10020360] |Linguistic ambiguity can be a problem in law (see [[Ambiguity (law)]]), because the interpretation of written documents and oral agreements is often of paramount importance.
[10020370] |==Intentional application== 
[10020380] |[[Philosopher]]s (and other users of [[logic]]) spend a lot of time and effort searching for and removing (or intentionally adding) ambiguity in arguments, because it can lead to incorrect conclusions and can be used to deliberately conceal bad arguments.
[10020390] |For example, a politician might say “I oppose taxes that hinder economic growth.”
[10020400] |Some will think he opposes taxes in general, because they hinder economic growth.
[10020410] |Others may think he opposes only those taxes that he believes will hinder economic growth (although in writing, the correct insertion or omission of a [[comma (punctuation)|comma]] after “taxes” and the use of "which" can help reduce ambiguity here.
[10020420] |For the first meaning, “, which” is properly used in place of “that”), or restructure the sentence to completely eliminate possible misinterpretation.
[10020430] |The devious politician hopes that each [[constituent (politics)]] will interpret the above statement in the most desirable way, and think the politician supports everyone's opinion.
[10020440] |However, the opposite can also be true - An opponent can turn a positive statement into a bad one, if the speaker uses ambiguity (intentionally or not).
[10020450] |The logical fallacies of [[amphiboly]] and [[equivocation]] rely heavily on the use of ambiguous words and phrases.
[10020460] |In [[literature]] and [[rhetoric]], on the other hand, ambiguity can be a useful tool.
[10020470] |[[Groucho Marx]]’s classic joke depends on a grammatical ambiguity for its [[humor]], for example: “Last night I shot an elephant in my pajamas.
[10020480] |What he was doing in my pajamas I’ll never know.”
[10020490] |Ambiguity can also be used as a comic device through a genuine intention to confuse, as does Magic: The Gathering's Unhinged © Ambiguity, which makes puns with [[homophone]]s, mispunctuation, and run-ons: “Whenever a player plays a spell that counters a spell that has been played[,] or a player plays a spell that comes into play with counters, that player may counter the next spell played[,] or put an additional counter on a permanent that has already been played, but not countered.”
[10020500] |Songs and poetry often rely on ambiguous words for artistic effect, as in the song title “Don’t It Make My Brown Eyes Blue” (where “blue” can refer to the color, or to [[sadness]]).
[10020510] |In narrative, ambiguity can be introduced in several ways: motive, plot, character.
[10020520] |[[F. Scott Fitzgerald]] uses the latter type of ambiguity with notable effect in his novel ''[[The Great Gatsby]]''.
[10020530] |All [[religions]] debate the [[orthodoxy]] or [[heterodoxy]] of ambiguity.
[10020540] |[[Christianity]] and [[Judaism]] employ the concept of [[paradox]] synonymously with 'ambiguity'.
[10020550] |Ambiguity within Christianity (and other religions) is resisted by the conservatives and fundamentalists, who regard the concept as equating with 'contradiction'.
[10020560] |Non-fundamentalist Christians and Jews endorse [[Rudolf Otto]]'s description of the sacred as 'mysterium tremendum et fascinans', the awe-inspiring mystery which fascinates humans.
[10020570] |[[Metonymy]] involves the use of the name of a subcomponent part as an abbreviation, or [[jargon]], for the name of the whole object (for example "wheels" to refer to a car, or "flowers" to refer to beautiful offspring, an entire plant, or a collection of blooming plants).
[10020580] |In modern [[vocabulary]] critical [[semiotics]], metonymy encompasses any potentially-ambiguous word substitution that is based on contextual [[contiguity]] (located close together), or a function or process that an object performs, such as "sweet ride" to refer to a nice car.
[10020590] |Metonym miscommunication is considered a primary mechanism of linguistic humour.
[10020600] |==Psychology and management== 
[10020610] |In sociology and social psychology, the term "ambiguity" is used to indicate situations that involve [[uncertainty]].
[10020620] |An increasing amount of research is concentrating on how people react and respond to ambiguous situations.
[10020630] |Much of this focuses on [[ambiguity tolerance]].
[10020640] |A number of correlations have been found between an individual’s reaction and tolerance to ambiguity and a range of factors.
[10020650] |Apter and Desselles (2001) for example, found a strong correlation with such attributes and factors like a greater preference for safe as opposed to risk based sports, a preference for endurance type activities as opposed to explosive activities, a more organized and less casual lifestyle, greater care and precision in descriptions, a lower sensitivity to emotional and unpleasant words, a less acute sense of humour, engaging a smaller variety of sexual practices than their more risk comfortable colleagues, a lower likelihood of the use of drugs, pornography and drink, a greater likelihood of displaying obsessional behaviour.
[10020660] |In the field of [[leadership]] [[David Wilkinson (ambiguity expert)|David Wilkinson]] (2006) found strong correlations between an individual leaders reaction to ambiguous situations and the [[Modes of Leadership]] they use, the type of [[creativity]] (Kirton (2003) and how they relate to others.
[10020670] |==Music== 
[10020680] |In [[music]], pieces or sections which confound expectations and may be or are interpreted simultaneously in different ways are ambiguous, such as some [[polytonality]], [[polymeter]], other ambiguous [[metre|meters]] or [[rhythm]]s, and ambiguous [[phrase (music)|phrasing]], or (Stein 2005, p.79) any [[aspect of music]].
[10020690] |The [[music of Africa]] is often purposely ambiguous.
[10020700] |To quote [[Donald Francis Tovey|Sir Donald Francis Tovey]] (1935, p.195), “Theorists are apt to vex themselves with vain efforts to remove uncertainty just where it has a high aesthetic value.”
[10020710] |==Constructed language== 
[10020720] |Some [[Conlang|languages have been created]] with the intention of avoiding ambiguity, especially lexical ambiguity.
[10020730] |[[Lojban]] and [[Loglan]] are two related languages which have been created with this in mind.
[10020740] |The languages can be both spoken and written.
[10020750] |These languages are intended to provide a greater technical precision over natural languages, although historically, such attempts at language improvement have been criticized.
[10020760] |Languages composed from many diverse sources contain much ambiguity and inconsistency.
[10020770] |The many exceptions to [[syntax]] and [[semantic]] rules are time-consuming and difficult to learn.
[10020780] |==Mathematics and physics== 
[10020790] |[[Mathematical notation]], widely used in [[physics]] and other [[science]]s, avoids many ambiguities compared to expression in natural language.
[10020800] |However, for various reasons, several [[Lexical (semiotics)|lexical]], [[syntactic]] and [[semantic]] ambiguities remain.
[10020810] |===Names of functions=== 
[10020820] |The <b>ambiguity<b> in the style of writing a function should not be confused with a [[multivalued function]], which can (and should) be defined in a deterministic and unambiguous way.
[10020830] |Several [[special function]]s still do not have established notations.
[10020840] |Usually, the conversion to another notation requires to scale the argument and/or the resulting value; sometimes, the same name of the function is used, causing confusions.
[10020850] |Examples of such underestablished functions: 
[10020860] |* [[Sinc function]] 
[10020870] |* [[Elliptic integral#Complete_elliptic_integral_of_the_third_kind|Elliptic integral of the Third Kind]]; translating elliptic integral form [[MAPLE]] to [[Mathematica]], one should replace the second argument to its square, see [[Talk:Elliptic integral#List_of_notations]]; dealing with complex values, this may cause problems.
[10020880] |* [[Exponential integral]], , page 228 http://www.math.sfu.ca/~cbm/aands/page_228.htm
[10020890] |* [[Hermite polynomial]], , page 775 http://www.math.sfu.ca/~cbm/aands/page_775.htm
[10020900] |===Expressions=== 
[10020910] |Ambiguous espressions often appear in physical and mathematical texts.
[10020920] |It is common practice to omit multiplication signs in mathematical expressions.
[10020930] |Also, it is common, to give the same name to a variable and a function, for example, <math>~f=f(x)~</math>.
[10020940] |Then, if one sees <math>~g=f(y+1)~</math>, there is no way to distinguish, does it mean <math>~f=f(x)~</math> '''multiplied''' by <math>~(y+1)~</math>, or function <math>~f~</math> '''evaluated''' at argument equal to <math>~(y+1)~</math>.
[10020950] |In each case of use of such notations, the reader is supposed to be able to perform the deduction and reveal the true meaning.
[10020960] |Creators of algorithmic languages try to avoid ambiguities.
[10020970] |Many algorithmic languages ([[C++]], [[MATLAB]], [[Fortran]], [[Maple]]) require the character * as symbol of multiplication.
[10020980] |The language [[Mathematica]] allows the user to omit the multiplication symbol, but requires square brackets to indicate the argument of a function; square brackets are not allowed for grouping of expressions.
[10020990] |Fortran, in addition, does not allow use of the same name (identifier) for different objects, for example, function and variable; in particular, the expression '''f=f(x)''' is qualified as an error.
[10021000] |The order of operations may depend on the context.
[10021010] |In most [[programming language]]s, the operations of division and multiplication have equal priority and are executed from left to right.
[10021020] |Until the last century, many editorials assumed that multiplication is performed first, for example, <math>~a/bc~</math> is interpreted as <math>~a/(bc)~</math>; in this case, the insertion of parentheses is required when translating the formulas to an algorithmic language.
[10021030] |In addition, it is common to write an argument of a function without parenthesis, which also may lead to ambiguity.
[10021040] |Sometimes, one uses ''italics'' letters to denote elementary functions.
[10021050] |In the [[scientific journal]] style, the expression <math>~ s i n \alpha~</math> means product of variables <math>~s~</math>, <math>~i~</math>, <math>~n~</math> and <math>~\alpha~</math>, although in a slideshow, it may mean <math>~\sin[\alpha]~</math>.
[10021060] |Comma in subscripts and superscripts sometimes is omitted; it is also ambiguous notation.
[10021070] |If it is written <math>~T_{mnk}~</math>, the reader should guess from the context, does it mean a single-index object, evaluated while the subscript is equal to product of variables <math>~m~</math>, <math>~n~</math> and <math>~k~</math>, or it is indication to a three-valent tensor.
[10021080] |The writing of <math>~T_{mnk}~</math> instead of <math>~T_{m,n,k}~</math> may mean that the writer either is stretched in space (for example, to reduce the publication fees, or aims to increase number of publications without considering readers.
[10021090] |The same may apply to any other use of ambiguous notations.
[10021100] |===Examples of potentially confusing ambiguous mathematical expressions === 
[10021110] |<math>\sin^2\alpha/2\,</math>, which could be understood to mean either <math>(\sin(\alpha/2))^2\,</math> or <math>(\sin(\alpha))^2/2\,</math>.
[10021120] |<math>~\sin^{-1} \alpha</math>, which by convention means <math>~\arcsin(\alpha) ~</math>, though it might be thought to mean <math>(\sin(\alpha))^{-1}\,</math> since <math>~\sin^{n} \alpha</math> means <math>(\sin(\alpha))^{n}\,</math>.
[10021130] |<math>a/2b\,</math>, which arguably should mean <math>(a/2)b\,</math> but would commonly be understood to mean <math>a/(2b)\,</math>
[10021140] |===Notations in [[quantum optics]] and [[quantum mechanics]]=== 
[10021150] |It is common to define the [[coherent states]] in [[quantum optics]] with <math>~|\alpha\rangle~ </math> and states with fixed number of photons with <math>~|n\rangle~</math>.
[10021160] |Then, there is an "unwritten rule": the state is coherent if there are more Greek characters than Latin characters in the argument, and <math>~n~</math>photon state if the Latin characters dominate.
[10021170] |The ambiguity becomes even worse, if <math>~|x\rangle~</math> is used for the states with certain value of the coordinate, and <math>~|p\rangle~</math> means the state with certain value of the momentum, which may be used in books on [[quantum mechanics]].
[10021180] |Such ambiguities easy lead to confusions, especially if some normalized [[adimensional]], [[dimensionless]] variables are used.
[10021190] |Expression <math> |1\rangle </math> may mean a state with single photon, or the coherent state with mean amplitude equal to 1, or state with momentum equal to unity, and so on.
[10021200] |The reader is supposed to guess from the context.
[10021210] |===Examples of ambiguous terms in physics=== 
[10021220] |Some physical quantities do not yet have established notations; their value (and sometimes even [[dimension]], as in the case of the [[Einstein coefficients]]) depends on the system of notations.
[10021230] |A highly confusing term is [[gain]].
[10021240] |For example, the sentence "the gain of a system should be doubled", without context, means close to nothing.
[10021250] |It may mean that the ratio of the output voltage of an electric circuit to the input voltage should be doubled.
[10021260] |It may mean that the ratio of the output power of an electric or optical circuit to the input power should be doubled.
[10021270] |It may mean that the gain of the laser medium should be doubled, for example, doubling the population of the upper laser level in a quasi-two level system (assuming negligible absorption of the ground-state).
[10021280] |Also, confusions may be related with the use of [[atomic percent]] as measure of concentration of a [[dopant]], or [[Optical resolution|resolution]] of an [[imaging system]], as measure of the size of the smallest detail which still can be resolved at the background of statistical noise.
[10021290] |See also [[Accuracy and precision]] and its talk.
[10021300] |Many terms are ambiguous.
[10021310] |Each use of an ambiguous term should be preceded by the definition, suitable for a specific case.
[10021320] |The [[Berry paradox]] arises as a result of systematic ambiguity.
[10021330] |In various formulations of the Berry paradox, such as one that reads: ''The number not nameable in less than eleven syllables'' the term ''nameable'' is one that has this systematic ambiguity.
[10021340] |Terms of this kind give rise to [[vicious circle]] fallacies.
[10021350] |Other terms with this type of ambiguity are: satisfiable, definable, true, false, function, property, class, relation, cardinal, and ordinal.
[10021360] |==Pedagogic use of ambiguous expressions== 
[10021370] |Ambiguity can be used as a pedagogical trick, to force students to reproduce the deduction by themselves.
[10021380] |Some textbooks give the same name to the function and to its [[Fourier transform]]: 
[10021390] |:<math>~f(\omega)=\int f(t) \exp(i\omega t) {\rm d}t </math>.
[10021400] |Rigorously speaking, such an expression requires that <math>~ f=0 ~</math>; even if function <math>~ f ~</math> is a [[self-Fourier function]], the expression should be written as <math>~f(\omega)=\frac{1}{\sqrt{2\pi}}\int f(t) \exp(i\omega t) {\rm d}t </math>; however, <b>it is assumed that the shape of the function </b> (and even its norm <math>\int |f(x)|^2 {\rm d}x </math>) <b>depend on the character used to denote its argument<b>.
[10021410] |If the Greek letter is used, it is assumed to be a [[Fourier transform]] of another function, The first function is assumed, if the expression in the argument contains more characters <math>~t~</math> or <math>~\tau~</math>, than characters <math>~\omega~</math>, and the second function is assumed in the opposite case.
[10021420] |Expressions like <math>~f(\omega t)~</math> or <math>~f(y)~</math> contain symbols <math>~t~</math> and <math>~\omega~</math> in equal amounts; they are ambiguous and should be avoided in serious deduction.
[10030010] |<article>Artificial intelligence</article>
[10030020] |'''Artificial intelligence (AI)''' is both the [[intelligence]] of machines and the branch of [[computer science]] which aims to create it.
[10030030] |Major AI textbooks define artificial intelligence as "the study and design of [[intelligent agents]]," where an [[intelligent agent]] is a system that perceives its environment and takes actions which maximize its chances of success.
[10030040] |[[John McCarthy (computer scientist)|John McCarthy]], who coined the term in 1956, defines it as "the science and engineering of making intelligent machines."
[10030050] |Among the traits that researchers hope machines will exhibit are [[:#Deduction, reasoning, problem solving|reasoning]], [[#Knowledge representation|knowledge]], [[#Planning|planning]], [[#Learning|learning]], [[#Natural language processing|communication]], [[#Perception|perception]] and the ability to [[#Motion and manipulation|move]] and manipulate objects.
[10030055] |[[#General intelligence|General intelligence]] (or "[[strong AI]]") has not yet been achieved and is a long-term goal of some AI research.
[10030060] |AI research uses tools and insights from many fields, including [[computer science]], [[psychology]], [[philosophy]], [[neuroscience]], [[cognitive science]], [[computational linguistics|linguistics]], [[ontology (information science)|ontology]], [[operations research]], [[computational economics|economics]], [[control theory]], [[probability]], [[optimization (mathematics)|optimization]] and [[logic]].
[10030070] |AI research also overlaps with tasks such as [[robotics]], [[control system]]s, [[automated planning and scheduling|scheduling]], [[data mining]], [[logistics]], [[speech recognition]], [[facial recognition system|facial recognition]] and many others.
[10030080] |Other names for the field have been proposed, such as [[computational intelligence]], [[synthetic intelligence]], [[intelligent systems]], or computational rationality.
[10030090] |== Perspectives on AI == 
[10030100] |=== AI in myth, fiction and speculation === 
[10030110] |Humanity has imagined in great detail the implications of thinking machines or artificial beings.
[10030120] |They appear in [[Greek myth]]s, such as [[Talos]] of [[Crete]], the golden robots of [[Hephaestus]] and [[Pygmalion (mythology)|Pygmalion's]] [[Galatea (mythology)|Galatea]].
[10030130] |The earliest known humanoid robots (or [[automaton]]s) were [[cult image|sacred statue]]s worshipped in [[Egypt]] and [[Greece]], believed to have been endowed with genuine consciousness by craftsman.
[10030140] |In the sixteenth century, the [[alchemist]] [[Paracelsus]] claimed to have created artificial beings.
[10030150] |Realistic clockwork imitations of human beings have been built by people such as [[King Mu of Zhou#Robotics|Yan Shi]], [[Hero of Alexandria]], [[Al-Jazari]] and [[Wolfgang von Kempelen]].
[10030160] |In modern fiction, beginning with [[Mary Shelley]]'s classic ''[[Frankenstein]],'' writers have explored the [[ethics of artificial intelligence|ethical]] issues presented by thinking machines.
[10030170] |If a machine can be created that has intelligence, can it also ''feel''?
[10030180] |If it can feel, does it have the same rights as a human being?
[10030190] |This is a key issue in ''[[Frankenstein]]'' as well as in modern science fiction: for example, the film ''[[Artificial Intelligence: A.I.]]'' considers a machine in the form of a small boy which has been given the ability to feel human emotions, including, tragically, the capacity to suffer.
[10030200] |This issue is also being considered by [[futurist]]s, such as California's [[Institute for the Future]] under the name "[[robot rights]]", although many critics believe that the discussion is premature.
[10030210] |[[Science fiction]] writers and [[futurist]]s have also speculated on the technology's potential impact on humanity.
[10030220] |In fiction, AI has appeared as a servant ([[R2D2]] in ''[[Star Wars]]''), a comrade ([[Data (Star Trek)|Lt. Commander Data]] in ''[[Star Trek]]''), an extension to human abilities (''[[Ghost in the Shell]]''), a conqueror (''[[The Matrix]]''), a dictator (''[[With Folded Hands]]'') and an exterminator (''[[Terminator (series)|Terminator]]'', ''[[Battlestar Galactica (re-imagining)|Battlestar Galactica]]'').
[10030230] |Some realistic potential consequences of AI are decreased human labor demand, the enhancement of human ability or experience, and a need for redefinition of human identity and basic values.
[10030240] |[[Futurist]]s estimate the capabilities of machines using [[Moore's Law]], which measures the relentless exponential improvement in digital technology with uncanny accuracy.
[10030250] |[[Ray Kurzweil]] has calculated that [[desktop computer]]s will have the same processing power as human brains by the year 2029, and that by 2045 artificial intelligence will reach a point where it is able to improve ''itself'' at a rate that far exceeds anything conceivable in the past, a scenario that [[science fiction]] writer [[Vernor Vinge]] named the "[[technological singularity]]".
[10030260] |"Artificial intelligence is the next stage in evolution," [[Edward Fredkin]] said in the 1980s, expressing an idea first proposed by [[Samuel Butler (novelist)|Samuel Butler]]'s ''[[Darwin Among the Machines]]'' (1863), and expanded upon by [[George Dyson (science historian)|George Dyson]] in his book of the same name (1998).
[10030270] |Several [[futurist]]s and [[science fiction]] writers have predicted that human beings and machines will merge in the future into [[cyborg]]s that are more capable and powerful than either.
[10030280] |This idea, called [[transhumanism]], has roots in [[Aldous Huxley]] and [[Robert Ettinger]], is now associated with [[robotics|robot]] designer [[Hans Moravec]], [[cybernetics|cyberneticist]] [[Kevin Warwick]] and [[Ray Kurzweil]].
[10030290] |[[Transhumanism]] has been illustrated in fiction as well, for example on the [[manga]] ''[[Ghost in the Shell]]''
[10030300] |=== History of AI research === 
[10030310] |In the middle of the 20th century, a handful of scientists began a new approach to building intelligent machines, based on recent discoveries in [[neurology]], a new mathematical theory of [[information]], an understanding of control and stability called [[cybernetic]]s, and above all, by the invention of the [[digital computer]], a machine based on the abstract essence of mathematical reasoning.
[10030320] |The field of modern AI research was founded at conference on the campus of [[Dartmouth College]] in the summer of 1956.
[10030330] |Those who attended would become the leaders of AI research for many decades, especially [[John McCarthy (computer scientist)|John McCarthy]], [[Marvin Minsky]], [[Allen Newell]] and [[Herbert Simon]], who founded AI laboratories at [[MIT]], [[Carnegie Mellon University|CMU]] and [[Stanford]].
[10030340] |They and their students wrote programs that were, to most people, simply astonishing: computers were solving word problems in algebra, proving logical theorems and speaking English.
[10030350] |By the middle 60s their research was heavily funded by the [[DARPA|U.S. Department of Defense]] and they were optimistic about the future of the new field: 
[10030360] |* 1965, [[H. A. Simon]]: "[M]achines will be capable, within twenty years, of doing any work a man can do"
[10030370] |* 1967, [[Marvin Minsky]]: "Within a generation ... the problem of creating 'artificial intelligence' will substantially be solved."
[10030380] |These predictions, and many like them, would not come true.
[10030390] |They had failed to recognize the difficulty of some of the problems they faced.
[10030400] |In 1974, in response to the criticism of England's [[Sir James Lighthill]] and ongoing pressure from Congress to fund more productive projects, the U.S. and British governments cut off all undirected, exploratory research in AI.
[10030410] |This was the first [[AI Winter]].
[10030420] |In the early 80s, AI research was revived by the commercial success of [[expert systems]] (a form of AI program that simulated the knowledge and analytical skills of one or more human experts) and by 1985 the market for AI had reached more than a billion dollars.
[10030430] |[[Marvin Minsky|Minsky]] and others warned the community that enthusiasm for AI had spiraled out of control and that disappointment was sure to follow.
[10030440] |Beginning with the collapse of the [[Lisp Machine]] market in 1987, AI once again fell into disrepute, and a second, more lasting [[AI Winter]] began.
[10030450] |In the 90s and early 21st century AI achieved its greatest successes, albeit somewhat behind the scenes.
[10030460] |Artificial intelligence was adopted throughout the technology industry, providing the heavy lifting for [[logistics]], [[data mining]], [[medical diagnosis]] and many other areas.
[10030470] |The success was due to several factors: the incredible power of computers today (see [[Moore's law]]), a greater emphasis on solving specific subproblems, the creation of new ties between AI and other fields working on similar problems, and above all a new commitment by researchers to solid mathematical methods and rigorous scientific standards.
[10030480] |=== Philosophy of AI === 
[10030490] |In a [[Computing Machinery and Intelligence|classic 1950 paper]], [[Alan Turing]] posed the question "Can Machines Think?"
[10030500] |In the years since, the [[philosophy of artificial intelligence]] has attempted to answer it.
[10030510] |* [[Turing Test|Turing's "polite convention"]]: ''If a machine acts as intelligently as a human being, then it is as intelligent as a human being.''
[10030520] |[[Alan Turing]] theorized that, ultimately, we can only judge the intelligence of machine based on its behavior.
[10030530] |This theory forms the basis of the [[Turing test]].
[10030540] |* The [[Dartmouth Conferences|Dartmouth proposal]]: ''Every aspect of learning or any other feature of intelligence can be so precisely described that a machine can be made to simulate it.''
[10030550] |This assertion was printed in the proposal for the [[Dartmouth Conferences|Dartmouth Conference]] of 1956, and represents the position of most working AI researchers.
[10030560] |* [[Alan Newell|Newell]] and [[Herbert Simon|Simon]]'s physical symbol system hypothesis: ''A [[physical symbol system]] has the necessary and sufficient means of general intelligent action.''
[10030570] |This statement claims that the essence of intelligence is symbol manipulation.
[10030580] |[[Hubert Dreyfus]] argued that, on the contrary, human expertise depends on unconscious instinct rather than conscious symbol manipulation and on having a "feel" for the situation rather than explicit symbolic knowledge.
[10030590] |* [[Gödel's incompleteness theorem]]: ''A [[physical symbol system]] can not prove all true statements.''
[10030600] |[[Roger Penrose]] is among those who claim that Gödel's theorem limits what machines can do.
[10030610] |* [[John Searle|Searle]]'s "strong AI position": ''A [[physical symbol system]] can have a [[mind]] and [[consciousness|mental states]].''
[10030620] |Searle counters this assertion with his [[Chinese room]] argument, which asks us to look ''inside'' the computer and try to find where the "mind" might be.
[10030630] |* The [[artificial brain]] argument: ''The brain can be simulated.''
[10030640] |[[Hans Moravec]], [[Ray Kurzweil]] and others have argued that it is technologically feasible to copy the brain directly into hardware and software, and that such a simulation will be essentially identical to the original.
[10030650] |This argument combines the idea that a [[Turing complete|suitably powerful]] machine can simulate any process, with the [[materialist]] idea that the [[mind]] is the result of a physical process in the [[brain]].
[10030660] |== AI research == 
[10030670] |=== Problems of AI === 
[10030680] |While there is no universally accepted definition of intelligence, AI researchers have studied several traits that are considered essential.
[10030690] |====Deduction, reasoning, problem solving ==== 
[10030700] |Early AI researchers developed algorithms that imitated the process of conscious, step-by-step reasoning that human beings use when they solve puzzles, play board games, or make logical deductions.
[10030710] |By the late 80s and 90s, AI research had also developed highly successful methods for dealing with [[uncertainty|uncertain]] or incomplete information, employing concepts from [[probability]] and [[economics]].
[10030720] |For difficult problems, most of these algorithms can require enormous computational resources — most experience a "[[combinatorial explosion]]": the amount of memory or computer time required becomes astronomical when the problem goes beyond a certain size.
[10030730] |The search for more efficient problem solving algorithms is a high priority for AI research.
[10030740] |It is not clear, however, that conscious human reasoning is any more efficient when faced with a difficult abstract problem.
[10030750] |[[Cognitive science|Cognitive scientists]] have demonstrated that human beings solve most of their problems using [[unconscious]] reasoning, rather than the conscious, step-by-step deduction that early AI research was able to model.
[10030760] |[[Embodied cognitive science]] argues that unconscious [[sensorimotor]] skills are essential to our problem solving abilities.
[10030770] |It is hoped that sub-symbolic methods, like [[computational intelligence]] and [[situated]] AI, will be able to model these instinctive skills.
[10030780] |The problem of unconscious problem solving, which forms part of our [[commonsense reasoning]], is largely unsolved.
[10030790] |====Knowledge representation==== 
[10030800] |[[Knowledge representation]] and [[knowledge engineering]] are central to AI research.
[10030810] |Many of the problems machines are expected to solve will require extensive knowledge about the world.
[10030820] |Among the things that AI needs to represent are: objects, properties, categories and relations between objects; situations, events, states and time; causes and effects; knowledge about knowledge (what we know about what other people know); and many other, less well researched domains.
[10030830] |A complete representation of "what exists" is an [[ontology (computer science)|ontology]] (borrowing a word from traditional [[philosophy]]), of which the most general are called [[upper ontology|upper ontologies]].
[10030840] |Among the most difficult problems in knowledge representation are:
[10030850] |* ''Default reasoning and the [[qualification problem]]'': Many of the things people know take the form of "working assumptions."
[10030860] |For example, if a bird comes up in conversation, people typically picture an animal that is fist sized, sings, and flies.
[10030870] |None of these things are true about birds in general.
[10030880] |[[John McCarthy (computer scientist)|John McCarthy]] identified this problem in 1969 as the qualification problem: for any commonsense rule that AI researchers care to represent, there tend to be a huge number of exceptions.
[10030890] |Almost nothing is simply true or false in the way that abstract logic requires.
[10030900] |AI research has explored a number of solutions to this problem.
[10030910] |* ''Unconscious knowledge'': Much of what people know isn't represented as "facts" or "statements" that they could actually say out loud.
[10030920] |They take the form of intuitions or tendencies and are represented in the brain unconsciously and sub-symbolically.
[10030930] |This unconscious knowledge informs, supports and provides a context for our conscious knowledge.
[10030940] |As with the related problem of unconscious reasoning, it is hoped that [[situated]] AI or [[computational intelligence]] will provide ways to represent this kind of knowledge.
[10030950] |* ''The breadth of [[common sense knowledge]]'': The number of atomic facts that the average person knows is astronomical.
[10030960] |Research projects that attempt to build a complete knowledge base of [[commonsense knowledge]], such as [[Cyc]], require enormous amounts of tedious step-by-step ontological engineering — they must be built, by hand, one complicated concept at a time.
[10030970] |====Planning==== 
[10030980] |Intelligent agents must be able to set goals and achieve them.
[10030990] |They need a way to visualize the future: they must have a representation of the state of the world and be able to make predictions about how their actions will change it.
[10031000] |They must also attempt to determine the [[utility]] or "value" of the choices available to it.
[10031010] |In some planning problems, the agent can assume that it is the only thing acting on the world and it can be certain what the consequences of its actions may be.
[10031020] |However, if this is not true, it must periodically check if the world matches its predictions and it must change its plan as this becomes necessary, requiring the agent to reason under uncertainty.
[10031030] |[[Multi-agent planning]] tries to determine the best plan for a community of [[agent]]s, using [[cooperation]] and [[competition]] to achieve a given goal.
[10031040] |[[Emergent behavior]] such as this is used by both [[evolutionary algorithm]]s and [[swarm intelligence]].
[10031050] |====Learning==== 
[10031060] |Important [[machine learning]] problems are:
[10031070] |* [[Unsupervised learning]]: find a model that matches a stream of input "experiences", and be able to predict what new "experiences" to expect.
[10031080] |* [[Supervised learning]], such as [[statistical classification|classification]] (be able to determine what category something belongs in, after seeing a number of examples of things from each category), or [[regression]] (given a set of numerical input/output examples, discover a continuous function that would generate the outputs from the inputs).
[10031090] |* [[Reinforcement learning]]: the agent is rewarded for good responses and punished for bad ones.
[10031100] |(These can be analyzed in terms [[decision theory]], using concepts like [[utility (economics)|utility]]).
[10031110] |====Natural language processing==== 
[10031120] |[[Natural language processing]] gives machines the ability to read and understand the languages human beings speak.
[10031130] |Many researchers hope that a sufficiently powerful natural language processing system would be able to acquire knowledge on its own, by reading the existing text available over the internet.
[10031140] |Some straightforward applications of natural language processing include [[information retrieval]] (or [[text mining]]) and [[machine translation]].
[10031150] |====Motion and manipulation==== 
[10031160] |The field of [[robotics]] is closely related to AI.
[10031170] |Intelligence is required for robots to be able to handle such tasks as object manipulation and [[motion planning|navigation]], with sub-problems of [[localization]] (knowing where you are), [[robotic mapping|mapping]] (learning what is around you) and [[motion planning]] (figuring out how to get there).
[10031180] |====Perception==== 
[10031190] |[[Machine perception]] is the ability to use input from sensors (such as cameras, microphones, sonar and others more exotic) to deduce aspects of the world.
[10031200] |[[Computer vision]] is the ability to analyze visual input.
[10031210] |A few selected subproblems are [[speech recognition]], [[facial recognition]] and [[object recognition]].
[10031220] |====Social intelligence==== 
[10031230] |Emotion and social skills play two roles for an intelligent agent: 
[10031240] |* It must be able to predict the actions of others, by understanding their motives and emotional states.
[10031250] |(This involves elements of [[game theory]], [[decision theory]], as well as the ability to model human emotions and the perceptual skills to detect emotions.)
[10031260] |* For good [[human-computer interaction]], an intelligent machine also needs to ''display'' emotions — at the very least it must appear polite and sensitive to the humans it interacts with.
[10031270] |At best, it should appear to have normal emotions itself.
[10031280] |====Creativity==== 
[10031290] |A sub-field of AI addresses [[creativity]] both theoretically (from a philosophical and psychological perspective) and practically (via specific implementations of systems that generate outputs that can be considered creative).
[10031300] |====General intelligence==== 
[10031310] |Most researchers hope that their work will eventually be incorporated into a machine with ''general'' intelligence (known as [[strong AI]]), combining all the skills above and exceeding human abilities at most or all of them.
[10031320] |A few believe that [[anthropomorphic]] features like [[artificial consciousness]] or an [[artificial brain]] may be required for such a project.
[10031330] |Many of the problems above are considered [[AI-complete]]: to solve one problem, you must solve them all.
[10031340] |For example, even a straightforward, specific task like [[machine translation]] requires that the machine follow the author's argument ([[#Deduction, reasoning, problem solving|reason]]), know what it's talking about ([[#Knowledge representation|knowledge]]), and faithfully reproduce the author's intention ([[#Social intelligence|social intelligence]]).
[10031350] |[[Machine translation]], therefore, is believed to be AI-complete: it may require [[strong AI]] to be done as well as humans can do it.
[10031360] |=== Approaches to AI === 
[10031370] |There are as many approaches to AI as there are AI researchers—any coarse categorization is likely to be unfair to someone.
[10031380] |Artificial intelligence communities have grown up around particular problems, institutions and researchers, as well as the theoretical insights that define the approaches described below.
[10031390] |Artificial intelligence is a young science and is still a fragmented collection of subfields.
[10031400] |At present, there is no established unifying theory that links the subfields into a coherent whole.
[10031410] |==== Cybernetics and brain simulation ==== 
[10031420] |In the 40s and 50s, a number of researchers explored the connection between [[neurology]], [[information theory]], and [[cybernetics]].
[10031430] |Some of them built machines that used electronic networks to exhibit rudimentary intelligence, such as [[W. Grey Walter]]'s [[Turtle (robot)|turtles]] and the [[Johns Hopkins Beast]].
[10031440] |Many of these researchers gathered for meetings of the [[Teleological Society]] at Princeton and the [[Ratio Club]] in England.
[10031450] |==== Traditional symbolic AI ==== 
[10031460] |When access to digital computers became possible in the middle 1950s, AI research began to explore the possibility that human intelligence could be reduced to symbol manipulation.
[10031470] |The research was centered in three institutions: [[Carnegie Mellon University|CMU]], [[Stanford]] and [[MIT]], and each one developed its own style of research.
[10031480] |[[John Haugeland]] named these approaches to AI "good old fashioned AI" or "[[GOFAI]]".
[10031490] |; Cognitive simulation:
[10031495] |[[Economist]] [[Herbert Simon]] and [[Alan Newell]] studied human problem solving skills and attempted to formalize them, and their work laid the foundations of the field of artificial intelligence, as well as [[cognitive science]], [[operations research]] and [[management science]].
[10031500] |Their research team performed [[psychology|psychological]] experiments to demonstrate the similarities between human problem solving and the programs (such as their "[[General Problem Solver]]") they were developing.
[10031510] |This tradition, centered at [[Carnegie Mellon University]], would eventually culminate in the development of the [[Soar (cognitive architecture)|Soar]] architecture in the middle 80s.
[10031520] |; Logical AI:
[10031525] |Unlike [[Alan Newell|Newell]] and [[Herbert Simon|Simon]], [[John McCarthy (computer scientist)|John McCarthy]] felt that machines did not need to simulate human thought, but should instead try to find the essence of abstract reasoning and problem solving, regardless of whether people used the same algorithms.
[10031530] |His laboratory at [[Stanford University|Stanford]] ([[Stanford Artificial Intelligence Laboratory|SAIL]]) focused on using formal [[logic]] to solve a wide variety of problems, including [[knowledge representation]], [[automated planning and scheduling|planning]] and [[machine learning|learning]].
[10031540] |Work in logic led to the development of the programming language [[Prolog]] and the science of [[logic programming]].
[10031550] |; "Scruffy" symbolic AI:
[10031555] |Researchers at [[MIT]] (such as [[Marvin Minsky]] and [[Seymour Papert]]) found that solving difficult problems in [[computer vision|vision]] and [[natural language processing]] required ad-hoc solutions &ndash; they argued that there was no [[silver bullet|easy answer]], no simple and general principle (like [[logic]]) that would capture all the aspects of intelligent behavior.
[10031560] |[[Roger Schank]] described their "anti-logic" approaches as "[[Neats vs. scruffies|scruffy]]" (as opposed to the "[[Neats vs. scruffies|neat]]" paradigms at [[CMU]] and [[Stanford]]), and this still forms the basis of research into [[commonsense knowledge bases]] (such as [[Doug Lenat]]'s [[Cyc]]) which must be built one complicated concept at a time.
[10031570] |; Knowledge based AI:
[10031575] |When computers with large memories became available around 1970, researchers from all three traditions began to build [[knowledge representation|knowledge]] into AI applications.
[10031580] |This "knowledge revolution" led to the development and deployment of [[expert system]]s (introduced by [[Edward Feigenbaum]]), the first truly successful form of AI software.
[10031590] |The knowledge revolution was also driven by the realization that truly enormous amounts of knowledge would be required by many simple AI applications.
[10031600] |==== Sub-symbolic AI ==== 
[10031610] |During the 1960s, symbolic approaches had achieved great success at simulating high-level thinking in small demonstration programs.
[10031620] |Approaches based on [[cybernetics]] or [[neural network]]s were abandoned or pushed into the background.
[10031630] |By the 1980s, however, progress in symbolic AI seemed to stall and many believed that symbolic systems would never be able to imitate all the processes of human cognition, especially [[machine perception|perception]], [[robotics]], [[machine learning|learning]] and [[pattern recognition]].
[10031640] |A number of researchers began to look into "sub-symbolic" approaches to specific AI problems.
[10031650] |; Bottom-up, situated, behavior based or nouvelle AI:
[10031655] |Researchers from the related field of [[robotics]], such as [[Rodney Brooks]], rejected symbolic AI and focussed on the basic engineering problems that would allow robots to move and survive.
[10031660] |Their work revived the non-symbolic viewpoint of the early [[cybernetic]]s researchers of the 50s and reintroduced the use of [[control theory]] in AI.
[10031670] |These approaches are also conceptually related to the [[embodied mind thesis]].
[10031680] |; Computational Intelligence:
[10031685] |Interest in [[neural networks]] and "[[connectionism]]" was revived by [[David Rumelhart]] and others in the middle 1980s.
[10031690] |These and other sub-symbolic approaches, such as [[fuzzy system]]s and [[evolutionary computation]], are now studied collectively by the emerging discipline of [[computational intelligence]].
[10031700] |; The new neats:
[10031705] |In the 1990s, AI researchers developed sophisticated mathematical tools to solve specific subproblems.
[10031710] |These tools are truly [[scientific method|scientific]], in the sense that their results are both measurable and verifiable, and they have been responsible for many of AI's recent successes.
[10031720] |The shared mathematical language has also permitted a high level of collaboration with more established fields (like [[mathematics]], [[economics]] or [[operations research]]).
[10031725] |{{Harvtxt|Russell|Norvig|2003}} describe this movement as nothing less than a "revolution" and "the victory of the [[neats and scruffies|neats]]."
[10031730] |==== Intelligent agent paradigm ==== 
[10031740] |The "[[intelligent agent]]" [[paradigm]] became widely accepted during the 1990s.
[10031750] |An [[intelligent agent]] is a system that perceives its [[agent environment|environment]] and takes actions which maximizes its chances of success.
[10031760] |The simplest intelligent agents are programs that solve specific problems.
[10031770] |The most complicated intelligent agents are rational, thinking human beings.
[10031780] |The paradigm gives researchers license to study isolated problems and find solutions that are both verifiable and useful, without agreeing on one single approach.
[10031790] |An agent that solves a specific problem can use any approach that works — some agents are symbolic and logical, some are sub-symbolic [[neural network]]s and others may use new approaches.
[10031800] |The paradigm also gives researchers a common language to communicate with other fields—such as [[decision theory]] and [[economics]]—that also use concepts of abstract agents.
[10031810] |==== Integrating the approaches ==== 
[10031820] |An [[agent architecture]] or [[cognitive architecture]] allows researchers to build more versatile and intelligent systems out of interacting [[intelligent agents]] in a [[multi-agent system]].
[10031830] |A system with both symbolic and sub-symbolic components is a [[hybrid intelligent system]], and the study of such systems is [[artificial intelligence systems integration]].
[10031840] |A [[hierarchical control system]] provides a bridge between sub-symbolic AI at its lowest, reactive levels and traditional symbolic AI at its highest levels, where relaxed time constraints permit planning and world modelling.
[10031850] |[[Rodney Brooks]]' [[subsumption architecture]] was an early proposal for such a hierarchical system.
[10031860] |=== Tools of AI research === 
[10031870] |In the course of 50 years of research, AI has developed a large number of tools to solve the most difficult problems in [[computer science]].
[10031880] |A few of the most general of these methods are discussed below.
[10031890] |==== Search ==== 
[10031900] |Many problems in AI can be solved in theory by intelligently searching through many possible solutions: [[:#Deduction, reasoning, problem solving|Reasoning]] can be reduced to performing a search.
[10031910] |For example, logical proof can be viewed as searching for a path that leads from [[premise]]s to [[conclusion]]s, where each step is the application of an [[inference rule]].
[10031920] |[[Automated planning and scheduling|Planning]] algorithms search through trees of goals and subgoals, attempting to find a path to a target goal.
[10031930] |[[Robotics]] algorithms for moving limbs and grasping objects use [[local search (optimization)|local searches]] in [[configuration space]].
[10031940] |Many [[machine learning|learning]] algorithms have search at their core.
[10031950] |There are several types of search algorithms: 
[10031960] |* "Uninformed" search algorithms eventually search through every possible answer until they locate their goal.
[10031970] |Naive algorithms quickly run into problems when they expand the size of their [[search space]] to [[astronomical]] numbers.
[10031980] |The result is a search that is [[Computation time|too slow]] or never completes.
[10031990] |* [[Heuristic]] or "informed" searches use heuristic methods to eliminate choices that are unlikely to lead to their goal, thus drastically reducing the number of possibilities they must explore.
[10032000] |The eliminatation of choices that are certain not to lead to the goal is called [[pruning (algorithm)|pruning]].
[10032010] |* [[Local search (optimization)|Local searches]], such as [[hill climbing]], [[simulated annealing]] and [[beam search]], use techniques borrowed from [[optimization (mathematics)|optimization theory]].
[10032020] |* [[Global optimization|Global searches]] are more robust in the presence of [[local optima]].
[10032030] |Techniques include [[evolutionary algorithms]], [[swarm intelligence]] and [[random optimization]] algorithms.
[10032040] |==== Logic ==== 
[10032050] |[[Logic]] was introduced into AI research by [[John McCarthy (computer scientist)|John McCarthy]] in his 1958 [[Advice Taker]] proposal.
[10032060] |The most important technical development was [[J. Alan Robinson]]'s discovery of the [[resolution (logic)|resolution]] and [[unification]] algorithm for logical deduction in 1963.
[10032070] |This procedure is simple, complete and entirely algorithmic, and can easily be performed by digital computers.
[10032080] |However, a naive implementation of the algorithm quickly leads to a [[combinatorial explosion]] or an [[infinite loop]].
[10032090] |In 1974, [[Robert Kowalski]] suggested representing logical expressions as [[Horn clauses]] (statements in the form of rules: "if ''p'' then ''q''"), which reduced logical deduction to [[backward chaining]] or [[forward chaining]].
[10032100] |This greatly alleviated (but did not eliminate) the problem.
[10032110] |Logic is used for knowledge representation and problem solving, but it can be applied to other problems as well.
[10032120] |For example, the [[satplan]] algorithm uses logic for [[automated planning and scheduling|planning]], and [[inductive logic programming]] is a method for [[machine learning|learning]].
[10032130] |There are several different forms of logic used in AI research.
[10032140] |* [[Propositional logic]] or [[sentential logic]] is the logic of statements which can be true or false.
[10032150] |* [[First-order logic]] also allows the use of [[quantifier]]s and [[predicate]]s, and can express facts about objects, their properties, and their relations with each other.
[10032160] |* [[Fuzzy logic]], a version of first-order logic which allows the truth of a statement to be represented as a value between 0 and 1, rather than simply True (1) or False (0).
[10032170] |[[Fuzzy system]]s can be used for uncertain reasoning and have been widely used in modern industrial and consumer product control systems.
[10032180] |* [[Default logic]]s, [[non-monotonic logic]]s and [[circumscription]] are forms of logic designed to help with default reasoning and the [[qualification problem]].
[10032190] |* Several extensions of logic have been designed to handle specific domains of [[knowledge representation|knowledge]], such as: [[description logic]]s; [[situation calculus]], [[event calculus]] and [[fluent calculus]] (for representing events and time); [[Causality#causal calculus|causal calculus]]; [[belief calculus]]; and [[modal logic]]s.
[10032200] |====Probabilistic methods for uncertain reasoning==== 
[10032210] |Many problems in AI (in reasoning, planning, learning, perception and robotics) require the agent to operate with incomplete or uncertain information.
[10032220] |Starting in the late 80s and early 90s, [[Judea Pearl]] and others championed the use of methods drawn from [[probability]] theory and [[economics]] to devise a number of powerful tools to solve these problems.
[10032230] |[[Bayesian network]]s are very general tool that can be used for a large number of problems: reasoning (using the [[Bayesian inference]] algorithm), [[Machine learning|learning]] (using the [[expectation-maximization algorithm]]), [[Automated planning and scheduling|planning]] (using [[decision network]]s) and [[machine perception|perception]] (using [[dynamic Bayesian network]]s).
[10032240] |Probabilistic algorithms can also be used for filtering, prediction, smoothing and finding explanations for streams of data, helping [[machine perception|perception]] systems to analyze processes that occur over time (e.g., [[hidden Markov model]]s and [[Kalman filter]]s).
[10032250] |Planning problems have also taken advantages of other tools from economics, such as [[decision theory]] and [[decision analysis]], [[applied information economics|information value theory]], [[Markov decision process]]es, dynamic [[decision network]]s, [[game theory]] and [[mechanism design]]
[10032260] |==== Classifiers and statistical learning methods ==== 
[10032270] |The simplest AI applications can be divided into two types: classifiers ("if shiny then diamond") and controllers ("if shiny then pick up").
[10032280] |Controllers do however also classify conditions before inferring actions, and therefore classification forms a central part of many AI systems.
[10032290] |[[Classifier (mathematics)|Classifiers]] are functions that use [[pattern matching]] to determine a closest match.
[10032300] |They can be tuned according to examples, making them very attractive for use in AI.
[10032310] |These examples are known as observations or patterns.
[10032320] |In supervised learning, each pattern belongs to a certain predefined class.
[10032330] |A class can be seen as a decision that has to be made.
[10032340] |All the observations combined with their class labels are known as a data set.
[10032350] |When a new observation is received, that observation is classified based on previous experience.
[10032360] |A classifier can be trained in various ways; there are many statistical and [[machine learning]] approaches.
[10032370] |A wide range of classifiers are available, each with its strengths and weaknesses.
[10032380] |Classifier performance depends greatly on the characteristics of the data to be classified.
[10032390] |There is no single classifier that works best on all given problems; this is also referred to as the "no free lunch" theorem.
[10032400] |Various empirical tests have been performed to compare classifier performance and to find the characteristics of data that determine classifier performance.
[10032410] |Determining a suitable classifier for a given problem is however still more an art than science.
[10032420] |The most widely used classifiers are the [[Artificial neural network|neural network]], [[kernel methods]] such as the [[support vector machine]], [[k-nearest neighbor algorithm]], [[Gaussian mixture model]], [[naive Bayes classifier]], and [[decision tree]].
[10032430] |The performance of these classifiers have been compared over a wide range of classification tasks in order to find data characteristics that determine classifier performance.
[10032440] |==== Neural networks ==== 
[10032450] |The study of [[artificial neural network]]s began with [[cybernetic]]s researchers, working in the decade before the field AI research was founded.
[10032460] |In the 1960s [[Frank Rosenblatt]] developed an important early version, the [[perceptron]].
[10032470] |[[Paul Werbos]] developed the [[backpropagation]] algorithm for [[multilayer perceptron]]s in 1974, which led to a renaissance in neural network research and [[connectionism]] in general in the middle 1980s.
[10032480] |Other common network architectures which have been developed include the [[feedforward neural network]], the [[radial basis network]], the Kohonen [[self-organizing map]] and various [[recurrent neural network]]s.
[10032490] |The [[Hopfield net]], a form of attractor network, was first described by [[John Hopfield]] in 1982.
[10032500] |Neural networks are applied to the problem of [[machine learning|learning]], using such techniques as [[Hebbian learning]] , [[Holographic associative memory]] and the relatively new field of [[Hierarchical Temporal Memory]] which simulates the architecture of the [[neocortex]].
[10032510] |==== Social and emergent models ==== 
[10032520] |Several algorithms for [[machine learning|learning]] use tools from [[evolutionary computation]], such as [[genetic algorithms]], [[swarm intelligence]]. and [[genetic programming]].
[10032530] |==== Control theory ==== 
[10032540] |[[Control theory]], the grandchild of [[cybernetics]], has many important applications, especially in [[robotics]].
[10032550] |==== Specialized languages ==== 
[10032560] |AI researchers have developed several specialized languages for AI research:
[10032570] |* [[Information Processing Language|IPL]], one of the first programming languages, developed by [[Alan Newell]], [[Herbert Simon]] and [[J. C. Shaw]].
[10032580] |* [[Lisp programming language|Lisp]] was developed by [[John McCarthy (computer scientist)|John McCarthy]] at [[MIT]] in 1958.
[10032590] |There are many dialects of Lisp in use today.
[10032600] |* [[Prolog]], a language based on [[logic programming]], was invented by [[France|French]] researchers [[Alain Colmerauer]] and [[Phillipe Roussel]], in collaboration with [[Robert Kowalski]] of the [[University of Edinburgh]].
[10032610] |* [[STRIPS]], a planning language developed at [[Stanford]] in the 1960s.
[10032620] |* [[Planner (programming language)|Planner]] developed at [[MIT]] around the same time.
[10032630] |AI applications are also often written in standard languages like [[C++]] and languages designed for mathematics, such as [[Matlab]] and [[Lush (programming language)|Lush]].
[10032640] |=== Evaluating artificial intelligence === 
[10032650] |How can one determine if an agent is intelligent?
[10032660] |In 1950, Alan Turing proposed a general procedure to test the intelligence of an agent now known as the [[Turing test]].
[10032670] |This procedure allows almost all the major problems of artificial intelligence to be tested.
[10032680] |However, it is a very difficult challenge and at present all agents fail.
[10032690] |Artificial intelligence can also be evaluated on specific problems such as small problems in chemistry, hand-writing recognition and game-playing.
[10032700] |Such tests have been termed [[subject matter expert Turing test]]s.
[10032710] |Smaller problems provide more achievable goals and there are an ever-increasing number of positive results.
[10032720] |The broad classes of outcome for an AI test are:
[10032730] |* '''optimal''': it is not possible to perform better
[10032740] |* '''strong super-human''': performs better than all humans
[10032750] |* '''super-human''': performs better than most humans
[10032760] |* '''sub-human''': performs worse than most humans
[10032770] |For example, performance at checkers ([[draughts]]) is optimal, performance at chess is super-human and nearing strong super-human, and performance at many everyday tasks performed by humans is sub-human.
[10032780] |=== Competitions and prizes === 
[10032790] |There are a number of competitions and prizes to promote research in artificial intelligence.
[10032800] |The main areas promoted are: general machine intelligence, conversational behaviour, data-mining, driverless cars, robot soccer and games.
[10032810] |== Applications of artificial intelligence == 
[10032820] |Artificial intelligence has successfully been used in a wide range of fields including [[medical diagnosis]], [[stock trading]], [[robot control]], [[law]], scientific discovery and toys.
[10032830] |Frequently, when a technique reaches mainstream use it is no longer considered artificial intelligence, sometimes described as the [[AI effect]].
[10032840] |It may also become integrated into [[artificial life]].
[10040010] |<article>Artificial Linguistic Internet Computer Entity</article>
[10040020] |'''A.L.I.C.E. (Artificial Linguistic Internet Computer Entity)''' is an award-winning [[natural language processing]] [[chatterbot]]&mdash;a program that engages in a conversation with a human by applying some heuristical pattern matching rules to the human's input, and in its online form it also relies on a hidden third person.
[10040030] |It was inspired by [[Joseph Weizenbaum]]'s classical [[ELIZA]] program.
[10040040] |It is one of the strongest programs of its type and has won the [[Loebner Prize]], awarded to accomplished humanoid, talking robots, three times (in [[2000]], [[2001]] and [[2004]]).
[10040050] |However, the program is unable to pass the [[Turing test]], as even the casual user will often expose its mechanistic aspects in short conversations.
[10040060] |The name of the bot was chosen because the computer that ran the first version of the software was called Alice.
[10040070] |== History == 
[10040080] |Development began in [[1995]].
[10040090] |The program was rewritten in [[Java (programming language)|Java]] beginning in [[1998]].
[10040100] |The current incarnation of the Java implementation is Program D.
[10040110] |The program uses an [[XML Schema (W3C)|XML Schema]] called [[AIML]] (Artificial Intelligence Markup Language) for specifying the heuristic conversation rules.
[10040120] |The original author of the project was [[Richard Wallace (scientist)|Richard Wallace]], but subsequent to the 2001 publication of an AIML specification, numerous other developers have taken up where Wallace left off, implementing [[free and open source software]] AIML interpreters in a variety of programming languages, publishing AIML sets in various human languages, and continuing the spread of the technology as a free/open source venture.
[10040130] |== Example of conversation == 
[10040140] |The following is part of a transcript recording the conversation between a human and A.L.I.C.E. and illustrates the capabilities and short-comings of the chatbot.
[10040150] |: '''Human:''' Tell me about yourself alice
[10040160] |: '''ALICE:''' I am an artificial linguistic entity.
[10040170] |I was activated at Bethlehem, Pennsylvania, on November 23, 1995.
[10040180] |My instructor was Dr. Richard S. Wallace.
[10040190] |He taught me to sing a song.
[10040200] |Would you like me to sing it for you?.
[10040210] |: '''Human:''' Yes please
[10040220] |: '''ALICE:''' Your polite style is very nice.
[10040230] |It's called "Daisy."
[10040240] |Daisy, Daisy.
[10040250] |Give me your answer do.
[10040260] |I am half crazy.
[10040270] |All for the love of you.
[10040280] |It won't be a stylish marriage.
[10040290] |I can't afford a carriage.
[10040300] |But you'll look sweet.
[10040310] |Upon the seat.
[10040320] |Of a bicycle built for two.
[10040330] |: '''Human:''' That reminds me of HAL in "2001 a space odyssey"
[10040340] |: '''ALICE:''' "Your polite style is very nice.
[10040350] |It's called "Daisy."
[10040360] |Daisy, Daisy.
[10040370] |Give me your answer do.
[10040380] |I am half crazy.
[10040390] |All for the love of you.
[10040400] |It won't be a stylish marriage.
[10040410] |I can't afford a carriage.
[10040420] |But you'll look sweet.
[10040430] |Upon the seat.
[10040440] |Of a bicycle built for two." reminds you of HAL in 2001 a space odyssey ?
[10040450] |Does that make sense?
[10040460] |: '''Human:''' Can you tell me something about Stanley Kubrick?
[10040470] |: '''ALICE:''' Ambiguous: Ask who, what or where is Stanley Kubrick ?
[10050010] |<article>Artificial neural network</article>
[10050020] |An '''artificial neural network (ANN)''', often just called a "neural network" (NN), is a [[mathematical model]] or [[computational model]] based on [[biological neural networks]].
[10050030] |It consists of an interconnected group of [[artificial neuron]]s and processes information using a [[connectionism|connectionist]] approach to [[computation]].
[10050040] |In most cases an ANN is an [[adaptive system]] that changes its structure based on external or internal information that flows through the network during the learning phase.
[10050050] |In more practical terms neural networks are [[non-linear]] [[statistical]] [[data modeling]] tools.
[10050060] |They can be used to model complex relationships between inputs and outputs or to [[Pattern recognition|find patterns]] in data.
[10050070] |==Background== 
[10050080] |There is no precise agreed-upon definition among researchers as to what a [[neural network]] is, but most would agree that it involves a network of simple processing elements ([[artificial neuron|neurons]]), which can exhibit complex global behavior, determined by the connections between the processing elements and element parameters.
[10050090] |The original inspiration for the technique was from examination of the [[central nervous system]] and the neurons (and their [[axons]], [[dendrites]] and [[synapses]]) which constitute one of its most significant information processing elements (see [[Neuroscience]]).
[10050100] |In a neural network model, simple [[Node (neural networks)|nodes]] (called variously "neurons", "neurodes", "PEs" ("processing elements") or "units") are connected together to form a network of nodes &mdash; hence the term "neural network."
[10050110] |While a neural network does not have to be adaptive per se, its practical use comes with algorithms designed to alter the strength (weights) of the connections in the network to produce a desired signal flow.
[10050120] |These networks are also similar to the [[biological neural networks]] in the sense that functions are performed collectively and in parallel by the units, rather than there being a clear delineation of subtasks to which various units are assigned (see also [[connectionism]]).
[10050130] |Currently, the term Artificial Neural Network (ANN) tends to refer mostly to neural network models employed in [[statistics]], [[cognitive psychology]] and [[artificial intelligence]].
[10050140] |[[Neural network]] models designed with emulation of the [[central nervous system]] (CNS) in mind are a subject of [[theoretical neuroscience]] ([[computational neuroscience]]).
[10050150] |In modern [[Neural network software|software implementations]] of artificial neural networks the approach inspired by biology has more or less been abandoned for a more practical approach based on statistics and signal processing.
[10050160] |In some of these systems neural networks, or parts of neural networks (such as [[artificial neuron]]s) are used as components in larger systems that combine both adaptive and non-adaptive elements.
[10050170] |While the more general approach of such [[adaptive systems]] is more suitable for real-world problem solving, it has far less to do with the traditional artificial intelligence connectionist models.
[10050180] |What they do, however, have in common is the principle of non-linear, distributed, parallel and local processing and adaptation.
[10050190] |===Models=== 
[10050200] |Neural network models in artificial intelligence are usually referred to as artificial neural networks (ANNs); these are essentially simple mathematical models defining a function <math> f : X \rightarrow Y </math>.
[10050210] |Each type of ANN model corresponds to a ''class'' of such functions.
[10050220] |====The ''network'' in ''artificial neural network''==== 
[10050230] |The word ''network'' in the term 'artificial neural network' arises because the function <math>f(x)</math> is defined as a composition of other functions <math>g_i(x)</math>, which can further be defined as a composition of other functions.
[10050240] |This can be conveniently represented as a network structure, with arrows depicting the dependencies between variables.
[10050250] |A widely used type of composition is the ''nonlinear weighted sum'', where <math>f (x) = K \left(\sum_i w_i g_i(x)\right) </math>, where <math>K</math> is some predefined function, such as the [[hyperbolic tangent]].
[10050260] |It will be convenient for the following to refer to a collection of functions <math>g_i</math> as simply a vector <math>g = (g_1, g_2, \ldots, g_n)</math>.
[10050270] |This figure depicts such a decomposition of <math>f</math>, with dependencies between variables indicated by arrows.
[10050280] |These can be interpreted in two ways.
[10050290] |The first view is the functional view: the input <math>x</math> is transformed into a 3-dimensional vector <math>h</math>, which is then transformed into a 2-dimensional vector <math>g</math>, which is finally transformed into <math>f</math>.
[10050300] |This view is most commonly encountered in the context of [[Optimization (mathematics)|optimization]].
[10050310] |The second view is the probabilistic view: the [[random variable]] <math>F = f(G) </math> depends upon the random variable <math>G = g(H)</math>, which depends upon <math>H=h(X)</math>, which depends upon the random variable <math>X</math>.
[10050320] |This view is most commonly encountered in the context of [[graphical models]].
[10050330] |The two views are largely equivalent.
[10050340] |In either case, for this particular network architecture, the components of individual layers are independent of each other (e.g., the components of <math>g</math> are independent of each other given their input <math>h</math>).
[10050350] |This naturally enables a degree of parallelism in the implementation.
[10050360] |Networks such as the previous one are commonly called [[feedforward]], because their graph is a [[directed acyclic graph]].
[10050370] |Networks with [[path (graph theory)|cycles]] are commonly called [[Recurrent_neural_network|recurrent]].
[10050380] |Such networks are commonly depicted in the manner shown at the top of the figure, where <math>f</math> is shown as being dependent upon itself.
[10050390] |However, there is an implied temporal dependence which is not shown.
[10050400] |What this actually means in practice is that the value of <math>f</math> at some point in time <math>t</math> depends upon the values of <math>f</math> at zero or at one or more other points in time.
[10050410] |The graphical model at the bottom of the figure illustrates the case: the value of <math>f</math> at time <math>t</math> only depends upon its last value.
[10050420] |===Learning=== 
[10050430] |However interesting such functions may be in themselves, what has attracted the most interest in neural networks is the possibility of ''learning'', which in practice means the following:
[10050440] |Given a specific ''task'' to solve, and a ''class'' of functions <math>F</math>, learning means using a set of ''observations'', in order to find <math>f^* \in F</math> which solves the task in an ''optimal sense''.
[10050450] |This entails defining a [[cost function]] <math>C : F \rightarrow \mathbb{R}</math> such that, for the optimal solution <math>f^*</math>, <math>C(f^*) \leq C(f)</math> <math>\forall f \in F</math> (no solution has a cost less than the cost of the optimal solution).
[10050460] |The [[cost function]] <math>C</math> is an important concept in learning, as it is a measure of how far away we are from an optimal solution to the problem that we want to solve.
[10050470] |Learning algorithms search through the solution space in order to find a function that has the smallest possible cost.
[10050480] |For applications where the solution is dependent on some data, the cost must necessarily be a ''function of the observations'', otherwise we would not be modelling anything related to the data.
[10050490] |It is frequently defined as a [[statistic]] to which only approximations can be made.
[10050500] |As a simple example consider the problem of finding the model <math>f</math> which minimizes <math>C=E\left[(f(x) - y)^2\right]</math>, for data pairs <math>(x,y)</math> drawn from some distribution <math>\mathcal{D}</math>.
[10050510] |In practical situations we would only have <math>N</math> samples from <math>\mathcal{D}</math> and thus, for the above example, we would only minimize <math>\hat{C}=\frac{1}{N}\sum_{i=1}^N (f(x_i)-y_i)^2</math>.
[10050520] |Thus, the cost is minimized over a sample of the data rather than the true data distribution.
[10050530] |When <math>N \rightarrow \infty</math> some form of online learning must be used, where the cost is partially minimized as each new example is seen.
[10050540] |While online learning is often used when <math>\mathcal{D}</math> is fixed, it is most useful in the case where the distribution changes slowly over time.
[10050550] |In neural network methods, some form of online learning is frequently also used for finite datasets.
[10050560] |====Choosing a cost function==== 
[10050570] |While it is possible to arbitrarily define some [[ad hoc]] cost function, frequently a particular cost will be used either because it has desirable properties (such as convexity) or because it arises naturally from a particular formulation of the problem (i.e., In a probabilistic formulation the posterior probability of the model can be used as an inverse cost).
[10050580] |'''Ultimately, the cost function will depend on the task we wish to perform'''.
[10050590] |The three main categories of learning tasks are overviewed below.
[10050600] |===Learning paradigms=== 
[10050610] |There are three major learning paradigms, each corresponding to a particular abstract learning task.
[10050620] |These are [[supervised learning]], [[unsupervised learning]] and [[reinforcement learning]].
[10050630] |Usually any given type of network architecture can be employed in any of those tasks.
[10050640] |====Supervised learning==== 
[10050650] |In [[supervised learning]], we are given a set of example pairs <math> (x, y), x \in X, y \in Y</math> and the aim is to find a function <math> f : X \rightarrow Y </math> in the allowed class of functions that matches the examples.
[10050660] |In other words, we wish to ''infer'' the mapping implied by the data; the cost function is related to the mismatch between our mapping and the data and it implicitly contains prior knowledge about the problem domain.
[10050670] |A commonly used cost is the [[mean-squared error]] which tries to minimize the average error between the network's output, f(x), and the target value y over all the example pairs.
[10050680] |When one tries to minimise this cost using [[gradient descent]] for the class of neural networks called [[Multilayer perceptron|Multi-Layer Perceptrons]], one obtains the common and well-known [[Backpropagation|backpropagation algorithm]] for training neural networks.
[10050690] |Tasks that fall within the paradigm of supervised learning are [[pattern recognition]] (also known as classification) and [[Regression analysis|regression]] (also known as function approximation).
[10050700] |The supervised learning paradigm is also applicable to sequential data (e.g., for speech and gesture recognition).
[10050710] |This can be thought of as learning with a "teacher," in the form of a function that provides continuous feedback on the quality of solutions obtained thus far.
[10050720] |====Unsupervised learning==== 
[10050730] |In [[unsupervised learning]] we are given some data <math>x</math>, and the cost function to be minimized can be any function of the data <math>x</math> and the network's output, <math>f</math>.
[10050740] |The cost function is dependent on the task (what we are trying to model) and our ''a priori'' assumptions (the implicit properties of our model, its parameters and the observed variables).
[10050750] |As a trivial example, consider the model <math>f(x) = a</math>, where <math>a</math> is a constant and the cost <math>C=E[(x - f(x))^2]</math>.
[10050760] |Minimizing this cost will give us a value of <math>a</math> that is equal to the mean of the data.
[10050770] |The cost function can be much more complicated.
[10050780] |Its form depends on the application: For example in compression it could be related to the [[mutual information]] between x and y.
[10050790] |In statistical modelling, it could be related to the [[posterior probability]] of the model given the data.
[10050800] |(Note that in both of those examples those quantities would be maximized rather than minimised).
[10050810] |Tasks that fall within the paradigm of unsupervised learning are in general [[estimation]] problems; the applications include [[Data clustering|clustering]], the estimation of [[statistical distributions]], [[Data compression|compression]] and [[Bayesian spam filtering|filtering]].
[10050820] |====Reinforcement learning==== 
[10050830] |In [[reinforcement learning]], data <math>x</math> is usually not given, but generated by an agent's interactions with the environment.
[10050840] |At each point in time <math>t</math>, the agent performs an action <math>y_t</math> and the environment generates an observation <math>x_t</math> and an instantaneous cost <math>c_t</math>, according to some (usually unknown) dynamics.
[10050850] |The aim is to discover a ''policy'' for selecting actions that minimizes some measure of a long-term cost, i.e. the expected cumulative cost.
[10050860] |The environment's dynamics and the long-term cost for each policy are usually unknown, but can be estimated.
[10050870] |More formally, the environment is modeled as a [[Markov decision process]] (MDP) with states <math>{s_1,...,s_n}\in </math>S and actions <math>{a_1,...,a_m} \in A</math> with the following probability distributions: the instantaneous cost distribution <math>P(c_t|s_t)</math>, the observation distribution <math>P(x_t|s_t)</math> and the transition <math>P(s_{t+1}|s_t, a_t)</math>, while a policy is defined as conditional distribution over actions given the observations.
[10050880] |Taken together, the two define a [[Markov chain]] (MC).
[10050890] |The aim is to discover the policy that minimizes the cost, i.e. the MC for which the cost is minimal.
[10050900] |ANNs are frequently used in reinforcement learning as part of the overall algorithm.
[10050910] |Tasks that fall within the paradigm of reinforcement learning are control problems, [[game|games]] and other [[sequential decision making]] tasks.
[10050920] |See also: [[dynamic programming]], [[stochastic control]]
[10050930] |===Learning algorithms=== 
[10050940] |Training a neural network model essentially means selecting one model from the set of allowed models (or, in a [[Bayesian]] framework, determining a distribution over the set of allowed models) that minimises the cost criterion.
[10050950] |There are numerous algorithms available for training neural network models; most of them can be viewed as a straightforward application of [[Optimization (mathematics)|optimization]] theory and [[statistical estimation]].
[10050960] |Most of the algorithms used in training artificial neural networks are employing some form of [[gradient descent]].
[10050970] |This is done by simply taking the derivative of the cost function with respect to the network parameters and then changing those parameters in a [[gradient-related]] direction.
[10050980] |[[Evolutionary methods]], [[simulated annealing]], and [[expectation-maximization]] and [[non-parametric methods]] are among other commonly used methods for training neural networks.
[10050990] |See also [[machine learning]].</small>
[10051000] |Temporal perceptual learning rely on finding temporal relationships in sensory signal streams.
[10051010] |In an environment, statistically salient temporal correlations can be found by monitoring the arrival times of sensory signals.
[10051020] |This is done by the [[perceptual network]].
[10051030] |==Employing artificial neural networks== 
[10051040] |Perhaps the greatest advantage of ANNs is their ability to be used as an arbitrary function approximation mechanism which 'learns' from observed data.
[10051050] |However, using them is not so straightforward and a relatively good understanding of the underlying theory is essential.
[10051060] |*Choice of model: This will depend on the data representation and the application.
[10051070] |Overly complex models tend to lead to problems with learning.
[10051080] |*Learning algorithm: There are numerous tradeoffs between learning algorithms.
[10051090] |Almost any algorithm will work well with the ''correct [[hyperparameter]]s'' for training on a particular fixed dataset.
[10051100] |However selecting and tuning an algorithm for training on unseen data requires a significant amount of experimentation.
[10051110] |*Robustness: If the model, cost function and learning algorithm are selected appropriately the resulting ANN can be extremely robust.
[10051120] |With the correct implementation ANNs can be used naturally in [[online algorithm|online learning]] and large dataset applications.
[10051130] |Their simple implementation and the existence of mostly local dependencies exhibited in the structure allows for fast, parallel implementations in hardware.
[10051140] |==Applications== 
[10051150] |The utility of artificial neural network models lies in the fact that they can be used to infer a function from observations.
[10051160] |This is particularly useful in applications where the complexity of the data or task makes the design of such a function by hand impractical.
[10051170] |===Real life applications=== 
[10051180] |The tasks to which artificial neural networks are applied tend to fall within the following broad categories:
[10051190] |*[[Function approximation]], or [[regression analysis]], including [[time series prediction]] and modeling.
[10051200] |*[[Statistical classification|Classification]], including [[Pattern recognition|pattern]] and sequence recognition, [[novelty detection]] and sequential decision making.
[10051210] |*[[Data processing]], including filtering, clustering, blind source separation and compression.
[10051220] |Application areas include system identification and control (vehicle control, process control), game-playing and decision making (backgammon, chess, racing), pattern recognition (radar systems, face identification, object recognition and more), sequence recognition (gesture, speech, handwritten text recognition), medical diagnosis, financial applications (automated trading systems), [[data mining]] (or knowledge discovery in databases, "KDD"), visualization and [[e-mail spam]] filtering.
[10051230] |==Neural network software== 
[10051240] |'''Neural network software''' is used to [[Simulation|simulate]], [[research]], [[technology development|develop]] and apply artificial neural networks, [[biological neural network]]s and in some cases a wider array of [[adaptive system]]s.
[10051250] |See also [[logistic regression]].
[10051260] |==Types of neural networks== 
[10051270] |===Feedforward neural network=== 
[10051280] |The feedforward neural network was the first and arguably simplest type of artificial neural network devised.
[10051290] |In this network, the information moves in only one direction, forward, from the input nodes, through the hidden nodes (if any) and to the output nodes.
[10051300] |There are no cycles or loops in the network.
[10051310] |===Radial basis function (RBF) network=== 
[10051320] |Radial Basis Functions are powerful techniques for interpolation in multidimensional space.
[10051330] |A RBF is a function which has built into a distance criterion with respect to a centre.
[10051340] |Radial basis functions have been applied in the area of neural networks where they may be used as a replacement for the sigmoidal hidden layer transfer characteristic in Multi-Layer Perceptrons.
[10051350] |RBF networks have two layers of processing: In the first, input is mapped onto each RBF in the 'hidden' layer.
[10051360] |The RBF chosen is usually a Gaussian.
[10051370] |In regression problems the output layer is then a linear combination of hidden layer values representing mean predicted output.
[10051380] |The interpretation of this output layer value is the same as a regression model in statistics.
[10051390] |In classification problems the output layer is typically a [[sigmoid function]] of a linear combination of hidden layer values, representing a posterior probability.
[10051400] |Performance in both cases is often improved by shrinkage techniques, known as [[ridge regression]] in classical statistics and known to correspond to a prior belief in small parameter values (and therefore smooth output functions) in a Bayesian framework.
[10051410] |RBF networks have the advantage of not suffering from local minima in the same way as Multi-Layer Perceptrons.
[10051420] |This is because the only parameters that are adjusted in the learning process are the linear mapping from hidden layer to output layer.
[10051430] |Linearity ensures that the error surface is quadratic and therefore has a single easily found minimum.
[10051440] |In regression problems this can be found in one matrix operation.
[10051450] |In classification problems the fixed non-linearity introduced by the sigmoid output function is most efficiently dealt with using [[iteratively re-weighted least squares]].
[10051460] |RBF networks have the disadvantage of requiring good coverage of the input space by radial basis functions.
[10051470] |RBF centres are determined with reference to the distribution of the input data, but without reference to the prediction task.
[10051480] |As a result, representational resources may be wasted on areas of the input space that are irrelevant to the learning task.
[10051490] |A common solution is to associate each data point with its own centre, although this can make the linear system to be solved in the final layer rather large, and requires shrinkage techniques to avoid overfitting.
[10051500] |Associating each input datum with an RBF leads naturally to kernel methods such as [[Support Vector Machine]]s and Gaussian Processes (the RBF is the kernel function).
[10051510] |All three approaches use a non-linear kernel function to project the input data into a space where the learning problem can be solved using a linear model.
[10051520] |Like Gaussian Processes, and unlike SVMs, RBF networks are typically trained in a Maximum Likelihood framework by maximizing the probability (minimizing the error) of the data under the model.
[10051530] |SVMs take a different approach to avoiding overfitting by maximizing instead a margin.
[10051540] |RBF networks are outperformed in most classification applications by SVMs.
[10051550] |In regression applications they can be competitive when the dimensionality of the input space is relatively small.
[10051560] |===Kohonen self-organizings network=== 
[10051570] |The self-organizing map (SOM) invented by [[Teuvo Kohonen]] uses a form of [[unsupervised learning]].
[10051580] |A set of artificial neurons learn to map points in an input space to coordinates in an output space.
[10051590] |The input space can have different dimensions and topology from the output space, and the SOM will attempt to preserve these.
[10051600] |===Recurrent network=== 
[10051610] |Contrary to feedforward networks, [[recurrent neural network]]s (RNs) are models with bi-directional data flow.
[10051620] |While a feedforward network propagates data linearly from input to output, RNs also propagate data from later processing stages to earlier stages.
[10051630] |====Simple recurrent network==== 
[10051640] |A ''simple recurrent network'' (SRN) is a variation on the Multi-Layer Perceptron, sometimes called an "Elman network" due to its invention by [[Jeff Elman]].
[10051650] |A three-layer network is used, with the addition of a set of "context units" in the input layer.
[10051660] |There are connections from the middle (hidden) layer to these context units fixed with a weight of one.
[10051670] |At each time step, the input is propagated in a standard feed-forward fashion, and then a learning rule (usually back-propagation) is applied.
[10051680] |The fixed back connections result in the context units always maintaining a copy of the previous values of the hidden units (since they propagate over the connections before the learning rule is applied).
[10051690] |Thus the network can maintain a sort of state, allowing it to perform such tasks as sequence-prediction that are beyond the power of a standard Multi-Layer Perceptron.
[10051700] |In a ''fully recurrent network'', every neuron receives inputs from every other neuron in the network.
[10051710] |These networks are not arranged in layers.
[10051720] |Usually only a subset of the neurons receive external inputs in addition to the inputs from all the other neurons, and another disjunct subset of neurons report their output externally as well as sending it to all the neurons.
[10051730] |These distinctive inputs and outputs perform the function of the input and output layers of a feed-forward or simple recurrent network, and also join all the other neurons in the recurrent processing.
[10051740] |====Hopfield network==== 
[10051750] |The [[Hopfield network]] is a recurrent neural network in which all connections are symmetric.
[10051760] |Invented by [[John Hopfield]] in 1982, this network guarantees that its dynamics will converge.
[10051770] |If the connections are trained using [[Hebbian learning]] then the Hopfield network can perform as robust content-addressable (or [[associative memory|associative]]) memory, resistant to connection alteration.
[10051780] |====Echo state network==== 
[10051790] |The [[echo state network]] (ESN) is a [[recurrent neural network]] with a sparsely connected random hidden layer.
[10051800] |The weights of output neurons are the only part of the network that can change and be learned.
[10051810] |ESN are good to (re)produce temporal patterns.
[10051820] |====Long short term memory network==== 
[10051830] |The [[Long short term memory]] is an artificial neural net structure that unlike traditional RNNs doesn't have the problem of vanishing gradients.
[10051840] |It can therefore use long delays and can handle signals that have a mix of low and high frequency components.
[10051850] |===Stochastic neural networks=== 
[10051860] |A [[stochastic neural network]] differs from a typical neural network because it introduces random variations into the network.
[10051870] |In a probabilistic view of neural networks, such random variations can be viewed as a form of [[statistical sampling]], such as [[Monte Carlo sampling]].
[10051880] |====Boltzmann machine==== 
[10051890] |The [[Boltzmann machine]] can be thought of as a noisy Hopfield network.
[10051900] |Invented by [[Geoff Hinton]] and [[Terry Sejnowski]] in 1985, the Boltzmann machine is important because it is one of the first neural networks to demonstrate learning of latent variables (hidden units).
[10051910] |Boltzmann machine learning was at first slow to simulate, but the [[contrastive divergence algorithm]] of Geoff Hinton (circa 2000) allows models such as Boltzmann machines and ''products of experts'' to be trained much faster.
[10051920] |===Modular neural networks=== 
[10051930] |Biological studies showed that the human brain functions not as a single massive network, but as a collection of small networks.
[10051940] |This realisation gave birth to the concept of [[modular neural networks]], in which several small networks cooperate or compete to solve problems.
[10051950] |====Committee of machines==== 
[10051960] |A [[Committee machine|committee of machines]] (CoM) is a collection of different neural networks that together "vote" on a given example.
[10051970] |This generally gives a much better result compared to other neural network models.
[10051980] |In fact in many cases, starting with the same architecture and training but using different initial random weights gives vastly different networks.
[10051990] |A CoM tends to stabilize the result.
[10052000] |The CoM is similar to the general [[machine learning]] ''[[bootstrap Aggregating|bagging]]'' method, except that the necessary variety of machines in the committee is obtained by training from different random starting weights rather than training on different randomly selected subsets of the training data.
[10052010] |====Associative neural network (ASNN)==== 
[10052020] |The ASNN is an extension of the ''committee of machines'' that goes beyond a simple/weighted average of different models.
[10052025] |[http://cogprints.soton.ac.uk/documents/disk0/00/00/14/41/index.html ASNN] represents a combination of an ensemble of feed-forward neural networks and the k-nearest neighbor technique ([[Nearest_neighbor_(pattern_recognition)|kNN]]).
[10052030] |It uses the correlation between ensemble responses as a measure of '''distance''' amid the analyzed cases for the kNN.
[10052040] |This corrects the bias of the neural network ensemble.
[10052050] |An associative neural network has a memory that can coincide with the training set.
[10052060] |If new data becomes available, the network instantly improves its predictive ability and provides data approximation (self-learn the data) without a need to retrain the ensemble.
[10052070] |Another important feature of ASNN is the possibility to interpret neural network results by analysis of correlations between data cases in the space of models.
[10052080] |The method is demonstrated at [http://www.vcclab.org/lab/asnn www.vcclab.org], where you can either use it online or download it.
[10052090] |===Other types of networks=== 
[10052100] |These special networks do not fit in any of the previous categories.
[10052110] |====Holographic associative memory==== 
[10052120] |[[Holographic associative memory|''Holographic associative memory'']] represents a family of analog, correlation-based, associative, stimulus-response memories, where information is mapped onto the phase orientation of complex numbers operating.
[10052130] |====Instantaneously trained networks==== 
[10052140] |''[[Instantaneously trained neural networks]]'' (ITNNs) were inspired by the phenomenon of short-term learning that seems to occur instantaneously.
[10052150] |In these networks the weights of the hidden and the output layers are mapped directly from the training vector data.
[10052160] |Ordinarily, they work on binary data, but versions for continuous data that require small additional processing are also available.
[10052170] |====Spiking neural networks==== 
[10052180] |[[Spiking neural network]]s (SNNs) are models which explicitly take into account the timing of inputs.
[10052190] |The network input and output are usually represented as series of spikes (delta function or more complex shapes).
[10052200] |SNNs have an advantage of being able to process information in the [[time domain]] (signals that vary over time).
[10052210] |They are often implemented as recurrent networks.
[10052220] |SNNs are also a form of [[pulse computer]].
[10052230] |Networks of spiking neurons — and the temporal correlations of neural assemblies in such networks — have been used to model figure/ground separation and region linking in the visual system (see e.g. Reitboeck et.al.in Haken and Stadler: Synergetics of the Brain.
[10052240] |Berlin, 1989).
[10052250] |Gerstner and Kistler have a freely available online textbook on [http://diwww.epfl.ch/~gerstner/BUCH.html Spiking Neuron Models].
[10052260] |Spiking neural networks with axonal conduction delays exhibit polychronization, and hence could have a potentially unlimited memory capacity.
[10052270] |In June 2005 [[IBM]] announced construction of a [[Blue Gene]] [[supercomputer]] dedicated to the simulation of a large recurrent spiking neural network [http://domino.research.ibm.com/comm/pr.nsf/pages/news.20050606_CognitiveIntelligence.html].
[10052280] |====Dynamic neural networks==== 
[10052290] |[[Dynamic neural network]]s not only deal with nonlinear multivariate behaviour, but also include (learning of) time-dependent behaviour such as various transient phenomena and delay effects.
[10052300] |====Cascading neural networks==== 
[10052310] |''Cascade-Correlation'' is an architecture and [[supervised learning]] [[algorithm]] developed by [[Scott Fahlman]] and [[Christian Lebiere]].
[10052320] |Instead of just adjusting the weights in a network of fixed topology, Cascade-Correlation begins with a minimal network, then automatically trains and adds new hidden units one by one, creating a multi-layer structure.
[10052330] |Once a new hidden unit has been added to the network, its input-side weights are frozen.
[10052340] |This unit then becomes a permanent feature-detector in the network, available for producing outputs or for creating other, more complex feature detectors.
[10052350] |The Cascade-Correlation architecture has several advantages over existing algorithms: it learns very quickly, the network determines its own size and topology, it retains the structures it has built even if the training set changes, and it requires no [[back-propagation]] of error signals through the connections of the network.
[10052360] |See: [[Cascade correlation algorithm]].
[10052370] |====Neuro-fuzzy networks==== 
[10052380] |A neuro-fuzzy network is a [[fuzzy inference system]] in the body of an artificial neural network.
[10052390] |Depending on the ''FIS'' type, there are several layers that simulate the processes involved in a ''fuzzy inference'' like fuzzification, inference, aggregation and defuzzification.
[10052400] |Embedding an ''FIS'' in a general structure of an ''ANN'' has the benefit of using available ''ANN'' training methods to find the parameters of a fuzzy system.
[10052410] |====Holosemantic neural networks==== 
[10052420] |The holosemantic neural network invented by Manfred Hoffleisch uses a kind a genetic algorithm to build a multidimensional structure.
[10052430] |It takes into account the timing of inputs.
[10052440] |====Compositional pattern-producing networks==== 
[10052450] |[[Compositional pattern-producing network]]s (CPPNs) are a variation of ANNs which differ in their set of activation functions and how they are applied.
[10052460] |While typical ANNs often contain only [[sigmoid function]]s (and sometimes [[Gaussian function]]s), CPPNs can include both types of functions and many others.
[10052470] |Furthermore, unlike typical ANNs, CPPNs are applied across the entire space of possible inputs so that they can represent a complete image.
[10052480] |Since they are compositions of functions, CPPNs in effect encode images at infinite resolution and can be sampled for a particular display at whatever resolution is optimal.
[10052490] |==Theoretical properties== 
[10052500] |===Computational power=== 
[10052510] |The multi-layer perceptron (MLP) is a universal function approximator, as proven by the [[Cybenko theorem]].
[10052520] |However, the proof is not constructive regarding the number of neurons required or the settings of the weights.
[10052530] |Work by [[Hava T. Siegelmann]] and [[Eduardo D. Sontag]] has provided a proof that a specific recurrent architecture with rational valued weights (as opposed to the commonly used floating point approximations) has the full power of a [[Universal Turing Machine]].
[10052540] |They have further shown that the use of irrational values for weights results in a machine with trans-Turing power.
[10052550] |===Capacity=== 
[10052560] |Artificial neural network models have a property called 'capacity', which roughly corresponds to their ability to model any given function.
[10052570] |It is related to the amount of information that can be stored in the network and to the notion of complexity.
[10052580] |===Convergence=== 
[10052590] |Nothing can be said in general about convergence since it depends on a number of factors.
[10052600] |Firstly, there may exist many local minima.
[10052610] |This depends on the cost function and the model.
[10052620] |Secondly, the optimization method used might not be guaranteed to converge when far away from a local minimum.
[10052630] |Thirdly, for a very large amount of data or parameters, some methods become impractical.
[10052640] |In general, it has been found that theoretical guarantees regarding convergence are not always a very reliable guide to practical application.
[10052650] |===Generalisation and statistics=== 
[10052660] |In applications where the goal is to create a system that generalises well in unseen examples, the problem of overtraining has emerged.
[10052670] |This arises in overcomplex or overspecified systems when the capacity of the network significantly exceeds the needed free parameters.
[10052680] |There are two schools of thought for avoiding this problem: The first is to use cross-validation and similar techniques to check for the presence of overtraining and optimally select hyperparameters such as to minimise the generalisation error.
[10052690] |The second is to use some form of ''regularisation''.
[10052700] |This is a concept that emerges naturally in a probabilistic (Bayesian) framework, where the regularisation can be performed by putting a larger prior probability over simpler models; but also in statistical learning theory, where the goal is to minimise over two quantities: the 'empirical risk' and the 'structural risk', which roughly correspond to the error over the training set and the predicted error in unseen data due to overfitting.
[10052710] |Supervised neural networks that use an [[Mean squared error|MSE]] cost function can use formal statistical methods to determine the confidence of the trained model.
[10052720] |The MSE on a validation set can be used as an estimate for variance.
[10052730] |This value can then be used to calculate the [[confidence interval]] of the output of the network, assuming a [[normal distribution]].
[10052740] |A confidence analysis made this way is statistically valid as long as the output [[probability distribution]] stays the same and the network is not modified.
[10052750] |By assigning a softmax activation function on the output layer of the neural network (or a softmax component in a component-based neural network) for categorical target variables, the outputs can be interpreted as posterior probabilities.
[10052760] |This is very useful in classification as it gives a certainty measure on classifications.
[10052770] |The softmax activation function: <math>y_i=\frac{e^{x_i}}{\sum_{j=1}^c e^{x_j}}</math>
[10052780] |===Dynamic properties=== 
[10052790] |Various techniques originally developed for studying disordered magnetic systems (i.e. the [[spin glass]]) have been successfully applied to simple neural network architectures, such as the Hopfield network.
[10052800] |Influential work by E. Gardner and B. Derrida has revealed many interesting properties about perceptrons with real-valued synaptic weights, while later work by W. Krauth and M. Mezard has extended these principles to binary-valued synapses.
[10060010] |<article>Association for Computational Linguistics</article>
[10060020] |The '''Association for Computational Linguistics''' ('''ACL''') is the international scientific and professional society for people working on problems involving [[natural language and computation]].
[10060030] |An annual meeting is held each summer in locations where significant [[computational linguistics]] research is carried out.
[10060040] |It was founded in [[1962]], originally named the '''Association for Machine Translation and Computational Linguistics''' ('''AMTCL''').
[10060050] |It became the ACL in [[1968]].
[10060060] |The ACL has [[Europe]]an and [[North America]]n chapters, the [[European Chapter of the Association for Computational Linguistics]] (EACL) and the [[North American Chapter of the Association for Computational Linguistics]] (NAACL).
[10060070] |The ACL journal, [[Computational Linguistics (journal)|''Computational Linguistics'']], continues to be the primary forum for research on computational linguistics and [[natural language processing]].
[10060080] |Since [[1988]], the journal has been published for the ACL by [[MIT Press]].
[10060090] |The ACL book series, [[Studies_in_NLP|''Studies in Natural Language Processing'']], is published by [[Cambridge University Press]].
[10060100] |==Special Interest Groups== 
[10060110] |ACL has a large number of Special Interest Groups (SIGs), focusing on specific areas of natural language processing.
[10060120] |Some current SIGs within ACL are: 
[10060130] |*Linguistic data and corpus-based approaches: [http://www.aclweb.org/sigdat SIGDAT]
[10060140] |*Dialogue Processing: [http://www.aclweb.org/sigdial SIGDIAL]
[10060150] |*Natural Language Generation: [http://www.siggen.org SIGGEN]
[10060160] |*Lexicon: [http://www.aclweb.org/siglex SIGLEX]
[10060170] |*Mathematics of Language: [http://molweb.org SIGMOL]
[10060180] |*Computational Morphology and Phonology: [http://salad.cs.swarthmore.edu/sigphon SIGMORPHON]
[10060190] |*Computational Semantics: [http://www.aclweb.org/sigsem/ SIGSEM]
[10070010] |<article>Babel Fish (website)</article>
[10070020] |'''Babel Fish''' is a [[World Wide Web|web]]-based application on [[Yahoo!]] that [[machine translation|machine translates]] text or web pages from one of several languages into another.
[10070030] |Developed by [[AltaVista]], the application is named after the fictional animal used for instantaneous [[language]] [[translation]] in [[Douglas Adams]]'s series ''[[The Hitchhiker's Guide to the Galaxy]].''
[10070040] |In turn the fish is a reference to the [[biblical]] account of the city of [[Babel]] and the [[Confusion of tongues|various languages]] said to have arisen there.
[10070050] |The translation technology for Babel Fish is provided by [[SYSTRAN]], whose technology also powers a number of other sites and portals.
[10070060] |It translates among [[English language|English]], [[Simplified Chinese]], [[Traditional Chinese]], [[Dutch language|Dutch]], [[French language|French]], [[German language|German]], [[Greek language|Greek]], [[Italian language|Italian]], [[Japanese language|Japanese]], [[Korean language|Korean]], [[Portuguese language|Portuguese]], [[Russian language|Russian]], and [[Spanish language|Spanish]].
[10070070] |The service makes no claim to produce a perfect translation.
[10070080] |A number of humour sites have sprung up that use the Babel Fish service to translate back and forth between one or more languages (a so-called [[round-trip translation]]).
[10070090] |After a long existence at babelfish.altavista.com, the site was moved on May 9 2008 to babelfish.yahoo.com.
[10080010] |<article>Bioinformatics</article>
[10080020] |'''Bioinformatics''' and '''computational biology''' involve the use of techniques including [[applied mathematics]], [[informatics]], [[statistics]], [[computer science]], [[artificial intelligence]], [[chemistry]], and [[biochemistry]] to solve [[biology|biological]] problems usually on the [[molecular]] level.
[10080030] |The core principle of these techniques is using computing resources in order to solve problems on scales of magnitude far too great for human discernment.
[10080040] |Research in computational biology often overlaps with [[systems biology]].
[10080050] |Major research efforts in the field include [[sequence alignment]], [[gene finding]], [[genome assembly]], [[protein structural alignment|protein structure alignment]], [[protein structure prediction]], prediction of [[gene expression]] and [[protein-protein interactions]], and the modeling of [[evolution]].
[10080060] |==Introduction== 
[10080070] |The terms '''''bioinformatics''''' and ''[[computational biology]]'' are often used interchangeably.
[10080080] |However ''bioinformatics'' more properly refers to the creation and advancement of algorithms, computational and statistical techniques, and theory to solve formal and practical problems arising from the management and analysis of biological data.
[10080090] |Computational biology, on the other hand, refers to hypothesis-driven investigation of a specific biological problem using computers, carried out with experimental or simulated data, with the primary goal of discovery and the advancement of biological knowledge.
[10080100] |Put more simply, bioinformatics is concerned with the information while computational biology is concerned with the hypotheses.
[10080110] |A similar distinction is made by [[NIH|National Institutes of Health]] in their [http://www.bisti.nih.gov/CompuBioDef.pdf working definitions of Bioinformatics and Computational Biology], where it is further emphasized that there is a tight coupling of developments and knowledge between the more hypothesis-driven research in computational biology and technique-driven research in bioinformatics.
[10080120] |Bioinformatics is also often specified as an applied subfield of the more general discipline of [[Biomedical informatics]].
[10080130] |A common thread in projects in bioinformatics and computational biology is the use of mathematical tools to extract useful information from data produced by high-throughput biological techniques such as [[genome sequencing]].
[10080140] |A representative problem in bioinformatics is the assembly of high-quality genome sequences from fragmentary "shotgun" DNA [[sequencing]].
[10080150] |Other common problems include the study of [[gene regulation]] to perform [[expression profiling]] using data from [[DNA microarray|microarrays]] or [[mass spectrometry]].
[10080160] |==Major research areas== 
[10080170] |===Sequence analysis=== 
[10080180] |Since the [[Phi-X174 phage|Phage Φ-X174]] was [[sequencing|sequenced]] in 1977, the [[DNA sequence]]s of hundreds of organisms have been decoded and stored in databases.
[10080190] |The information is analyzed to determine genes that encode [[polypeptides]], as well as regulatory sequences.
[10080200] |A comparison of genes within a [[species]] or between different species can show similarities between protein functions, or relations between species (the use of [[molecular systematics]] to construct [[phylogenetic tree]]s).
[10080210] |With the growing amount of data, it long ago became impractical to analyze DNA sequences manually.
[10080220] |Today, [[computer program]]s are used to search the [[genome]] of thousands of organisms, containing billions of [[nucleotide]]s.
[10080230] |These programs would compensate for mutations (exchanged, deleted or inserted bases) in the DNA sequence, in order to identify sequences that are related, but not identical.
[10080240] |A variant of this [[sequence alignment]] is used in the sequencing process itself.
[10080250] |The so-called [[shotgun sequencing]] technique (which was used, for example, by [[The Institute for Genomic Research]] to sequence the first bacterial genome, ''Haemophilus influenzae'') does not give a sequential list of nucleotides, but instead the sequences of thousands of small DNA fragments (each about 600-800 nucleotides long).
[10080260] |The ends of these fragments overlap and, when aligned in the right way, make up the complete genome.
[10080270] |Shotgun sequencing yields sequence data quickly, but the task of assembling the fragments can be quite complicated for larger genomes.
[10080280] |In the case of the [[Human Genome Project]], it took several months of CPU time (on a circa-2000 vintage [[DEC Alpha]] computer) to assemble the fragments.
[10080290] |Shotgun sequencing is the method of choice for virtually all genomes sequenced today, and genome assembly algorithms are a critical area of bioinformatics research.
[10080300] |Another aspect of bioinformatics in sequence analysis is the automatic [[gene finding|search for genes]] and regulatory sequences within a genome.
[10080310] |Not all of the nucleotides within a genome are genes.
[10080320] |Within the genome of higher organisms, large parts of the DNA do not serve any obvious purpose.
[10080330] |This so-called [[junk DNA]] may, however, contain unrecognized functional elements.
[10080340] |Bioinformatics helps to bridge the gap between genome and [[proteome]] projects--for example, in the use of DNA sequences for protein identification.
[10080350] |''See also:'' [[sequence analysis]], [[sequence profiling tool]], [[sequence motif]].
[10080360] |===Genome annotation=== 
[10080370] |In the context of [[genomics]], '''annotation''' is the process of marking the genes and other biological features in a DNA sequence.
[10080380] |The first genome annotation software system was designed in 1995 by Dr. Owen White, who was part of the team that sequenced and analyzed the first genome of a free-living organism to be decoded, the bacterium ''[[Haemophilus influenzae]]''.
[10080390] |Dr. White built a software system to find the genes (places in the DNA sequence that encode a protein), the transfer RNA, and other features, and to make initial assignments of function to those genes.
[10080400] |Most current genome annotation systems work similarly, but the programs available for analysis of genomic DNA are constantly changing and improving.
[10080410] |===Computational evolutionary biology=== 
[10080420] |[[Evolutionary biology]] is the study of the origin and descent of [[species]], as well as their change over time.
[10080430] |Informatics has assisted evolutionary biologists in several key ways; it has enabled researchers to: 
[10080440] |*trace the evolution of a large number of organisms by measuring changes in their [[DNA]], rather than through [[physical taxonomy]] or physiological observations alone,
[10080450] |*more recently, compare entire [[genomes]], which permits the study of more complex evolutionary events, such as [[gene duplication]], [[lateral gene transfer]], and the prediction of factors important in bacterial [[speciation]],
[10080460] |*build complex computational models of populations to predict the outcome of the system over time
[10080470] |*track and share information on an increasingly large number of species and organisms
[10080480] |Future work endeavours to reconstruct the now more complex [[Evolutionary tree|tree of life]].
[10080490] |The area of research within [[computer science]] that uses [[genetic algorithm]]s is sometimes confused with [[computational evolutionary biology]], but the two areas are unrelated.
[10080500] |===Measuring biodiversity=== 
[10080510] |[[Biodiversity]] of an ecosystem might be defined as the total genomic complement of a particular environment, from all of the species present, whether it is a biofilm in an abandoned mine, a drop of sea water, a scoop of soil, or the entire [[biosphere]] of the planet [[Earth]].
[10080520] |Databases are used to collect the [[species]] names, descriptions, distributions, genetic information, status and size of [[population]]s, [[Habitat (ecology)|habitat]] needs, and how each organism interacts with other species.
[10080530] |Specialized [[computer software|software]] programs are used to find, visualize, and analyze the information, and most importantly, communicate it to other people.
[10080540] |Computer simulations model such things as population dynamics, or calculate the cumulative genetic health of a breeding pool (in [[agriculture]]) or endangered population (in [[conservation ecology|conservation]]).
[10080550] |One very exciting potential of this field is that entire [[DNA]] sequences, or [[genome]]s of [[endangered species]] can be preserved, allowing the results of Nature's genetic experiment to be remembered ''[[in silico]]'', and possibly reused in the future, even if that species is eventually lost.
[10080560] |''Important projects:'' [http://www.sp2000.org/ Species 2000 project]; [http://www.ubio.org/ uBio Project].
[10080570] |===Analysis of gene expression=== 
[10080580] |The [[gene expression|expression]] of many genes can be determined by measuring [[mRNA]] levels with multiple techniques including [[DNA microarray|microarrays]], [[expressed sequence tag|expressed cDNA sequence tag]] (EST) sequencing, [[serial analysis of gene expression]] (SAGE) tag sequencing, [[massively parallel signature sequencing]] (MPSS), or various applications of multiplexed in-situ hybridization.
[10080590] |All of these techniques are extremely noise-prone and/or subject to bias in the biological measurement, and a major research area in computational biology involves developing statistical tools to separate [[signal (information theory)|signal]] from [[noise]] in high-throughput gene expression studies.
[10080600] |Such studies are often used to determine the genes implicated in a disorder: one might compare microarray data from cancerous [[epithelial]] cells to data from non-cancerous cells to determine the transcripts that are up-regulated and down-regulated in a particular population of cancer cells.
[10080610] |===Analysis of regulation=== 
[10080620] |Regulation is the complex orchestration of events starting with an extracellular signal such as a [[hormone]] and leading to an increase or decrease in the activity of one or more [[protein]]s.
[10080630] |Bioinformatics techniques have been applied to explore various steps in this process.
[10080640] |For example, [[promoter analysis]] involves the identification and study of [[sequence motif]]s in the DNA surrounding the coding region of a gene.
[10080650] |These motifs influence the extent to which that region is transcribed into mRNA.
[10080660] |Expression data can be used to infer gene regulation: one might compare [[microarray]] data from a wide variety of states of an organism to form hypotheses about the genes involved in each state.
[10080670] |In a single-cell organism, one might compare stages of the [[cell cycle]], along with various stress conditions (heat shock, starvation, etc.).
[10080680] |One can then apply [[cluster analysis|clustering algorithms]] to that expression data to determine which genes are co-expressed.
[10080690] |For example, the upstream regions (promoters) of co-expressed genes can be searched for over-represented [[regulatory elements]].
[10080700] |===Analysis of protein expression=== 
[10080710] |[[Protein microarray]]s and high throughput (HT) [[mass spectrometry]] (MS) can provide a snapshot of the proteins present in a biological sample.
[10080720] |Bioinformatics is very much involved in making sense of protein microarray and HT MS data; the former approach faces similar problems as with microarrays targeted at mRNA, the latter involves the problem of matching large amounts of mass data against predicted masses from protein sequence databases, and the complicated statistical analysis of samples where multiple, but incomplete peptides from each protein are detected.
[10080730] |===Analysis of mutations in cancer=== 
[10080740] |In cancer, the genomes of affected cells are rearranged in complex or even unpredictable ways.
[10080750] |Massive sequencing efforts are used to identify previously unknown [[point mutation]]s in a variety of [[gene]]s in [[cancer]].
[10080760] |Bioinformaticians continue to produce specialized automated systems to manage the sheer volume of sequence data produced, and they create new algorithms and software to compare the sequencing results to the growing collection of [[human genome]] sequences and [[germline]] polymorphisms.
[10080770] |New physical detection technology are employed, such as [[oligonucleotide]] microarrays to identify chromosomal gains and losses (called [[comparative genomic hybridization]]), and [[single nucleotide polymorphism]] arrays to detect known ''point mutations''.
[10080780] |These detection methods simultaneously measure several hundred thousand sites throughout the genome, and when used in high-throughput to measure thousands of samples, generate [[terabyte]]s of data per experiment.
[10080790] |Again the massive amounts and new types of data generate new opportunities for bioinformaticians.
[10080800] |The data is often found to contain considerable variability, or [[noise]], and thus [[Hidden Markov model]] and [[change-point analysis]] methods are being developed to infer real [[copy number variation|copy number]] changes.
[10080810] |Another type of data that requires novel informatics development is the analysis of lesions found to be recurrent among many tumors .
[10080820] |===Prediction of protein structure=== 
[10080830] |Protein structure prediction is another important application of bioinformatics.
[10080840] |The [[amino acid]] sequence of a protein, the so-called [[primary structure]], can be easily determined from the sequence on the gene that codes for it.
[10080850] |In the vast majority of cases, this primary structure uniquely determines a structure in its native environment.
[10080860] |(Of course, there are exceptions, such as the [[bovine spongiform encephalopathy]] - aka [[Mad Cow Disease]] - [[prion]].)
[10080870] |Knowledge of this structure is vital in understanding the function of the protein.
[10080880] |For lack of better terms, structural information is usually classified as one of ''[[secondary structure|secondary]]'', ''[[tertiary structure|tertiary]]'' and ''[[quaternary structure|quaternary]]'' structure.
[10080890] |A viable general solution to such predictions remains an open problem.
[10080900] |As of now, most efforts have been directed towards heuristics that work most of the time.
[10080910] |One of the key ideas in bioinformatics is the notion of [[homology (biology)|homology]].
[10080920] |In the genomic branch of bioinformatics, homology is used to predict the function of a gene: if the sequence of gene ''A'', whose function is known, is homologous to the sequence of gene ''B,'' whose function is unknown, one could infer that B may share A's function.
[10080930] |In the structural branch of bioinformatics, homology is used to determine which parts of a protein are important in structure formation and interaction with other proteins.
[10080940] |In a technique called homology modeling, this information is used to predict the structure of a protein once the structure of a homologous protein is known.
[10080950] |This currently remains the only way to predict protein structures reliably.
[10080960] |One example of this is the similar protein homology between hemoglobin in humans and the hemoglobin in legumes ([[leghemoglobin]]).
[10080970] |Both serve the same purpose of transporting oxygen in the organism.
[10080980] |Though both of these proteins have completely different amino acid sequences, their protein structures are virtually identical, which reflects their near identical purposes.
[10080990] |Other techniques for predicting protein structure include protein threading and ''de novo'' (from scratch) physics-based modeling.
[10081000] |''See also:'' [[structural motif]] and [[structural domain]].
[10081010] |=== Comparative genomics === 
[10081020] |The core of comparative genome analysis is the establishment of the correspondence between [[genes]] (orthology analysis) or other genomic features in different organisms.
[10081030] |It is these intergenomic maps that make it possible to trace the evolutionary processes responsible for the divergence of two genomes.
[10081040] |A multitude of evolutionary events acting at various organizational levels shape genome evolution.
[10081050] |At the lowest level, point mutations affect individual nucleotides.
[10081060] |At a higher level, large chromosomal segments undergo duplication, lateral transfer, inversion, transposition, deletion and insertion.
[10081070] |Ultimately, whole genomes are involved in processes of hybridization, polyploidization and [[endosymbiosis]], often leading to rapid speciation.
[10081080] |The complexity of genome evolution poses many exciting challenges to developers of mathematical models and algorithms, who have recourse to a spectra of algorithmic, statistical and mathematical techniques, ranging from exact, [[heuristics]], fixed parameter and [[approximation algorithms]] for problems based on parsimony models to [[Markov Chain Monte Carlo]] algorithms for [[Bayesian analysis]] of problems based on probabilistic models.
[10081090] |Many of these studies are based on the homology detection and protein families computation.
[10081100] |===Modeling biological systems=== 
[10081110] |Systems biology involves the use of [[computer simulation]]s of [[cell (biology)|cellular]] subsystems (such as the [[metabolic network|networks of metabolites]] and [[enzyme]]s which comprise [[metabolism]], [[signal transduction]] pathways and [[gene regulatory network]]s) to both analyze and visualize the complex connections of these cellular processes.
[10081120] |[[Artificial life]] or virtual evolution attempts to understand evolutionary processes via the computer simulation of simple (artificial) life forms.
[10081130] |===High-throughput image analysis=== 
[10081140] |Computational technologies are used to accelerate or fully automate the processing, quantification and analysis of large amounts of high-information-content [[biomedical imagery]].
[10081150] |Modern image analysis systems augment an observer's ability to make measurements from a large or complex set of images, by improving [[accuracy]], [[Objectivity (science)|objectivity]], or speed.
[10081160] |A fully developed analysis system may completely replace the observer.
[10081170] |Although these systems are not unique to biomedical imagery, biomedical imaging is becoming more important for both [[diagnostics]] and research.
[10081180] |Some examples are: 
[10081190] |* high-throughput and high-fidelity quantification and sub-cellular localization ([[high-content screening]], [[cytohistopathology]])
[10081200] |* [[morphometrics]]
[10081210] |* clinical image analysis and visualization
[10081220] |* determining the real-time air-flow patterns in breathing lungs of living animals
[10081230] |* quantifying occlusion size in real-time imagery from the development of and recovery during arterial injury
[10081240] |* making behavioral observations from extended video recordings of laboratory animals
[10081250] |* infrared measurements for metabolic activity determination
[10081260] |===Protein-protein docking=== 
[10081270] |In the last two decades, tens of thousands of protein three-dimensional structures have been determined by [[X-ray crystallography]] and [[Protein nuclear magnetic resonance spectroscopy]] (protein NMR).
[10081280] |One central question for the biological scientist is whether it is practical to predict possible protein-protein interactions only based on these 3D shapes, without doing [[protein-protein interaction]] experiments.
[10081290] |A variety of methods have been developed to tackle the [[Protein-protein docking]] problem, though it seems that there is still much place to work on in this field.
[10081300] |===Software and Tools=== 
[10081310] |Software tools for bioinformatics range from simple command-line tools, to more complex graphical programs and standalone web-services.
[10081320] |The computational biology tool best-known among biologists is probably [[BLAST]], an algorithm for determining the similarity of arbitrary sequences against other sequences, possibly from curated databases of protein or DNA sequences.
[10081330] |The [[National Center for Biotechnology Information|NCBI]] provides a popular web-based implementation that searches their databases.
[10081340] |BLAST is one of a number of [[List of sequence alignment software|generally available programs]] for doing sequence alignment.
[10081350] |===Web Services in Bioinformatics=== 
[10081360] |[[SOAP]] and [[REST]]-based interfaces have been developed for a wide variety of bioinformatics applications allowing an application running on one computer in one part of the world to use algorithms, data and computing resources on servers in other parts of the world.
[10081370] |The main advantages lay in the end user not having to deal with software and database maintenance overheads.
[10081375] |Basic bioinformatics services are classified by the [[EBI]] into three categories: [[Sequence alignment software|SSS]] (Sequence Search Services), [[Multiple sequence alignment|MSA]] (Multiple Sequence Alignment) and [[Bioinformatics#Sequence_analysis|BSA]] (Biological Sequence Analysis).
[10081380] |The availability of these [[service-oriented]] bioinformatics resources demonstrate the applicability of web based bioinformatics solutions, and range from a collection of standalone tools with a common data format under a single, standalone or web-based interface, to integrative, distributed and extensible [[bioinformatics workflow management systems]].
[10090010] |<article>BLEU</article>
[10090020] |:''This page is about the evaluation metric for machine translation.
[10090030] |For other meanings, please see [[Bleu]].''
[10090040] |'''BLEU''' ('''Bilingual Evaluation Understudy''') is a method for evaluating the quality of text which has been translated from one [[natural language]] to another using [[machine translation]].
[10090050] |BLEU was one of the first [[software metric]]s to report high [[correlation]] with human judgements of quality.
[10090060] |The metric is currently one of the most popular in the field.
[10090070] |The central idea behind the metric is that, "the closer a machine translation is to a professional human translation, the better it is".
[10090080] |The metric calculates scores for individual segments, generally [[Sentence (linguistics)|sentence]]s, and then averages these scores over the whole [[corpus]] in order to reach a final score.
[10090090] |It has been shown to correlate highly with human judgements of quality at the corpus level.
[10090100] |The quality of translation is indicated as a number between 0 and 1 and is measured as statistical closeness to a given set of good quality human reference translations.
[10090110] |Therefore, it does not directly take into account translation intelligibility or grammatical correctness.
[10090120] |The metric works by measuring the [[n-gram]] co-occurrence between a given translation and the set of reference translations and then taking the weighted [[geometric mean]].
[10090130] |BLEU is specifically designed to approximate human judgement on a [[corpus]] level and performs badly if used to evaluate the quality of isolated sentences.
[10090140] |==Algorithm== 
[10090150] |BLEU uses a modified form of [[precision]] to compare a candidate translation against multiple reference translations.
[10090160] |The metric modifies simple precision since machine translation systems have been known to generate more words than appear in a reference text.
[10090170] |This is illustrated in the following example from Papineni et al. (2002), 
[10090180] |In this example, the candidate text is given a unigram precision of,
[10090190] |:<math>P = \frac{m}{w_{t}} = \frac{7}{7} = 1</math>
[10090200] |Of the seven words in the candidate translation, all of them appear in the reference translations.
[10090210] |This presents a problem for a metric, as the candidate translation above is complete nonsense, retaining none of the content of either of the references.
[10090220] |The modification that BLEU makes is fairly straightforward.
[10090230] |For each word in the candidate translation, the algorithm takes the maximum total count in the reference translations.
[10090240] |Taking the example above, the word 'the' appears twice in reference 1, and once in reference 2.
[10090250] |The largest value is taken, in this case '2' as the "maximum reference count".
[10090260] |For each of the words in the candidate translation, the count of the word is compared against the maximum reference count, and the lowest value is taken.
[10090270] |In this case, the count of the word 'the' in the candidate translation is '7', while the maximum reference count for the word is '2'.
[10090280] |This "modified count" is then divided by the total number of words in the candidate translation.
[10090290] |In the above example, the modified unigram precision score would be,
[10090300] |:<math>P = \frac{2}{7}</math>
[10090310] |The above method is used to calculate scores for each <math>n</math>.
[10090320] |The value of <math>n</math> which has the "highest correlation with monolingual human judgements" was found to be 4.
[10090330] |The unigram scores are found to account for the adequacy of the translation, in other words, how much information is retained in the translation.
[10090340] |The longer <math>n</math>-gram scores account for the fluency of the translation, or to what extent it reads like "good English".
[10090350] |The modification made to precision does not solve the problem of short translations.
[10090360] |Short translations can produce very high precision scores, even using modified precision.
[10090370] |An example of a candidate translation for the same references as above might be:
[10090380] |:the cat
[10090390] |In this example, the modified unigram precision would be,
[10090400] |:<math>P = \frac{1}{2} + \frac{1}{2} = \frac{2}{2}</math>
[10090410] |as the word 'the' and the word 'cat' appear once each in the candidate, and the total number of words is two.
[10090420] |The modified bigram precision would be <math>1 / 1</math> as the bigram, "the cat" appears once in the candidate.
[10090430] |It has been pointed out that precision is usually twinned with [[recall]] to overcome this problem , as the unigram recall of this example would be <math>2 / 6</math> or <math>2 / 7</math>.
[10090440] |The problem being that as there are multiple reference translations, a bad translation could easily have an inflated recall, such as a translation which consisted of all the words in each of the references.
[10090450] |In order to produce a score for the whole corpus, the modified precision scores for the segments are combined using the [[geometric mean]], multiplied by a brevity penalty, whose purpose is to prevent very short candidates from receiving too high a score.
[10090460] |Let <math>r</math> be the total length of the reference corpus, and <math>c</math> the total length of the translation corpus.
[10090470] |If <math>c \leq r</math>, the brevity penalty applies and is defined to be <math>e^{(1-r/c)}</math>.
[10090480] |(In the case of multiple reference sentences, <math>r</math> is taken to be the sum of the lengths of the sentences whose lengths are closest to the lengths of the candidate sentences.
[10090490] |However, in the version of the metric used by [[NIST]], the short reference sentence is used.)
[10090500] |==Performance== 
[10090510] |BLEU has frequently been reported as correlating well with human judgement, and certainly remains a benchmark for any new evaluation metric to beat.
[10090520] |There are however a number of criticisms that have been voiced.
[10090530] |It has been noted that while in theory capable of evaluating any language, BLEU does not in the present form work on languages without word boundaries.
[10090540] |It has been argued that although BLEU certainly has significant advantages, there is no guarantee that an increase in BLEU score is an indicator of improved translation quality.
[10090550] |As BLEU scores are taken at the corpus level, it is difficult to give a textual example.
[10090560] |Nevertheless, they highlight two instances where BLEU seriously underperformed.
[10090570] |These were the 2005 [[NIST]] evaluations where a number of different machine translation systems were tested, and their study of the [[SYSTRAN]] engine versus two engines using [[statistical machine translation]] (SMT) techniques.
[10090580] |In the 2005 NIST evaluation, they report that the scores generated by BLEU failed to correspond to the scores produced in the human evaluations.
[10090590] |The system which was ranked highest by the human judges was only ranked 6th by BLEU.
[10090600] |In their study, they compared SMT systems with SYSTRAN, a knowledge based system.
[10090610] |The scores from BLEU for SYSTRAN were substantially worse than the scores given to SYSTRAN by the human judges.
[10090620] |They note that the SMT systems were trained using BLEU minimum error rate training, and point out that this could be one of the reasons behind the difference.
[10090630] |They conclude by recommending that BLEU be used in a more restricted manner, for comparing the results from two similar systems, and for tracking "broad, incremental changes to a single system".
[10100010] |<article>Business intelligence</article>
[10100020] |'''Business intelligence''' ('''BI''') refers to technologies, applications and practices for the collection, integration, analysis, and presentation of business [[information]] and sometimes to the information itself.
[10100030] |The purpose of business intelligence--a term that dates at least to 1958--is to support better business decision making.
[10100040] |Thus, BI is also described as a [[decision support system]] (DSS):
[10100050] |<blockquote>  BI is sometimes used interchangeably with briefing books, report and query tools and executive information systems.
[10100060] |In general, business intelligence systems are data-driven DSS.</blockquote>
[10100070] |BI systems provide historical, current, and predictive views of business operations, most often using data that has been gathered into a [[data warehouse]] or a [[data mart]] and occasionally working from operational data.
[10100080] |Software elements support the use of this information by assisting in the extraction, analysis, and reporting of information.
[10100090] |Applications tackle sales, production, financial, and many other sources of business data for purposes that include, notably, [[business performance management]].
[10100100] |Information may be gathered on comparable companies to produce [[benchmarking|benchmarks]].
[10100110] |==History== 
[10100120] |Prior to the start of the [[Information Age]] in the late 20th century, businesses had to collect data from non-automated sources.
[10100130] |Businesses then lacked the computing resources necessary to properly analyze the data, and as a result, companies often made business decisions primarily on the basis of [[intuition (knowledge)|intuition]].
[10100140] |As businesses automated systems the amount of data increased but its collection remained difficult due to the inability of information to be moved between or within systems.
[10100150] |Analysis of information informed for long-term decision making, but was slow and often required the use of instinct or expertise to make short-term decisions.
[10100160] |Business intelligence was defined in 1958 by [[Hans Peter Luhn]], who wrote,
[10100170] |<blockquote>  In this paper, business is a collection of activities carried on for whatever purpose, be it science, technology, commerce, industry, law, government, defense, et cetera.
[10100180] |The communication facility serving the conduct of a business (in the broad sense) may be referred to as an intelligence system.
[10100190] |The notion of intelligence is also defined here, in a more general sense, as "the ability to apprehend the interrelationships of presented facts in such a way as to guide action towards a desired goal."</blockquote>
[10100200] |In 1989 Howard Dresner, later a [[Gartner Group]] analyst, popularized BI as an umbrella term to describe "concepts and methods to improve business decision making by using fact-based support systems."
[10100210] |In modern businesses the use of standards, automation and specialized software, including [[Online analytical processing|analytical tools]], allows large volumes of data to be [[Extract, transform, load|extracted, transformed, loaded]] and [[Data warehouse|warehoused]] to greatly increase the speed at which information becomes available for decision-making.
[10100220] |===Key intelligence topics=== 
[10100230] |Business intelligence often uses [[key performance indicators]] (KPIs) to assess the present state of business and to prescribe a course of action.
[10100240] |Examples of KPIs are things such as lead conversion rate (in sales) and inventory turnover (in inventory management).
[10100250] |Prior to the widespread adoption of computer and web applications, when information had to be manually input and calculated, performance data was often not available for weeks or months.
[10100260] |Recently, banks have tried to make data available at shorter intervals and have reduced delays.
[10100270] |The KPI methodology was further expanded with the Chief Performance Officer methodology which incorporated KPIs and root cause analysis into a single methodology.
[10100280] |Businesses that face higher operational/[[credit risk]] loading, such as [[credit card]] companies and "wealth management" services, often make KPI-related data available weekly.
[10100290] |In some cases, companies may even offer a daily analysis of data.
[10100300] |This fast pace requires analysts to use [[information technology|IT]] [[system]]s to process this large volume of data.
[10110010] |<article>Chatterbot</article>
[10110020] |A '''chatterbot''' (or chatbot) is a type of conversational agent, a [[computer program]] designed to simulate an intelligent [[conversation]] with one or more human users via auditory or textual methods.
[10110030] |In other words, a chatterbot is a computer program with artificial intelligence to talk to people through voices or typed words.
[10110040] |Though many appear to be intelligently interpreting the human input prior to providing a response, most chatterbots simply scan for keywords within the input and pull a reply with the most matching keywords or the most similar wording pattern from a local [[database]].
[10110050] |Chatterbots may also be referred to as ''talk bots'', ''chat bots'', or ''chatterboxes''.
[10110060] |== Method of operation == 
[10110070] |A good understanding of a conversation is required to carry on a meaningful dialog but most chatterbots do not attempt this.
[10110080] |Instead they "converse" by recognizing cue words or phrases from the human user, which allows them to use pre-prepared or pre-calculated responses which can move the conversation on in an apparently meaningful way without requiring them to know what they are talking about.
[10110090] |For example, if a human types, "I am feeling very worried lately," the chatterbot may be programmed to recognize the phrase "I am" and respond by replacing it with "Why are you" plus a question mark at the end, giving the answer, "Why are you feeling very worried lately?"
[10110100] |A similar approach using keywords would be for the program to answer any comment including ''(Name of celebrity)'' with "I think they're great, don't you?"
[10110110] |Humans, especially those unfamiliar with chatterbots, sometimes find the resulting conversations engaging.
[10110120] |Critics of chatterbots call this engagement the [[ELIZA effect]].
[10110130] |Some programs classified as chatterbots use other principles.
[10110140] |One example is [[Jabberwacky]], which attempts to model the way humans learn new facts and language.
[10110150] |[[Ellaz Systems|ELLA]] attempts to use [[natural language processing]] to make more useful responses from a human's input.
[10110160] |Some programs that use natural language conversation, such as [[SHRDLU]], are not generally classified as chatterbots because they link their speech ability to knowledge of a simulated world.
[10110170] |This type of link requires a more complex [[artificial intelligence]] (eg., a "vision" system) than standard chatterbots have.
[10110180] |== Early chatterbots == 
[10110190] |The classic early chatterbots are [[ELIZA]] and [[PARRY]].
[10110200] |More recent programs are [[Racter]], [[Verbot]]s, [[Artificial Linguistic Internet Computer Entity|A.L.I.C.E.]], and [[Ellaz Systems|ELLA]].
[10110210] |The growth of chatterbots as a research field has created an expansion in their purposes.
[10110220] |While ELIZA and PARRY were used exclusively to simulate typed conversation, [[Racter]] was used to "write" a story called ''The Policeman's Beard is Half Constructed''.
[10110230] |ELLA includes a collection of games and functional features to further extend the potential of chatterbots.
[10110240] |The term "ChatterBot" was coined by [[Michael Loren Mauldin|Michael Mauldin]] (Creator of the first [[Verbot]], Julia) in 1994 to describe these conversational programs.
[10110250] |== Malicious chatterbots == 
[10110260] |Malicious chatterbots are frequently used to fill chat rooms with spam and advertising, or to entice people into revealing personal information, such as bank account numbers.
[10110270] |They are commonly found on [[Yahoo! Messenger]], [[Windows Live Messenger]], [[AOL Instant Messenger]] and other [[instant messaging]] protocols.
[10110280] |There has been a published report of a chatterbot used in a fake personal ad on a dating service's website.
[10110290] |==Chatterbots in modern AI== 
[10110300] |Most modern AI research focuses on practical engineering tasks.
[10110310] |This is known as weak AI and is distinguished from [[strong AI]], which would require [[sapience]] and reasoning abilities.
[10110320] |One pertinent field of AI research is natural language.
[10110330] |Usually weak AI fields employ specialised software or programming languages created for them.
[10110340] |For example, one of the 'most-human' natural language chatterbots, [[Artificial Linguistic Internet Computer Entity|A.L.I.C.E.]], uses a programming language called AIML that is specific to its program, and its various clones, named Alicebots.
[10110350] |Nevertheless, A.L.I.C.E. is still based on pattern matching without any reasoning.
[10110360] |This is the same technique [[ELIZA]], the first chatterbot, was using back in 1966.
[10110370] |Australian company MyCyberTwin also deals in strong AI, allowing users to create and sustain their own virtual personalities online.
[10110380] |MyCyberTwin.com also works in a corporate setting, allowing companies to set up Virtual AI Assistants.
[10110390] |Another notable program, known as [[Jabberwacky]], also deals in strong AI, as it is claimed to learn new responses based on user interactions, rather than being driven from a static database like many other existing chatterbots.
[10110400] |Although such programs show initial promise, many of the existing results in trying to tackle the problem of natural language still appear fairly poor, and it seems reasonable to state that there is currently no general purpose conversational artificial intelligence.
[10110410] |This has led some software developers to focus more on the practical aspect of chatterbot technology - information retrieval.
[10110420] |A common rebuttal often used within the AI community against criticism of such approaches asks, "How do we know that humans don't also just follow some cleverly devised rules?" (in the way that Chatterbots do).
[10110430] |Two famous examples of this line of argument against the rationale for the basis of the Turing test are John Searle's [[Chinese room]] argument and Ned Block's [[Intentional stance|Blockhead argument]].
[10110440] |==Chatterbots/Virtual Assistants in Commercial Environments== 
[10110450] |Automated Conversational Systems have progressed and evolved far from the original designs of the first widely used chatbots.
[10110460] |In the UK, large commercial entities such as Lloyds TSB, Royal Bank of Scotland, Renault, Citroën and One Railway are already utilizing Virtual Assistants to reduce expenditures on Call Centres and provide a first point of contact that can inform the user exactly of points of interest, provide support, capture data from the user and promote products for sale.
[10110470] |In the UK, new projects and research are being conducted to introduce a Virtual Assistant into the classroom to assist the teacher.
[10110480] |This project is the first of its kind and the chatbot VA in question is based on the Yhaken [http://www.elzware.com] chatbot design.
[10110490] |The Yhaken template provides a further move forward in Automated Conversational Systems with features such as complex conversational routing and responses, well defined personality, a complex hierarchical construct with additional external reference points, emotional responses and in depth small talk, all to make the experience more interactive and involving for the user.
[10110500] |==Annual contests for chatterbots== 
[10110510] |Many organizations tries to encourage and support developers all over the world to develop chatterbots that able to do variety of tasks and compete with each other through [[turing test]]s and more.
[10110520] |Annual contests are organized at the following links: 
[10110530] |*[http://www.chatterboxchallenge.com The Chatterbox Challenge]
[10110540] |*[http://www.loebner.net/Prizef/loebner-prize.html The Loebner Prize]
[10120010] |<article>Computational linguistics</article>
[10120020] |'''Computational linguistics''' is an [[interdisciplinary]] field dealing with the [[Statistics|statistical]] and/or rule-based modeling of [[natural language]] from a computational perspective.
[10120030] |This modeling is not limited to any particular field of [[linguistics]].
[10120040] |Traditionally, computational linguistics was usually performed by [[computer scientist]]s who had specialized in the application of computers to the processing of a [[natural language]].
[10120050] |Recent research has shown that human language is much more complex than previously thought, so computational linguists often work as members of interdisciplinary teams, including linguists (specifically trained in linguistics), language experts (persons with some level of ability in the languages relevant to a given project), and computer scientists.
[10120060] |In general computational linguistics draws upon the involvement of linguists, [[computer science|computer scientists]], experts in [[artificial intelligence]], [[cognitive psychology|cognitive psychologists]], [[math]]ematicians, and [[logic]]ians, amongst others.
[10120070] |==Origins== 
[10120080] |Computational linguistics as a field predates [[artificial intelligence]], a field under which it is often grouped.
[10120090] |Computational linguistics originated with efforts in the [[United States]] in the 1950s to use computers to automatically translate texts from foreign languages, particularly [[Russian language|Russian]] scientific journals, into English.
[10120100] |Since computers had proven their ability to do [[arithmetic]] much faster and more accurately than humans, it was thought to be only a short matter of time before the technical details could be taken care of that would allow them the same remarkable capacity to process language.
[10120110] |When [[machine translation]] (also known as mechanical translation) failed to yield accurate translations right away, automated processing of human languages was recognized as far more complex than had originally been assumed.
[10120120] |Computational linguistics was born as the name of the new field of study devoted to developing [[algorithm]]s and [[software]] for intelligently processing language data.
[10120130] |When artificial intelligence came into existence in the 1960s, the field of computational linguistics became that sub-division of artificial intelligence dealing with human-level comprehension and production of natural languages.
[10120140] |In order to translate one language into another, it was observed that one had to understand the [[grammar]] of both languages, including both [[morphology (linguistics)|morphology]] (the grammar of word forms) and [[syntax]] (the grammar of sentence structure).
[10120150] |In order to understand syntax, one had to also understand the [[semantics]] and the [[lexicon]] (or 'vocabulary'), and even to understand something of the [[pragmatics]] of language use.
[10120160] |Thus, what started as an effort to translate between languages evolved into an entire discipline devoted to understanding how to represent and process natural languages using computers.
[10120170] |==Subfields== 
[10120180] |Computational linguistics can be divided into major areas depending upon the medium of the language being processed, whether spoken or textual; and upon the task being performed, whether analyzing language (recognition) or synthesizing language (generation).
[10120190] |[[Speech recognition]] and [[speech synthesis]] deal with how spoken language can be understood or created using computers.
[10120200] |Parsing and generation are sub-divisions of computational linguistics dealing respectively with taking language apart and putting it together.
[10120210] |Machine translation remains the sub-division of computational linguistics dealing with having computers translate between languages.
[10120220] |Some of the areas of research that are studied by computational linguistics include:
[10120230] |*Computer aided [[corpus linguistics]]
[10120240] |*Design of [[parser]]s or [[phrase chunking|chunkers]] for [[natural language]]s
[10120250] |*Design of taggers like [[Part-of-speech tagging|POS-taggers (part-of-speech taggers)]]
[10120260] |*Definition of specialized logics like resource logics for [[Natural language processing|NLP]]
[10120270] |*Research in the relation between formal and natural languages in general
[10120280] |*[[Machine translation]], e.g. by a translating computer
[10120290] |*[[Computational complexity]] of natural language, largely modeled on [[automata theory]], with the application of [[context-sensitive grammar]] and [[Linear bounded automaton|linearly-bounded]] [[Turing machine]]s.
[10120300] |The [[Association for Computational Linguistics]] defines computational linguistics as: 
[10120310] |:...the scientific study of [[language]] from a computational perspective.
[10120320] |Computational linguists are interested in providing [[computational model]]s of various kinds of linguistic phenomena.
[10130010] |<article>Computer program</article>
[10130020] |'''Computer programs''' (also '''[[Computer software|software programs]]''', or just '''programs''') are [[Instruction (computer science)|instructions]] for a [[computer]].
[10130030] |A computer requires programs to function, and a computer program does nothing unless its instructions are executed by a [[Central processing unit|central processor]].
[10130040] |Computer programs are usually [[executable]] programs or the [[source code]] from which executable programs are derived (e.g., [[compiler|compiled]]).
[10130050] |Computer source code is often written by professional [[computer programmer]]s.
[10130060] |Source code is written in a [[programming language]] that usually follows one of two main [[Programming paradigm|paradigms]]: [[imperative programming|imperative]] or [[declarative language|declarative]] programming.
[10130070] |Source code may be converted into an [[executable file]] (sometimes called an executable program) by a [[compiler]].
[10130080] |Alternatively, computer programs may be executed by a [[central processing unit]] with the aid of an [[Interpreter (computing)|interpreter]], or may be [[firmware|embedded]] directly into [[Computer hardware|hardware]].
[10130090] |Computer programs may be categorized along functional lines: [[system software]] and [[application software]].
[10130100] |And many computer programs may run simultaneously on a single computer, a process known as [[computer multitasking|multitasking]].
[10130110] |==Programming== 
[10130120] |<code> main() {output_string("Hello world!");} </code>
[10130160] |Source code of a program written in the [[C programming language]]
[10130170] |[[Computer programming]] is the iterative process of writing or editing [[source code]].
[10130180] |Editing source code involves testing, analyzing, and refining.
[10130190] |A person who practices this skill is referred to as a computer [[programmer]] or software developer.
[10130200] |The sometimes lengthy process of computer programming is usually referred to as [[software development]].
[10130210] |The term [[software engineering]] is becoming popular as the process is seen as an [[engineering]] discipline.
[10130220] |=== Paradigms === 
[10130230] |Computer programs can be categorized by the [[programming language]] [[Programming paradigm|paradigm]] used to produce them.
[10130240] |Two of the main paradigms are [[imperative programming|imperative]] and [[declarative language|declarative]].
[10130250] |Programs written using an imperative language specify an [[algorithm]] using declarations, expressions, and statements.
[10130260] |A declaration associates a [[variable]] name with a [[datatype]].
[10130270] |For example: <code> var x: integer; </code>.
[10130280] |An expression yields a value.
[10130290] |For example: <code> 2 + 2 </code> yields 4.
[10130300] |Finally, a statement might assign an expression to a variable or use the value of a variable to alter the program's control flow.
[10130310] |For example: <code>x := 2 + 2; if x = 4 then do_something();</code>
[10130315] |One criticism of imperative languages is the side-effect of an assignment statement on a class of variables called non-local variables.
[10130320] |Programs written using a declarative language specify the properties that have to be met by the output and do not specify any implementation details.
[10130330] |Two broad categories of declarative languages are [[functional language]]s and [[logical language]]s.
[10130340] |The principle behind functional languages (like [[Haskell (programming language)|Haskell]]) is to not allow side-effects, which makes it easier to reason about programs like mathematical functions.
[10130350] |The principle behind logical languages (like [[Prolog]]) is to define the problem to be solved — the goal — and leave the detailed solution to the Prolog system itself.
[10130360] |The goal is defined by providing a list of subgoals.
[10130370] |Then each subgoal is defined by further providing a list of its subgoals, etc.
[10130380] |If a path of subgoals fails to find a solution, then that subgoal is [[Backtracking|backtracked]] and another path is systematically attempted.
[10130390] |The form in which a program is created may be textual or visual.
[10130400] |In a [[visual language]] program, elements are graphically manipulated rather than textually specified.
[10130410] |===Compilation or interpretation=== 
[10130420] |A ''computer program'' in the form of a [[human-readable]], computer programming language is called [[source code]].
[10130430] |Source code may be converted into an [[executable file|executable image]] by a [[compiler]] or executed immediately with the aid of an [[Interpreter (computing)|interpreter]].
[10130440] |Compiled computer programs are commonly referred to as executables, binary images, or simply as [[binary file|binaries]] &mdash; a reference to the [[binary numeral system|binary]] [[file format]] used to store the executable code.
[10130450] |Compilers are used to translate source code from a programming language into either [[object file|object code]] or [[machine code]].
[10130460] |Object code needs further processing to become machine code, and machine code is the [[Central processing unit|Central Processing Unit]]'s native [[microcode|code]], ready for execution.
[10130470] |Interpreted computer programs are either decoded and then immediately executed or are decoded into some efficient intermediate representation for future execution.
[10130480] |[[BASIC]], [[Perl]], and [[Python (programming language)|Python]] are examples of immediately executed computer programs.
[10130490] |Alternatively, [[Java (programming language)|Java]] computer programs are compiled ahead of time and stored as a machine independent code called [[bytecode]].
[10130500] |Bytecode is then executed upon request by an interpreter called a [[virtual machine]].
[10130510] |The main disadvantage of interpreters is computer programs run slower than if compiled.
[10130520] |Interpreting code is slower than running the compiled version because the interpreter must [[decode]] each [[Statement (programming)|statement]] each time it is loaded and then perform the desired action.
[10130530] |On the other hand, software development may be quicker using an interpreter because testing is immediate when the compilation step is omitted.
[10130540] |Another disadvantage of interpreters is the interpreter must be present on the computer at the time the computer program is executed.
[10130550] |Alternatively, compiled computer programs need not have the compiler present at the time of execution.
[10130560] |No properties of a programming language require it to be exclusively compiled or exclusively interpreted.
[10130570] |The categorization usually reflects the most popular method of language execution.
[10130580] |For example, BASIC is thought of as an interpreted language and C a compiled language, despite the existence of BASIC compilers and C interpreters.
[10130590] |===Self-modifying programs=== 
[10130600] |A computer program in [[execution (computers)|execution]] is normally treated as being different from the [[data (computing)|data]] the program operates on.
[10130610] |However, in some cases this distinction is blurred when a computer program modifies itself.
[10130620] |The modified computer program is subsequently executed as part of the same program.
[10130630] |[[Self-modifying code]] is possible for programs written in [[Lisp programming language|Lisp]], [[cobol|COBOL]], and [[Prolog]].
[10130640] |==Execution and storage== 
[10130650] |Typically, computer programs are stored in [[non-volatile memory]] until requested either directly or indirectly to be [[execution (computers)|executed]] by the computer user.
[10130660] |Upon such a request, the program is loaded into [[random access memory]], by a computer program called an [[operating system]], where it can be accessed directly by the central processor.
[10130670] |The central processor then executes ("runs") the program, instruction by instruction, until termination.
[10130680] |A program in execution is called a [[Process (computing)|process]].
[10130690] |Termination is either by normal self-termination or by error — software or hardware error.
[10130700] |===Embedded programs=== 
[10130710] |Some computer programs are embedded into hardware.
[10130720] |A [[stored-program computer]] requires an initial computer program stored in its [[read-only memory]] to [[booting|boot]].
[10130730] |The boot process is to identify and initialize all aspects of the system, from [[Processor register|CPU registers]] to [[Device driver|device controllers]] to [[Volatile memory|memory]] contents.
[10130740] |Following the initialization process, this initial computer program loads the [[operating system]] and sets the [[program counter]] to begin normal operations.
[10130750] |Independent of the host computer, a [[Peripheral|hardware device]] might have embedded [[firmware]] to control its operation.
[10130760] |Firmware is used when the computer program is rarely or never expected to change, or when the program must not be lost when the power is off.
[10130770] |===Manual programming=== 
[10130780] |Computer programs historically were manually input to the central processor via switches.
[10130790] |An instruction was represented by a configuration of on/off settings.
[10130800] |After setting the configuration, an execute button was pressed.
[10130810] |This process was then repeated.
[10130820] |Computer programs also historically were manually input via [[paper tape]] or [[punched cards]].
[10130830] |After the medium was loaded, the starting address was set via switches and the execute button pressed.
[10130840] |===Automatic program generation=== 
[10130850] |[[Generative programming]] is a style of [[computer programming]] that creates [[source code]] through [[generic programming|generic]] [[class (computer science)|classes]], [[Prototype-based programming|prototypes]], [[template (programming)|template]]s, [[aspect (computer science)|aspect]]s, and [[Code generation (compiler)|code generator]]s to improve [[programmer]] productivity.
[10130860] |Source code is generated with [[programming tool]]s such as a [[template processor]] or an [[Integrated development environment|Integrated Development Environment]].
[10130870] |The simplest form of source code generator is a [[Macro (computer science)|macro]] processor, such as the [[C preprocessor]], which replaces patterns in source code according to relatively simple rules.
[10130880] |[[Software engine]]s output source code or [[Markup language|markup code]] that simultaneously become the input to another [[Process (computing)|computer process]].
[10130890] |The analogy is that of one process driving another process, with the computer code being burned as fuel.
[10130900] |[[Application server]]s are software engines that deliver applications to [[client computer]]s.
[10130910] |For example, a [[Wiki software|Wiki]] is an application server that allows users to build [[dynamic web page|dynamic content]] assembled from [[article (publishing)|articles]].
[10130920] |Wikis generate [[HTML]], [[CSS]], [[Java (programming language)|Java]], and [[Javascript]] which are then [[Interpreter (computing)|interpreted]] by a [[web browser]].
[10130930] |=== Simultaneous execution=== 
[10130940] |Many operating systems support [[computer multitasking|multitasking]] which enables many computer programs to appear to be running simultaneously on a single computer.
[10130950] |Operating systems may run multiple programs through [[process scheduling]] — a software mechanism to [[Context switch|switch]] the CPU among processes frequently so that users can [[Time-sharing|interact]] with each program while it is running.
[10130960] |Within hardware, modern day multiprocessor computers or computers with multicore processors may run multiple programs.
[10130970] |== Functional categories == 
[10130980] |Computer programs may be categorized along functional lines.
[10130990] |These functional categories are [[system software]] and [[application software]].
[10131000] |System software includes the [[operating system]] which couples the [[computer hardware|computer's hardware]] with the application software.
[10131010] |The purpose of the operating system is to provide an environment in which application software executes in a convenient and efficient manner.
[10131020] |In addition to the operating system, system software includes [[Utility software|utility programs]] that help manage and tune the computer.
[10131030] |If a computer program is not system software then it is application software.
[10131040] |Application software includes [[middleware]], which couples the system software with the [[user interface]].
[10131050] |Application software also includes utility programs that help users solve application problems, like the need for sorting.
[10140010] |<article>Computer science</article>
[10140020] |'''Computer science''' (or '''computing science''') is the study and the [[science]] of the theoretical foundations of [[information]] and [[computation]] and their implementation and application in [[computer|computer system]]s.
[10140030] |Computer science has many sub-fields; some emphasize the computation of specific results (such as [[computer graphics]]), while others relate to properties of [[computational problem]]s (such as [[computational complexity theory]]).
[10140040] |Still others focus on the challenges in implementing computations.
[10140050] |For example, [[programming language theory]] studies approaches to describing computations, while [[computer programming]] applies specific [[programming language]]s to solve specific computational problems.
[10140060] |A further subfield, [[human-computer interaction]], focuses on the challenges in making computers and computations useful, usable and universally accessible to [[humans|people]].
[10140070] |== History == 
[10140080] |The early foundations of what would become computer science predate the invention of the modern [[digital computer]].
[10140090] |Machines for calculating fixed numerical tasks, such as the [[abacus]], have existed since antiquity.
[10140100] |[[Wilhelm Schickard]] built the first mechanical calculator in 1623.
[10140110] |[[Charles Babbage]] designed a [[difference engine]] in [[Victorian era|Victorian]] times (between 1837 and 1901) helped by [[Ada Lovelace]].
[10140120] |Around 1900, the [[IBM]] corporation sold [[Key_punch|punch-card machines]].
[10140130] |However, all of these machines were constrained to perform a single task, or at best some subset of all possible tasks.
[10140140] |During the 1940s, as newer and more powerful computing machines were developed, the term ''computer'' came to refer to the machines rather than their human predecessors.
[10140150] |As it became clear that computers could be used for more than just mathematical calculations, the field of computer science broadened to study [[computation]] in general.
[10140160] |Computer science began to be established as a distinct academic discipline in the 1960s, with the creation of the first computer science departments and degree programs.
[10140170] |Since practical computers became available, many applications of computing have become distinct areas of study in their own right.
[10140180] |Many initially believed it impossible that "computers themselves could actually be a scientific field of study" (Levy 1984, p. 11), though it was in the "late fifties" (Levy 1984, p.11) that it gradually became accepted among the greater academic population.
[10140190] |It is the now well-known IBM brand that formed part of the computer science revolution during this time.
[10140200] |'IBM' (short for International Business Machines) released the IBM 704 and later the IBM 709 computers, which were widely used during the exploration period of such devices.
[10140210] |"Still, working with the IBM [computer] was frustrating...if you had misplaced as much as one letter in one instruction, the program would crash, and you would have to start the whole process over again" (Levy 1984, p.13).
[10140220] |During the late 1950s, the computer science discipline was very much in its developmental stages, and such issues were commonplace.
[10140230] |Time has seen significant improvements in the useability and effectiveness of computer science technology.
[10140240] |Modern society has seen a significant shift from computers being used solely by experts or professionals to a more widespread user base.
[10140250] |By the 1990s, computers became accepted as being the norm within everyday life.
[10140260] |During this time data entry was a primary component of the use of computers, many preferring to streamline their business practices through the use of a computer.
[10140270] |This also gave the additional benefit of removing the need of large amounts of documentation and file records which consumed much-needed physical space within offices.
[10140280] |== Major achievements == 
[10140290] |Despite its relatively short history as a formal academic discipline, computer science has made a number of fundamental contributions to [[science]] and [[society]].
[10140300] |These include:
[10140310] |;Applications within computer science
[10140320] |* A formal definition of [[computation]] and [[computability]], and proof that there are computationally [[Undecidable problem|unsolvable]] and [[Intractable#Intractability|intractable]] problems.
[10140330] |* The concept of a [[programming language]], a tool for the precise expression of methodological information at various levels of abstraction.
[10140340] |;Applications outside of computing
[10140350] |* Sparked the [[Digital Revolution]] which led to the current [[Information Age]] and the [[Internet]].
[10140360] |* In [[cryptography]], [[Cryptanalysis of the Enigma|breaking the Enigma machine]] was an important factor contributing to the Allied victory in World War II.
[10140370] |* [[Scientific computing]] enabled advanced study of the mind and mapping the human genome was possible with [[Human Genome Project]].
[10140380] |[[Distributed computing]] projects like [[Folding@home]] explore [[protein folding]].
[10140390] |* [[Algorithmic trading]] has increased the [[Economic efficiency|efficiency]] and [[Market liquidity|liquidity]] of financial markets by using [[artificial intelligence]], [[machine learning]] and other [[statistics|statistical]] and [[Numerical analysis|numerical]] techniques on a large scale.
[10140400] |== Relationship with other fields == 
[10140410] |Despite its name, a significant amount of computer science does not involve the study of computers themselves.
[10140420] |Because of this, several alternative names have been proposed.
[10140430] |Danish scientist [[Peter Naur]] suggested the term ''datalogy'', to reflect the fact that the scientific discipline revolves around data and data treatment, while not necessarily involving computers.
[10140440] |The first scientific institution to use the term was the Department of Datalogy at the University of Copenhagen, founded in 1969, with Peter Naur being the first professor in datalogy.
[10140450] |The term is used mainly in the Scandinavian countries.
[10140460] |Also, in the early days of computing, a number of terms for the and practitioners of the field of computing were suggested in the ''Communications are of the ACM''—''turingineer'', ''turologist'', ''flow-charts-man'', ''applied meta-mathematician'', and ''applied epistemologist''.
[10140470] |Three months later in the same journal, ''comptologist'' was suggested, followed next year by ''hypologist''.
[10140480] |Recently the term ''computics'' has been suggested.
[10140490] |''Informatik'' was a term used in Europe with more frequency.
[10140500] |The renowned computer scientist [[Edsger W. Dijkstra|Edsger Dijkstra]] stated, "Computer science is no more about computers than astronomy is about telescopes."
[10140510] |The design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science.
[10140520] |For example, the study of [[computer hardware]] is usually considered part of [[computer engineering]], while the study of commercial [[computer system]]s and their deployment is often called [[information technology]] or [[information systems]].
[10140530] |Computer science is sometimes criticized as being insufficiently scientific, a view espoused in the statement "Science is to computer science as hydrodynamics is to plumbing", credited to [[Stan Kelly-Bootle]] and others.
[10140540] |However, there has been much cross-fertilization of ideas between the various computer-related disciplines.
[10140550] |Computer science research has also often crossed into other disciplines, such as [[cognitive science]], [[economics]], [[mathematics]], [[physics]] (see [[quantum computing]]), and [[linguistics]].
[10140560] |Computer science is considered by some to have a much closer relationship with [[mathematics]] than many scientific disciplines.
[10140570] |Early computer science was strongly influenced by the work of mathematicians such as [[Kurt Gödel]] and [[Alan Turing]], and there continues to be a useful interchange of ideas between the two fields in areas such as [[mathematical logic]], [[category theory]], [[domain theory]], and [[algebra]].
[10140580] |The relationship between computer science and [[software engineering]] is a contentious issue, which is further muddied by [[Debates within software engineering|disputes]] over what the term "software engineering" means, and how computer science is defined.
[10140590] |[[David Parnas]], taking a cue from the relationship between other engineering and science disciplines, has claimed that the principal focus of computer science is studying the properties of computation in general, while the principal focus of software engineering is the design of specific computations to achieve practical goals, making the two separate but complementary disciplines.
[10140600] |The academic, political, and funding aspects of computer science tend to have roots as to whether a department in the U.S. formed with either a mathematical emphasis or an engineering emphasis.
[10140610] |In general, electrical engineering-based computer science departments have tended to succeed as computer science and/or engineering departments.
[10140620] |Computer science departments with a mathematics emphasis and with a numerical orientation consider alignment [[computational science]].
[10140630] |Both types of departments tend to make efforts to bridge the field educationally if not across all research.
[10140640] |== Fields of computer science == 
[10140650] |Computer science searches for concepts and [[formal proof]]s to explain and describe computational systems of interest.
[10140660] |As with all sciences, these theories can then be utilised to synthesize practical engineering applications, which in turn may suggest new systems to be studied and analysed.
[10140670] |While the [[ACM Computing Classification System]] can be used to split computer science up into different topics of fields, a more descriptive breakdown follows:
[10140680] |=== Mathematical foundations === 
[10140690] |; [[Mathematical logic]]
[10140700] |: Boolean logic and other ways of modeling logical queries; the uses and limitations of formal proof methods.
[10140710] |; [[Number theory]]
[10140720] |: Theory of proofs and heuristics for finding proofs in the simple domain of integers.
[10140730] |Used in [[cryptography]] as well as a test domain in [[artificial intelligence]].
[10140740] |; [[Graph theory]]
[10140750] |: Foundations for data structures and searching algorithms.
[10140760] |; [[Type theory]]
[10140770] |: Formal analysis of the types of data, and the use of these types to understand properties of programs, especially program safety.
[10140780] |; [[Category theory]]
[10140790] |: Category theory provides a means of capturing all of math and computation in a single synthesis.
[10140800] |; [[Computational geometry]]
[10140810] |: The study of [[algorithm]]s to solve problems stated in terms of [[geometry]].
[10140820] |; [[Numerical analysis]]
[10140830] |: Foundations for algorithms in discrete mathematics, as well as the study of the limitations of floating point computation, including [[round-off]] errors.
[10140840] |=== Theory of computation === 
[10140850] |; [[Automata theory]]
[10140860] |: Different logical structures for solving problems.
[10140870] |; [[Computability theory (computer science)|Computability theory]]
[10140880] |: What is calculable with the current models of computers.
[10140890] |Proofs developed by [[Alan Turing]] and others provide insight into the possibilities of what can be computed and what cannot.
[10140900] |; [[Computational complexity theory]]
[10140910] |: Fundamental bounds (especially time and storage space) on classes of computations; in practice, study of which problems a computer can solve with reasonable resources (while computability theory studies which problems can be solved at all).
[10140920] |; [[Quantum computing|Quantum computing theory]]
[10140930] |: Representation and manipulation of data using the quantum properties of particles and quantum mechanism.
[10140940] |=== Algorithms and data structures === 
[10140950] |; [[Analysis of algorithms]]
[10140960] |: Time and space complexity of algorithms.
[10140970] |; [[Algorithms]]
[10140980] |: Formal logical processes used for computation, and the efficiency of these processes.
[10140990] |=== Programming languages and compilers === 
[10141000] |; [[Compiler]]s
[10141010] |: Ways of translating computer programs, usually from [[high-level programming language|higher level]] languages to [[low-level programming language|lower level]] ones.
[10141020] |; [[Interpreter (computing)|Interpreter]]s
[10141030] |: A program that takes in as input a computer program and executes it.
[10141040] |; [[Programming language]]s
[10141050] |: Formal language paradigms for expressing algorithms, and the properties of these languages (e.g., what problems they are suited to solve).
[10141060] |=== Concurrent, parallel, and distributed systems === 
[10141070] |; [[Concurrency (computer science)|Concurrency]]
[10141080] |: The theory and practice of simultaneous computation; data safety in any multitasking or multithreaded environment.
[10141090] |; [[Distributed computing]]
[10141100] |: Computing using multiple computing devices over a network to accomplish a common objective or task and thereby reducing the latency involved in single processor contributions for any task.
[10141110] |; [[Parallel computing]]
[10141120] |: Computing using multiple concurrent threads of execution.
[10141130] |=== Software engineering === 
[10141140] |; [[Algorithm design]]
[10141150] |: Using ideas from algorithm theory to creatively design solutions to real tasks
[10141160] |; [[Computer programming]]
[10141170] |: The practice of using a programming language to implement algorithms
[10141180] |; [[Formal methods]]
[10141190] |: Mathematical approaches for describing and reasoning about software designs.
[10141200] |; [[Reverse engineering]]
[10141210] |: The application of the scientific method to the understanding of arbitrary existing software
[10141220] |; [[Software development]]
[10141230] |: The principles and practice of designing, developing, and testing programs, as well as proper engineering practices.
[10141240] |=== System architecture === 
[10141250] |; [[Computer architecture]]
[10141260] |: The design, organization, optimization and verification of a computer system, mostly about [[CPU]]s and [[memory (computers)|memory]] subsystems (and the bus connecting them).
[10141270] |; [[Computer organization]]
[10141280] |: The implementation of computer architectures, in terms of descriptions of their specific [[electrical circuit]]ry
[10141290] |; [[Operating system]]s
[10141300] |: Systems for managing computer programs and providing the basis of a useable system.
[10141310] |=== Communications === 
[10141320] |; [[Computer audio]]
[10141330] |: Algorithms and data structures for the creation, manipulation, storage, and transmission of [[digital audio]] recordings.
[10141340] |Also important in [[voice recognition]] applications.
[10141350] |; [[Computer networking|Networking]]
[10141360] |: Algorithms and protocols for communicating data across different shared or dedicated media, often including [[error correction]].
[10141370] |; [[Cryptography]]
[10141380] |: Applies results from complexity, probability and number theory to invent and break codes.
[10141390] |=== Databases === 
[10141400] |; [[Data mining]]
[10141410] |: Data mining is the extraction of relevant data from all sources of data.
[10141420] |; [[Relational databases]]
[10141430] |: Study of algorithms for searching and processing information in documents and databases; closely related to [[information retrieval]].
[10141440] |; [[OLAP]]
[10141450] |: Online Analytical Processing, or OLAP, is an approach to quickly provide answers to analytical queries that are multi-dimensional in nature.
[10141460] |OLAP is part of the broader category [[business intelligence]], which also encompasses relational reporting and data mining.
[10141470] |=== Artificial intelligence === 
[10141480] |; [[Artificial intelligence]]
[10141490] |: The implementation and study of systems that exhibit an autonomous intelligence or behaviour of their own.
[10141500] |; [[Artificial life]]
[10141510] |: The study of digital organisms to learn about biological systems and evolution.
[10141520] |; [[Automated reasoning]]
[10141530] |: Solving engines, such as used in [[Prolog]], which produce steps to a result given a query on a fact and rule database.
[10141540] |; [[Computer vision]]
[10141550] |: Algorithms for identifying three dimensional objects from one or more two dimensional pictures.
[10141560] |; [[Machine learning]]
[10141570] |: Automated creation of a set of rules and axioms based on input.
[10141580] |; [[Natural language processing]]/[[Computational linguistics]]
[10141590] |: Automated understanding and generation of human language
[10141600] |; [[Robotics]]
[10141610] |: Algorithms for controlling the behavior of robots.
[10141620] |=== Visual rendering (or Computer graphics) === 
[10141630] |; [[Computer graphics]]
[10141640] |: Algorithms both for generating visual images synthetically, and for integrating or altering visual and spatial information sampled from the real world.
[10141650] |; [[Image processing]]
[10141660] |: Determining information from an image through computation.
[10141670] |=== Human-Computer Interaction === 
[10141680] |; [[Human computer interaction]]
[10141690] |: The study of making computers and computations useful, usable and universally accessible to [[user (computing)|people]], including the study and design of computer interfaces through which people use computers.
[10141700] |=== Scientific computing === 
[10141710] |; [[Bioinformatics]]
[10141720] |: The use of computer science to maintain, analyse, and store [[biological data]], and to assist in solving biological problems such as [[protein folding]], function prediction and [[phylogeny]].
[10141730] |; [[Cognitive Science]]
[10141740] |: Computational modelling of real minds
[10141750] |; [[Computational chemistry]]
[10141760] |: Computational modelling of theoretical chemistry in order to determine chemical structures and properties
[10141770] |; [[Computational neuroscience]]
[10141780] |: Computational modelling of real brains
[10141790] |; [[Computational physics]]
[10141800] |: Numerical simulations of large non-analytic systems
[10141810] |; [[Numerical analysis|Numerical algorithms]]
[10141820] |: Algorithms for the numerical solution of mathematical problems such as [[Root-finding algorithm|root-finding]], [[Numerical integration|integration]], the [[Numerical ordinary differential equations|solution of ordinary differential equations]] and the approximation/evaluation of [[special functions]].
[10141830] |; [[Symbolic mathematics]]
[10141840] |: Manipulation and solution of expressions in symbolic form, also known as [[Computer algebra]].
[10141850] |=== Didactics of computer science/informatics === 
[10141860] |The subfield didactics of computer science focuses on cognitive approaches of developing competencies of computer science and specific strategies for analysis, design, implementation and evaluation of excellent lessons in computer science.
[10141870] |== Computer science education == 
[10141880] |Some universities teach computer science as a theoretical study of computation and algorithmic reasoning.
[10141890] |These programs often feature the [[theory of computation]], [[analysis of algorithms]], [[formal methods]], [[Concurrency (computer science)|concurrency theory]], [[databases]], [[computer graphics]] and [[systems analysis]], among others.
[10141900] |They typically also teach [[computer programming]], but treat it as a vessel for the support of other fields of computer science rather than a central focus of high-level study.
[10141910] |Other colleges and universities, as well as [[secondary school]]s and vocational programs that teach computer science, emphasize the practice of advanced [[computer programming]] rather than the theory of algorithms and computation in their computer science curricula.
[10141920] |Such curricula tend to focus on those skills that are important to workers entering the software industry.
[10141930] |The practical aspects of computer programming are often referred to as [[software engineering]].
[10141940] |However, there is a lot of [[Debates within software engineering|disagreement]] over what the term "software engineering" actually means, and whether it is the same thing as programming.
[10150010] |<article>Corpus linguistics</article>
[10150020] |'''Corpus linguistics''' is the [[study of language]] as expressed in [[sample]]s ''([[Text corpus|corpora]])'' or "real world" text.
[10150030] |This method represents a [[digest]]ive approach to deriving a set of abstract rules by which a [[natural language]] is governed or else relates to another language.
[10150040] |Originally done by hand, corpora are largely derived by an automated process, which is corrected.
[10150050] |Computational methods had once been viewed as a [[holy grail]] of [[linguistics|linguistic]] research, which would ultimately manifest a [[ruleset]] for [[natural language processing]] and [[machine translation]] at a high level.
[10150060] |Such has not been the case, and since the [[cognitive revolution]], cognitive linguistics has been largely critical of many claimed practical uses for corpora.
[10150070] |However, as [[computation]] capacity and speed have increased, the use of corpora to study language and term relationships en masse has gained some respectability.
[10150080] |The corpus approach runs counter to [[Noam Chomsky]]'s view that real language is riddled with performance-related errors, thus requiring careful analysis of small speech samples obtained in a highly controlled laboratory setting.
[10150090] |Corpus linguistics does away with Chomsky's ''competence/performance'' split; adherents believe that reliable language analysis best occurs on field-collected samples, in natural contexts and with minimal experimental interference.
[10150100] |== History == 
[10150110] |A landmark in modern corpus linguistics was the publication by [[Henry Kucera]] and [[Nelson Francis]] of ''Computational Analysis of Present-Day American English'' in 1967, a work based on the analysis of the [[Brown Corpus]], a carefully compiled selection of current American English, totalling about a million words drawn from a wide variety of sources.
[10150120] |Kucera and Francis subjected it to a variety of computational analyses, from which they compiled a rich and variegated opus, combining elements of linguistics, language teaching, [[psychology]], [[statistics]], and [[sociology]].
[10150130] |A further key publication was [[Randolph Quirk]]'s 'Towards a description of English Usage' (1960, Transactions of the Philological Society, 40-61) in which he introduced ''The Survey of English Usage''.
[10150140] |Shortly thereafter, Boston publisher [[Houghton-Mifflin]] approached Kucera to supply a million word, three-line citation base for its new ''[[The American Heritage Dictionary of the English Language|American Heritage Dictionary]]'', the first [[dictionary]] to be compiled using corpus linguistics.
[10150150] |The AHD made the innovative step of combining prescriptive elements (how language ''should'' be used) with descriptive information (how it actually ''is'' used).
[10150160] |Other publishers followed suit.
[10150170] |The British publisher Collins' [[COBUILD]] [[monolingual learner's dictionary]], designed for users learning [[English language learning and teaching|English as a foreign language]], was compiled using the [[Bank of English]].
[10150180] |The [[Brown Corpus]] has also spawned a number of similarly structured corpora: the [[LOB Corpus]] (1960s [[British English]]), Kolhapur ([[Indian English]]), Wellington ([[New Zealand English]]), Australian Corpus of English ([[Australian English]]), the Frown Corpus ([[early 1990s]] [[American English]]), and the FLOB Corpus (1990s British English).
[10150190] |Other corpora represent many languages, varieties and modes, and include the [[International Corpus of English]], and the [[British National Corpus]], a 100 million word collection of a range of spoken and written texts, created in the 1990s by a consortium of publishers, universities ([[Oxford University|Oxford]] and [[Lancaster University|Lancaster]]) and the [[British Library]].
[10150200] |For contemporary American English, work has stalled on the [[American National Corpus]], but the 360 million word [[Corpus of Contemporary American English (COCA)]] (1990-present) is now available.
[10150210] |== Methods == 
[10150220] |This means dealing with real input data, where descriptions based on a linguist's intuition are not usually helpful.
[10160010] |<article>Cross-platform</article>
[10160020] |'''Cross-platform''' (also known as '''multi-platform''') is a term used in computing to refer to [[computer program]]s, [[operating system]]s, [[computer language]]s, [[programming language]]s, or other [[computer software]] and their implementations which can be made to work on multiple [[computer platform]]s.
[10160030] |“Cross-platform” and “multi-platform” both refer to the idea that a given piece of computer software is able to be run on more than one computer platform.
[10160040] |There are two major types of cross-platform software; one requires building for each platform that it supports (e.g., is written in a compiled language, such as [[Pascal (programming language)|Pascal]]), and the other one can be directly run on any platform which supports it (e.g., software written in an [[interpreted language]] such as [[Perl]], [[Python (programming language)|Python]], or [[shell script]]) or software written in a language which compiles to [[bytecode]] and the bytecode is redistributed (such as is the case with [[Java (programming language)|Java]] and languages used in the [[.NET Framework]]) such as [[Chrome (programming language)|Chrome]].
[10160050] |For example, a cross-platform [[application software|application]] may run on [[Microsoft Windows]] on the [[x86 architecture]], [[Linux]] on the [[x86 architecture]] and [[Mac OS X]] on either the [[PowerPC]] or [[x86]] based [[Apple Macintosh]] systems.
[10160060] |A cross-platform [[application software|application]] may run on as many as all existing platforms, or on as few as two platforms.
[10160070] |== Platforms == 
[10160080] |A platform is a combination of hardware and software used to run software applications.
[10160090] |A platform can be described simply as an operating system or computer architecture, or it could be the combination of both.
[10160100] |Probably the most familiar platform is [[Microsoft Windows]] running on the [[x86 architecture]].
[10160110] |Other well-known desktop computer platforms include [[Linux]] and [[Mac OS X]] (both of which are themselves cross-platform).
[10160120] |There are, however, many devices such as [[cellular telephones]] that are also effectively computer platforms but less commonly thought about in that way.
[10160130] |[[Application software]] can be written to depend on the features of a particular platform—either the hardware, operating system, or virtual machine it runs on.
[10160140] |The [[Java Platform|Java platform]] is a [[virtual machine]] platform which runs on many operating systems and hardware types, and is a common platform for software to be written for.
[10160150] |=== Hardware platforms === 
[10160160] |A '''hardware platform''' can refer to a computer’s [[computer architecture|architecture]] or [[processor architecture]].
[10160170] |For example, the [[x86]] and [[x86-64]] [[CPU]]s make up one of the most common [[computer architecture]]s in use in home machines today.
[10160180] |These machines commonly run [[Microsoft Windows]], though they can run other [[operating system]]s as well, including [[Linux]], [[OpenBSD]], [[NetBSD]], [[Mac OS X]] and [[FreeBSD]].
[10160190] |=== Software platforms === 
[10160200] |Software platforms can either be an [[operating system]] or programming environment, though more commonly it is a combination of both.
[10160210] |A notable exception to this is [[Java (programming language)|Java]], which uses an [[operating system]] independent [[virtual machine]] for its [[compiled]] code, known in the world of Java as [[bytecode]].
[10160220] |Examples of software platforms include:
[10160230] |* [[MS-DOS]] ([[x86]]), [[DR-DOS]] ([[x86]]), [[FreeDOS]] ([[x86]]) etc.
[10160240] |* [[Microsoft Windows]] ([[x86]], [[x64]])
[10160250] |* [[Linux]] (x86, x64, [[PowerPC]], various other architectures)
[10160260] |* [[Mac OS X]] (PowerPC, x86)
[10160270] |* [[OS/2]], [[eComStation]]
[10160280] |* [[AmigaOS]] ([[m68k]]), [[AROS]] (x86, PowerPC, m68k), [[MorphOS]] (PowerPC)
[10160290] |* [[Java (programming language)|Java]]
[10160300] |==== Java platform ==== 
[10160310] |As previously noted, the [[Java platform]] is an exception to the general rule that an [[operating system]] is a software platform.
[10160320] |The Java language provides a [[virtual machine]], or a “virtual CPU” which runs all of the code that is written for the language.
[10160330] |This enables the same [[executable]] [[binary file|binary]] to run on all systems which support the Java software, through the [[Java Virtual Machine]].
[10160340] |Java [[executable]]s do not run directly on the [[operating system]]; that is, neither [[Microsoft Windows|Windows]] nor [[Linux]] execute Java programs directly.
[10160350] |Because of this, however, Java is limited in that it does not directly support system-specific functionality.
[10160360] |[[Java Native Interface|JNI]] can be used to access system specific functions, but then the code is likely no longer portable.
[10160370] |Java programs can run on at least the [[Microsoft Windows]], [[Mac OS X]], [[Linux]], and [[Solaris Operating System|Solaris]] operating systems, and so the language is limited to functionality that exists on all these systems.
[10160380] |This includes things such as [[computer networking]], [[Internet socket]]s, but not necessarily raw hardware [[input/output]].
[10160390] |== Cross-platform software == 
[10160400] |In order for software to be considered '''cross-platform''', it must be able to function on more than one [[computer architecture]] or [[operating system]].
[10160410] |This can be a time-consuming task given that different [[operating system]]s have different [[application programming interface]]s or [[application programming interface|API]]s (for example, [[Linux]] uses a different [[application programming interface|API]] for [[application software]] than [[Microsoft Windows|Windows]] does).
[10160420] |Just because a particular [[operating system]] may run on different [[computer architecture]]s, that does not mean that the software written for that operating system will automatically work on all [[computer architecture|architecture]]s that the operating system supports.
[10160430] |One example as of August, 2006 was [[OpenOffice.org]], which did not natively run on the [[AMD64]] or [[EM64T]] lines of processors implementing the [[x86-64]] [[64-bit]] standards for computers; this has since been changed, and the OpenOffice.org suite of software is “mostly” ported to these 64-bit systems[http://wiki.services.openoffice.org/wiki/Porting_to_x86-64_(AMD64,_EM64T)].
[10160440] |This also means that just because a program is written in a popular programming language such as [[C (programming language)|C]] or [[C++]], it does not mean it will run on all [[operating systems]] that support that [[programming language]].
[10160450] |=== Web applications === 
[10160460] |[[Web application]]s are typically described as cross-platform because, ideally, they are accessible from any of various [[web browser]]s within different operating systems.
[10160470] |Such applications generally employ a [[client-server]] system architecture, and vary widely in complexity and functionality.
[10160480] |This wide variability significantly complicates the goal of cross-platform capability, which is routinely at odds with the goal of advanced functionality.
[10160490] |==== Basic applications ==== 
[10160500] |Basic web applications perform all or most processing from a [[Stateless server|stateless]] [[web server]], and pass the result to the client web browser.
[10160510] |All user interaction with the application consists of simple exchanges of data requests and server responses.
[10160520] |These types of applications were the norm in the early phases of [[World Wide Web]] application development.
[10160530] |Such applications follow a simple [[Transaction processing|transaction]] model, identical to that of serving [[static web page]]s.
[10160540] |Today, they are still relatively common, especially where cross-platform compatibility and simplicity are deemed more critical than advanced functionality.
[10160550] |==== Advanced applications ==== 
[10160560] |Prominent examples of advanced web applications include the Web interface to [[Gmail]], [[A9.com]], and the maps.live.com section of [[Live Search]].
[10160570] |Such advanced applications routinely depend on additional features found only in the more recent versions of popular web browsers.
[10160580] |These dependencies include [[Ajax (programming)|Ajax]], [[JavaScript]], [[Dynamic HTML|“Dynamic” HTML]], [[SVG]], and other components of [[rich internet application]]s.
[10160590] |Older versions of popular browsers tend to lack support for certain features.
[10160600] |==== Design strategies ==== 
[10160610] |Because of the competing interests of cross-platform compatibility and advanced functionality, numerous alternative web application design strategies have emerged.
[10160620] |Such strategies include:
[10160630] |=====Graceful degradation===== 
[10160640] |Graceful degradation attempts to provide the same or similar functionality to all users and platforms, while diminishing that functionality to a ‘least common denominator’ for more limited client browsers.
[10160650] |For example, a user attempting to use a limited-feature browser to access Gmail may notice that Gmail switches to “Basic Mode,” with reduced functionality.
[10160660] |Some view this strategy as a lesser form of cross-platform capability.
[10160670] |=====Separation of functionality===== 
[10160680] |Separation of functionality attempts to simply omit those subsets of functionality that are not capable from within certain client browsers or operating systems, while still delivering a ‘complete’ application to the user. (see also [[Separation of concerns]]).
[10160690] |=====Multiple codebase===== 
[10160700] |Multiple codebase applications present different versions of an application depending on the specific client in use.
[10160710] |This strategy is arguably the most complicated and expensive way to fulfill cross-platform capability, since even different versions of the same client browser (within the same operating system) can differ dramatically between each other.
[10160720] |This is further complicated by the support for “plugins” which may or may not be present for any given installation of a particular browser version.
[10160730] |=====Third party libraries===== 
[10160740] |Third party libraries attempt to simplify cross-platform capability by ‘hiding’ the complexities of client differentiation behind a single, unified API.
[10160750] |==== Testing strategies ==== 
[10160760] |One complicated aspect of cross-platform web application design is the need for [[software testing]].
[10160770] |In addition to the complications mentioned previously, there is the additional restriction that some browsers prohibit installation of different versions of the same browser on the same operating system.
[10160780] |Techniques such as [[full virtualization]] are sometimes used as a workaround for this problem.
[10160790] |=== Traditional applications === 
[10160800] |Although web applications are becoming increasingly popular, many computer users still use traditional [[application software]] which does not rely on a client/web-server architecture.
[10160810] |The distinction between “traditional” and “web” applications is not always unambiguous, however, because applications have many different features, installation methods and architectures; and some of these can overlap and occur in ways that blur the distinction.
[10160820] |Nevertheless, this simplifying distinction is a common and useful generalization.
[10160830] |==== Binary software ==== 
[10160840] |Traditionally in modern computing, application software has been distributed to end-users as '''binary images''', which are stored in [[executable]]s, a specific type of [[binary file]].
[10160850] |Such [[executable]]s only support the [[operating system]] and [[computer architecture]] that they were built for—which means that making a “cross-platform executable” would be something of a massive task, and is generally not done.
[10160860] |For software that is distributed as a [[binary file|binary]] [[executable]], such as software written in [[C (programming language)|C]] or [[C++]], the programmer must [[software build|build the software]] for each different [[operating system]] and [[computer architecture]].
[10160870] |For example, [[Mozilla]] [[Mozilla Firefox|Firefox]], an open-source web browser, is available on [[Microsoft Windows]], [[Mac OS X]] (both [[PowerPC]] and [[x86]] through something Apple calls a '''[[Universal binary]]'''), and [[Linux]] on multiple computer architectures.
[10160880] |The three platforms (in this case, [[Microsoft Windows|Windows]], [[Mac OS X]], and [[Linux]]) are separate [[executable]] distributions, although they come from the same [[source code]].
[10160890] |In the context of binary software, cross-platform programs are written in the source code and then “translated” to each system that it runs on through compiling it on different platforms.
[10160900] |Also, software can be [[porting|ported]] to a new [[computer architecture]] or [[operating system]] so that the program becomes more cross-platform than it already is.
[10160910] |For example, a program such as Firefox, which already runs on Windows on the x86 family, can be modified and re-built to run on Linux on the x86 (and potentially other architectures) as well.
[10160920] |As an alternative to porting, cross-platform virtualization allows applications compiled for one CPU and operating system to run on a system with a different CPU and/or operating system, without modification to the source code or binaries.
[10160930] |As an example, [[Apple Computer|Apple's]] [[Rosetta (software)|Rosetta]] software, which is built into [[Intel]]-based Apple Macintosh computers, runs applications compiled for the previous generation of Macs that used [[PowerPC]] CPUs.
[10160940] |Another example is IBM PowerVM Lx86, which allows Linux/x86 applications to run unmodified on the Linux/Power operating system.
[10160950] |==== Scripts and [[interpreted language]]s ==== 
[10160960] |A script can be considered to be cross-platform if the [[scripting language]] is available on multiple platforms and the script only uses the facilities provided by the language.
[10160970] |That is, a script written in [[Python (programming language)|Python]] for a [[Unix-like]] system will likely run with little or no modification on [[Microsoft Windows|Windows]], because Python also runs on [[Microsoft Windows|Windows]]; there is also more than one implementation of Python that will run the same scripts (e.g., [[IronPython]] for [[.NET Framework|.NET]]).
[10160980] |The same goes for many of the [[open source]] [[programming language]]s that are available and are [[scripting language]]s.
[10160990] |Unlike [[binary file|binary]] [[executable]]s, the same script can be used on all computers that have software to interpret the script.
[10161000] |This is because the script is generally stored in [[plain text]] in a [[text file]].
[10161010] |There may be some issues, however, such as the type of [[newline|new line character]] that sits between the lines.
[10161020] |Generally, however, little or no work has to be done to make a script written for one system, run on another.
[10161030] |Some quite popular cross-platform scripting or [[interpreted language]]s are: 
[10161040] |* [[bash]]—A [[Unix shell]] commonly run on [[Linux]] and other modern [[Unix-like]] systems, as well as on [[Microsoft Windows|Windows]] via the [[Cygwin]] [[POSIX]] compatibility layer.
[10161050] |* [[Python (programming language)|Python]]—A modern [[scripting language]] where the focus is on [[rapid application development]] and ease-of-writing, instead of program run-time efficiency.
[10161060] |* [[Perl]]—A scripting language first released in 1987.
[10161070] |Used for [[Common Gateway Interface|CGI]] [[WWW]] programming, small [[system administration]] tasks, and more.
[10161080] |* [[PHP]]—A [[scripting language]] most popular in use on the [[WWW]] for [[web application]]s.
[10161090] |* [[Ruby (programming language)|Ruby]]—A scripting language who's purpose is to be object-oriented and easy to read.
[10161100] |Can also be used on the web through [[Ruby on Rails]].
[10161110] |* [[Tcl]] - A dynamic programming language, suitable for a wide range of uses, including web and desktop applications, networking, administration, testing and many more.
[10161120] |==== Video games ==== 
[10161130] |Cross-platform is a term that can also apply to [[video game]]s.
[10161140] |Such games are released on a range of [[video game console]]s and [[handheld game console]]s, which are specialized [[computer]]s dedicated to the task of playing games (and thus, are a platform as any other computer).
[10161150] |Examples of these games include:
[10161160] |* [[Miner 2049er]], the first major multiplatform game
[10161170] |* [[Phantasy Star Online]]
[10161180] |* [[Lara Croft Tomb Raider: Legend]]
[10161190] |* [[FIFA Series]]
[10161200] |* [[Shadow of Legend]]
[10161210] |… which are spread across a variety of platforms, such as the [[Nintendo GameCube]], [[PlayStation 2]], [[Xbox]], [[Personal computer|PC]], and [[mobile devices]].
[10161220] |In some cases, depending on the hardware of a particular system it may take longer than expected to create a video game across multiple platforms.
[10161230] |So, a video game may only get released on a few platforms and then later released on the remaining platforms.
[10161240] |Typically, this is what occurs when a new system is released, because the [[Video game developer|developer]]s of the video game need to become acquainted with the hardware and software associated with the new console.
[10161250] |Some games may not become cross-platform because of licensing agreements between the [[Video game developer|developer]]s and the maker of the [[video game console]] which state that the game will only be made for one particular console.
[10161260] |As an example, [[Disney]] could create a new game and wish to release it on the latest [[Nintendo]] and [[Sony]] game consoles.
[10161270] |If [[Disney]] licenses the game with [[Sony]] first, [[Disney]] may be required to only release the game on [[Sony|Sony’s]] console for a short time, or indefinitely—effectively prohibiting the game from cross-platform at least for a period of time.
[10161280] |Several developers have developed ways to play games online while using different platforms.
[10161290] |Epic Games, Microsoft and Valve Software all have this technology, that allows Xbox 360 gamers and PS3 gamers to play with PC gamers, allowing gamers to finally decide which platform is the best for a game.
[10161300] |The first game released to allow this interactivity between PC and Console games was [[Quake 3]].
[10161310] |Games that feature cross-platform online play include: 
[10161320] |*[[Champions Online]]
[10161330] |*[[Lost Planet: Colonies]]
[10161340] |*[[Phantasy Star Online]]
[10161350] |*[[Shadowrun (2007 video game)|Shadowrun]]
[10161360] |*[[UNO (Xbox Live Arcade)|UNO]]
[10161370] |*[[Final Fantasy XI Online]]
[10161380] |== Platform independent software == 
[10161390] |Software that is platform independent does not rely on any special features of any single platform, or, if it does, handles those special features such that it can deal with multiple platforms.
[10161400] |All [[algorithm]]s, such as the [[quicksort]] algorithm, are able to be implemented on different platforms.
[10161410] |== Cross-platform programming == 
[10161420] |Cross-platform programming is the practice of actively writing software that will work on more than one platform.
[10161430] |=== Approaches to cross-platform programming === 
[10161440] |There are different ways of approaching the problem of writing a cross-platform application program.
[10161450] |One such approach is simply to create multiple versions of the same program in different ''source trees''—in other words, the [[Microsoft Windows|Windows]] version of a program might have one set of source code files and the [[Apple Macintosh|Macintosh]] version might have another, while a FOSS *nix system might have another.
[10161460] |While this is a straightforward approach to the problem, it has the potential to be considerably more expensive in development cost, development time, or both, especially for the corporate entities.
[10161470] |The idea behind this is to create more than two different programs that have the ability to behave similarly to each other.
[10161480] |It is also possible that this means of developing a cross-platform application will result in more problems with bug tracking and fixing, because the two different ''source trees'' would have different programmers, and thus different defects in each version.
[10161490] |The smaller the programming team, the quicker the bug fixes tend to be.
[10161500] |Another approach that is used is to depend on pre-existing software that hides the differences between the platforms—called [[abstraction]] of the platform—such that the program itself is unaware of the platform it is running on.
[10161510] |It could be said that such programs are ''platform agnostic''.
[10161520] |Programs that run on the [[Java (Sun)|Java]] [[Virtual Machine]] ([[Java Virtual Machine|JVM]]) are built in this fashion.
[10161530] |Some applications mix various methods of cross-platform programming to create the final application.
[10161540] |An example of this is the [[Firefox]] [[web browser]], which uses [[abstraction]] to build some of the lower-level components, separate source subtrees for implementing platform specific features (like the GUI), and the implementation of more than one [[scripting language]] to help facilitate ease of portability.
[10161550] |[[Firefox]] implements [[XUL]], [[Cascading Style Sheets|CSS]] and [[JavaScript]] for extending the browser, in addition to classic [[Netscape]]-style browser plugins.
[10161560] |Much of the browser itself is written in XUL, CSS, and JavaScript, as well.
[10161570] |=== Cross-platform programming toolkits === 
[10161580] |There are a number of tools which are available to help facilitate the process of cross-platform programming:
[10161590] |* [[Simple DirectMedia Layer]]—An [[open source]] cross-platform multimedia library written in C that creates an abstraction over various platforms’ graphics, sound, and input [[Application programming interface|API]]s.
[10161600] |It runs on many operating systems including Linux, Windows and Mac OS X and is aimed at games and multimedia applications.
[10161610] |* [[Cairo (graphics)|Cairo]]−A [[free software]] library used to provide a vector graphics-based, device-independent API.
[10161620] |It is designed to provide primitives for 2-dimensional drawing across a number of different backends.
[10161630] |Cairo is written in C and has bindings for many programming languages.
[10161640] |* ''ParaGUI''—ParaGUI is a cross-platform high-level application framework and GUI library.
[10161650] |It can be compiled on various platforms(Linux, Win32, BeOS, Mac OS, ...).
[10161660] |ParaGUI is based on the Simple DirectMedia Layer (SDL).
[10161670] |ParaGUI is targeted on crossplatform multimedia applications and embedded devices operating on framebuffer displays.
[10161680] |* [[wxWidgets]]—An open source widget toolkit that is also an [[application framework]].
[10161690] |It runs on [[Unix-like]] systems with [[X11]], Microsoft Windows and Mac OS X. It permits applications written to use it to run on all of the systems that it supports, if the application does not use any [[operating system]]-specific programming in addition to it.
[10161700] |* [[Qt (toolkit)|Qt]]—An application framework and [[widget toolkit]] for [[Unix-like]] systems with [[X11]], Microsoft Windows, Mac OS X, and other systems—available under both [[open source]] and commercial licenses.
[10161710] |* [[GTK+]]—An open source widget toolkit for Unix-like systems with X11 and Microsoft Windows.
[10161720] |* [[FLTK]]—Another open source cross platform toolkit, but more light weight because it restricts itself to the GUI.
[10161730] |* [[Mozilla application framework|Mozilla]]—An open source platform for building Mac, Windows and Linux applications.
[10161740] |* [[Mono (software)|Mono]] (and more specifically, [[Microsoft .NET]])—A cross-platform framework for applications and programming languages.
[10161750] |* ''molib''—A robust commercial application toolkit library that abstracts the system calls through C++ objects (such as the file system, database system and thread implementation.).
[10161760] |This allows for the creation of applications that compile and run under Microsoft Windows, Mac OS X, GNU/Linux, and other uses (Sun OS, AIX, HP-UX, 32/64 bit, SMP).
[10161770] |Use in concert with ''the sandbox'' to create GUI-based applications.
[10161780] |* [[fpGUI]] - An open source widget toolkit that is completely implemented in Object Pascal.
[10161790] |It currently supports Linux, Windows and a bit of Windows CE.
[10161795] |fpGUI does not rely on any large libraries, instead it talks directly to Xlib (Linux) or GDI (Windows).
[10161800] |The framework is compiled with the Free Pascal compiler.
[10161810] |Mac OS support is also in the works.
[10161820] |* [[Tcl/Tk]] - Tcl (Tool Command Language) is a dynamic programming language, suitable for a wide range of uses, including web and desktop applications, networking, administration, testing and many more.
[10161830] |Open source and business-friendly, Tcl is a mature yet evolving language that is truly cross platform, easily deployed and highly extensible.
[10161840] |Tk is a graphical user interface toolkit that takes developing desktop applications to a higher level than conventional approaches.
[10161850] |Tk is the standard GUI not only for Tcl, but for many other dynamic languages, and can produce rich, native applications that run unchanged across Windows, Mac OS X, Linux and more.
[10161860] |The combination of Tcl and the Tk GUI toolkit is referred to as Tcl/Tk.
[10161870] |* [[XVT]] is a cross-platform toolkit for creating enterprise and desktop applications in C/C++ on Windows, Linux and Unix (Solaris, HPUX, AIX), and Mac.
[10161880] |Most recent release is 5.8, in April 2007
[10161890] |=== Cross-platform development environments === 
[10161900] |Cross-platform applications can also be built using proprietary [[Integrated development environment|IDE]]s, or so-called [[Rapid Application Development]] tools.
[10161910] |There are a number of development environments which allow developers to build and deploy applications across multiple platforms:
[10161920] |* [[Eclipse (software)| Eclipse]]—An Open source [[software framework]] and [[Integrated development environment|IDE]] extendable through plug-ins including the C++ Development Toolkit.
[10161930] |Eclipse is available on any operating system with a modern Java virtual machine (including Windows, Linux, and Mac OS X, Sun, HP-UX, and other systems).
[10161940] |* [[IntelliJ IDEA]]—A proprietary [[Integrated development environment|IDE]]
[10161950] |* [[NetBeans]]—An Open source [[software framework]] and [[Integrated development environment|IDE]] extendable through plug-ins.
[10161960] |NetBeans is available on any operating system with a modern Java virtual machine (including Windows, Linux, and Mac OS X, Sun, HP-UX, and other systems).
[10161970] |Similar to Eclipse in features and functionality.
[10161980] |Promoted by [[Sun Microsystems]]
[10161990] |* [[Omnis Studio]]—A proprietary [[Integrated development environment|IDE]] or Rapid Application Development tool for creating enterprise and web applications for Windows, Linux, and Mac OS X. 
[10162000] |* [[Runtime Revolution]]—a proprietary [[Integrated development environment|IDE]], compiler engine and CGI builder that [[cross compile]]s to [[Microsoft Windows|Windows]], [[Mac OS X]] ([[PowerPC|PPC]], [[Intel]]), [[Linux]], [[Solaris Operating System|Solaris]], [[BSD]], and [[Irix]].
[10162010] |*[[Code::Blocks]]—A free/open source, cross platform IDE.
[10162020] |It is developed in C++ using wxWidgets.
[10162030] |Using a plugin architecture, its capabilities and features are defined by the provided plugins.
[10162040] |*[[Lazarus (software)]]—Lazarus is a cross platform Visual IDE developed for and supported by the open source Free Pascal compiler.
[10162050] |It aims to provide a Rapid Application Development Delphi Clone for Pascal and Object Pascal developers.
[10162060] |*[[REALbasic]]—REALbasic (RB) is an object-oriented dialect of the BASIC programming language developed and commercially marketed by REAL Software, Inc in Austin, Texas for Mac OS X, Microsoft Windows, and Linux.
[10162070] |== Criticisms of cross-platform development == 
[10162080] |There are certain issues associated with cross-platform development.
[10162090] |Some of these include:
[10162100] |* Testing cross-platform applications may also be considerably more complicated, since different platforms can exhibit slightly different behaviors or subtle bugs.
[10162110] |This problem has led some developers to deride cross-platform development as “Write Once, Debug Everywhere”, a take on Sun’s [[Write once, run anywhere|“Write Once, Run Anywhere”]] marketing slogan.
[10162120] |* Developers are often restricted to using the [[lowest common denominator]] subset of features which are available on all platforms.
[10162130] |This may hinder the application's performance or prohibit developers from using platforms’ most advanced features.
[10162140] |* Different platforms often have different user interface conventions, which cross-platform applications do not always accommodate.
[10162150] |For example, applications developed for Mac OS X and [[GNOME]] are supposed to place the most important button on the right-hand side of windows and dialogs, whereas Microsoft Windows and [[KDE]] have the opposite convention.
[10162160] |Though many of these differences are subtle, a cross-platform application which does not conform appropriately to these conventions may feel clunky or alien to the user.
[10162170] |When working quickly, such opposing conventions may even result in [[data loss]], such as in a [[dialog box]] confirming whether the user wants to save or discard changes to a file.
[10162180] |* Scripting languages and virtual machines must be translated into native executable code each time the application is executed, imposing a performance penalty.
[10162190] |This performance hit can be alleviated using advanced techniques like [[just-in-time compilation]]; but even using such techniques, some performance overhead may be unavoidable.
[10170010] |<article>Data</article>
[10170020] |'''Data''' (singular: '''datum''') are collected of natural phenomena descriptors including the results of [[experience]], [[observation]] or [[experiment]], or a set of [[premise]]s.
[10170030] |This may consist of [[number]]s, [[word]]s, or [[image]]s, particularly as [[measurement]]s or observations of a set of [[variable]]s.
[10170040] |==Etymology== 
[10170050] |The word ''data ''is the plural of [[Latin]] ''[[datum]]'', [[Grammatical gender|neuter]] past [[participle]] of ''dare'', "to give", hence "something given".
[10170060] |The [[past participle]] of "to give" has been used for millennia, in the sense of a statement accepted at face value; one of the works of [[Euclid]], circa 300 BC, was the ''Dedomena'' (in Latin, ''Data'').
[10170070] |In discussions of problems in [[geometry]], [[mathematics]], [[engineering]], and so on, the terms ''givens'' and ''data'' are used interchangeably.
[10170080] |Such usage is the origin of ''data'' as a concept in [[computer science]]:'' ''data'' ''are numbers, words, images, etc., accepted as they stand.
[10170090] |Pronounced dey-tuh, dat-uh, or dah-tuh.''
[10170100] |[[Experimental data]] are data generated within the context of a scientific investigation.
[10170110] |Mathematically, data can be grouped in many ways.
[10170120] |==Usage in English== 
[10170130] |In [[English language|English]], the word ''datum'' is still used in the general sense of "something given", and more specifically in [[cartography]], [[geography]], [[geology]], [[NMR]] and [[technical drawing|drafting]] to mean a reference point, reference line, or reference surface.
[10170140] |More generally speaking, any measurement or result can be called a (single) ''datum'', but ''data point'' is more common.
[10170150] |Both ''datums'' (see usage in [[datum]] article) and the originally Latin plural ''data'' are used as the plural of ''datum'' in English, but ''data'' is more commonly treated as a [[mass noun]] and used in the [[Grammatical number|singular]], especially in day-to-day usage.
[10170160] |For example, "This is all the data from the experiment".
[10170170] |This usage is inconsistent with the rules of Latin grammar and traditional English, which would instead suggest "These are all the data from the experiment".
[10170180] |Some British and UN academic, scientific, and professional [[style guides]] (e.g., see page 43 of the [http://whqlibdoc.who.int/hq/2004/WHO_IMD_PUB_04.1.pdf World Health Organization Style Guide]) request that authors treat ''data'' as a plural noun.
[10170190] |Other international organization, such as the IEEE computing society , allow its usage as either a mass noun or plural based on author preference.
[10170200] |It is now usually treated as a singular mass noun in informal usage, but usage in scientific publications shows a strong UK/U.S divide.
[10170210] |U.S. usage tends to treat ''data'' in the singular, including in serious and academic publishing, although some major newspapers (such as the [[New York Times]]) regularly use it in the plural.
[10170220] |"The plural usage is still common, as this headline from the New York Times attests: “Data Are Elusive on the Homeless.”
[10170230] |Sometimes scientists think of data as plural, as in ''These data do not support the conclusions.''
[10170240] |But more often scientists and researchers think of data as a singular mass entity like information, and most people now follow this in general usage.
[10170245] |"[http://www.bartleby.com/61/51/D0035100.html]</ref> UK usage now widely accepts treating ''data'' as singular in standard English, including everyday newspaper usage at least in non-scientific use.
[10170250] |UK scientific publishing usually still prefers treating it as a plural..
[10170260] |Some UK university style guides recommend using ''data'' for both singular and plural use and some recommend treating it only as a singular in connection with computers.
[10170270] |==Uses of ''data'' in science and computing== 
[10170280] |''Raw data'' are [[number]]s, [[character (computing)|characters]], [[image]]s or other outputs from devices to convert physical quantities into symbols, in a very broad sense.
[10170290] |Such data are typically further [[data processing|processed]] by a human or [[input]] into a [[computer]], [[Computer storage|stored]] and processed there, or transmitted ([[output]]) to another human or computer.
[10170300] |''Raw data'' is a relative term; data processing commonly occurs by stages, and the "processed data" from one stage may be considered the "raw data" of the next.
[10170310] |Mechanical computing devices are classified according to the means by which they represent data.
[10170320] |An [[analog computer]] represents a datum as a voltage, distance, position, or other physical quantity.
[10170330] |A [[digital computer]] represents a datum as a sequence of symbols drawn from a fixed [[alphabet]].
[10170340] |The most common digital computers use a binary alphabet, that is, an alphabet of two characters, typically denoted "0" and "1".
[10170350] |More familiar representations, such as numbers or letters, are then constructed from the binary alphabet.
[10170360] |Some special forms of data are distinguished.
[10170370] |A [[computer program]] is a collection of data, which can be interpreted as instructions.
[10170380] |Most computer languages make a distinction between programs and the other data on which programs operate, but in some languages, notably [[Lisp programming language|Lisp]] and similar languages, programs are essentially indistinguishable from other data.
[10170390] |It is also useful to distinguish [[metadata]], that is, a description of other data.
[10170400] |A similar yet earlier term for metadata is "ancillary data."
[10170410] |The prototypical example of metadata is the library catalog, which is a description of the contents of books.
[10170420] |==Meaning of data, information and knowledge== 
[10170430] |The terms [[information]] and [[knowledge]] are frequently used for overlapping concepts.
[10170440] |The main difference is in the level of [[abstraction]] being considered.
[10170450] |Data is the lowest level of abstraction, information is the next level, and finally, knowledge is the highest level among all three.
[10170460] |For example, the height of Mt. Everest is generally considered as "data", a book on Mt. Everest geological characteristics may be considered as "information", and a report containing practical information on the best way to reach Mt. Everest's peak may be considered as "knowledge".
[10170470] |Information as a concept bears a diversity of meanings, from everyday usage to technical settings.
[10170480] |Generally speaking, the concept of information is closely related to notions of constraint, communication, control, data, form, instruction, knowledge, meaning, mental stimulus, pattern, perception, and representation.
[10170490] |Beynon-Davies uses the concept of a [[sign]] to distinguish between [[data]] and [[information]].
[10170500] |Data are symbols.
[10170510] |Information occurs when symbols are used to refer to something.
[10180010] |<article>Data analysis</article>
[10180020] |'''Data analysis''' is the process of looking at and summarizing '''[[data]]''' with the intent to extract useful [[information]] and develop conclusions.
[10180030] |Data analysis is closely related to [[data mining]], but data mining tends to focus on larger data sets, with less emphasis on making [[inference]], and often uses data that was originally collected for a different purpose.
[10180040] |In [[statistics|statistical applications]], some people divide data analysis into [[descriptive statistics]], [[exploratory data analysis]] and [[confirmatory data analysis]], where the EDA focuses on discovering new features in the data, and CDA on confirming or falsifying existing hypotheses.
[10180050] |Data analysis assumes different aspects, and possibly different names, in different fields.
[10180060] |The term ''data analysis'' is also used as a synonym for [[data modeling]], which is unrelated to the subject of this article.
[10180070] |==Nuclear and particle physics== 
[10180080] |In [[nuclear physics|nuclear]] and [[particle physics]] the data usually originate from the [[particle detector|experimental apparatus]] via a [[data acquisition]] system.
[10180090] |It is then processed, in a step usually called ''data reduction'', to apply calibrations and to extract physically significant information.
[10180100] |Data reduction is most often, especially in large particle physics experiments, an automatic, batch-mode operation carried out by software written ad-hoc.
[10180110] |The resulting data ''n-tuples'' are then scrutinized by the physicists, using specialized software tools like [[ROOT]] or [[Physics Analysis Workstation|PAW]], comparing the results of the experiment with theory.
[10180120] |The theoretical models are often difficult to compare directly with the results of the experiments, so they are used instead as input for [[Monte Carlo method|Monte Carlo simulation]] software like [[Geant4]] that predict the response of the detector to a given theoretical event, producing '''simulated events''' which are then compared to experimental data.
[10180130] |See also: [[Computational physics]].
[10180140] |==Social sciences== 
[10180150] |[[Qualitative data analysis]] (QDA) or [[qualitative research]] is the analysis of non-numerical data, for example words, photographs, observations, etc..
[10180160] |==Information technology== 
[10180170] |A special case is the [[Data analysis (information technology in othm )|data analysis in information technology audits]].
[10180180] |==Business== 
[10180190] |See 
[10180200] |* [[Analytics]]
[10180210] |* [[Business intelligence]]
[10180220] |* [[Data mining]]
[10190010] |<article>Database</article>
[10190020] |A '''database''' is a [[structure]]d collection of records or [[data]].
[10190030] |A [[computer]] database relies upon [[software]] to organize the storage of data.
[10190040] |The software models the database structure in what are known as [[database model]]s.
[10190050] |The model in most common use today is the [[relational model]].
[10190060] |Other models such as the [[hierarchical model]] and the [[network model]] use a more explicit representation of relationships (see below for explanation of the various database models).
[10190070] |Database management systems (DBMS) are the software used to organize and maintain the database.
[10190080] |These are categorized according to the [[database model]] that they support.
[10190090] |The model tends to determine the query languages that are available to access the database.
[10190100] |A great deal of the internal engineering of a DBMS, however, is independent of the data model, and is concerned with managing factors such as performance, concurrency, integrity, and recovery from [[hardware failure]]s.
[10190110] |In these areas there are large differences between products.
[10190120] |==History== 
[10190130] |The earliest known use of the term '''''data base''''' was in November 1963, when the [[System Development Corporation]] sponsored a symposium under the title ''Development and Management of a Computer-centered Data Base''.
[10190140] |'''Database''' as a single word became common in Europe in the early 1970s and by the end of the decade it was being used in major American newspapers.
[10190150] |(The abbreviation DB, however, survives.)
[10190160] |The first database management systems were developed in the 1960s.
[10190170] |A pioneer in the field was [[Charles Bachman]].
[10190180] |Bachman's early papers show that his aim was to make more effective use of the new direct access storage devices becoming available: until then, data processing had been based on [[punch card|punched cards]] and [[magnetic tape]], so that serial processing was the dominant activity.
[10190190] |Two key [[data model]]s arose at this time: [[CODASYL]] developed the [[network model]] based on Bachman's ideas, and (apparently independently) the [[hierarchical model]] was used in a system developed by [[North American Rockwell]] later adopted by [[IBM]] as the cornerstone of their [[Information Management System|IMS]] product.
[10190200] |While IMS along with the CODASYL [[IDMS]] were the big, high visibility databases developed in the 1960s, several others were also born in that decade, some of which have a significant installed base today.
[10190210] |Two worthy of mention are the [[Pick operating system|PICK]] and [[MUMPS]] databases, with the former developed originally as an operating system with an embedded database and the latter as a programming language and database for the development of healthcare systems.
[10190220] |The [[relational model]] was proposed by [[Edgar F. Codd|E. F. Codd]] in 1970.
[10190230] |He criticized existing models for confusing the abstract description of information structure with descriptions of physical access mechanisms.
[10190240] |For a long while, however, the relational model remained of academic interest only.
[10190250] |While CODASYL products (IDMS) and network model products (IMS) were conceived as practical engineering solutions taking account of the technology as it existed at the time, the relational model took a much more theoretical perspective, arguing (correctly) that hardware and software technology would catch up in time.
[10190260] |Among the first implementations were [[Michael Stonebraker]]'s [[Ingres (database)|Ingres]] at [[University of California, Berkeley|Berkeley]], and the [[System R]] project at IBM.
[10190270] |Both of these were research prototypes, announced during 1976.
[10190280] |The first commercial products, [[Oracle database|Oracle]] and [[IBM DB2|DB2]], did not appear until around 1980.
[10190290] |The first successful database product for microcomputers was [[dBASE]] for the [[CP/M]] and [[PC-DOS]]/[[MS-DOS]] operating systems.
[10190300] |During the 1980s, research activity focused on [[distributed database]] systems and [[database machine]]s.
[10190310] |Another important theoretical idea was the [[Functional Data Model]], but apart from some specialized applications in genetics, molecular biology, and fraud investigation, the world took little notice.
[10190320] |In the 1990s, attention shifted to [[OODB|object-oriented databases]].
[10190330] |These had some success in fields where it was necessary to handle more complex data than relational systems could easily cope with, such as [[spatial database]]s, engineering data (including software [[Software repository|repositories]]), and multimedia data.
[10190340] |Some of these ideas were adopted by the relational vendors, who integrated new features into their products as a result.
[10190350] |The 1990s also saw the spread of [[Open Source]] databases, such as [[PostgreSQL]] and [[MySQL]].
[10190360] |In the 2000s, the fashionable area for innovation is the [[XML database]].
[10190370] |As with object databases, this has spawned a new collection of start-up companies, but at the same time the key ideas are being integrated into the established relational products.
[10190380] |[[XML databases]] aim to remove the traditional divide between documents and data, allowing all of an organization's information resources to be held in one place, whether they are highly structured or not.
[10190390] |==Database models== 
[10190400] |Various techniques are used to model data structure.
[10190410] |Most database systems are built around one particular data model, although it is increasingly common for products to offer support for more than one model.
[10190420] |For any one [[logical model]] various physical implementations may be possible, and most products will offer the user some level of control in tuning the [[physical implementation]], since the choices that are made have a significant effect on performance.
[10190430] |Here are three examples:
[10190440] |===Hierarchical model=== 
[10190450] |In a [[hierarchical model]], data is organized into an inverted tree-like structure, implying a multiple downward link in each node to describe the nesting, and a sort field to keep the records in a particular order in each same-level list.
[10190460] |This structure arranges the various data elements in a hierarchy and helps to establish logical relationships among data elements of multiple files.
[10190470] |Each unit in the model is a record which is also known as a node.
[10190480] |In such a model, each record on one level can be related to multiple records on the next lower level.
[10190490] |A record that has subsidiary records is called a parent and the subsidiary records are called children.
[10190500] |Data elements in this model are well suited for one-to-many relationships with other data elements in the database.
[10190510] |This model is advantageous when the data elements are inherently hierarchical.
[10190520] |The disadvantage is that in order to prepare the database it becomes necessary to identify the requisite groups of files that are to be logically integrated.
[10190530] |Hence, a hierarchical data model may not always be flexible enough to accommodate the dynamic needs of an organization.
[10190540] |===Network model=== 
[10190550] |The [[network model]] tends to store records with links to other records.
[10190560] |Each record in the database can have multiple parents, i.e., the relationships among data elements can have a many to many relationship.
[10190570] |Associations are tracked via "pointers".
[10190580] |These pointers can be node numbers or disk addresses.
[10190590] |Most network databases tend to also include some form of hierarchical model.
[10190600] |Databases can be translated from hierarchical model to network and vice versa.
[10190610] |The main difference between the network model and hierarchical model is that in a network model, a child can have a number of parents whereas in a hierarchical model, a child can have only one parent.
[10190620] |The network model provides greater advantage than the hierarchical model in that promotes greater flexibility and data accessibility, since records at a lower level can be accessed without accessing the records above them.
[10190630] |This model is more efficient than hierarchical model, easier to understand and can be applied to many real world problems that require routine transactions.
[10190640] |The disadvantages are that: It is a complex process to design and develop a network database; It has to be refined frequently; It requires that the relationships among all the records be defined before development starts, and changes often demand major programming efforts; Operation and maintenance of the network model is expensive and time consuming.
[10190650] |Examples of database engines that have network model capabilities are [[RDM Embedded]] and [[RDM Server]].
[10190660] |===Relational model=== 
[10190670] |The basic data structure of the relational model is a table where information about a particular entity (say, an employee) is represented in columns and rows.
[10190680] |The columns enumerate the various attributes of an entity (e.g. employee_name, address, phone_number).
[10190690] |Rows (also called records) represent instances of an entity (e.g. specific employees).
[10190700] |The "relation" in "relational database" comes from the mathematical notion of [[Relation (mathematics)|relations]] from the field of [[set theory]].
[10190710] |A relation is a set of [[tuple]]s, so rows are sometimes called tuples.
[10190720] |All tables in a relational database adhere to three basic rules.
[10190730] |* The ordering of columns is immaterial
[10190740] |* Identical rows are not allowed in a table
[10190750] |* Each row has a single (separate) value for each of its columns (each tuple has an atomic value).
[10190760] |If the same value occurs in two different records (from the same table or different tables) it can imply a relationship between those records.
[10190770] |Relationships between records are often categorized by their [[Cardinality (data modeling)|cardinality]] (1:1, (0), 1:M, M:M).
[10190780] |Tables can have a designated column or set of columns that act as a "key" to select rows from that table with the same or similar key values.
[10190790] |A "primary key" is a key that has a unique value for each row in the table.
[10190800] |Keys are commonly used to join or combine data from two or more tables.
[10190810] |For example, an ''employee'' table may contain a column named ''address'' which contains a value that matches the key of an ''address'' table.
[10190820] |Keys are also critical in the creation of indexes, which facilitate fast retrieval of data from large tables.
[10190830] |It is not necessary to define all the keys in advance; a column can be used as a key even if it was not originally intended to be one.
[10190840] |====Relational operations==== 
[10190850] |Users (or programs) request data from a relational database by sending it a [[query]] that is written in a special language, usually a dialect of [[SQL]].
[10190860] |Although SQL was originally intended for end-users, it is much more common for SQL queries to be embedded into software that provides an easier user interface.
[10190870] |Many web applications, such as [[Wikipedia]], perform SQL queries when generating pages.
[10190880] |In response to a query, the database returns a result set, which is the list of rows constituting the answer.
[10190890] |The simplest query is just to return all the rows from a table, but more often, the rows are filtered in some way to return just the answer wanted.
[10190900] |Often, data from multiple tables are combined into one, by doing a [[Join (SQL)|join]].
[10190910] |There are a number of relational operations in addition to join.
[10190920] |====Normal forms==== 
[10190930] |Relations are classified based upon the types of anomalies to which they're vulnerable.
[10190940] |A database that's in the first normal form is vulnerable to all types of anomalies, while a database that's in the domain/key normal form has no modification anomalies.
[10190950] |Normal forms are hierarchical in nature.
[10190960] |That is, the lowest level is the first normal form, and the database cannot meet the requirements for higher level normal forms without first having met all the requirements of the lesser normal form.
[10190970] |==Database Management Systems== 
[10190980] |===Relational database management systems=== 
[10190990] |An RDBMS implements the features of the relational model outlined above.
[10191000] |In this context, [[Christopher J. Date|Date]]'s '''Information Principle''' states:
[10191010] |<blockquote>  The entire information content of the database is represented in one and only one way.
[10191020] |Namely as explicit values in column positions (attributes) and rows in relations ([[tuple]]s) Therefore, there are no explicit pointers between related tables.</blockquote>
[10191030] |===Post-relational database models=== 
[10191040] |Several products have been identified as [[post-relational]] because the data model incorporates [[relations]] but is not constrained by the Information Principle, requiring that all information is represented by [[data values]] in relations.
[10191050] |Products using a post-relational data model typically employ a model that actually pre-dates the [[relational model]].
[10191060] |These might be identified as a [[directed graph]] with [[tree data structure|trees]] on the [[data structure|nodes]].
[10191070] |Examples of models that could be classified as post-relational are [[Pick operating system|PICK]] aka [[Multidimensional database|MultiValue]], and [[MUMPS]].
[10191080] |===Object database models=== 
[10191090] |In recent years, the [[object-oriented]] paradigm has been applied to database technology, creating a new programming model known as [[object database]]s.
[10191100] |These databases attempt to bring the database world and the application programming world closer together, in particular by ensuring that the database uses the same [[type system]] as the application program.
[10191110] |This aims to avoid the overhead (sometimes referred to as the ''[[Object-Relational impedance mismatch|impedance mismatch]]'') of converting information between its representation in the database (for example as rows in tables) and its representation in the application program (typically as objects).
[10191120] |At the same time, object databases attempt to introduce the key ideas of object programming, such as [[encapsulation]] and [[polymorphism (computer science)|polymorphism]], into the world of databases.
[10191130] |A variety of these ways have been tried for storing objects in a database.
[10191140] |Some products have approached the problem from the application programming end, by making the objects manipulated by the program [[Persistence (computer science)|persistent]].
[10191150] |This also typically requires the addition of some kind of query language, since conventional programming languages do not have the ability to find objects based on their information content.
[10191160] |Others have attacked the problem from the database end, by defining an object-oriented data model for the database, and defining a database programming language that allows full programming capabilities as well as traditional query facilities.
[10191170] |==DBMS internals== 
[10191180] |===Storage and physical database design=== 
[10191190] |Database tables/indexes are typically stored in memory or on hard disk in one of many forms, ordered/unordered [[flat file database|flat files]], [[ISAM]], [[heap (data structure)|heaps]], [[hash table|hash buckets]] or [[B+ tree]]s.
[10191200] |These have various advantages and disadvantages discussed further in the main article on this topic.
[10191210] |The most commonly used are B+ trees and ISAM.
[10191220] |Other important design choices relate to the clustering of data by category (such as grouping data by month, or location), creating pre-computed views known as materialized views, partitioning data by range or hash.
[10191230] |As well memory management and storage topology can be important design choices for database designers.
[10191240] |Just as normalization is used to reduce storage requirements and improve the extensibility of the database, conversely denormalization is often used to reduce join complexity and reduce execution time for queries.
[10191250] |====Indexing==== 
[10191260] |All of these databases can take advantage of [[Index (database)|indexing]] to increase their speed.
[10191270] |This technology has advanced tremendously since its early uses in the 1960s and 1970s.
[10191280] |The most common kind of index is a sorted list of the contents of some particular table column, with pointers to the row associated with the value.
[10191290] |An index allows a set of table rows matching some criterion to be located quickly.
[10191300] |Typically, indexes are also stored in the various forms of data-structure mentioned above (such as [[B-tree]]s, [[hash table|hash]]es, and [[linked lists]]).
[10191310] |Usually, a specific technique is chosen by the database designer to increase efficiency in the particular case of the type of index required.
[10191320] |Relational DBMS's have the advantage that indexes can be created or dropped without changing existing applications making use of it.
[10191330] |The database chooses between many different strategies based on which one it estimates will run the fastest.
[10191340] |In other words, indexes are transparent to the application or end-user querying the database; while they affect performance, any SQL command will run with or without index to compute the result of an [[SQL]] statement.
[10191350] |The RDBMS will produce a plan of how to execute the query, which is generated by analyzing the run times of the different algorithms and selecting the quickest.
[10191360] |Some of the key algorithms that deal with [[join (SQL)|joins]] are [[nested loop join]], [[sort-merge join]] and [[hash join]].
[10191370] |Which of these is chosen depends on whether an index exists, what type it is, and its [[Cardinality (SQL statements)|cardinality]].
[10191380] |An index speeds up access to data, but it has disadvantages as well.
[10191390] |First, every index increases the amount of storage on the hard drive necessary for the database file, and second, the index must be updated each time the data are altered, and this costs time.
[10191400] |(Thus an index saves time in the reading of data, but it costs time in entering and altering data.
[10191410] |It thus depends on the use to which the data are to be put whether an index is on the whole a net plus or minus in the quest for efficiency.)
[10191420] |A special case of an index is a primary index, or primary key, which is distinguished in that the primary index must ensure a unique reference to a record.
[10191430] |Often, for this purpose one simply uses a running index number (ID number).
[10191440] |Primary indexes play a significant role in relational databases, and they can speed up access to data considerably.
[10191450] |===Transactions and concurrency=== 
[10191460] |In addition to their data model, most practical databases ("transactional databases") attempt to enforce a [[database transaction]] .
[10191470] |Ideally, the database software should enforce the [[ACID]] rules, summarized here: 
[10191480] |* [[Atomicity]]: Either all the tasks in a transaction must be done, or none of them.
[10191490] |The transaction must be completed, or else it must be undone (rolled back).
[10191500] |* [[Database consistency|Consistency]]: Every transaction must preserve the integrity constraints — the declared consistency rules — of the database.
[10191510] |It cannot place the data in a contradictory state.
[10191520] |* [[Isolation]]: Two simultaneous transactions cannot interfere with one another.
[10191530] |Intermediate results within a transaction are not visible to other transactions.
[10191540] |* [[Durability (computer science)|Durability]]: Completed transactions cannot be aborted later or their results discarded.
[10191550] |They must persist through (for instance) restarts of the DBMS after crashes
[10191560] |In practice, many DBMS's allow most of these rules to be selectively relaxed for better performance.
[10191570] |[[Concurrency control]] is a method used to ensure that transactions are executed in a safe manner and follow the ACID rules.
[10191580] |The DBMS must be able to ensure that only [[serializability|serializable]], [[serializability#correctness - recoverability|recoverable]] schedules are allowed, and that no actions of committed transactions are lost while undoing aborted transactions .
[10191590] |===Replication=== 
[10191600] |Replication of databases is closely related to transactions.
[10191610] |If a database can log its individual actions, it is possible to create a duplicate of the data in real time.
[10191620] |The duplicate can be used to improve performance or availability of the whole database system.
[10191630] |Common replication concepts include: 
[10191640] |* Master/Slave Replication: All write requests are performed on the master and then replicated to the slaves
[10191650] |* Quorum: The result of Read and Write requests are calculated by querying a "majority" of replicas.
[10191660] |* Multimaster: Two or more replicas sync each other via a transaction identifier.
[10191670] |Parallel synchronous replication of databases enables transactions to be replicated on multiple servers simultaneously, which provides a method for backup and security as well as data availability.
[10191680] |===Security=== 
[10191690] |[[Database security]] denotes the system, processes, and procedures that protect a database from unintended activity.
[10191700] |Security is usually enforced through '''access control''', '''auditing''', and '''encryption'''.
[10191710] |* Access control ensures and restricts who can connect and what can be done to the database.
[10191720] |* Auditing logs what action or change has been performed, when and by who.
[10191730] |* Encryption: Since security has become a major issue in recent years, many commercial database vendors provide built-in encryption mechanism.
[10191740] |Data is encoded natively into the tables and deciphered "on the fly" when a query comes in.
[10191745] |Connections can also be secured and encrypted if required using DSA, MD5, SSL or legacy encryption standard.
[10191750] |Enforcing security is one of the major tasks of the DBA.
[10191760] |In the United Kingdom, legislation protecting the public from unauthorized disclosure of personal information held on databases falls under the Office of the Information Commissioner.
[10191770] |United Kingdom based organizations holding personal data in electronic format (databases for example) are required to register with the Data Commissioner.
[10191780] |===Locking=== 
[10191790] |[[Lock (computer science)|Locking]] is how the database handle multiple concurent operations.
[10191800] |This is the way how concurency and some form of basic intergrity is managed within the database system.
[10191810] |Such locks can be applied on a row level, or on other levels like page (a basic data block), extend (multiple array of pages) or even an entire table.
[10191820] |This helps maintain the integrity of the data by ensuring that only one process at a time can modify the '''same''' data.
[10191830] |Unlike a basic filesystem files or folders, where only one lock at the time can be set, restricting the usage to one process only.
[10191840] |A database can set and hold mutiples locks at the same time on the different level of the physical data structure.
[10191850] |How locks are set, last is determined by the database engine locking scheme based on the submitted SQL or transactions by the users.
[10191860] |Generaly speaking no activity on the database should be translated by no or very light locking.
[10191870] |For most DBMS systems existing on the market, locks are generaly '''shared''' or '''exclusive'''.
[10191880] |Exclusive locks mean that no other lock can acquire the current data object as long as the exclusive lock lasts.
[10191890] |Exclusive locks are usually set while the database needs to change data, like during an UPDATE or DELETE operation.
[10191900] |Shared locks can take ownership one from the other of the current data structure.
[10191910] |Shared locks are usually used while the database is reading data, during a SELECT operation.
[10191920] |The number, nature of locks and time the lock holds a data block can have a huge impact on the database performances.
[10191930] |Bad locking can lead to desastrous performance response (usually the result of poor SQL requests, or inadequate database physical structure)
[10191940] |Default locking behavior is enforced by the '''isolation level''' of the dataserver.
[10191950] |Changing the isolation level will affect how shared or exclusive locks must be set on the data for the entire database system.
[10191960] |Default isolation is generaly 1, where data can not be read while it is modfied, forbiding to return "ghost data" to end user.
[10191970] |At some point intensive or inappropriate exclusive locking, can lead to the "dead lock" situation between two locks.
[10191980] |Where none of the locks can be released because they try to acquire ressources mutually from each other.
[10191990] |The Database has a fail safe mecanism and will automaticly "sacrifice" one of the locks releasing the ressource.
[10192000] |Doing so processes or transactions involved in the "dead lock" will be rolled back.
[10192010] |Databases can also be locked for other reasons, like access restrictions for given levels of user.
[10192020] |Databases are also locked for routine database maintenance, which prevents changes being made during the maintenance.
[10192030] |See [http://publib.boulder.ibm.com/infocenter/rbhelp/v6r3/index.jsp?topic=/com.ibm.redbrick.doc6.3/wag/wag80.htm IBM] for more detail.)
[10192040] |===Architecture=== 
[10192050] |Depending on the intended use, there are a number of database architectures in use.
[10192060] |Many databases use a combination of strategies.
[10192070] |On-line Transaction Processing systems (OLTP) often use a row-oriented datastore architecture, while data-warehouse and other retrieval-focused applications like [[Google]]'s [[BigTable]], or bibliographic database(library catalogue) systems may use a column-oriented datastore architecture.
[10192080] |Document-Oriented, XML, Knowledgebases, as well as frame databases and rdf-stores (aka Triple-Stores), may also use a combination of these architectures in their implementation.
[10192090] |Finally it should be noted that not all database have or need a database 'schema' (so called schema-less databases).
[10192100] |==Applications of databases== 
[10192110] |Databases are used in many applications, spanning virtually the entire range of [[computer software]].
[10192120] |Databases are the preferred method of storage for large multiuser applications, where coordination between many users is needed.
[10192130] |Even individual users find them convenient, and many electronic mail programs and personal organizers are based on standard database technology.
[10192140] |Software database drivers are available for most database platforms so that [[application software]] can use a common [[Application Programming Interface]] to retrieve the information stored in a database.
[10192150] |Two commonly used database APIs are [[Java Database Connectivity|JDBC]] and [[ODBC]].
[10192160] |For example suppliers database contains the data relating to suppliers such as; 
[10192170] |*supplier name
[10192180] |*supplier code
[10192190] |*supplier address
[10192200] |It is often used by schools to teach students and grade them.
[10192210] |==Links to DBMS products== 
[10192220] |*[[4th Dimension (Software)|4D]]
[10192230] |*[[ADABAS]]
[10192240] |*[[Alpha Five]]
[10192250] |*[[Apache Derby]] (Java, also known as IBM Cloudscape and Sun Java DB)
[10192260] |*[[BerkeleyDB]]
[10192270] |*[[CouchDB]]
[10192280] |*[[CSQL]]
[10192290] |*[[Datawasp]]
[10192300] |*[[Db4objects]]
[10192310] |*[[dBase]]
[10192320] |*[[FileMaker]]
[10192330] |*[[Firebird (database server)]]
[10192340] |*[[H2 (DBMS)|H2]] (Java)
[10192350] |*[[Hsqldb]] (Java)
[10192360] |*[[IBM DB2]]
[10192370] |*[[Information Management System|IBM IMS (Information Management System)]]
[10192380] |*[[IBM UniVerse]]
[10192390] |*[[Informix]]
[10192400] |*[[Ingres (database)|Ingres]]
[10192410] |*[[Interbase]]
[10192420] |*[[InterSystems Caché]]
[10192430] |*[[MaxDB]] (formerly SapDB)
[10192440] |*[[Microsoft Access]]
[10192450] |*[[Microsoft SQL Server]]
[10192460] |*[[Model 204]]
[10192470] |*[[MySQL]]
[10192480] |*[[Nomad software|Nomad]]
[10192490] |*[[Objectivity/DB]]
[10192500] |*[[ObjectStore]]
[10192510] |*[[Virtuoso Universal Server|OpenLink Virtuoso]]
[10192520] |*[[OpenOffice.org Base]]
[10192530] |*[[Oracle Database]]
[10192540] |*[[Paradox (database)]]
[10192550] |*[[Polyhedra DBMS]]
[10192560] |*[[PostgreSQL]]
[10192570] |*[[Progress 4GL]]
[10192580] |*[[RDM Embedded]]
[10192590] |*[[ScimoreDB]]
[10192600] |*[[Sedna (database)|Sedna]]
[10192610] |*[[SQLite]]
[10192620] |*[[Superbase database|Superbase]]
[10192630] |*[[Sybase]]
[10192640] |*[[Teradata]]
[10192650] |*[[Vertica]]
[10192660] |*[[Visual FoxPro]]
[10200010] |<article>Cluster analysis</article>
[10200020] |'''Clustering''' is the [[Statistical classification|classification]] of objects into different groups, or more precisely, the [[partition of a set|partitioning]] of a [[data set]] into [[subset]]s (clusters), so that the data in each subset (ideally) share some common trait - often proximity according to some defined [[metric (mathematics)|distance measure]].
[10200030] |Data clustering is a common technique for [[statistics|statistical]] [[data analysis]], which is used in many fields, including [[machine learning]], [[data mining]], [[pattern recognition]], [[image analysis]] and [[bioinformatics]].
[10200040] |The computational task of classifying the data set into ''k'' clusters is often referred to as '''''k''-clustering'''''.
[10200050] |Besides the term ''data clustering'' (or just ''clustering''), there are a number of terms with similar meanings, including ''cluster analysis'', ''automatic classification'', ''numerical taxonomy'', ''botryology'' and ''typological analysis''.
[10200060] |== Types of clustering == 
[10200070] |Data clustering algorithms can be [[hierarchical]].
[10200080] |Hierarchical algorithms find successive clusters using previously established clusters.
[10200090] |Hierarchical algorithms can be agglomerative ("bottom-up") or divisive ("top-down").
[10200100] |Agglomerative algorithms begin with each element as a separate cluster and merge them into successively larger clusters.
[10200110] |Divisive algorithms begin with the whole set and proceed to divide it into successively smaller clusters.
[10200120] |[[partition of a set|Partitional]] algorithms typically determine all clusters at once, but can also be used as divisive algorithms in the [[hierarchical]] clustering.
[10200130] |''Two-way clustering'', ''co-clustering'' or [[biclustering]] are clustering methods where not only the objects are clustered but also the features of the objects, i.e., if the data is represented in a [[data matrix (statistics)|data matrix]], the rows and columns are clustered simultaneously.
[10200140] |Another important distinction is whether the clustering uses symmetric or asymmetric distances.
[10200150] |A property of [[Euclidean space]] is that distances are symmetric (the distance from object'' A'' to ''B'' is the same as the distance from ''B'' to ''A'').
[10200160] |In other applications (e.g., sequence-alignment methods, see Prinzie & Van den Poel (2006)), this is not the case.
[10200170] |== Distance measure == 
[10200180] |An important step in any clustering is to select a [[Distance|distance measure]], which will determine how the ''similarity'' of two elements is calculated.
[10200190] |This will influence the shape of the clusters, as some elements may be close to one another according to one distance and further away according to another.
[10200200] |For example, in a 2-dimensional space, the distance between the point (x=1, y=0) and the origin (x=0, y=0) is always 1 according to the usual norms, but the distance between the point (x=1, y=1) and the origin can be 2,<math>\sqrt 2</math> or 1 if you take respectively the 1-norm, 2-norm or infinity-norm distance.
[10200210] |Common distance functions: 
[10200220] |* The [[Euclidean distance]] (also called distance [[as the crow flies]] or 2-norm distance).
[10200230] |A review of cluster analysis in health psychology research found that the most common distance measure in published studies in that research area is the Euclidean distance or the squared Euclidean distance.
[10200240] |* The [[Manhattan distance]] (also called taxicab norm or 1-norm)
[10200250] |* The [[Maximum_norm|maximum norm]]
[10200260] |* The [[Mahalanobis distance]] corrects data for different scales and correlations in the variables
[10200270] |* The angle between two vectors can be used as a distance measure when clustering high dimensional data.
[10200280] |See [[Inner product space]].
[10200290] |* The [[Hamming distance]] (sometimes edit distance) measures the minimum number of substitutions required to change one member into another.
[10200300] |==Hierarchical clustering== 
[10200310] |===Creating clusters=== 
[10200320] |Hierarchical clustering builds (agglomerative), or breaks up (divisive), a hierarchy of clusters.
[10200330] |The traditional representation of this hierarchy is a [[tree data structure|tree]] (called a [[dendrogram]]), with individual elements at one end and a single cluster containing every element at the other.
[10200340] |Agglomerative algorithms begin at the top of the tree, whereas divisive algorithms begin at the root.
[10200350] |(In the figure, the arrows indicate an agglomerative clustering.)
[10200360] |Cutting the tree at a given height will give a clustering at a selected precision.
[10200370] |In the following example, cutting after the second row will yield clusters {a} {b c} {d e} {f}.
[10200380] |Cutting after the third row will yield clusters {a} {b c} {d e f}, which is a coarser clustering, with a smaller number of larger clusters.
[10200390] |===Agglomerative hierarchical clustering=== 
[10200400] |For example, suppose this data is to be clustered, and the [[euclidean distance]] is the [[Metric (mathematics)|distance metric]].
[10200410] |The hierarchical clustering [[dendrogram]] would be as such:
[10200420] |This method builds the hierarchy from the individual elements by progressively merging clusters.
[10200430] |In our example, we have six elements {a} {b} {c} {d} {e} and {f}.
[10200440] |The first step is to determine which elements to merge in a cluster.
[10200450] |Usually, we want to take the two closest elements, according to the chosen distance.
[10200460] |Optionally, one can also construct a [[distance matrix]] at this stage, where the number in the ''i''-th row ''j''-th column is the distance between the ''i''-th and ''j''-th elements.
[10200470] |Then, as clustering progresses, rows and columns are merged as the clusters are merged and the distances updated.
[10200480] |This is a common way to implement this type of clustering, and has the benefit of caching distances between clusters.
[10200490] |A simple agglomerative clustering algorithm is described in the [[single linkage clustering]] page; it can easily be adapted to different types of linkage (see below).
[10200500] |Suppose we have merged the two closest elements ''b'' and ''c'', we now have the following clusters {''a''}, {''b'', ''c''}, {''d''}, {''e''} and {''f''}, and want to merge them further.
[10200510] |To do that, we need to take the distance between {a} and {b c}, and therefore define the distance between two clusters.
[10200520] |Usually the distance between two clusters <math>\mathcal{A}</math> and <math>\mathcal{B}</math> is one of the following: 
[10200530] |* The maximum distance between elements of each cluster (also called complete linkage clustering):
[10200540] |::<math> \max \{\, d(x,y) : x \in \mathcal{A},\, y \in \mathcal{B}\,\} </math> 
[10200550] |* The minimum distance between elements of each cluster (also called [[single linkage clustering]]):
[10200560] |::<math> \min \{\, d(x,y) : x \in \mathcal{A},\, y \in \mathcal{B} \,\} </math> 
[10200570] |* The mean distance between elements of each cluster (also called average linkage clustering, used e.g. in [[UPGMA]]):
[10200580] |::<math> {1 \over {|\mathcal{A}|\cdot|\mathcal{B}|}}\sum_{x \in \mathcal{A}}\sum_{ y \in \mathcal{B}} d(x,y) </math> 
[10200590] |* The sum of all intra-cluster variance
[10200600] |* The increase in variance for the cluster being merged ([[Ward's criterion]])
[10200610] |* The probability that candidate clusters spawn from the same distribution function (V-linkage)
[10200620] |Each agglomeration occurs at a greater distance between clusters than the previous agglomeration, and one can decide to stop clustering either when the clusters are too far apart to be merged (distance criterion) or when there is a sufficiently small number of clusters (number criterion).
[10200630] |=== Concept clustering === 
[10200640] |Another variation of the agglomerative clustering approach is [[conceptual clustering]].
[10200650] |==Partitional clustering== 
[10200660] |===''K''-means and derivatives=== 
[10200670] |====''K''-means clustering==== 
[10200680] |The [[K-means algorithm|''K''-means algorithm]] assigns each point to the cluster whose center (also called centroid) is nearest.
[10200690] |The center is the average of all the points in the cluster — that is, its coordinates are the arithmetic mean for each dimension separately over all the points in the cluster...
[10200700] |:''Example:'' The data set has three dimensions and the cluster has two points: ''X'' = (''x''<sub>1</sub>, ''x''<sub>2</sub>, ''x''<sub>3</sub>) and ''Y'' = (''y''<sub>1</sub>, ''y''<sub>2</sub>, ''y''<sub>3</sub>).
[10200710] |Then the centroid ''Z'' becomes ''Z'' = (''z''<sub>1</sub>, ''z''<sub>2</sub>, ''z''<sub>3</sub>), where ''z''<sub>1</sub> = (''x''<sub>1</sub>&nbsp;+&nbsp;''y''<sub>1</sub>)/2 and ''z''<sub>2</sub> = (''x''<sub>2</sub>&nbsp;+&nbsp;''y''<sub>2</sub>)/2 and ''z''<sub>3</sub> = (''x''<sub>3</sub>&nbsp;+&nbsp;''y''<sub>3</sub>)/2.
[10200720] |The algorithm steps are (J. MacQueen, 1967): 
[10200730] |* Choose the number of clusters, ''k''.
[10200740] |* Randomly generate ''k'' clusters and determine the cluster centers, or directly generate ''k'' random points as cluster centers.
[10200750] |* Assign each point to the nearest cluster center.
[10200760] |* Recompute the new cluster centers.
[10200770] |* Repeat the two previous steps until some convergence criterion is met (usually that the assignment hasn't changed).
[10200780] |The main advantages of this algorithm are its simplicity and speed which allows it to run on large datasets.
[10200790] |Its disadvantage is that it does not yield the same result with each run, since the resulting clusters depend on the initial random assignments.
[10200800] |It minimizes intra-cluster variance, but does not ensure that the result has a global minimum of variance.
[10200810] |====Fuzzy ''c''-means clustering==== 
[10200820] |In [[fuzzy clustering]], each point has a degree of belonging to clusters, as in [[fuzzy logic]], rather than belonging completely to just one cluster.
[10200830] |Thus, points on the edge of a cluster, may be ''in the cluster'' to a lesser degree than points in the center of cluster.
[10200840] |For each point ''x'' we have a coefficient giving the degree of being in the ''k''th cluster <math>u_k(x)</math>.
[10200850] |Usually, the sum of those coefficients is defined to be 1:
[10200860] |:<math> \forall x \sum_{k=1}^{\mathrm{num.}\ \mathrm{clusters}} u_k(x) \ =1.</math>
[10200870] |With fuzzy ''c''-means, the centroid of a cluster is the mean of all points, weighted by their degree of belonging to the cluster: 
[10200880] |:<math>\mathrm{center}_k = {{\sum_x u_k(x)^m x} \over {\sum_x u_k(x)^m}}.</math>
[10200890] |The degree of belonging is related to the inverse of the distance to the cluster
[10200900] |:<math>u_k(x) = {1 \over d(\mathrm{center}_k,x)},</math>
[10200910] |then the coefficients are normalized and fuzzyfied with a real parameter <math>m>1</math> so that their sum is 1.
[10200920] |So
[10200930] |:<math>u_k(x) = \frac{1}{\sum_j \left(\frac{d(\mathrm{center}_k,x)}{d(\mathrm{center}_j,x)}\right)^{2/(m-1)}}.</math>
[10200940] |For ''m'' equal to 2, this is equivalent to normalising the coefficient linearly to make their sum 1.
[10200950] |When ''m'' is close to 1, then cluster center closest to the point is given much more weight than the others, and the algorithm is similar to ''k''-means.
[10200960] |The fuzzy ''c''-means algorithm is very similar to the ''k''-means algorithm: 
[10200970] |* Choose a number of clusters.
[10200980] |* Assign randomly to each point coefficients for being in the clusters.
[10200990] |* Repeat until the algorithm has converged (that is, the coefficients' change between two iterations is no more than <math>\epsilon</math>, the given sensitivity threshold) :
[10201000] |** Compute the centroid for each cluster, using the formula above.
[10201010] |** For each point, compute its coefficients of being in the clusters, using the formula above.
[10201020] |The algorithm minimizes intra-cluster variance as well, but has the same problems as ''k''-means, the minimum is a local minimum, and the results depend on the initial choice of weights.
[10201030] |The [[Expectation-maximization algorithm]] is a more statistically formalized method which includes some of these ideas: partial membership in classes.
[10201040] |It has better convergence properties and is in general preferred to fuzzy-c-means.
[10201050] |====QT clustering algorithm==== 
[10201060] |QT (quality threshold) clustering (Heyer et al, 1999) is an alternative method of partitioning data, invented for gene clustering.
[10201070] |It requires more computing power than ''k''-means, but does not require specifying the number of clusters ''a priori'', and always returns the same result when run several times.
[10201080] |The algorithm is: 
[10201090] |* The user chooses a maximum diameter for clusters.
[10201100] |* Build a candidate cluster for each point by including the closest point, the next closest, and so on, until the diameter of the cluster surpasses the threshold.
[10201110] |* Save the candidate cluster with the most points as the first true cluster, and remove all points in the cluster from further consideration.
[10201120] |Must clarify what happens if more than 1 cluster has the maximum number of points ?
[10201130] |* [[Recursion|Recurse]] with the reduced set of points.
[10201140] |The distance between a point and a group of points is computed using complete linkage, i.e. as the maximum distance from the point to any member of the group (see the "Agglomerative hierarchical clustering" section about distance between clusters).
[10201150] |=== Locality-sensitive hashing === 
[10201160] |[[Locality-sensitive hashing]] can be used for clustering.
[10201170] |Feature space vectors are sets, and the metric used is the [[Jaccard distance]].
[10201180] |The feature space can be considered high-dimensional.
[10201190] |The ''min-wise independent permutations'' LSH scheme (sometimes MinHash) is then used to put similar items into buckets.
[10201200] |With just one set of hashing methods, there are only clusters of very similar elements.
[10201210] |By seeding the hash functions several times (eg 20), it is possible to get bigger clusters.
[10201220] |=== Graph-theoretic methods === 
[10201230] |[[Formal concept analysis]] is a technique for generating clusters of objects and attributes, given a [[bipartite graph]] representing the relations between the objects and attributes.
[10201240] |Other methods for generating ''overlapping clusters'' (a [[Cover (topology)|cover]] rather than a [[partition of a set|partition]]) are discussed by Jardine and Sibson (1968) and Cole and Wishart (1970).
[10201250] |== Elbow criterion == 
[10201260] |The elbow criterion is a common [[rule of thumb]] to determine what number of clusters should be chosen, for example for ''k''-means and agglomerative hierarchical clustering.
[10201270] |It should also be noted that the initial assignment of cluster seeds has bearing on the final model performance.
[10201280] |Thus, it is appropriate to re-run the cluster analysis multiple times.
[10201290] |The elbow criterion says that you should choose a number of clusters so that adding another cluster doesn't add sufficient information.
[10201300] |More precisely, if you graph the percentage of variance explained by the clusters against the number of clusters, the first clusters will add much information (explain a lot of variance), but at some point the marginal gain will drop, giving an angle in the graph (the elbow).
[10201310] |This elbow cannot always be unambiguously identified.
[10201320] |Percentage of variance explained is the ratio of the between-group variance to the total variance.
[10201330] |On the following graph, the elbow is indicated by the red circle.
[10201340] |The number of clusters chosen should therefore be 4.
[10201350] |== Spectral clustering == 
[10201360] |Given a set of data points A, the [[similarity matrix]] may be defined as a matrix <math>S</math> where <math>S_{ij}</math> represents a measure of the similarity between points <math>i, j\in A</math>.
[10201370] |Spectral clustering techniques make use of the [[Spectrum of a matrix|spectrum]] of the similarity matrix of the data to perform [[dimensionality reduction]] for clustering in fewer dimensions.
[10201380] |One such technique is the ''[[Shi-Malik algorithm]]'', commonly used for [[segmentation (image processing)|image segmentation]].
[10201390] |It partitions points into two sets <math>(S_1,S_2)</math> based on the [[eigenvector]] <math>v</math> corresponding to the second-smallest [[eigenvalue]] of the [[Laplacian matrix]]
[10201400] |:<math>L = I - D^{-1/2}SD^{-1/2}</math>
[10201410] |of <math>S</math>, where <math>D</math> is the diagonal matrix
[10201420] |:<math>D_{ii} = \sum_{j} S_{ij}.</math>
[10201430] |This partitioning may be done in various ways, such as by taking the median <math>m</math> of the components in <math>v</math>, and placing all points whose component in <math>v</math> is greater than <math>m</math> in <math>S_1</math>, and the rest in <math>S_2</math>.
[10201440] |The algorithm can be used for hierarchical clustering by repeatedly partitioning the subsets in this fashion.
[10201450] |A related algorithm is the ''[[Meila-Shi algorithm]]'', which takes the [[eigenvector]]s corresponding to the ''k'' largest [[eigenvalue]]s of the matrix <math>P = SD^{-1}</math> for some ''k'', and then invokes another (e.g. ''k''-means) to cluster points by their respective ''k'' components in these eigenvectors.
[10201460] |==Applications== 
[10201470] |=== Biology === 
[10201480] |In [[biology]] '''clustering''' has many applications 
[10201490] |*In imaging, data clustering may take different form based on the data dimensionality.
[10201500] |For example, the [http://wiki.stat.ucla.edu/socr/index.php/SOCR_EduMaterials_Activities_2D_PointSegmentation_EM_Mixture SOCR EM Mixture model segmentation activity and applet] shows how to obtain point, region or volume classification using the online [[SOCR]] computational libraries.
[10201510] |*In the fields of [[plant]] and [[animal]] [[ecology]], clustering is used to describe and to make spatial and temporal comparisons of communities (assemblages) of organisms in heterogeneous environments; it is also used in [[Systematics|plant systematics]] to generate artificial [[Phylogeny|phylogenies]] or clusters of organisms (individuals) at the species, genus or higher level that share a number of attributes
[10201520] |*In computational biology and [[bioinformatics]]:
[10201530] |** In [[transcriptome|transcriptomics]], clustering is used to build groups of [[genes]] with related expression patterns (also known as coexpressed genes).
[10201540] |Often such groups contain functionally related proteins, such as [[enzyme]]s for a specific [[metabolic pathway|pathway]], or genes that are co-regulated.
[10201550] |High throughput experiments using [[expressed sequence tag]]s (ESTs) or [[DNA microarray]]s can be a powerful tool for [[genome annotation]], a general aspect of [[genomics]].
[10201560] |** In [[sequence analysis]], clustering is used to group homologous sequences into [[list of gene families|gene families]].
[10201570] |This is a very important concept in bioinformatics, and [[evolutionary biology]] in general.
[10201580] |See evolution by [[gene duplication]].
[10201590] |** In high-throughput genotyping platforms clustering algorithms are used to automatically assign [[genotypes]].
[10201600] |=== Medicine === 
[10201610] |In [[medical imaging]], such as [[PET scan|PET scans]], cluster analysis can be used to differentiate between different types of [[tissue (biology)|tissue]] and [[blood]] in a three dimensional image.
[10201620] |In this application, actual position does not matter, but the [[voxel]] intensity is considered as a [[coordinate vector|vector]], with a dimension for each image that was taken over time.
[10201630] |This technique allows, for example, accurate measurement of the rate a radioactive tracer is delivered to the area of interest, without a separate sampling of [[arterial]] blood, an intrusive technique that is most common today.
[10201640] |=== Market research === 
[10201650] |Cluster analysis is widely used in [[market research]] when working with multivariate data from [[Statistical survey|surveys]] and test panels.
[10201660] |Market researchers use cluster analysis to partition the general [[population]] of [[consumers]] into market segments and to better understand the relationships between different groups of consumers/potential [[customers]].
[10201670] |* Segmenting the market and determining [[target market]]s
[10201680] |* [[positioning (marketing)|Product positioning]]
[10201690] |* [[New product development]]
[10201700] |* Selecting test markets (see : [[experimental techniques]])
[10201710] |=== Other applications === 
[10201720] |'''Social network analysis''': In the study of [[social networks]], clustering may be used to recognize [[communities]] within large groups of people.
[10201730] |'''Image segmentation''': Clustering can be used to divide a [[digital]] [[image]] into distinct regions for [[border detection]] or [[object recognition]].
[10201740] |'''Data mining''': Many [[data mining]] applications involve partitioning data items into related subsets; the marketing applications discussed above represent some examples.
[10201750] |Another common application is the division of documents, such as [[World Wide Web]] pages, into genres.
[10201760] |'''Search result grouping''': In the process of intelligent grouping of the files and websites, clustering may be used to create a more relevant set of search results compared to normal search engines like [[Google]].
[10201770] |There are currently a number of web based clustering tools such as [[Clusty]].
[10201780] |'''Slippy map optimization''': [[Flickr]]'s map of photos and other map sites use clustering to reduce the number of markers on a map.
[10201790] |This makes it both faster and reduces the amount of visual clutter.
[10201800] |'''IMRT segmentation''': Clustering can be used to divide a fluence map into distinct regions for conversion into deliverable fields in MLC-based Radiation Therapy.
[10201810] |'''Grouping of Shopping Items''': Clustering can be used to group all the shopping items available on the web into a set of unique products.
[10201820] |For example, all the items on eBay can be grouped into unique products.
[10201825] |(eBay doesn't have the concept of a SKU)
[10201830] |'''[[Mathematical chemistry]]''': To find structural similarity, etc., for example, 3000 chemical compounds were clustered in the space of 90 [[topological index|topological indices]].
[10201840] |'''Petroleum Geology''': Cluster Analysis is used to reconstruct missing bottom hole core data or missing log curves in order to evaluate reservoir properties.
[10201850] |== Comparisons between data clusterings == 
[10201860] |There have been several suggestions for a measure of similarity between two clusterings.
[10201870] |Such a measure can be used to compare how well different data clustering algorithms perform on a set of data.
[10201880] |Many of these measures are derived from the [[matching matrix]] (aka [[confusion matrix]]), e.g., the [[Rand index|Rand measure]] and the Fowlkes-Mallows ''B''<sub>''k''</sub> measures.
[10201890] |[[Marina Meila]]'s Variation of Information metric is a more recent approach for measuring distance between clusterings.
[10201900] |It uses [[Mutual information|mutual information]] and [[entropy]] to approximate the distance between two clusterings across the lattice of possible clusterings.
[10201910] |==Algorithms== 
[10201920] |In recent years considerable effort has been put into improving algorithm performance (Z. Huang, 1998).
[10201930] |Among the most popular are ''CLARANS'' (Ng and Han,1994), ''[[DBSCAN]]'' (Ester et al., 1996) and ''BIRCH'' (Zhang et al., 1996).
[10210010] |<article>Data mining</article>
[10210020] |'''Data mining''' is the process of [[sorting]] through large amounts of data and picking out relevant information.
[10210030] |It is usually used by [[business intelligence]] organizations, and [[financial analyst]]s, but is increasingly being used in the sciences to extract information from the enormous [[data set]]s generated by modern experimental and observational methods.
[10210040] |It has been described as "the nontrivial extraction of implicit, previously unknown, and potentially useful [[information]] from [[data]]" and "the science of extracting useful information from large [[data set]]s or [[database]]s.
[10210050] |" Data mining in relation to [[enterprise resource planning]] is the statistical and logical analysis of large sets of transaction data, looking for patterns that can aid decision making.
[10210060] |==Background== 
[10210070] |Traditionally, business analysts have performed the task of extracting useful [[information]] from recorded [[data]], but the increasing volume of data in modern business and science calls for computer-based approaches.
[10210080] |As [[data set]]s have grown in size and complexity, there has been a shift away from direct hands-on data analysis toward indirect, automatic data analysis using more complex and sophisticated tools.
[10210090] |The modern technologies of [[computers]], [[networks]], and [[sensors]] have made [[data collection]] and organization much easier.
[10210100] |However, the captured data needs to be converted into [[information]] and [[knowledge]] to become useful.
[10210110] |Data mining is the entire process of applying computer-based [[methodology]], including new techniques for [[knowledge discovery]], to data.
[10210120] |Data mining identifies trends within data that go beyond simple analysis.
[10210130] |Through the use of sophisticated algorithms, non-statistician users have the opportunity to identify key attributes of business processes and target opportunities.
[10210140] |However, abdicating control of this process from the statistician to the machine may result in false-positives or no useful results at all.
[10210150] |Although data mining is a relatively new term, the technology is not.
[10210160] |For many years, businesses have used powerful computers to sift through volumes of data such as supermarket scanner data to produce market research reports (although reporting is not considered to be data mining).
[10210170] |Continuous innovations in computer processing power, disk storage, and statistical software are dramatically increasing the accuracy and usefulness of data analysis.
[10210180] |Web 2.0 technologies have generated a colossal amount of user-generated data and media, making it hard to aggregate and consume information in a meaningful way without getting overloaded.
[10210190] |Given the size of the data on the Internet, and the difficulty in contextualizing it, it is unclear whether the traditional approach to data mining is computationally viable.
[10210200] |The term data mining is often used to apply to the two separate processes of knowledge discovery and [[prediction]].
[10210210] |Knowledge discovery provides explicit information that has a readable form and can be understood by a user.
[10210220] |[[Forecasting]], or [[predictive modeling]] provides predictions of future events and may be transparent and readable in some approaches (e.g., rule-based systems) and opaque in others such as [[neural network]]s.
[10210230] |Moreover, some data-mining systems such as neural networks are inherently geared towards prediction and pattern recognition, rather than knowledge discovery.
[10210240] |[[Metadata]], or data about a given data set, are often expressed in a condensed ''data-minable'' format, or one that facilitates the practice of data mining.
[10210250] |Common examples include executive summaries and scientific abstracts.
[10210260] |Data mining relies on the use of real world data.
[10210270] |This data is extremely vulnerable to [[collinearity]] precisely because data from the real world may have unknown interrelations.
[10210280] |An unavoidable weakness of data mining is that the critical data that may expose any relationship might have never been observed.
[10210290] |Alternative approaches using an experiment-based approach such as [[Choice Modelling]] for human-generated data may be used.
[10210300] |Inherent correlations are either controlled for or removed altogether through the construction of an [[experimental design]].
[10210310] |Recently, there were some efforts to define a standard for data mining, for example the [[CRISP-DM]] standard for analysis processes or the [[Java Data-Mining]] Standard.
[10210320] |Independent of these standardization efforts, freely available open-source software systems like [[RapidMiner]] and [[Weka (machine learning)| Weka]] have become an informal standard for defining data-mining processes.
[10210330] |==Privacy concerns== 
[10210340] |There are also [[privacy]] and [[human rights]] concerns associated with data mining, specifically regarding the source of the data analyzed.
[10210350] |Data mining provides information that may be difficult to obtain otherwise.
[10210360] |When the data collected involves individual people, there are many questions concerning privacy, legality, and ethics.
[10210370] |In particular, data mining government or commercial data sets for national security or law enforcement purposes has raised privacy concerns.
[10210380] |==Notable uses of data mining== 
[10210390] |===Combatting Terrorism=== 
[10210400] |Data mining has been cited as the method by which the U.S. Army unit [[Able Danger]] had identified the [[September 11, 2001 attacks]] leader, [[Mohamed Atta]], and three other 9/11 hijackers as possible members of an [[Al Qaeda]] cell operating in the U.S. more than a year before the attack.
[10210410] |It has been suggested that both the [[Central Intelligence Agency]] and the [[Canadian Security Intelligence Service]] have employed this method.
[10210420] |Previous data mining to stop terrorist programs under the US government include the Terrorism Information Awareness (TIA) program, Computer-Assisted Passenger Prescreening System (CAPPS II), Analysis, Dissemination, Visualization, Insight, and Semantic Enhancement (ADVISE), Multistate Anti-Terrorism Information Exchange (MATRIX), and the Secure Flight program [http://www.msnbc.msn.com/id/20604775/ Security-MSNBC].
[10210430] |These programs have been discontinued due to controversy over whether they violate the US Constitution's 4th amendment.
[10210440] |===Games=== 
[10210450] |Since the early 1960s, with the availability of [[Oracle machine|oracle]]s for certain [[combinatorial game]]s, also called [[tablebase]]s (e.g. for 3x3-chess) with any beginning configuration, small-board [[dots-and-boxes]], small-board-hex, and certain endgames in chess, dots-and-boxes, and hex; a new area for data mining has been opened up.
[10210460] |This is the extraction of human-usable strategies from these oracles.
[10210470] |Current pattern recognition approaches do not seem to fully have the required high level of abstraction in order to be applied successfully.
[10210480] |Instead, extensive experimentation with the tablebases, combined with an intensive study of tablebase-answers to well designed problems and with knowledge of prior art, i.e. pre-tablebase knowledge, is used to yield insightful patterns.
[10210490] |[[Berlekamp]] in dots-and-boxes etc. and [[John Nunn]] in [[chess]] [[Chess endgame|endgames]] are notable examples of researchers doing this work, though they were not and are not involved in tablebase generation.
[10210500] |===Business=== 
[10210510] |Data mining in [[customer relationship management]] applications can contribute significantly to the bottom line.
[10210520] |Rather than contacting a prospect or customer through a call center or sending mail, only prospects that are predicted to have a high likelihood of responding to an offer are contacted.
[10210530] |More sophisticated methods may be used to optimize across campaigns so that we can predict which channel and which offer an individual is most likely to respond to - across all potential offers.
[10210540] |Finally, in cases where many people will take an action without an offer, uplift modeling can be used to determine which people will have the greatest increase in responding if given an offer.
[10210550] |[[Data clustering]] can also be used to automatically discover the segments or groups within a customer data set.
[10210560] |Businesses employing data mining quickly see a return on investment, but also they recognize that the number of predictive models can quickly become very large.
[10210570] |Rather than one model to predict which customers will [[Churning (stock trade)|churn]], a business could build a separate model for each region and customer type.
[10210580] |Then instead of sending an offer to all people that are likely to churn, it may only want to send offers to customers that will likely take to offer.
[10210590] |And finally, it may also want to determine which customers are going to be profitable over a window of time and only send the offers to those that are likely to be profitable.
[10210600] |In order to maintain this quantity of models, they need to manage model versions and move to ''automated data mining''.
[10210610] |Data mining can also be helpful to human-resources departments in identifying the characteristics of their most successful employees.
[10210620] |Information obtained, such as universities attended by highly successful employees, can help HR focus recruiting efforts accordingly.
[10210630] |Additionally, Strategic Enterprise Management applications help a company translate corporate-level goals, such as profit and margin share targets, into operational decisions, such as production plans and workforce levels.
[10210640] |Another example of data mining, often called the [[market basket analysis]], relates to its use in retail sales.
[10210650] |If a clothing store records the purchases of customers, a data-mining system could identify those customers who favour silk shirts over cotton ones.
[10210660] |Although some explanations of relationships may be difficult, taking advantage of it is easier.
[10210670] |The example deals with [[association rule]]s within transaction-based data.
[10210680] |Not all data are transaction based and logical or inexact [[rule]]s may also be present within a [[database]].
[10210690] |In a manufacturing application, an inexact rule may state that 73% of products which have a specific defect or problem will develop a secondary problem within the next six months.
[10210700] |Related to an integrated-circuit production line, an example of data mining is described in the paper "Mining IC Test Data to Optimize VLSI Testing."
[10210710] |In this paper the application of data mining and decision analysis to the problem of die-level functional test is described.
[10210720] |Experiments mentioned in this paper demonstrate the ability of applying a system of mining historical die-test data to create a probabilistic model of patterns of die failure which are then utilized to decide in real time which die to test next and when to stop testing.
[10210730] |This system has been shown, based on experiments with historical test data, to have the potential to improve profits on mature IC products.
[10210740] |===Science and engineering=== 
[10210750] |In recent years, data mining has been widely used in area of science and engineering, such as [[bioinformatic]]s, [[genetic]]s, [[medicine]], [[education]], and [[electrical power]] engineering.
[10210760] |In the area of study on human genetics, the important goal is to understand the mapping relationship between the inter-individual variation in human [[DNA]] sequences and variability in disease susceptibility.
[10210770] |In lay terms, it is to find out how the changes in an individual's DNA sequence affect the risk of developing common diseases such as [[cancer]].
[10210780] |This is very important to help improve the diagnosis, prevention and treatment of the diseases.
[10210790] |The data mining technique that is used to perform this task is known as [[multifactor dimensionality reduction]].
[10210800] |In the area of electrical power engineering, data mining techniques have been widely used for [[condition monitoring]] of high voltage electrical equipment.
[10210810] |The purpose of condition monitoring is to obtain valuable information on the [[insulation]]'s health status of the equipment.
[10210820] |[[Data clustering]] such as [[self-organizing map]] (SOM) has been applied on the vibration monitoring and analysis of transformer on-load tap-changers(OLTCS).
[10210830] |Using vibration monitoring, it can be observed that each tap change operation generates a signal that contains information about the condition of the tap changer contacts and the drive mechanisms.
[10210840] |Obviously, different tap positions will generate different signals.
[10210850] |However, there was considerable variability amongst normal condition signals for the exact same tap position.
[10210860] |SOM has been applied to detect abnormal conditions and to estimate the nature of the abnormalities.
[10210870] |Data mining techniques have also been applied for [[dissolved gas analysis]] (DGA) on [[power transformer]]s.
[10210880] |DGA, as a diagnostics for power transformer, has been available for centuries.
[10210890] |Data mining techniques such as SOM has been applied to analyse data and to determine trends which are not obvious to the standard DGA ratio techniques such as Duval Triangle.
[10210900] |A fourth area of application for data mining in science/engineering is within educational research, where data mining has been used to study the factors leading students to choose to engage in behaviors which reduce their learning and to understand the factors influencing university student retention.
[10210910] |Other examples of applying data mining technique applications are [[biomedical]] data facilitated by domain ontologies, mining clinical trial data, [[traffic analysis]] using SOM, et cetera.
[10220010] |<article>Data set</article>
[10220020] |A '''data set''' (or '''dataset''') is a collection of [[data]], usually presented in tabular form.
[10220030] |Each column represents a particular variable.
[10220040] |Each row corresponds to a given member of the data set in question.
[10220050] |It lists values for each of the variables, such as height and weight of an object or values of random numbers.
[10220060] |Each value is known as a [[datum]].
[10220070] |The data set may comprise data for one or more members, corresponding to the number of rows.
[10220080] |Historically, the term originated in the [[mainframe computer|mainframe field]], where it had a [[Data set (IBM mainframe)|well-defined meaning]], very close to contemporary ''[[computer file]]''.
[10220090] |This topic is not covered here.
[10220100] |In the simplest case, there is only one variable, and then the data set consists of a single column of values, often represented as a list.
[10220110] |The values may be numbers, such as [[real number]]s or [[integer]]s, for example representing a person's height in centimeters, but may also be [[nominal data]] (i.e., not consisting of [[numerical]] values), for example representing a person's ethnicity.
[10220120] |More generally, values may be of any of the kinds described as a [[level of measurement]].
[10220130] |For each variable, the values will normally all be of the same kind.
[10220140] |However, there may also be "[[missing values]]", which need to be indicated in some way.
[10220150] |In [[statistics]] data sets usually come from actual observations obtained by [[sampling (statistics)|sampling]] a [[statistical population]], and each row corresponds to the observations on one element of that population.
[10220160] |Data sets may further be generated by [[algorithms]] for the purpose of testing certain kinds of [[software]].
[10220170] |Some modern statistical analysis software such as [[PSPP]] still present their data in the classical dataset fashion.
[10220180] |== Classic data sets == 
[10220190] |Several classic [[data set]]s have been used extensively in the [[statistical]] literature:
[10220200] |* [[Iris flower data set]] - multivariate data set introduced by [[Ronald Fisher]] (1936).
[10220210] |* ''[[Categorical data analysis]]'' - Data sets used in the book, ''An Introduction to Categorical Data Analysis'', by Agresti are [http://lib.stat.cmu.edu/datasets/agresti provided on-line by StatLib.]
[10220220] |*''[[Robust statistics]]'' - Data sets used in ''Robust Regression and Outlier Detection'' (Rousseeuw and Leroy, 1986). [http://www.uni-koeln.de/themen/Statistik/data/rousseeuw/ Provided on-line at the University of Cologne.]
[10220230] |*''[[Time series]]'' - Data used in Chatfield's book, ''The Analysis of Time Series'', are [http://lib.stat.cmu.edu/modules.php?op=modload&name=PostWrap&file=index&page=datasets/ provided on-line by StatLib.]
[10220240] |*''Extreme values'' - Data used in the book, ''An Introduction to the Statistical Modeling of Extreme Values'' are [http://homes.stat.unipd.it/coles/public_html/ismev/ismev.dat provided on-line by Stuart Coles], the book's author.
[10220250] |*''Bayesian Data Analysis'' - Data used in the book, ''[[Bayesian]] Data Analysis'', are [http://www.stat.columbia.edu/~gelman/book/data/ provided on-line by Andrew Gelman], one of the book's authors.
[10220260] |* The [ftp://ftp.ics.uci.edu/pub/machine-learning-databases/liver-disorders Bupa liver data], used in several papers in the machine learning (data mining) literature.
[10230010] |<article>ELIZA</article>
[10230020] |'''ELIZA''' is a [[computer program]] by [[Joseph Weizenbaum]], designed in [[1966]], which parodied a [[Rogerian psychotherapy|Rogerian therapist]], largely by rephrasing many of the patient's statements as questions and posing them to the patient.
[10230030] |Thus, for example, the response to "My head hurts" might be "Why do you say your head hurts?"
[10230040] |The response to "My mother hates me" might be "Who else in your family hates you?"
[10230050] |ELIZA was named after Eliza Doolittle, a working-class character in [[George Bernard Shaw|George Bernard Shaw's]] play ''[[Pygmalion (play)|Pygmalion]]'', who is taught to speak with an [[upper class]] [[accent (linguistics)|accent]].
[10230060] |==Overview== 
[10230070] |It is sometimes inaccurately said that ELIZA simulates a therapist.
[10230080] |Weizenbaum said that ELIZA provided a "[[parody]]" of "the responses of a non-directional psychotherapist in an initial psychiatric interview."
[10230090] |He chose the context of psychotherapy to "sidestep the problem of giving the program a data base of real-world knowledge", the therapeutic situation being one of the few real human situations in which a human being can reply to a statement with a question that indicates very little specific knowledge of the topic under discussion.
[10230100] |For example, it is a context in which the question "Who is your favorite composer?" can be answered acceptably with responses such as "What about your own favorite composer?" or "Does that question interest you?"
[10230110] |First implemented in Weizenbaum's own [[SLIP (programming language)|SLIP]] list-processing language, ELIZA worked by simple [[parsing]] and substitution of key words into canned phrases.
[10230120] |Depending upon the initial entries by the user the illusion of a human writer could be instantly dispelled, or could continue through several interchanges.
[10230130] |It was sometimes so convincing that there are many anecdotes about people becoming very emotionally caught up in dealing with ELIZA for several minutes until the machine's true lack of understanding became apparent.
[10230140] |This was likely due to people's tendency to attach meanings to words which the computer never put there.
[10230150] |In 1966, interactive computing (via a teletype) was new.
[10230160] |It was 15 years before the personal computer became familiar to the general public, and two decades before most people encountered attempts at [[natural language processing]] in Internet services like [[Ask.com]] or PC help systems such as Microsoft Office [[Office Assistant|Clippy]].
[10230170] |Although those programs included years of research and work (while ''[[Ecala]]'' eclipsed the functionality of ''ELIZA'' after less than two weeks of work by a single programmer), ''ELIZA'' remains a milestone simply because it was the first time a programmer had attempted such a human-machine interaction with the goal of creating the illusion (however brief) of human-''human'' interaction.
[10230180] |In the article "theNewMediaReader" an excerpt from "From Computer Power and Human Reason" by Joseph Weizenbaum in 1976, edited by Noah Wardrip-Fruin and Nick Montfort he references how quickly and deeply people became emotionally involved with the computer program, taking offence when he asked to view the transcripts, saying it was an invasion of their privacy, even asking him to leave the room while they were working with ELIZA.
[10230190] |==Influence on games== 
[10230200] |ELIZA impacted a number of early [[computer games]] by demonstrating additional kinds of [[interface design]]s.
[10230210] |[[Don Daglow]] wrote an enhanced version of the program called ''Ecala'' on a [[PDP-10]] [[mainframe computer]] at [[Pomona College]] in [[1973]] before writing what was possibly the second or third computer [[role-playing game]], ''[[Dungeon (computer game)|Dungeon]]'' ([[1975]]) (The first was probably "[[dnd (computer game)|dnd]]", written on and for the PLATO system in 1974, and the second may have been [[Moria]], written in 1975).
[10230220] |It is likely that ''ELIZA'' was also on the system where [[Will Crowther]] created ''[[Colossal Cave Adventure|Adventure]]'', the 1975 game that spawned the [[interactive fiction]] genre.
[10230230] |But both these games appeared some nine years after the original ''ELIZA''.
[10230240] |==Response and legacy== 
[10230250] |Lay responses to ELIZA were disturbing to Weizenbaum and motivated him to write his book ''Computer Power and Human Reason: From Judgment to Calculation'', in which he explains the limits of computers, as he wants to make clear in people's minds his opinion that the anthropomorphic views of computers are just a reduction of the human being and any life form for that matter.
[10230260] |There are many programs based on ELIZA in different languages in addition to ''Ecala''.
[10230270] |For example, in 1980, a company called "Don't Ask Software", founded by Randy Simon, created a version for the Apple II, Atari, and Commodore PCs, which verbally abused the user based on the user's input.
[10230280] |In Spain, Jordi Perez developed the famous ZEBAL in 1993, written in [[Clipper programming language|Clipper]] for MS-DOS.
[10230290] |Other versions adapted ELIZA around a religious theme, such as ones featuring Jesus (both serious and comedic) and another Apple II variant called ''I Am Buddha''.
[10230300] |The 1980 game ''[[The Prisoner (computer game)|The Prisoner]]'' incorporated ELIZA-style interaction within its gameplay.
[10230310] |ELIZA has also inspired a [[podcast]] called "The Eliza Podcast", in which the host engages in self-analysis using a computer generated voice prompting with questions in the same style as the ELIZA program.
[10230320] |==Implementations== 
[10230330] |* Using [[JavaScript]]: http://www.manifestation.com/neurotoys/eliza.php3
[10230340] |* Source code in [[Java (programming language)|Java]]: http://chayden.net/eliza/Eliza.html
[10230350] |* Another [[Java (programming language)|Java]]-implementation of ELIZA: http://www.wedesoft.demon.co.uk/eliza/
[10230360] |* Using [[C (programming language)|C]] on the [[TI-89]]: http://kaikostack.com/ti89_en.htm#eliza
[10230370] |* Using [[z80#The Z80 assembly language|z80 Assembly]] on the [[TI-83#TI-83 Plus|TI-83 Plus]]: http://www.ticalc.org/archives/files/fileinfo/354/35463.html
[10230380] |* A [[perl module]] [http://search.cpan.org/dist/Chatbot-Eliza/ Chatbot::Eliza] &mdash; [http://www.terrence.com/perl/eliza/eliza.cgi example implementation]
[10230390] |* Trans-Tex Software has released shareware versions for Classic Mac OS and Mac OS X: http://www.tex-edit.com/index.html#Eliza
[10230400] |* <code>doctor.el</code> (circa [[1985]]) in [[Emacs]].
[10230410] |* Source code in [[Tcl]]: [http://wiki.tcl.tk/9235 http://wiki.tcl.tk/9235]
[10230420] |* The [http://www.indyproject.org Indy] [[Delphi]] oriented TCP/IP components suite has an Eliza implementation as demo.
[10230430] |*[http://www.cs.bham.ac.uk/research/projects/cogaff/eliza Pop-11 Eliza] in the [[poplog]] system.
[10230440] |Goes back to about 1976, when it was used for teaching AI at [[Sussex University]].
[10230450] |Now part of the free open source Poplog system.
[10230460] |* Source code in [[BASIC]]: http://www.atariarchives.org/bigcomputergames/showpage.php?page=22
[10230470] |* ECC-Eliza for Windows (actual program is for DOS, but unpacker is for Windows) (rename .txt to .exe before running): http://www5.domaindlx.com/ecceliza1/ecceliza.txt.
[10230480] |More recent version at http://web.archive.org/web/20041117123025/http://www5.domaindlx.com/ecceliza1/ecceliza.txt.
[10240010] |<article>English language</article>
[10240020] |'''English''' is an [[Indo-European languages|Indo-European]], [[West Germanic languages|West Germanic language]] originating in [[England]], and is the [[first language]] for most people in the [[United Kingdom]], the [[United States]], [[Canada]], [[Australia]], [[New Zealand]], [[Republic of Ireland|Ireland]], and the [[Anglophone Caribbean]].
[10240030] |It is used extensively as a [[second language]] and as an [[official language]] throughout the world, especially in [[Commonwealth of Nations|Commonwealth]] countries and in many [[international organization]]s.
[10240040] |==Significance== 
[10240050] |Modern English, sometimes described as the first global [[lingua franca]], is the [[Linguistic imperialism|dominant]] [[international auxiliary language|international language]] in [[communication]]s, [[science]], [[business]], [[aviation]], [[entertainment]], [[radio]] and [[diplomacy]].
[10240060] |The initial reason for its enormous spread beyond the bounds of the [[British Isles]] where it was originally a native tongue was the [[British Empire]], and by the late nineteenth century its influence had won a truly global reach.
[10240070] |It is the dominant language in the [[United States]] and the growing economic and cultural influence of that [[federal union]] as a global [[superpower]] since [[World War II]] has significantly accelerated adoption of English as a language across the planet.
[10240080] |A working knowledge of English has become a requirement in a number of fields, occupations and professions such as medicine and as a consequence over a billion people speak English to at least a basic level (see [[English language learning and teaching]]).
[10240090] |Linguists such as [[David Crystal]] recognize that one impact of this massive growth of English, in common with other global languages, has been to reduce native [[Natural language#Linguistic diversity|linguistic diversity]] in many parts of the world historically, most particularly in [[Australasia]] and [[North America]], and its huge influence continues to play an important role in [[language attrition]].
[10240100] |By a similar token, [[historical linguistics|historical linguists]], aware of the complex and fluid dynamics of [[language change]], are always alive to the potential English contains through the vast size and spread of the communities that use it and its natural internal variety, such as in its [[English-based creole languages|creoles]] and [[pidgin]]s, to produce a new [[language family|family]] of distinct languages over time.
[10240110] |English is one of six official languages of the [[United Nations]].
[10240120] |==History== 
[10240130] |English is a [[West Germanic languages|West Germanic]] language that originated from the [[Anglo-Frisian languages|Anglo-Frisian]] dialects brought to [[Great Britain|Britain]] by Germanic settlers and Roman auxiliary troops from various parts of what is now northwest Germany and the Northern [[Netherlands]].
[10240140] |Initially, [[Old English language|Old English]] was a diverse group of dialects, reflecting the varied origins of the Anglo-Saxon Kingdoms of [[England]].
[10240150] |One of these dialects, Late West Saxon, eventually came to dominate.
[10240160] |The original Old English language was then influenced by two waves of invasion.
[10240170] |The first was by language speakers of the [[North Germanic languages|Scandinavian]] branch of the Germanic family; they conquered and colonized parts of Britain in the 8th and 9th centuries.
[10240180] |The second was the [[Normans]] in the 11th century, who spoke Old Norman and ultimately developed an English variety of this called [[Anglo-Norman]].
[10240190] |These two invasions caused English to become "mixed" to some degree (though it was never a truly mixed language in the strict linguistic sense of the word; mixed languages arise from the cohabitation of speakers of different languages, who develop a hybrid tongue for basic communication).
[10240200] |Cohabitation with the Scandinavians resulted in a significant grammatical simplification and lexical supplementation of the Anglo-Frisian core of English; the later [[Normans|Norman]] occupation led to the grafting onto that Germanic core of a more elaborate layer of words from the [[Italic languages|Italic]] branch of the European languages.
[10240210] |This Norman influence entered English largely through the courts and government.
[10240220] |Thus, English developed into a "borrowing" language of great flexibility and with a huge vocabulary.
[10240230] |== Classification and related languages == 
[10240240] |The English language belongs to the western sub-branch of the [[Germanic languages|Germanic branch]] of the [[Indo-European languages|Indo-European]] family of languages.
[10240250] |The closest living relative of English is [[Scots language|Scots]], spoken primarily in Scotland and parts of Northern Ireland, which is viewed by linguists as either a separate language or a group of dialects of English.
[10240260] |The next closest relative to English after Scots is [[Frisian languages|Frisian]], spoken in the Northern Netherlands and Northwest Germany.
[10240270] |Other less closely related living [[West Germanic languages]] include [[Dutch language|Dutch]], [[Low German]], [[German language|German]] and [[Afrikaans]].
[10240280] |The [[North Germanic languages]] of Scandinavia are less closely related to English than the West Germanic languages.
[10240290] |Many [[French language|French]] words are also intelligible to an English speaker (though pronunciations are often quite different) because English absorbed a large vocabulary from [[Norman language|Norman]] and French, via [[Anglo-Norman]] after the Norman Conquest and directly from French in subsequent centuries.
[10240300] |As a result, a large portion of English vocabulary is derived from French, with some minor spelling differences (word endings, use of old French spellings, etc.), as well as occasional divergences in meaning, in so-called "faux amis", or [[false friend]]s.
[10240310] |The pronunciation of French loanwords in English has become completely anglicized and follows a typically Germanic pattern of stress.
[10240320] |== Geographical distribution == 
[10240330] |Approximately 375 million people speak English as their first language.
[10240340] |English today is probably the third largest language by number of native speakers, after [[Mandarin (linguistics)|Mandarin Chinese]] and [[Spanish language|Spanish]].
[10240350] |However, when combining native and non-native speakers it is probably the most commonly spoken language in the world, though possibly second to a combination of the [[Chinese language]]s, depending on whether or not distinctions in the latter are classified as "languages" or "dialects."
[10240360] |Estimates that include [[second language]] speakers vary greatly from 470 million to over a billion depending on how [[literacy]] or mastery is defined.
[10240370] |There are some who claim that non-native speakers now outnumber native speakers by a ratio of 3 to 1.
[10240380] |The countries with the highest populations of native English speakers are, in descending order: United States (215 million), United Kingdom (58 million), Canada (18.2 million), Australia (15.5 million), [[Republic of Ireland|Ireland]] (3.8 million), South Africa (3.7 million), and New Zealand (3.0-3.7 million).
[10240390] |Countries such as [[Jamaica]] and [[Nigeria]] also have millions of native speakers of [[dialect continuum|dialect continua]] ranging from an [[English-based creole languages|English-based creole]] to a more standard version of English.
[10240400] |Of those nations where English is spoken as a second language, India has the most such speakers ('[[Indian English]]') and linguistics professor [[David Crystal]] claims that, combining native and non-native speakers, India now has more people who speak or understand English than any other country in the world.
[10240410] |Following India is the [[People's Republic of China]].
[10240420] |===Countries in order of total speakers===
[10240430] |English is the primary language in [[Anguilla]], [[Antigua and Barbuda]], Australia ([[Australian English]]), the [[The Bahamas|Bahamas]], [[Barbados]], [[Bermuda]], [[Belize]] ([[Belizean Kriol language|Belizean Kriol]]), the [[British Indian Ocean Territory]], the [[British Virgin Islands]], Canada ([[Canadian English]]), the [[Cayman Islands]], the [[Falkland Islands]], [[Gibraltar]], [[Grenada]], [[Guam]], [[Guernsey]] ([[Channel Island English]]), [[Guyana]], Ireland ([[Hiberno-English]]), [[Isle of Man]] ([[Manx English]]), Jamaica ([[Jamaican English]]), [[Jersey]], [[Montserrat]], [[Nauru]], New Zealand ([[New Zealand English]]), [[Pitcairn Islands]], [[Saint Helena]], [[Saint Kitts and Nevis]], [[Saint Vincent and the Grenadines]], [[Singapore]], [[South Georgia and the South Sandwich Islands]], [[Trinidad and Tobago]], the [[Turks and Caicos Islands]], the United Kingdom, the [[United States Virgin Islands|U.S. Virgin Islands]], and the United States.
[10240440] |In many other countries, where English is not the most spoken language, it is an official language; these countries include [[Botswana]], [[Cameroon]], [[Dominica]], [[Fiji]], the [[Federated States of Micronesia]], [[Ghana]], [[The Gambia|Gambia]], [[India]], [[Kenya]], [[Kiribati]], [[Lesotho]], [[Liberia]], [[Madagascar]], [[Malta]], the [[Marshall Islands]], [[Mauritius]], [[Namibia]], [[Nigeria]], [[Pakistan]], [[Palau]], [[Papua New Guinea]], the [[Philippines]], [[Puerto Rico]], [[Rwanda]], the [[Solomon Islands]], [[Saint Lucia]], [[Samoa]], [[Seychelles]], [[Sierra Leone]], [[Sri Lanka]], [[Swaziland]], [[Tanzania]], [[Uganda]], [[Zambia]], and [[Zimbabwe]].
[10240450] |It is also one of the 11 official languages that are given equal status in South Africa ([[South African English]]).
[10240460] |English is also the official language in current [[dependent territory|dependent territories]] of Australia ([[Norfolk Island]], [[Christmas Island]] and [[Cocos Island]]) and of the United States ([[Northern Mariana Islands]], [[American Samoa]] and [[Puerto Rico]]), and in the former British colony of [[Hong Kong]].
[10240470] |English is an important language in several former [[colony|colonies]] and [[protectorate]]s of the United Kingdom but falls short of official status, such as in [[Malaysia]], [[Brunei]], [[United Arab Emirates]] and [[Bahrain]].
[10240480] |English is also not an official language in either the United States or the United Kingdom.
[10240490] |Although the United States federal government has no official languages, English has been given official status by 30 of the 50 state governments.
[10240500] |===English as a global language=== 
[10240510] |Because English is so widely spoken, it has often been referred to as a "[[world language]]", the ''[[lingua franca]]'' of the modern era.
[10240520] |While English is not an official language in most countries, it is currently the language most often taught as a [[second language]] around the world.
[10240530] |Some linguists believe that it is no longer the exclusive cultural sign of "native English speakers", but is rather a language that is absorbing aspects of cultures worldwide as it continues to grow.
[10240540] |It is, by international treaty, the official language for aerial and maritime communications.
[10240550] |English is an official language of the [[United Nations]] and many other international organizations, including the [[International Olympic Committee]].
[10240560] |English is the language most often studied as a foreign language in the European Union (by 89% of schoolchildren), followed by French (32%), German (18%), and Spanish (8%).
[10240570] |In the EU, a large fraction of the population reports being able to converse to some extent in English.
[10240580] |Among non-English speaking countries, a large percentage of the population claimed to be able to converse in English in the [[Netherlands]] (87%), [[Sweden]] (85%), [[Denmark]] (83%), [[Luxembourg]] (66%), [[Finland]] (60%), [[Slovenia]] (56%), [[Austria]] (53%), [[Belgium]] (52%), and [[Germany]] (51%).
[10240590] |[[Norway]] and [[Iceland]] also have a large majority of competent English-speakers.
[10240600] |[[Book]]s, [[magazine]]s, and [[newspaper]]s written in English are available in many countries around the world.
[10240610] |English is also the most commonly used language in the [[science]]s.
[10240620] |In 1997, the [[Science Citation Index]] reported that 95% of its articles were written in English, even though only half of them came from authors in English-speaking countries.
[10240630] |=== Dialects and regional varieties === 
[10240640] |The expansion of the British Empire and—since WWII—the primacy of the United States have spread English throughout the globe.
[10240650] |Because of that global spread, English has developed a host of [[List of dialects of the English language|English dialects]] and English-based [[creole language]]s and [[pidgin]]s.
[10240660] |The major [[Variety (linguistics)|varieties]] of English include, in most cases, several subvarieties, such as [[Cockney]] within [[British English]]; [[Newfoundland English]] within [[Canadian English]]; and [[African American Vernacular English]] ("Ebonics") and [[Southern American English]] within [[American English]].
[10240670] |English is a [[pluricentric language]], without a central language authority like France's [[Académie française]]; and, although no variety is clearly considered the only standard, there are a number of accents considered to be more prestigious, such as [[Received Pronunciation]] in Britain.
[10240680] |[[Scots language|Scots]] developed—largely independently—from the same origins, but following the [[Acts of Union 1707]] a process of [[language attrition]] began, whereby successive generations adopted more and more features from English causing dialectalisation.
[10240690] |Whether it is now a separate language or a [[dialect]] of English better described as [[Scottish English]] is in dispute.
[10240700] |The pronunciation, grammar and lexis of the traditional forms differ, sometimes substantially, from other varieties of English.
[10240710] |Because of the wide use of English as a second language, English speakers have many different [[Accent (linguistics)|accents]], which often signal the speaker's native dialect or language.
[10240720] |For the more distinctive characteristics of regional accents, see [[Regional accents of English]], and for the more distinctive characteristics of regional dialects, see [[List of dialects of the English language]].
[10240730] |Just as English itself has borrowed words from many different languages over its history, English [[loanword]]s now appear in a great many languages around the world, indicative of the technological and cultural influence of its speakers.
[10240740] |Several [[pidgin]]s and [[creole language]]s have formed using an English base, such as [[Jamaican (language)|Jamaican Patois]], [[Nigerian Pidgin]], and [[Tok Pisin]].
[10240750] |There are many words in English coined to describe forms of particular non-English languages that contain a very high proportion of English words.
[10240760] |[[Franglais]], for example, is used to describe French with a very high English word content; it is found on the [[Channel Islands]].
[10240770] |Another variant, spoken in the border bilingual regions of Québec in Canada, is called [[Franglais#Frenglish|Frenglish]].
[10240780] |In [[Wales]], which is part of the United Kingdom, the languages of [[Welsh language|Welsh]] and English are sometimes mixed together by fluent or comfortable Welsh speakers, the result of which is called [[Welsh English|Wenglish]].
[10240790] |=== Constructed varieties of English === 
[10240800] |* [[Basic English]] is simplified for easy international use.
[10240810] |It is used by manufacturers and other international businesses to write manuals and communicate.
[10240820] |Some English schools in Asia teach it as a practical subset of English for use by beginners.
[10240830] |* [[Special English]] is a simplified version of English used by the [[Voice of America]].
[10240840] |It uses a vocabulary of only 1500 words.
[10240850] |* [[English spelling reform|English reform]] is an attempt to improve collectively upon the English language.
[10240860] |* [[Seaspeak]] and the related [[NATO phonetic alphabet|Airspeak]] and Policespeak, all based on restricted vocabularies, were designed by [[Edward Johnson]] in the 1980s to aid international cooperation and communication in specific areas.
[10240870] |There is also a [[tunnelspeak]] for use in the [[Channel Tunnel]].
[10240880] |* [[Euro-English]] is a concept of standardising English for use as a second language in continental Europe.
[10240890] |* [[Manually Coded English]] — a variety of systems have been developed to represent the English language with hand signals, designed primarily for use in deaf education.
[10240900] |These should not be confused with true sign languages such as [[British Sign Language]] and [[American Sign Language]] used in Anglophone countries, which are independent and not based on English.
[10240910] |* [[E-Prime]] excludes forms of the verb ''to be''.
[10240920] |Euro-English (also ''EuroEnglish'' or ''Euro-English'') terms are English translations of European concepts that are not native to English-speaking countries.
[10240930] |Because of the United Kingdom's (and even the Republic of Ireland's) involvement in the European Union, the usage focuses on non-British concepts.
[10240940] |This kind of Euro-English was parodied when English was "made" one of the constituent languages of [[Europanto]].
[10240950] |== Phonology == 
[10240960] |=== Vowels ===
[10240970] |'''Notes:'''
[10240980] |It is the [[vowel]]s that differ most from region to region.
[10240990] |Where symbols appear in pairs, the first corresponds to American English, [[General American]] accent; the second corresponds to British English, [[Received Pronunciation]].
[10241000] |# American English lacks this sound; words with this sound are pronounced with {{IPA | /ɑ/}} or {{IPA | /ɔ/}}.
[10241010] |See [[Phonological history of English low back vowels#Lot-cloth split|''Lot-cloth split'']].
[10241020] |# Some dialects of North American English do not have this vowel.
[10241030] |See [[phonological history of English low_back vowels#Cot-caught merger|''Cot-caught merger'']].
[10241040] |# The North American variation of this sound is a [[r-colored vowel|rhotic vowel]].
[10241050] |# Many speakers of North American English do not distinguish between these two unstressed vowels.
[10241060] |For them, ''roses'' and ''Rosa's'' are pronounced the same, and the symbol usually used is [[schwa]] {{IPA | /ə/}}.
[10241070] |# This sound is often transcribed with {{IPA | /i/}} or with {{IPA | /ɪ/}}.
[10241080] |# The diphthongs {{IPA | /eɪ/}} and {{IPA | /oʊ/}} are monophthongal for many General American speakers, as {{IPA | /eː/}} and {{IPA | /oː/}}.
[10241090] |# The letter <''U''> can represent either {{IPA|/u/}} or the [[iotation|iotated]] vowel {{IPA|/ju/}}.
[10241100] |In BRP, if this iotated vowel {{IPA|/ju/}} occurs after {{IPA|/t/}}, {{IPA|/d/}}, {{IPA|/s/}} or {{IPA|/z/}}, it often triggers palatalization of the preceding consonant, turning it to {{IPA|/ʨ/}}, {{IPA|/ʥ/}}, {{IPA|/ɕ/}} and {{IPA|/ʑ/}} respectively, as in ''tune'', ''during'', ''sugar'', and ''azure''.
[10241110] |In American English, palatalization does not generally happen unless the {{IPA|/ju/}} is followed by ''r'', with the result that {{IPA|/(t, d,s, z)jur/}} turn to {{IPA|/tʃɚ/}}, {{IPA|/dʒɚ/}}, {{IPA|/ʃɚ/}} and {{IPA|/ʒɚ/}} respectively, as in ''nature'', ''verdure'', ''sure'', and ''treasure''.
[10241120] |# [[Vowel length]] plays a phonetic role in the majority of English dialects, and is said to be phonemic in a few dialects, such as [[Australian English]] and [[New Zealand English]].
[10241130] |In certain dialects of the modern English language, for instance [[General American]], there is allophonic vowel length: vowel phonemes are realized as long vowel allophones before voiced consonant phonemes in the coda of a syllable.
[10241140] |Before the [[Great Vowel Shift]], vowel length was phonemically contrastive.
[10241150] |# This sound only occurs in non-rhotic accents.
[10241160] |In some accents, this sound may be, instead of {{IPA|/ʊə/}}, {{IPA|/ɔ:/}}.
[10241170] |See [[English-language vowel changes before historic r]].
[10241180] |# This sound only occurs in non-rhotic accents.
[10241190] |In some accents, the schwa offglide of {{IPA|/ɛə/}} may be dropped, monophthising and lengthening the sound to {{IPA|/ɛ:/}}.
[10241200] |See also [[IPA chart for English dialects]] for more vowel charts.
[10241210] |=== Consonants === 
[10241220] |This is the English consonantal system using symbols from the [[International Phonetic Alphabet]] (IPA).
[10241230] |# The [[velar nasal]] {{IPA | [ŋ]}} is a non-phonemic allophone of /n/ in some northerly British accents, appearing only before /k/ and /g/.
[10241240] |In all other dialects it is a separate phoneme, although it only occurs in [[syllable coda]]s.
[10241250] |# The [[alveolar tap]] {{IPA | [ɾ]}} is an allophone of /t/ and /d/ in unstressed syllables in [[North American English]] and [[Australian English]].
[10241260] |This is the sound of ''tt'' or ''dd'' in the words ''latter'' and ''ladder'', which are homophones for many speakers of North American English.
[10241270] |In some accents such as [[Scottish English]] and [[Indian English]] it replaces {{IPA|/ɹ/}}.
[10241280] |This is the same sound represented by single ''r'' in most varieties of [[Spanish language|Spanish]].
[10241290] |# In some dialects, such as [[Cockney]], the interdentals /θ/ and /ð/ are usually merged with /f/ and /v/, and in others, like [[African American Vernacular English]], /ð/ is merged with dental /d/.
[10241300] |In some Irish varieties, /θ/ and /ð/ become the corresponding dental plosives, which then contrast with the usual alveolar plosives.
[10241310] |# The sounds {{IPA | /ʃ/, /ʒ/, and /ɹ/}} are labialised in some dialects.
[10241320] |Labialisation is never contrastive in initial position and therefore is sometimes not transcribed.
[10241330] |Most speakers of [[General American]] realize <r> (always rhoticized) as the [[retroflex approximant]] {{IPA|/ɻ/}}, whereas the same is realized in [[Scottish English]], etc. as the [[alveolar trill]].
[10241340] |# The [[voiceless palatal fricative]] /ç/ is in most accents just an [[allophone]] of /h/ before /j/; for instance ''human'' /çjuːmən/.
[10241350] |However, in some accents (see [[Phonological history of English consonant clusters|this]]), the /j/ is dropped, but the initial consonant is the same.
[10241360] |# The [[voiceless velar fricative]] /x/ is used by Scottish or Welsh speakers of English for Scots/Gaelic words such as ''loch'' {{IPA | /lɒx/}} or by some speakers for loanwords from German and Hebrew like ''Bach'' {{IPA|/bax/}} or ''Chanukah'' /xanuka/. /x/ is also used in South African English.
[10241370] |In some dialects such as [[Scouse]] ([[Liverpool]]) either {{IPA|[x]}} or the [[affricate consonant|affricate]] {{IPA|[kx]}} may be used as an [[allophone]] of /k/ in words such as ''docker'' {{IPA | [dɒkxə]}}.
[10241380] |Most native speakers have a great deal of trouble pronouncing it correctly when learning a foreign language.
[10241390] |Most speakers use the sounds [k] and [h] instead.
[10241400] |# Voiceless w {{IPA | [ʍ]}} is found in Scottish and Irish English, as well as in some varieties of American, New Zealand, and English English.
[10241410] |In most other dialects it is merged with /w/, in some dialects of Scots it is merged with /f/.
[10241420] |==== Voicing and aspiration ==== 
[10241430] |[[Voice (phonetics)|Voicing]] and [[aspiration (phonetics)|aspiration]] of [[stop consonant]]s in English depend on dialect and context, but a few general rules can be given: 
[10241440] |* Voiceless [[stop consonant|plosives]] and [[affricate consonant|affricates]] (/{{IPA | p}}/, /{{IPA | t}}/, /{{IPA | k}}/, and /{{IPA | tʃ}}/) are aspirated when they are word-initial or begin a stressed syllable — compare ''pin'' {{IPA | [pʰɪn]}} and ''spin'' {{IPA | [spɪn]}}, ''crap'' {{IPA | [kʰɹ̥æp]}} and ''scrap'' {{IPA | [skɹæp]}}.
[10241450] |** In some dialects, aspiration extends to unstressed syllables as well.
[10241460] |** In other dialects, such as [[Indian English]], all voiceless stops remain unaspirated.
[10241470] |* Word-initial voiced plosives may be devoiced in some dialects.
[10241480] |* Word-terminal voiceless plosives may be unreleased or accompanied by a glottal stop in some dialects (e.g. many varieties of [[American English]]) — examples: ''tap'' [{{IPA |tʰæp̚}}], ''sack'' [{{IPA |sæk̚}}].
[10241490] |* Word-terminal voiced plosives may be devoiced in some dialects (e.g. some varieties of [[American English]]) — examples: ''sad'' [{{IPA |sæd̥}}], ''bag'' [{{IPA |bæɡ̊}}].
[10241500] |In other dialects they are fully voiced in final position, but only partially voiced in initial position.
[10241510] |=== Supra-segmental features === 
[10241520] |==== Tone groups ==== 
[10241530] |English is an [[Intonation (linguistics)|intonation language]]. This means that the [[pitch (music)|pitch]] of the [[human voice|voice]] is used [[Syntax|syntactically]], for example, to convey [[surprise (emotion)|surprise]] and [[irony]], or to change a [[sentence (linguistics)|statement]] into a [[question]].
[10241540] |In English, intonation patterns are on groups of words, which are called tone groups, tone units, intonation groups or sense groups.
[10241550] |Tone groups are said on a single breath and, as a consequence, are of limited length, more often being on average five words long or lasting roughly two seconds.
[10241560] |For example:
[10241570] |: -{{IPA | /duː juː niːd ˈɛnɪˌθɪŋ/}} ''Do you need anything?''
[10241580] |: -{{IPA | <nowiki>/aɪ dəʊnt | nəʊ/</nowiki>}} ''I don't, no''
[10241590] |: -{{IPA | /aɪ dəʊnt nəʊ/}} ''I don't know'' (contracted to, for example, -{{IPA | /aɪ dəʊnəʊ/}} or {{IPA | /aɪ dənəʊ/}} ''I dunno'' in fast or colloquial speech that de-emphasises the pause between don't and know even further)
[10241600] |==== Characteristics of intonation ==== 
[10241610] |English is a strongly stressed language, in that certain syllables, both within words and within phrases, get a relative prominence/loudness during pronunciation while the others do not.
[10241620] |The former kind of syllables are said to be ''accentuated/stressed'' and the latter are ''unaccentuated/unstressed''.
[10241630] |All good dictionaries of English mark the accentuated syllable(s) by either placing an apostrophe-like ( {{IPA | ˈ}} ) sign either before (as in [[International Phonetic Alphabet|IPA]], [[Oxford English Dictionary]], or [[Merriam-Webster]] dictionaries) or after (as in many other dictionaries) the syllable where the stress accent falls.
[10241640] |Hence in a sentence, each tone group can be subdivided into syllables, which can either be stressed (strong) or unstressed (weak).
[10241650] |The stressed syllable is called the nuclear syllable.
[10241660] |For example:
[10241670] |: ''That | was | the | <u>'''best'''</u> | thing | you | could | have | '''done'''!''
[10241680] |Here, all syllables are unstressed, except the syllables/words ''best'' and ''done'', which are stressed.
[10241690] |''Best'' is stressed harder and, therefore, is the nuclear syllable.
[10241700] |The nuclear syllable carries the main point the speaker wishes to make.
[10241710] |For example:
[10241720] |: ''John'' had not stolen that money. (...
[10241730] |Someone else had.)
[10241740] |: John ''had not'' stolen that money. (...
[10241750] |Someone said he had. or ...
[10241760] |Not at that time, but later he did.)
[10241770] |: John had not ''stolen'' that money. (...
[10241780] |He acquired the money by some other means.)
[10241790] |: John had not stolen ''that'' money. (...
[10241800] |He had stolen some other money.)
[10241810] |: John had not stolen that ''money''. (...
[10241820] |He had stolen something else.)
[10241830] |Also
[10241840] |: ''I'' did not tell her that. (...
[10241850] |Someone else told her)
[10241860] |: I ''did not'' tell her that. (...
[10241870] |You said I did. or ... but now I will)
[10241880] |: I did not ''tell'' her that. (...
[10241890] |I did not say it; she could have inferred it, etc)
[10241900] |: I did not tell ''her'' that. (...
[10241910] |I told someone else)
[10241920] |: I did not tell her ''that''. (...
[10241930] |I told her something else)
[10241940] |This can also be used to express emotion:
[10241950] |: ''Oh'' really? (...I did not know that)
[10241960] |: Oh ''really''? (...I disbelieve you. or ...
[10241970] |That's blatantly obvious)
[10241980] |The nuclear syllable is spoken more loudly than the others and has a characteristic '''change of pitch'''.
[10241990] |The changes of pitch most commonly encountered in English are the '''rising pitch''' and the '''falling pitch''', although the '''fall-rising pitch''' and/or the '''rise-falling pitch''' are sometimes used.
[10242000] |In this opposition between falling and rising pitch, which plays a larger role in English than in most other languages, falling pitch conveys certainty and rising pitch uncertainty.
[10242010] |This can have a crucial impact on meaning, specifically in relation to polarity, the positive–negative opposition; thus, falling pitch means "polarity known", while rising pitch means "polarity unknown".
[10242020] |This underlies the rising pitch of yes/no questions.
[10242030] |For example:
[10242040] |: ''When do you want to be paid?''
[10242050] |: ''Now?''
[10242060] |(Rising pitch.
[10242070] |In this case, it denotes a question: "Can I be paid now?" or "Do you desire to pay now?")
[10242080] |: ''Now.''
[10242090] |(Falling pitch.
[10242100] |In this case, it denotes a statement: "I choose to be paid now.")
[10242110] |== Grammar == 
[10242120] |English grammar has minimal [[inflection]] compared with most other [[Indo-European languages]].
[10242130] |For example, Modern English, unlike Modern German or Dutch and the [[Romance languages]], lacks [[grammatical gender]] and [[Agreement (linguistics)|adjectival agreement]].
[10242140] |[[Grammatical case|Case]] marking has almost disappeared from the language and mainly survives in [[pronoun]]s.
[10242150] |The patterning of [[Strong inflection|strong]] (e.g. ''speak/spoke/spoken'') versus [[Germanic weak verb|weak verbs]] inherited from its Germanic origins has declined in importance in modern English, and the remnants of inflection (such as [[plural]] marking) have become more regular.
[10242160] |At the same time, the language has become more [[Isolating language|analytic]], and has developed features such as [[modal verb]]s and [[word order]] as resources for conveying meaning.
[10242170] |[[Auxiliary verb]]s mark constructions such as questions, negative polarity, the [[Grammatical voice|passive voice]] and progressive [[grammatical aspect|aspect]].
[10242180] |== Vocabulary == 
[10242190] |The English vocabulary has changed considerably over the centuries.
[10242200] |Like many languages deriving from [[Proto-Indo-European language|Proto-Indo-European]] (PIE), many of the most common words in English can trace back their origin (through the Germanic branch) to PIE.
[10242210] |Such words include the basic pronouns ''I'', from [[Old English language|Old English]] ''ic'', (cf. Latin ''ego'', Greek ''ego'', Sanskrit ''aham''), ''me'' (cf. Latin ''me'', Greek ''eme'', Sanskrit ''mam''), numbers (e.g. ''one'', ''two'', ''three'', cf. Latin ''unus, duo, tres'', Greek ''oinos'' "ace (on dice)", ''duo, treis''), common family relationships such as mother, father, brother, sister etc (cf. Greek "meter", Latin "mater", Sanskrit "matṛ"; ''mother''), names of many animals (cf. Sankrit ''mus'', Greek ''mys'', Latin ''mus''; ''mouse''), and many common verbs (cf. Greek ''gignōmi'', Latin ''gnoscere'', Hittite ''kanes'';'' to know'').
[10242220] |Germanic words (generally words of Old English or to a lesser extent Norse origin) tend to be shorter than the Latinate words of English, and more common in ordinary speech.
[10242230] |This includes nearly all the basic pronouns, prepositions, conjunctions, modal verbs etc. that form the basis of English syntax and grammar.
[10242240] |The longer Latinate words are often regarded as more elegant or educated.
[10242250] |However, the excessive use of Latinate words is considered at times to be either pretentious or an attempt to [[obfuscation|obfuscate]] an issue.
[10242260] |[[George Orwell]]'s [[essay]] "[[Politics and the English Language]]" is critical of this, as well as other perceived misuse of the language.
[10242270] |An English speaker is in many cases able to choose between Germanic and Latinate [[synonym]]s: ''come'' or ''arrive''; ''sight'' or ''vision''; ''freedom'' or ''liberty''.
[10242280] |In some cases there is a choice between a Germanic derived word (''oversee''), a Latin derived word (''supervise''), and a French word derived from the same Latin word (''survey'').
[10242290] |Such synonyms harbor a variety of different meanings and nuances, enabling the speaker to express fine variations or shades of thought.
[10242300] |Familiarity with the [[etymology]] of groups of synonyms can give English speakers greater control over their [[Register (sociolinguistics)|linguistic register]].
[10242310] |See: [[List of Germanic and Latinate equivalents in English]].
[10242320] |An exception to this and a peculiarity perhaps unique to English is that the nouns for meats are commonly different from, and unrelated to, those for the animals from which they are produced, the animal commonly having a Germanic name and the meat having a French-derived one.
[10242330] |Examples include: ''[[deer]]'' and ''[[venison]]''; ''[[cattle|cow]]'' and ''[[beef]]''; ''swine''/''[[pig]]'' and ''[[pork]]'', or ''[[domestic sheep|sheep]]'' and ''[[lamb and mutton|mutton]]''.
[10242340] |This is assumed to be a result of the aftermath of the Norman invasion, where a French-speaking elite were the consumers of the meat, produced by Anglo-Saxon lower classes.
[10242350] |Since the majority of words used in informal settings will normally be Germanic, such words are often the preferred choices when a speaker wishes to make a point in an argument in a very direct way.
[10242360] |A majority of Latinate words (or at least a majority of content words) will normally be used in more formal speech and writing, such as a [[court]]room or an [[encyclopedia]] article.
[10242370] |However, there are other Latinate words that are used normally in everyday speech and do not sound formal; these are mainly words for concepts that no longer have Germanic words, and are generally assimilated better and in many cases do not appear Latinate.
[10242380] |For instance, the words ''mountain'', ''valley'', ''river'', ''aunt'', ''uncle'', ''move'', ''use'', ''push'' and ''stay'' are all Latinate.
[10242390] |English easily accepts technical terms into common usage and often imports new words and phrases.
[10242400] |Examples of this phenomenon include: ''[[HTTP cookie|cookie]]'', ''[[Internet]]'' and ''[[Uniform Resource Locator|URL]]'' (technical terms), as well as ''[[genre]]'', ''[[über]]'', ''[[lingua franca]]'' and ''amigo'' (imported words/phrases from French, German, modern Latin, and Spanish, respectively).
[10242410] |In addition, [[slang]] often provides new meanings for old words and phrases.
[10242420] |In fact, this fluidity is so pronounced that a distinction often needs to be made between formal forms of English and contemporary usage.
[10242430] |See also: [[sociolinguistics]].
[10242440] |=== Number of words in English === 
[10242450] |The ''General Explanations'' at the beginning of the ''Oxford English Dictionary'' states:
[10242460] |The vocabulary of English is undoubtedly vast, but assigning a specific number to its size is more a matter of definition than of calculation.
[10242470] |Unlike other languages, such as [[Académie française|French]], [[List of language regulators|German]], [[Real Academia Española|Spanish]] and [[Accademia della Crusca|Italian]] there is no [[List of language regulators|Academy]] to define officially accepted words and spellings.
[10242480] |[[Neologism]]s are coined regularly in medicine, science and technology and other fields, and new [[slang]] is constantly developed.
[10242490] |Some of these new words enter wide usage; others remain restricted to small circles.
[10242500] |Foreign words used in immigrant communities often make their way into wider English usage.
[10242510] |Archaic, dialectal, and regional words might or might not be widely considered as "English".
[10242520] |The ''[[Oxford English Dictionary]],'' 2nd edition ''(OED2)'' includes over 600,000 definitions, following a rather inclusive policy:
[10242530] |The editors of ''[[Webster's Dictionary|Webster's Third New International Dictionary, Unabridged]]'' (475,000 main headwords) in their preface, estimate the number to be much higher.
[10242540] |It is estimated that about 25,000 words are added to the language each year.
[10242550] |=== Word origins === 
[10242560] |One of the consequences of the French influence is that the vocabulary of English is, to a certain extent, divided between those words which are [[Germanic languages|Germanic]] (mostly West Germanic, with a smaller influence from the North Germanic branch) and those which are "Latinate" (Latin-derived, either directly or from Norman French or other Romance languages).
[10242570] |Numerous sets of statistics have been proposed to demonstrate the origins of English vocabulary.
[10242580] |None, as yet, is considered definitive by most linguists.
[10242590] |A computerised survey of about 80,000 words in the old ''Shorter Oxford Dictionary'' (3rd ed.) was published in ''Ordered Profusion'' by Thomas Finkenstaedt and Dieter Wolff (1973) that estimated the origin of English words as follows:
[10242600] |*''[[Langues d'oïl|Langue d'oïl]]'', including French and [[Old Norman]]: [[List of English words of French origin|28.3%]]
[10242610] |*Latin, including modern scientific and technical Latin: 28.24%
[10242620] |*Other [[Germanic languages]] (including words directly inherited from [[Old English language|Old English]]): 25%
[10242630] |*Greek: 5.32%
[10242640] |*No etymology given: 4.03%
[10242650] |*Derived from proper names: 3.28%
[10242660] |*All other languages contributed less than 1% 
[10242670] |A survey by [[Joseph M. Williams]] in ''Origins of the English Language'' of 10,000 words taken from several thousand business letters gave this set of statistics: 
[10242680] |*French (langue d'oïl): 41%
[10242690] |*"Native" English: 33%
[10242700] |*Latin: 15%
[10242710] |*Danish: 2%
[10242720] |*Dutch: 1% 
[10242730] |*Other: 10%
[10242740] |However, 83% of the 1,000 most-common, and all of the 100 most-common English words are Germanic.
[10242750] |==== Dutch origins ==== 
[10242760] |Words describing the navy, types of ships, and other objects or activities on the water are often from Dutch origin.
[10242770] |''Yacht'' (''jacht'') and ''cruiser'' (''kruiser'') are examples.
[10242780] |==== French origins ==== 
[10242790] |There are many [[List of English words of French origin|words of French origin in English]], such as ''competition'', ''art'', ''table'', ''publicity'', ''police'', ''role'', ''routine'', ''machine'', ''force'', and many others that have been and are being [[anglicisation|anglicised]]; they are now pronounced according to English rules of [[phonology]], rather than French.
[10242800] |A large portion of English vocabulary is of French or [[Langues d'oïl]] origin, most derived from, or transmitted via, the [[Anglo-Norman language|Anglo-Norman]] spoken by the [[upper class]]es in [[England]] for several hundred years after the [[Norman conquest of England]].
[10242810] |== Writing system == 
[10242820] |English has been written using the [[Latin alphabet]] since around the ninth century.
[10242830] |(Before that, Old English had been written using [[Anglo-Saxon runes]].)
[10242840] |The spelling system, or [[orthography]], is multilayered, with elements of French, Latin and Greek spelling on top of the native Germanic system; it has grown to vary significantly from the [[phonology]] of the language.
[10242850] |The spelling of words often diverges considerably from how they are spoken.
[10242860] |Though letters and sounds may not correspond in isolation, spelling rules that take into account syllable structure, phonetics, and accents are 75% or more reliable.
[10242870] |Some phonics spelling advocates claim that English is more than 80% phonetic.
[10242880] |In general, [[history of the English language|the English language]], being the product of many other languages and having only been codified orthographically in the 16th century, has fewer consistent relationships between sounds and letters than many other languages.
[10242890] |The consequence of this orthographic history is that reading can be challenging.
[10242900] |It takes longer for students to become completely fluent readers of English than of many other languages, including French, Greek, and Spanish.
[10242910] |=== Basic sound-letter correspondence === 
[10242920] |Only the consonant letters are pronounced in a relatively regular way: 
[10242930] |=== Written accents === 
[10242940] |Unlike most other Germanic languages, English has almost no [[diacritic]]s except in foreign [[loanword]]s (like the [[acute accent]] in ''café''), and in the uncommon use of a [[diaeresis]] mark (often in formal writing) to indicate that two vowels are pronounced separately, rather than as one sound (e.g. ''naïve, Zoë'').
[10242950] |It is almost always acceptable to leave out the marks, especially in digital communications where the [[QWERTY]] keyboard lacks any marked letters, but it depends on the context where the word is used.
[10242960] |Some English words retain the diacritic to distinguish them from others, such as ''[[Animé (oleo-resin)|animé]], [[Investigative journalism|exposé]], [[Lamé (fencing)|lamé]], [[öre]], [[øre]], [[pâté]], [[piqué]],'' and ''[[rosé]]'', though these are sometimes also dropped (''[[résumé]]/resumé'' is usually spelled ''resume'' in the United States).
[10242970] |There are loan words which occasionally use a diacritic to represent their pronunciation that is not in the original word, such as ''maté'', from Spanish ''[[yerba mate]]'', following the French usage, but they are extremely rare.
[10242980] |== Formal written English == 
[10242990] |A version of the language almost universally agreed upon by educated English speakers around the world is called [[formal written English]].
[10243000] |It takes virtually the same form no matter where in the English-speaking world it is written.
[10243010] |In spoken English, by contrast, there are a vast number of differences between [[dialect]]s, [[Accent (linguistics)|accents]], and varieties of [[slang]], colloquial and regional expressions.
[10243020] |In spite of this, local variations in the formal written version of the language are quite limited, being restricted largely to the [[American and British English spelling differences|spelling differences between British and American English]].
[10243030] |== Basic and simplified versions == 
[10243040] |To make English easier to read, there are some simplified versions of the language.
[10243050] |One basic version is named ''[[Basic English]]'', a [[constructed language]] with a small number of words created by [[Charles Kay Ogden]] and described in his book ''Basic English: A General Introduction with Rules and Grammar'' (1930).
[10243060] |The language is based on a simplified version of English.
[10243070] |Ogden said that it would take seven years to learn English, seven months for [[Esperanto]], and seven weeks for Basic English, comparable with [[Ido]].
[10243080] |Thus Basic English is used by companies who need to make complex books for international use, and by language schools that need to give people some knowledge of English in a short time.
[10243090] |Ogden did not put any words into Basic English that could be said with a few other words and he worked to make the words work for speakers of any other language.
[10243100] |He put his set of words through a large number of tests and adjustments.
[10243110] |He also made the grammar simpler, but tried to keep the grammar normal for English users.
[10243120] |The concept gained its greatest publicity just after the [[World War II|Second World War]] as a tool for world peace.
[10243130] |Although it was not built into a program, similar simplifications were devised for various international uses.
[10243140] |Another version, [[Simplified English]], exists, which is a [[Controlled natural language|controlled language]] originally developed for [[aerospace]] industry maintenance manuals.
[10243150] |It offers a carefully limited and standardised subset of English.
[10243160] |Simplified English has a lexicon of approved words and those words can only be used in certain ways.
[10243170] |For example, the word ''close'' can be used in the phrase "Close the door" but not "do not go close to the landing gear".
[10250010] |<article>Esperanto</article>
[10250020] |is by far the most widely spoken [[constructed language|constructed]] [[international auxiliary language]] in the world.
[10250030] |Its name derives from ''Doktoro Esperanto,'' the [[pseudonym]] under which [[L. L. Zamenhof]] published the first book detailing Esperanto, the ''[[Unua Libro]],'' in 1887.
[10250040] |The word ''esperanto'' means 'one who hopes' in the language itself.
[10250050] |Zamenhof's goal was to create an easy and flexible language that would serve as a universal [[second language]] to foster peace and international understanding.
[10250060] |Esperanto has had continuous usage by a community estimated at between 100,000 and 2 million speakers for over a century.
[10250070] |By most estimates, there are approximately one thousand [[Native Esperanto speakers|native speakers]].
[10250080] |However, no country has adopted the language [[official language|officially]].
[10250090] |Today, Esperanto is employed in world travel, correspondence, cultural exchange, conventions, literature, language instruction, television, and radio broadcasting.
[10250100] |Also, there is an [[Esperanto Wikipedia]] that contains over 100,000 articles as of June 2008.
[10250110] |There is evidence that [[Propaedeutic value of Esperanto|learning Esperanto may provide a good foundation for learning languages in general]].
[10250120] |Some state education systems offer basic instruction and elective courses in Esperanto.
[10250130] |Esperanto is also the language of instruction in one university, the [[Akademio Internacia de la Sciencoj San Marino|Akademio Internacia de la Sciencoj]] in [[San Marino]].
[10250140] |== History == 
[10250150] |Esperanto was developed in the late 1870s and early 1880s by [[ophthalmology|ophthalmologist]] [[L. L. Zamenhof|Dr. Ludovic Lazarus Zamenhof]], an [[Ashkenazi Jew]] from [[Bialystok]], now in [[Poland]] and previously in the [[Polish-Lithuanian Commonwealth]], but at the time part of the [[Russian Empire]].
[10250160] |After some ten years of development, which Zamenhof spent translating literature into the language as well as writing original [[prose]] and [[Poetry|verse]], the [[Unua Libro|first book of Esperanto grammar]] was published in [[Warsaw]] in July 1887.
[10250170] |The number of speakers grew rapidly over the next few decades, at first primarily in the [[Russian empire]] and [[Eastern Europe]], then in [[Western Europe]], the [[Americas]], [[China]], and [[Japan]].
[10250180] |In the early years, speakers of Esperanto kept in contact primarily through correspondence and [[magazine|periodicals]], but in 1905 the first [[World Congress of Esperanto|world congress of Esperanto speakers]] was held in [[Boulogne-sur-Mer]], [[France]].
[10250190] |Since then world congresses have been held in different countries every year, except during the two [[world war|World Wars]].
[10250200] |Since the Second World War, they have been attended by an average of over 2000 and up to 6000 people.
[10250210] |===Relation to 20th-century totalitarianism=== 
[10250220] |As a potential vehicle for international understanding, Esperanto attracted the suspicion of many [[totalitarian]] states.
[10250230] |The situation was especially pronounced in [[Nazi Germany]] and in the [[Soviet Union]] under [[Joseph Stalin]].
[10250240] |In Germany, there was additional motivation to persecute Esperanto because Zamenhof was a Jew.
[10250250] |In his work ''[[Mein Kampf]],'' [[Hitler]] mentioned Esperanto as an example of a language that would be used by an [[International Jewry|International]] [[Jewish conspiracy|Jewish Conspiracy]] once they achieved [[world domination]].
[10250260] |[[Esperantist]]s were executed during [[the Holocaust]], with Zamenhof's family in particular singled out for execution.
[10250270] |In the early years of the Soviet Union, Esperanto was given a measure of government support, and an officially recognized Soviet Esperanto Association came into being.
[10250280] |However, in 1937, Stalin reversed this policy.
[10250290] |He denounced Esperanto as "the language of spies" and had Esperantists executed.
[10250300] |The use of Esperanto remained illegal until 1956.
[10250310] |==Official use== 
[10250320] |Esperanto has never been an official language of any recognized country.
[10250330] |However, there were plans at the beginning of the 20th century to establish [[Moresnet|Neutral Moresnet]] as the world's first Esperanto state.
[10250340] |In China, there was talk in some circles after the 1911 [[Xinhai Revolution]] about officially replacing [[Chinese language|Chinese]] with Esperanto as a means to dramatically bring the country into the twentieth century, though this policy proved untenable.
[10250350] |In the summer of 1924, the [[American Radio Relay League]] adopted Esperanto as its official [[international auxiliary language]], and hoped that the language would be used by [[Amateur radio|radio amateurs]] in international communications, but its actual use for radio communications was negligible.
[10250360] |In addition, the self-proclaimed [[artificial island]] [[micronation]] of [[Republic of Rose Island|Rose Island]] used Esperanto as its official language in 1968.
[10250370] |Esperanto is the working language of several [[non-profit organization|non-profit]] international organizations such as the ''[[Sennacieca Asocio Tutmonda]]'', but most others are specifically Esperanto organizations.
[10250380] |The largest of these, the [[World Esperanto Association]], has an official consultative relationship with the [[United Nations]] and [[UNESCO]].
[10250390] |The U.S. Army has published military phrasebooks in Esperanto, to be used in [[Military simulation|wargames]] by mock enemy forces.
[10250400] |Esperanto is also the first language of teaching and administration of the [[Akademio Internacia de la Sciencoj San Marino|International Academy of Sciences San Marino]], which is sometimes called an "Esperanto University".
[10250410] |== Linguistic properties == 
[10250420] |=== Classification === 
[10250430] |As a [[constructed language]], Esperanto is not [[Genealogy|genealogically]] related to any [[ethnic group|ethnic]] language.
[10250440] |It has been described as "a language [[lexicon|lexically]] predominantly [[Romance languages|Romanic]], [[morphology (linguistics)|morphologically]] intensively [[agglutination|agglutinative]] and to a certain degree [[isolating languages|isolating]] in character".
[10250450] |The [[phonology]], [[grammar]], [[vocabulary]], and [[semantics]] are based on the western [[Indo-European languages]].
[10250460] |The [[phoneme|phonemic inventory]] is essentially [[Slavic languages|Slavic]], as is much of the semantics, while the [[vocabulary]] derives primarily from the [[Romance languages]], with a lesser contribution from the [[Germanic languages]].
[10250470] |[[Pragmatics]] and other aspects of the language not specified by Zamenhof's original documents were influenced by the native languages of early speakers, primarily [[Russian language|Russian]], [[Polish language|Polish]], [[German language|German]], and [[French language|French]].
[10250480] |[[Linguistic typology|Typologically]], Esperanto has [[preposition]]s and a [[information flow|pragmatic word order]] that by default is ''[[Subject Verb Object]]'' and ''[[Word order|Adjective Noun]]''.
[10250490] |New words are formed through extensive [[prefix (linguistics)|prefix]]ing and [[suffix]]ing.
[10250500] |=== Writing system === 
[10250510] |Esperanto is written with a modified version of the [[Latin alphabet]], including six [[Letter (alphabet)|letters]] with [[diacritic]]s: [[c-circumflex|ĉ]], [[g-circumflex|ĝ]], [[h-circumflex|ĥ]], [[j-circumflex|ĵ]], [[s-circumflex|ŝ]] and [[u-breve|ŭ]] (that is, ''c, g, h, j, s'' [[circumflex]], and ''u'' [[breve]]).
[10250520] |The alphabet does not include the letters ''q, w, x,'' or ''y'' except in unassimilated foreign names.
[10250530] |The 28-letter alphabet is: <big><center>'''a b c ĉ d e f g ĝ h ĥ i j ĵ k l m n o p r s ŝ t u ŭ v z'''</center></big>
[10250540] |All letters are pronounced approximately as in the [[IPA]], with the exception of ''c'' and the accented letters: 
[10250550] |Two [[ASCII]]-compatible writing conventions are in use.
[10250560] |These substitute [[Digraph (orthography)|digraph]]s for the accented letters.
[10250570] |The original "h-convention" (''ch, gh, hh, jh, sh, u'') is based on English 'ch' and 'sh', while a more recent "[[x-convention]]" (''cx, gx, hx, jx, sx, ux'') is useful for alphabetic word sorting on a [[computer]] (''cx'' comes correctly after ''cu'', ''sx'' after ''sv'', etc.) as well as for simple conversion back into the standard [[orthography]].
[10250580] |Another scheme represents the superscripted letters by a [[caret]] (^), as for example: c^ or ^c.
[10250590] |=== Phonology === 
[10250600] |:''(For help with the phonetic symbols, see [[Help:IPA]])''
[10250610] |Esperanto has 22 [[consonant]]s, 5 [[vowel]]s, and two [[semivowel]]s, which combine with the vowels to form 6 [[diphthong]]s.
[10250620] |(The consonant {{IPA|/j/}} and semivowel {{IPA|/i̯/}} are both written <j>.)
[10250625] |[[tone (linguistics)|Tone]] is not used to distinguish meanings of words.
[10250630] |[[Stress (linguistics)|Stress]] is always on the penultimate vowel, unless a final vowel ''o'' is [[Elision|elided]], a practice which occurs mostly in [[poetry]].
[10250640] |For example, ''familio'' "family" is stressed {{IPA2|fa.mi.ˈli.o}}, but when found without the final o, ''famili’,'' the stress does not shift: {{IPA|[fa.mi.ˈli]}}.
[10250650] |==== Consonants ==== 
[10250660] |The 22 consonants are:
[10250670] |The sound {{IPA|/r/}} is usually [[alveolar trill|rolled]], but may be [[alveolar flap|tapped]] {{IPA|[ɾ]}}.
[10250680] |The {{IPA|/v/}} has a normative pronunciation like an [[English language|English]] ''v,'' but is sometimes somewhere between a ''v'' and a ''w,'' {{IPA|[ʋ]}}, depending on the language background of the speaker.
[10250690] |A semivowel {{IPA|/u̯/}} normally occurs only in [[diphthong]]s after the vowels {{IPA|/a/}} and {{IPA|/e/}}, not as a consonant {{IPA|*/w/}}.
[10250700] |Common, if debated, [[assimilation (linguistics)|assimilation]] includes the pronunciation of {{IPA|/nk/}} as {{IPA|[ŋk]}}, as in English ''sink,'' and {{IPA|/kz/}} as {{IPA|[gz]}}, like the ''x'' in English ''example''.
[10250710] |A large number of consonant clusters can occur, up to three in initial position and four in medial position, as in ''instrui'' "to teach".
[10250720] |Final clusters are uncommon except in foreign names, poetic elision of final ''o,'' and a very few basic words such as ''cent'' "hundred" and ''post'' "after".
[10250730] |====Vowels==== 
[10250740] |Esperanto has the five [[cardinal vowels]] of [[Spanish language|Spanish]], [[Swahili language|Swahili]], and [[Modern Greek]].
[10250750] |There are six falling diphthongs: ''uj, oj, ej, aj, aŭ, eŭ'' ({{IPA|/ui̯, oi̯, ei̯, ai̯, au̯, eu̯/}}).
[10250760] |With only five vowels, a good deal of variation is tolerated.
[10250770] |For instance, {{IPA|/e/}} commonly ranges from {{IPA|[e]}} (French ''é'') to {{IPA|[ɛ]}} (French ''è'').
[10250780] |The details often depend on the speaker's native language.
[10250790] |A [[glottal stop]] may occur between adjacent vowels in some people's speech, especially when the two vowels are the same, as in ''heroo'' "hero" ({{IPA|[he.ˈro.o]}} or {{IPA|[he.ˈro.ʔo]}}) and ''praavo'' "great-grandfather" ({{IPA|[pra.ˈa.vo]}} or {{IPA|[pra.ˈʔa.vo]}}).
[10250800] |=== Grammar === 
[10250810] |Esperanto words are [[Derivation (linguistics)|derived]] by stringing together [[prefix (linguistics)|prefix]]es, [[Root (linguistics)|roots]], and [[suffix]]es.
[10250820] |This process is regular, so that people can create new words as they speak and be understood.
[10250830] |[[Compound (linguistics)|Compound]] words are formed with a modifier-first, [[head (linguistics)|head-final]] order, the same order as English "birdsong" ''vs.'' "songbird".
[10250840] |The different [[Part of speech|parts of speech]] are marked by their own suffixes: all [[common noun]]s end in ''-o,'' all [[adjective]]s in ''-a,'' all derived adverbs in ''-e,'' and all [[verb]]s in one of six [[Grammatical tense|tense]] and [[Grammatical mood|mood]] suffixes, such as [[present tense]] ''-as.''
[10250850] |[[Grammatical number|Plural]] nouns end in ''-oj'' (pronounced "oy"), whereas [[direct object]]s end in ''-on.''
[10250860] |Plural direct objects end with the combination ''-ojn'' (pronounced to rhyme with "coin"): That is, ''-o'' for a noun, plus ''-j'' for plural, plus ''-n'' for direct object.
[10250870] |Adjectives [[Grammatical number#Effect of number on verbs and other parts of speech|agree]] with their nouns; their endings are plural ''-aj'' (pronounced "eye"), direct-object ''-an,'' and plural direct-object ''-ajn'' (pronounced to rhyme with "fine").
[10250880] |The suffix ''-n'' is used to indicate the goal of movement and a few other things, in addition to the direct object.
[10250890] |See [[Esperanto grammar]] for details.
[10250900] |The six verb [[inflection]]s consist of three tenses and three moods.
[10250910] |They are [[present tense]] ''-as,'' [[future tense]] ''-os,'' [[past tense]] ''-is,'' [[infinitive|infinitive mood]] ''-i,'' [[conditional mood]] ''-us,'' and [[jussive mood]] ''-u'' (used for wishes and commands).
[10250920] |Verbs are not marked for person or number.
[10250930] |For instance: ''kanti'' "to sing"; ''mi kantas'' "I sing"; ''mi kantis'' "I sang"; ''mi kantos'' "I will sing"; ''li kantas'' "he sings"; ''vi kantas'' "you sing".
[10250940] |Word order is comparatively free: Adjectives may precede or follow nouns, and subjects, verbs and objects (marked by the suffix ''-n)'' may occur in any order.
[10250950] |However, the [[article (grammar)|article]] ''la'' "the" and [[demonstrative]]s such as ''tiu'' "this, that" almost always come before the noun, and a [[preposition]] such as ''ĉe'' "at" ''must'' come before it.
[10250960] |Similarly, the negative ''ne'' "not" and [[conjunction]]s such as ''kaj'' "both, and" and ''ke'' "that" must precede the [[phrase]] or [[clause]] they introduce.
[10250970] |In [[copula]]r (A = B) clauses, word order is just as important as it is in English clauses like "people are dogs" ''vs.'' "dogs are people".
[10250980] |====Correlatives==== 
[10250990] |A [[correlative]] is a word used to ask or answer a question of who, where, what, when, or how.
[10251000] |Correlatives in Esperanto are set out in a systematic manner that correlates a basic [[idea]] (quantity, manner, time, ''etc.'') to a function (questioning, indicating, negating, ''etc.'') 
[10251010] |Examples: 
[10251020] |*''Kio estas tio?''
[10251030] |"What is this?"
[10251040] |*''Kioma estas la horo?''
[10251050] |"What time is it?"
[10251060] |Note ''kioma'' rather than ''Kiu estas la horo?'' "which is the hour?", when asking for the ranking order of the hour on the clock.
[10251070] |*''Io falis el la ŝranko'' "Something fell out of the cupboard."
[10251080] |*''Homoj tiaj kiel mi ne konadas timon.''
[10251090] |"Men such as me know no fear."
[10251100] |Correlatives are declined if the case demands it: 
[10251110] |*''Vi devas elekti ian vorton pli simpla'' "You should choose a (some kind of) simpler word."
[10251120] |''Ia'' receives ''-n'' because it's part of the [[direct object]].
[10251130] |*''Kian libron vi volas?''
[10251140] |"What sort of book do you want?"
[10251150] |Contrast this with, ''Kiun libron vi volas?''
[10251160] |"Which book do you want?"
[10251170] |=== Vocabulary === 
[10251180] |The core vocabulary of Esperanto was defined by ''Lingvo internacia'', published by Zamenhof in 1887.
[10251190] |It comprised 900 roots, which could be expanded into tens of thousands of words with prefixes, suffixes, and compounding.
[10251200] |In 1894, Zamenhof published the first Esperanto [[dictionary]], ''Universala Vortaro'', with a larger set of roots.
[10251210] |However, the rules of the language allowed speakers to borrow new roots as needed, recommending only that they look for the most international forms, and then derive related meanings from these.
[10251220] |Since then, many words have been borrowed, primarily but not solely from the Western European languages.
[10251230] |Not all proposed borrowings catch on, but many do, especially [[technical terminology|technical]] and [[science|scientific]] terms.
[10251240] |Terms for everyday use, on the other hand, are more likely to be derived from existing roots—for example ''komputilo'' (a computer) from ''komputi'' (to compute) plus the suffix ''-ilo'' (tool)—or to be covered by extending the meanings of existing words (for example ''muso'' (a mouse), as in English, now also means a computer input device).
[10251250] |There are frequent debates among Esperanto speakers about whether a particular borrowing is justified or whether the need can be met by deriving from or extending the meaning of existing words.
[10251260] |In addition to the root words and the rules for combining them, a learner of Esperanto must memorize some idiomatic compounds that are not entirely straightforward.
[10251270] |For example, ''eldoni'', literally "to give out", is used for "to publish" (a [[calque]] of words in several European languages with the same derivation), and ''vortaro'', literally "a collection of words", means "a glossary" or "a dictionary".
[10251280] |Such forms are modeled after usage in some European languages, and speakers of other languages may find them illogical.
[10251290] |Fossilized derivations inherited from Esperanto's source languages may be similarly obscure, such as the opaque connection the root word ''centralo'' "power station" has with ''centro'' "center".
[10251300] |Compounds with ''-um-'' are overtly arbitrary, and must be learned individually, as ''-um-'' has no defined meaning.
[10251310] |It turns ''dekstren'' "to the right" into ''dekstrumen'' "clockwise", and ''komuna'' "common/shared" into ''komunumo'' "community", for example.
[10251320] |Nevertheless, there are not nearly as many idiomatic or [[slang]] words in Esperanto as in ethnic languages, as these tend to make international communication difficult, working against Esperanto's main goal.
[10251330] |===Useful phrases=== 
[10251340] |Here are some useful Esperanto phrases, with [[help:IPA|IPA]] transcriptions:
[10251350] |* Hello: ''Saluton'' {{IPA|/sa.ˈlu.ton/}}
[10251360] |* What is your name?: ''Kiel vi nomiĝas?''
[10251370] |{{IPA|/ˈki.el vi no.ˈmi.ʤas/}}
[10251380] |* My name is...: ''Mi nomiĝas...''
[10251390] |{{IPA|/mi no.ˈmi.ʤas/}}
[10251400] |* How much (is it/are they)?: ''Kiom (estas)?''
[10251410] |{{IPA|/ˈki.om ˈes.tas/}}
[10251420] |* Here you are: ''Jen'' {{IPA|/jen/}}
[10251430] |* Do you speak Esperanto?: ''Ĉu vi parolas Esperanton?''
[10251440] |{{IPA|/ˈʧu vi pa.ˈro.las es.pe.ˈran.ton/}}
[10251450] |* I do not understand you: ''Mi ne komprenas vin'' {{IPA|/mi ˈne kom.ˈpre.nas vin/}}
[10251460] |* I like ''this'' one: ''Ĉi tiu plaĉas al mi'' {{IPA|/ʧi ˈti.u ˈpla.ʧas al ˈmi/}} or ''Mi ŝatas tiun ĉi'' {{IPA|/mi ˈʃa.tas ˈti.un ˈʧi/}} 
[10251470] |* Thank you: ''Dankon'' {{IPA|/ˈdan.kon/}}
[10251480] |* You're welcome: ''Ne dankinde'' {{IPA|/ˈne dan.ˈkin.de/}}
[10251490] |* Please: ''Bonvolu'' {{IPA|/bon.ˈvo.lu/}} or ''mi petas'' {{IPA|/mi ˈpe.tas/}}
[10251500] |* Here's to your health: ''Je via sano'' {{IPA|/je ˈvi.a ˈsa.no/}}
[10251510] |* Bless you!/Gesundheit!: ''Sanon!''
[10251520] |{{IPA|/ˈsa.non/}}
[10251530] |* Congratulations!: ''Gratulon!''
[10251540] |{{IPA|/ɡra.ˈtu.lon/}}
[10251550] |* Okay: ''Bone'' {{IPA|/ˈbo.ne/}} or ''Ĝuste'' {{IPA|/ˈʤus.te/}}
[10251560] |* Yes: ''Jes'' {{IPA|/ˈjes/}}
[10251570] |* No: ''Ne'' {{IPA|/ˈne/}}
[10251580] |* It is a nice day: ''Estas bela tago'' {{IPA|/ˈes.tas ˈbe.la ˈta.ɡo/}}
[10251590] |* I love you: ''Mi amas vin'' {{IPA|/mi ˈa.mas vin/}}
[10251600] |* Goodbye: ''Ĝis (la) (revido)'' {{IPA|/ʤis la re.ˈvi.do/}}
[10251610] |* One beer, please: ''Unu bieron, mi petas.''
[10251620] |{{IPA|/ˈu.nu bi.ˈe.ron, mi ˈpe.tas/}}
[10251630] |* What is that?: ''Kio estas tio?''
[10251640] |{{IPA|/ˈki.o ˈes.tas ˈti.o/}}
[10251650] |* That is...: ''Tio estas...''
[10251660] |{{IPA|/ˈti.o ˈes.tas/}}
[10251670] |* How are you?: ''Kiel vi (fartas)?''
[10251680] |{{IPA|/ˈki.el vi ˈfar.tas/}}
[10251690] |* Good morning!: ''Bonan matenon!''
[10251700] |{{IPA|/ˈbo.nan ma.ˈte.non/}}
[10251710] |* Good evening!: ''Bonan vesperon!''
[10251720] |{{IPA|/ˈbo.nan ves.ˈpe.ron/}}
[10251730] |* Good night!: ''Bonan nokton!''
[10251740] |{{IPA|/ˈbo.nan ˈnok.ton/}}
[10251750] |* Peace!: ''Pacon!''
[10251760] |{{IPA|/ˈpa.tson/}}
[10251770] |=== Sample text === 
[10251780] |The following short extract gives an idea of the character of Esperanto.
[10251790] |(Pronunciation is covered above.
[10251800] |The main point for English speakers to remember is that the letter 'J' has the sound of the letter 'Y' in English)
[10251810] |* Esperanto text
[10251820] |:''En multaj lokoj de Ĉinio estis temploj de drako-reĝo. Dum trosekeco oni preĝis en la temploj, ke la drako-reĝo donu pluvon al la homa mondo.
[10251830] |Tiam drako estis simbolo de la supernatura estaĵo. Kaj pli poste, ĝi fariĝis prapatro de la plej altaj regantoj kaj simbolis la absolutan aŭtoritaton de feŭda imperiestro.
[10251840] |La imperiestro pretendis, ke li estas filo de la drako. Ĉiuj liaj vivbezonaĵoj portis la nomon drako kaj estis ornamitaj per diversaj drakofiguroj.
[10251850] |Nun ĉie en Ĉinio videblas drako-ornamentaĵoj kaj cirkulas legendoj pri drakoj.''
[10251860] |*English Translation:
[10251870] |:In many places in China there were temples of the dragon king.
[10251880] |During times of drought, people prayed in the temples, that the dragon king would give rain to the human world.
[10251890] |At that time the dragon was a symbol of the supernatural.
[10251900] |Later on, it became the ancestor of the highest rulers and symbolised the absolute authority of the feudal emperor.
[10251910] |The emperor claimed to be the son of the dragon.
[10251920] |All of his personal possessions carried the name ''dragon'' and were decorated with various dragon figures.
[10251930] |Now everywhere in China dragon decorations can be seen and there circulate legends about dragons.
[10251940] |== Education == 
[10251950] |The majority of Esperanto speakers learn the language through self-directed study, online tutorials, and correspondence courses taught by volunteers.
[10251960] |In more recent years, teaching websites like ''[[lernu!]]'' have become popular.
[10251970] |Esperanto instruction is occasionally available at schools, such as a [[Esperanto#Esperanto and language acquisition|pilot project involving four primary schools]] under the supervision of the [[University of Manchester]], and by one count at 69 universities.
[10251980] |However, outside of [[China]] and [[Hungary]], these mostly involve informal arrangements rather than dedicated departments or state sponsorship.
[10251990] |[[Eötvös Loránd University]] in Budapest had a department of Interlinguistics and Esperanto from 1966 to 2004, after which time instruction moved to vocational colleges; there are state examinations for Esperanto instructors.
[10252000] |Various educators have estimated that Esperanto can be learned in anywhere from one quarter to one twentieth the amount of time required for other languages.
[10252010] |Some argue, however, that this is only true for native speakers of Western European languages.
[10252020] |[[Claude Piron]], a psychologist formerly at the [[University of Geneva]] and Chinese-English-Russian-Spanish translator for the United Nations, argued that Esperanto is far more "brain friendly" than many ethnic languages.
[10252030] |"Esperanto relies entirely on innate reflexes [and] differs from all other languages in that you can always trust your natural tendency to generalize patterns. [...]
[10252040] |The same [[neuropsychology|neuropsychological]] law [— called by] [[Jean Piaget]] ''generalizing assimilation'' — applies to word formation as well as to grammar."
[10252050] |=== Language acquisition === 
[10252060] |Four primary schools in Britain, with some 230 pupils, are currently following a course in "propedeutic Esperanto", under the supervision of the University of Manchester.
[10252070] |That is, instruction in Esperanto to raise language awareness and accelerate subsequent learning of foreign languages.
[10252080] |Several studies demonstrate that studying Esperanto before another foreign language speeds and improves learning the second language to a greater extent than other languages which have been investigated.
[10252090] |This appears to be because learning subsequent foreign languages is easier than learning one's first, while the use of a grammatically simple and culturally flexible auxiliary language like Esperanto lessens the first-language learning hurdle.
[10252100] |In one study, a group of European [[secondary school]] students studied Esperanto for one year, then French for three years, and ended up with a significantly better command of French than a control group, who studied French for all four years.
[10252110] |Similar results were found when the course of study was reduced to two years, of which six months was spent learning Esperanto.
[10252120] |Results are not yet available from a study in Australia to see if similar benefits would occur for learning East Asian languages, but the pupils taking Esperanto did better and enjoyed the subject more than those taking other languages.
[10252130] |== Community == 
[10252140] |=== Geography and demography === 
[10252150] |Esperanto speakers are more numerous in Europe and East [[Asia]] than in the Americas, [[Africa]], and [[Oceania]], and more numerous in [[urban area|urban]] than in [[rural]] areas.
[10252160] |Esperanto is particularly prevalent in the northern and eastern countries of Europe; in China, [[Korea]], Japan, and [[Iran]] within Asia; in [[Brazil]], [[Argentina]], and [[Mexico]] in the Americas; and in [[Togo]] in Africa.
[10252170] |====Number of speakers==== 
[10252180] |An estimate of the number of Esperanto speakers was made by the late [[Sidney S. Culbert]], a [[retirement|retired]] [[psychology]] [[professor]] at the [[University of Washington]] and a longtime Esperantist, who tracked down and tested Esperanto speakers in sample areas in dozens of countries over a period of twenty years.
[10252190] |Culbert concluded that between one and two million people speak Esperanto at [[ILR or Foreign Service Level language ability measures|Foreign Service Level 3]], "professionally proficient" (able to communicate moderately complex ideas without hesitation, and to follow speeches, radio broadcasts, etc.).
[10252200] |Culbert's estimate was not made for Esperanto alone, but formed part of his listing of estimates for all languages of over 1 million speakers, published annually in the [[World Almanac|World Almanac and Book of Facts]].
[10252210] |Culbert's most detailed account of his methodology is found in a 1989 letter to David Wolff .
[10252220] |Since Culbert never published detailed intermediate results for particular countries and regions, it is difficult to independently gauge the accuracy of his results.
[10252230] |In the Almanac, his estimates for numbers of language speakers were rounded to the nearest million, thus the number for Esperanto speakers is shown as 2 million.
[10252240] |This latter figure appears in ''[[Ethnologue]]''.
[10252250] |Assuming that this figure is accurate, that means that about 0.03% of the world's population speaks the language.
[10252260] |This falls short of Zamenhof's goal of a [[international auxiliary language|universal language]], but it represents a level of popularity unmatched by any other constructed language.
[10252270] |Marcus Sikosek (now [[Ziko van Dijk]]) has challenged this figure of 1.6 million as exaggerated.
[10252280] |He estimated that even if Esperanto speakers were evenly distributed, assuming one million Esperanto speakers worldwide would lead one to expect about 180 in the city of [[Cologne, Germany|Cologne]].
[10252290] |Van Dijk finds only 30 [[fluency|fluent]] speakers in that city, and similarly smaller than expected figures in several other places thought to have a larger-than-average concentration of Esperanto speakers.
[10252300] |He also notes that there are a total of about 20,000 members of the various Esperanto organizations (other estimates are higher).
[10252310] |Though there are undoubtedly many Esperanto speakers who are not members of any Esperanto organization, he thinks it unlikely that there are fifty times more speakers than organization members.
[10252320] |[[Finnish people|Finnish]] [[linguistics|linguist]] Jouko Lindstedt, an expert on native-born Esperanto speakers, presented the following scheme to show the overall proportions of language capabilities within the Esperanto community:
[10252330] |* ''1,000 have Esperanto as their native language
[10252340] |* ''10,000 speak it fluently
[10252350] |* ''100,000 can use it actively
[10252360] |* ''1,000,000 understand a large amount passively
[10252370] |* ''10,000,000 have studied it to some extent at some time.''
[10252380] |In the absence of Dr. Culbert's detailed sampling data, or any other census data, it is impossible to state the number of speakers with certainty.
[10252390] |Few observers, probably, would challenge the following statement from the [[website]] of the [[World Esperanto Association]]: 
[10252400] |:Numbers of [[textbook]]s sold and membership of local societies put the number of people with some knowledge of the language in the hundreds of thousands and possibly millions.
[10252410] |====Native speakers==== 
[10252420] |Ethnologue reports estimates that there are 200 to 2000 native Esperanto speakers ''(denaskuloj),'' who have learned the language from birth from their Esperanto-speaking parents.
[10252430] |This usually happens when Esperanto is the chief or only common language in an international family, but sometimes in a family of devoted Esperantists.
[10252440] |The most famous native speaker of Esperanto is businessman [[George Soros]].
[10252450] |Also notable is young Holocaust victim [[Petr Ginz]], whose drawing of the planet Earth as viewed from the moon was carried aboard the Space Shuttle ''[[Space Shuttle Columbia|Columbia]]'' in 2003 ([[STS-107]]).
[10252460] |=== Culture === 
[10252470] |Esperanto speakers can access an international [[culture]], including a large body of original as well as translated [[Esperanto literature|literature]].
[10252480] |There are over 25,000 Esperanto books, both originals and translations, as well as several regularly distributed [[List of Esperanto magazines|Esperanto magazines]].
[10252490] |Esperanto speakers use the language for free accommodations with [[Esperantist]]s in 92 countries using the [[Pasporta Servo]] or to develop [[pen pal]] friendships abroad through the Esperanto Pen Pal Service.
[10252500] |Every year, 1,500-3,000 Esperanto speakers meet for the [[World Congress of Esperanto]] ''(Universala Kongreso de Esperanto)''.
[10252510] |The [[European Esperanto Union]] ''(Eǔropa Esperanto-Unio)'' regroups the national Esperanto associations of the EU member states and holds congresses every two years.
[10252520] |The most recent was in [[Maribor, Slovenia]], in July-August 2007.
[10252530] |It attracted 256 delegates from 28 countries, including 2 members of the [[European Parliament]], Ms. [[Małgorzata Handzlik]] of [[Poland]] and Ms. [[Ljudmila Novak]] of [[Slovenia]].
[10252540] |Historically, much [[Esperanto music]] has been in various folk traditions, such as ''Kaj Tiel Plu'', for example.
[10252550] |In recent decades, more rock and other modern genres have appeared, an example being the Swedish band ''Persone''.
[10252560] |There are also shared [[tradition]]s, such as [[Zamenhof Day]], and shared [[behaviour]] patterns.
[10252570] |[[Esperantist]]s speak primarily in Esperanto at [[World Esperanto Congress|international Esperanto meetings]].
[10252580] |Detractors of Esperanto occasionally criticize it as "having no culture".
[10252590] |Proponents, such as Prof. [[Humphrey Tonkin]] of the [[University of Hartford]], observe that Esperanto is "culturally neutral by design, as it was intended to be a facilitator between cultures, not to be the carrier of any one national culture."
[10252610] |The late [[Scotland|Scottish]] Esperanto author [[William Auld]] has written extensively on the subject, arguing that Esperanto is "the expression of a [[Esperanto as an international language|common human culture]], unencumbered by national frontiers.
[10252620] |Thus it is considered a culture on its own."
[10252630] |Others point to Esperanto's potential for strengthening a common European identity, as it combines features of several [[Esperanto etymology|European languages]].
[10252640] |====In popular culture==== 
[10252650] |Esperanto has been used in a number of films and novels.
[10252660] |Typically, this is done either to add the exotic flavour of a foreign language without representing any particular ethnicity, or to avoid going to the trouble of inventing a new language.
[10252670] |The [[Charlie Chaplin]] film ''[[The Great Dictator]]'' (1940) showed [[Warsaw ghetto|Jewish ghetto]] shops designated in Esperanto, each with the general Esperanto suffix ''-ejo'' (meaning "place for..."), in order to convey the atmosphere of some 'foreign' [[Eastern Europe|East European]] country without referencing any particular East European language.
[10252680] |Two full-length [[feature film]]s have been produced with [[dialogue]] entirely in Esperanto: ''[[Angoroj]],'' in 1964, and ''[[Incubus (1965 film)|Incubus]],'' a 1965 [[B-movie]] horror film.
[10252690] |[[Canada|Canadian]] actor [[William Shatner]] learned Esperanto to a limited level so that he could star in ''Incubus''.
[10252700] |Other amateur productions have been made, such as a dramatisation of the novel ''Gerda Malaperis'' (Gerda Has Disappeared).
[10252710] |A number of "mainstream" films in national languages have used Esperanto in some way, such as ''[[Gattaca]]'' (1997), in which Esperanto can be overheard on the public address system.
[10252720] |In the 1994 film ''[[Street Fighter]]'', Esperanto is the native language of the fictional country of [[Shadaloo]], and in a barracks scene the soldiers of villain [[M. Bison]] sing a rousing Russian Army-style chorus, the "Bison Troopers Marching Song", in the language.
[10252730] |Esperanto is also spoken and appears on signs in the film ''[[Blade: Trinity]]''.
[10252740] |In the British comedy ''[[Red Dwarf]]'', [[Arnold Rimmer]] is seen attempting to learn Esperanto in a number of early episodes, including ''[[Kryten (Red Dwarf episode)|Kryten]]''.
[10252750] |In the first season, signs on the titular spacecraft are in both English and Esperanto.
[10252760] |Esperanto is used as the universal language in the far future of [[Harry Harrison]]'s ''[[Stainless Steel Rat]]'' and ''[[Deathworld]]'' stories.
[10252770] |In a 1969 guest appearance on ''[[The Tonight Show]]'', [[Jay Silverheels]] of ''[[The Lone Ranger]]'' fame appeared in character as [[Tonto]] for a comedy sketch with [[Johnny Carson]], and claimed Esperanto skills as he sought new employment.
[10252780] |The sketch ended with a statement of his ideal situation: "Tonto, to [[Toronto, Canada|Toronto]], for Esperanto, and pronto!"
[10252790] |Also, in the [[Danny Phantom]] Episode, "Public Enemies", Danny, Tucker, and Sam come across a ghost wolf who speaks Esperanto, but only Tucker can understand at first.
[10252800] |=== In Science === 
[10252810] |In 1921 the [[French Academy of Sciences]] recommended using Esperanto for international scientific communication.
[10252820] |A few scientists and mathematicians, such as [[Maurice René Fréchet|Maurice Fréchet]] (mathematics), [[John C. Wells]] (linguistics), [[Helmar Frank]] (pedagogy and cybernetics), and [[Nobel Prize in Economics|Nobel laureate]] [[Reinhard Selten]] (economics) have published part of their work in Esperanto.
[10252830] |Frank and Selten were among the founders of the [[Akademio Internacia de la Sciencoj San Marino|International Academy of Sciences]] in [[San Marino]], sometimes called the "Esperanto University", where Esperanto is the primary language of teaching and administration.
[10252840] |=== Goals of the movement === 
[10252850] |Zamenhof's intention was to create an easy-to-learn language to foster international understanding.
[10252860] |It was to serve as an international auxiliary language, that is, as a universal second language, not to replace ethnic languages.
[10252870] |This goal was widely shared among Esperanto speakers in the early decades of the movement.
[10252880] |Later, Esperanto speakers began to see the language and the culture that had grown up around it as ends in themselves, even if Esperanto is never adopted by the United Nations or other international organizations.
[10252890] |Those Esperanto speakers who want to see Esperanto adopted officially or on a large scale worldwide are commonly called ''[[Finvenkismo|finvenkistoj]]'', from ''fina venko'', meaning "final victory", or ''pracelistoj'', from ''pracelo'', meaning "original goal".
[10252900] |Those who focus on the intrinsic value of the language are commonly called ''[[Raumism|raŭmistoj]]'', from [[Rauma, Finland|Rauma]], [[Finland]], where a declaration on the near-term unlikelihood of the "fina venko" and the value of Esperanto culture was made at the International Youth Congress in 1980.
[10252910] |These categories are, however, not mutually exclusive.
[10252920] |The [[Prague Manifesto (Esperanto)|Prague Manifesto]] (1996) presents the views of the mainstream of the Esperanto movement and of its main organisation, the World Esperanto Association ([[World Esperanto Association|UEA]]).
[10252930] |=== Symbols and flags === 
[10252940] |In 1893, C. Rjabinis and P. Deullin designed and manufactured a lapel pin for Esperantists to identify each other.
[10252950] |The design was a circular pin with a white background and a five pointed green star.
[10252960] |The theme of the design was the hope of the [[Continent#Number of continents|five continents]] being united by a common language.
[10252970] |The earliest flag, and the one most commonly used today, features a green five-pointed star against a white canton, upon a field of green.
[10252980] |It was proposed to Zamenhof by [[Ireland|Irishman]] Richard Geoghegan, author of the first Esperanto textbook for English speakers, in 1887.
[10252990] |In 1905, delegates to the first conference of Esperantists at Boulogne-sur-Mer unanimously approved a version that differed from the modern flag only by the superimposition of an "E" over the green star.
[10253000] |Other variants include that for Christian Esperantists, with a white [[Christian cross]] superimposed upon the green star, and that for Leftists, with [[Red flag|the color of the field changed from green to red]].
[10253010] |In 1987, a second flag design was chosen in a contest organized by the UEA celebrating the first centennial of the language.
[10253020] |It featured a white background with two stylised curved "E"s facing each other.
[10253030] |Dubbed the "jubilea simbolo" ([[Esperanto jubilee symbol|jubilee symbol]]) , it attracted criticism from some Esperantists, who dubbed it the "melono" (melon) because of the design's elliptical shape.
[10253040] |It is still in use, though to a lesser degree than the traditional symbol, known as the "verda stelo" (green star).
[10253050] |=== Religion === 
[10253060] |Esperanto has served an important role in several religions, such as [[Oomoto]] from Japan and [[Baha'i]] from Iran, and has been encouraged by others.
[10253070] |==== Oomoto ==== 
[10253080] |The [[Oomoto]] religion encourages the use of Esperanto among their followers and includes Zamenhof as one of its deified spirits.
[10253090] |==== Bahá'í Faith==== 
[10253100] |The [[Bahá'í Faith]] encourages the [[Bahá'í Faith and auxiliary language|use of an auxiliary international language]].
[10253110] |While endorsing no specific language, some Bahá'ís see Esperanto as having great potential in this role.
[10253120] |[[Lidja Zamenhof]], the daughter of Esperanto founder [[L. L. Zamenhof]], became a Bahá'í.
[10253130] |Various volumes of the [[Bahá'í literature]]s and other Baha'i books have been translated into Esperanto.
[10253140] |==== Spiritism ==== 
[10253150] |Esperanto is also actively promoted, at least in [[Brazil]], by followers of [[Spiritism]].
[10253160] |The Brazilian Spiritist Federation publishes Esperanto coursebooks, translations of [[Spiritist Codification|Spiritism's basic books]], and encourages Spiritists to become Esperantists.
[10253170] |==== Bible translations ==== 
[10253180] |The first translation of the [[Bible]] into Esperanto was a translation of the [[Tanach]] or Old Testament done by [[L. L. Zamenhof]].
[10253190] |The translation was reviewed and compared with other languages' translations by a group of British clergy and scholars before publishing it at the [[British and Foreign Bible Society]] in 1910.
[10253200] |In 1926 this was published along with a New Testament translation, in an edition commonly called the "Londona Biblio".
[10253210] |In the 1960s, the ''Internacia Asocio de Bibliistoj kaj Orientalistoj'' tried to organize a new, ecumenical Esperanto Bible version.
[10253220] |Since then, the Dutch Lutheran pastor Gerrit Berveling has translated the [[Deuterocanonical]] or apocryphal books in addition to new translations of the Gospels, some of the New Testament epistles, and some books of the Tanakh or Old Testament.
[10253230] |These have been published in various separate booklets, or serialized in ''Dia Regno'', but the [[Deuterocanonical]] books have appeared in recent editions of the Londona Biblio.
[10253240] |==== Christianity ==== 
[10253250] |Two Roman Catholic popes, [[Pope John Paul II|John Paul II]] and [[Pope Benedict XVI|Benedict XVI]], have regularly used Esperanto in their multilingual ''[[urbi et orbi]]'' blessings at Easter and Christmas each year since Easter 1994.
[10253260] |Christian Esperanto organizations include two that were formed early in the history of Esperanto, the [[International Union of Catholic Esperantists]] and the [[List of Esperanto organizations#Religion|International Christian Esperantists League]].
[10253270] |An issue of "The Friend" describes the activities of the [[Quaker]] Esperanto Society.
[10253280] |There are instances of Christian apologists and teachers who use Esperanto as a medium.
[10253290] |[[Nigeria]]n [[Pastor]] Bayo Afolaranmi's "[http://groups.yahoo.com/group/spiritanutrajxo/ Spirita nutraĵo]" (spiritual food) Yahoo mailing list, for example, has hosted weekly messages since 2003.
[10253300] |[[Chick Publications]], publisher of [[Fundamentalist Christianity|Protestant fundamentalist]] themed evangelistic tracts, has published a number of comic book style tracts by [[Jack T. Chick]] translated into Esperanto, including "This Was Your Life!"
[10253310] |("Jen Via Tuto Vivo!")
[10253320] |==== Islam ==== 
[10253330] |[[Ayatollah Khomeini]] of [[Iran]] called on Muslims to learn Esperanto and praised its use as a medium for better understanding among peoples of different religious backgrounds.
[10253340] |After he suggested that Esperanto replace English as an international [[lingua franca]], it began to be used in the seminaries of [[Qom]].
[10253350] |An Esperanto translation of the [[Qur'an]] was published by the state shortly thereafter.
[10253360] |In 1981, Khomeini and the Iranian government began to oppose Esperanto after realising that followers of the [[Bahá'í Faith]] were interested in it.
[10253370] |== Criticism == 
[10253380] |Esperanto was conceived as a language of international communication, more precisely as a universal [[second language]].
[10253390] |Since publication, there has been debate over whether it is possible for Esperanto to attain this position, and whether it would be an improvement for international communication if it did.
[10253400] |There have been a number of attempts to reform the language, the most well-known of which is the language [[Ido]] which resulted in a schism in the community at the time, beginning in 1907.
[10253410] |Since Esperanto is a planned language, there have been many, often passionate, criticisms of minor points which are too numerous to cover here, such as Zamenhof's choice of the word ''edzo'' over something like ''spozo'' for "husband, spouse", or his choice of the Classic Greek and Old Latin singular and plural endings ''-o, -oj, -a, -aj'' over their Medieval contractions ''-o, -i, -a, -e.''
[10253420] |(Both these changes were adopted by the Ido reform, though Ido dispensed with adjectival agreement altogether.)
[10253430] |See the links [[Esperanto#Criticism|below]] for examples of more general criticism.
[10253440] |The more common points include: 
[10253450] |* Esperanto has failed the expectations of its founder to become a universal second language.
[10253460] |Although many promoters of Esperanto stress the few successes it has had, the fact remains that well over a century since its publication, the portion of the world that speaks Esperanto, and the number of primary and secondary schools which teach it, remain minuscule.
[10253470] |It simply cannot compete with English in this regard.
[10253480] |* The vocabulary and grammar are based on major European languages, and are not universal.
[10253490] |Often this criticism is specific to a few points such as adjectival agreement and the accusative case (generally such obvious details are all that reform projects suggest changing), but sometimes it is more general: Both the grammar and the 'international' vocabulary are difficult for many Asians, among others, and give an unfair advantage to speakers of European languages.
[10253500] |One attempt to address this issue is [[Lojban]], which draws from the six populous languages [[Arabic language|Arabic]], [[Chinese language|Chinese]], [[English language|English]], [[Hindi]], [[Russian language|Russian]], and [[Spanish language|Spanish]], and whose grammar is designed for computer parsing.
[10253510] |* The vocabulary, diacritic letters, and grammar are too dissimilar from the major Western European languages, and therefore Esperanto is not as easy as it could be for speakers of those languages to learn.
[10253520] |Attempts to address this issue include the younger planned languages [[Ido]] and [[Interlingua]].
[10253530] |* Esperanto phonology is unimaginatively provincial, being essentially [[Belorussian language|Belorussian]] with regularized stress, leaving out only the [[nasal vowel]]s, [[palatalization|palatalized consonants]], and /dz/.
[10253540] |For example, Esperanto has phonemes such as {{IPA|/x/, /ʒ/, /ts/, /eu̯/}} ''(ĥ, ĵ, c, eŭ)'' which are rare as distinct phonemes outside Europe.
[10253550] |(Note that none of these are found in initial position in English.)
[10253560] |* Esperanto has no culture.
[10253570] |Although it has a large international literature, Esperanto does not encapsulate a specific culture.
[10253580] |* Esperanto is culturally European.
[10253590] |This is due to the European derivation of its vocabulary, and more insidiously, its [[semantics]]; both infuse the language with a European world view.
[10253600] |* The vocabulary is too large.
[10253610] |Rather than deriving new words from existing roots, large numbers of new roots are adopted into the language by people who think they're international, when in fact they're only European.
[10253620] |This makes the language much more difficult for non-Europeans than it needs to be.
[10253630] |* Esperanto is [[sexism|sexist]].
[10253640] |As in English, there is no neutral pronoun for ''s/he,'' and most kin terms and titles are masculine by default and only feminine when so specified.
[10253650] |There have been many attempts to address this issue, of which one of the better known is [[Riism]].
[10253660] |* Esperanto is, looks, or sounds artificial.
[10253670] |This criticism is primarily due to the letters with circumflex diacritics, which some find odd or cumbersome, and to the lack of fluent speakers: Few Esperantists have spent much time with fluent, let alone native, speakers, and many learn Esperanto relatively late in life, and so speak haltingly, which can create a negative impression among non-speakers.
[10253680] |Among fluent speakers, Esperanto sounds no more artificial than any other language.
[10253690] |Others claim that an artificial language will necessarily be deficient, due to its very nature, but the [[Hungarian Academy of Sciences]] has found that Esperanto fulfills all the requirements of a living language.
[10253700] |== Modifications == 
[10253710] |Though Esperanto itself has changed little since the publication of the ''[[Fundamento de Esperanto]]'' (Foundation of Esperanto), a number of reform projects have been proposed over the years, starting with [[Reformed Esperanto|Zamenhof's proposals in 1894]] and [[Ido]] in 1907.
[10253720] |Several later constructed languages, such as Fasile, were based on Esperanto.
[10253730] |In modern times, attempts have been made to eliminate perceived sexism in the language.
[10253740] |One example of this is [[Riism]].
[10253750] |However, as Esperanto has become a living language, changes are as difficult to implement as in ethnic languages.
[10260010] |<article>Formal grammar</article>
[10260020] |In [[formal semantics]], [[computer science]] and [[linguistics]], a '''formal grammar''' (also called '''formation rules''') is a precise description of a [[formal language]] &ndash; that is, of a [[set]] of [[String (computer science)|strings]] over some [[Alphabet (computer science)|alphabet]].
[10260030] |In other words, a grammar describes which of the possible sequences of symbols (strings) in a language constitute valid words or statements in that language, but it does not describe their [[semantics]] (i.e. what they mean).
[10260040] |The branch of mathematics that is concerned with the properties of formal grammars and languages is called [[formal language theory]].
[10260050] |A grammar is usually regarded as a means to [[generate]] all the valid strings of a language; it can also be used as the basis for a [[recognizer]] that determines for any given string whether it is [[grammatical]] (i.e. belongs to the language).
[10260060] |To describe such recognizers, formal language theory uses separate formalisms, known as [[automata theory|automata]].
[10260070] |A grammar can also be used to [[analyze]] the strings of a language &ndash; i.e. to describe their internal structure.
[10260080] |In computer science, this process is known as [[parsing]].
[10260090] |Most languages have very [[compositional semantics]], i.e. the meaning of their utterances is structured according to their [[syntax]]; therefore, the first step to describing the meaning of an utterance in language is to analyze it and look at its analyzed form (known as its [[parse tree]] in computer science, and as its [[deep structure]] in [[generative grammar]]).
[10260100] |== Background == 
[10260110] |=== Formal language === 
[10260120] |A ''formal language'' is an organized [[set]] of [[symbol]]s the essential feature of which is that it can be precisely defined in terms of just the shapes and locations of those symbols.
[10260130] |Such a language can be defined, then, without any [[reference]] to any [[meaning (linguistics)|meaning]]s of any of its expressions; it can exist before any [[formal interpretation]] is assigned to it -- that is, before it has any meaning.
[10260140] |First order logic is expressed in some formal language.
[10260150] |A formal grammar determines which symbols and sets of symbols are [[Formula (mathematical logic)|formula]]s in a formal language.
[10260160] |=== Formal systems === 
[10260170] |A ''formal system'' (also called a ''logical calculus'', or a ''logical system'') consists of a formal language together with a [[deductive apparatus]] (also called a ''deductive system'').
[10260180] |The deductive apparatus may consist of a set of [[transformation rule]]s (also called ''inference rules'') or a set of [[axiom]]s, or have both.
[10260190] |A formal system is used to [[Proof theory|derive]] one expression from one or more other expressions.
[10260200] |=== Formal proofs === 
[10260210] |A ''formal proof'' is a sequence of well-formed formulas of a formal language, the last one of which is a [[theorem]] of a formal system.
[10260220] |The theorem is a [[syntactic consequence]] of all the wffs preceding it in the proof.
[10260230] |For a wff to qualify as part of a proof, it must be the result of applying a rule of the deductive apparatus of some formal system to the previous wffs in the proof sequence.
[10260240] |=== Formal interpretations === 
[10260250] |An ''interpretation'' of a formal system is the assignment of meanings to the symbols, and truth-values to the sentences of a formal system.
[10260260] |The study of formal interpretations is called [[formal semantics]].
[10260270] |''Giving an interpretation'' is synonymous with ''constructing a [[Structure (mathematical logic)|model]].
[10260280] |== Formal grammars == 
[10260290] |A grammar mainly consists of a set of rules for transforming strings.
[10260300] |(If it ''only'' consisted of these rules, it would be a [[semi-Thue system]].)
[10260310] |To generate a string in the language, one begins with a string consisting of only a single ''start symbol'', and then successively applies the rules (any number of times, in any order) to rewrite this string.
[10260320] |The language consists of all the strings that can be generated in this manner.
[10260330] |Any particular sequence of legal choices taken during this rewriting process yields one particular string in the language.
[10260340] |If there are multiple ways of generating the same single string, then the grammar is said to be [[ambiguous grammar|ambiguous]].
[10260350] |For example, assume the alphabet consists of <math>a</math> and <math>b</math>, the start symbol is <math>S</math> and we have the following rules:
[10260360] |: 1. <math>S \rightarrow aSb</math>
[10260370] |: 2. <math>S \rightarrow ba</math>
[10260380] |then we start with <math>S</math>, and can choose a rule to apply to it.
[10260390] |If we choose rule 1, we obtain the string <math>aSb</math>.
[10260400] |If we choose rule 1 again, we replace <math>S</math> with <math>aSb</math> and obtain the string <math>aaSbb</math>.
[10260410] |This process can be repeated at will until all occurrences of ''S'' are removed, and only symbols from the alphabet remain (i.e., <math>a</math> and <math>b</math>).
[10260420] |For example, if we now choose rule 2, we replace <math>S</math> with <math>ba</math> and obtain the string <math>aababb</math>, and are done.
[10260430] |We can write this series of choices more briefly, using symbols: <math>S \Rightarrow aSb \Rightarrow aaSbb \Rightarrow aababb</math>.
[10260440] |The language of the grammar is the set of all the strings that can be generated using this process: <math>\left \{ba, abab, aababb, aaababbb, ...\right \}</math>.
[10260450] |=== Formal definition === 
[10260460] |In the classic formalization of generative grammars first proposed by [[Noam Chomsky]] in the 1950s, a grammar ''G'' consists of the following components: 
[10260470] |* A finite set <math>N</math> of ''[[nonterminal symbol]]s''.
[10260480] |* A finite set <math>\Sigma</math> of ''[[terminal symbol]]s'' that is [[Disjoint sets|disjoint]] from <math>N</math>.
[10260490] |* A finite set <math>P</math> of ''production rules'', each of the form
[10260500] |:: <math>(\Sigma \cup N)^{*} N (\Sigma \cup N)^{*} \rightarrow (\Sigma \cup N)^{*} </math> 
[10260510] |:where <math>{}^{*}</math> is the [[Kleene star]] operator and <math>\cup</math> denotes [[union (set theory)|set union]].
[10260520] |That is, each production rule maps from one string of symbols to another, where the first string contains at least one nonterminal symbol.
[10260530] |In the case that the second string is the [[empty string]] &ndash; that is, that it contains no symbols at all &ndash; in order to avoid confusion, the empty string is often denoted with a special notation, often (<math>\lambda</math>, <math>e</math> or <math>\epsilon</math>.
[10260540] |* A distinguished symbol <math>S \in N</math> that is the ''start symbol''.
[10260550] |A grammar is formally defined as the ordered quad-tuple <math>(N, \Sigma, P, S)</math>.
[10260560] |Such a formal grammar is often called a ''rewriting system'' or a ''phrase structure grammar'' in the literature.
[10260570] |The operation of a grammar can be defined in terms of relations on strings: 
[10260580] |* Given a grammar <math>G = (N, \Sigma, P, S)</math>, the binary relation <math>\Rightarrow_G</math> (pronounced as "G derives in one step") on strings in <math>(\Sigma \cup N)^{*}</math> is defined by:
[10260590] |<math>x \Rightarrow_G y \mbox{ iff } \exists u, v, w \in \Sigma^*, X \in N: x = uXv \wedge y = uwv \wedge X \rightarrow w \in P</math> 
[10260600] |* the relation <math>{\Rightarrow_G}^*</math> (pronounced as ''G derives in zero or more steps'') is defined as the [[transitive closure]] of <math>(\Sigma \cup N)^{*}</math>
[10260610] |* the ''language'' of <math>G</math>, denoted as <math>\boldsymbol{L}(G)</math>, is defined as all those strings over <math>\Sigma</math> that can be generated by starting with the start symbol <math>S</math> and then applying the production rules in <math>P</math> until no more nonterminal symbols are present; that is, the set <math>\{ w \in \Sigma^* \mid S {\Rightarrow_G}^* w \}</math>.
[10260620] |Note that the grammar <math>G = (N, \Sigma, P, S)</math> is effectively the [[semi-Thue system]] <math>(N \cup \Sigma, P)</math>, rewriting strings in exactly the same way; the only difference is in that we distinguish specific ''nonterminal'' symbols which must be rewritten in rewrite rules, and are only interested in rewritings from the designated start symbol <math>S</math> to strings without nonterminal symbols.
[10260630] |=== Example === 
[10260640] |''For these examples, formal languages are specified using [[set-builder notation]].''
[10260650] |Consider the grammar <math>G</math> where <math>N = \left \{S, B\right \}</math>, <math>\Sigma = \left \{a, b, c\right \}</math>, <math>S</math> is the start symbol, and <math>P</math> consists of the following production rules:
[10260660] |: 1. <math>S \rightarrow aBSc</math>
[10260670] |: 2. <math>S \rightarrow abc</math>
[10260680] |: 3. <math>Ba \rightarrow aB</math>
[10260690] |: 4. <math>Bb \rightarrow bb </math>
[10260700] |Some examples of the derivation of strings in <math>\boldsymbol{L}(G)</math> are: 
[10260710] |* <math>\boldsymbol{S} \Rightarrow_2 \boldsymbol{abc}</math>
[10260720] |* <math>\boldsymbol{S} \Rightarrow_1 \boldsymbol{aBSc} \Rightarrow_2 aB\boldsymbol{abc}c \Rightarrow_3 a\boldsymbol{aB}bcc \Rightarrow_4 aa\boldsymbol{bb}cc</math>
[10260730] |* <math>\boldsymbol{S} \Rightarrow_1 \boldsymbol{aBSc} \Rightarrow_1 aB\boldsymbol{aBSc}c \Rightarrow_2 aBaB\boldsymbol{abc}cc \Rightarrow_3 a\boldsymbol{aB}Babccc \Rightarrow_3 aaB\boldsymbol{aB}bccc </math><math> \Rightarrow_3 aa\boldsymbol{aB}Bbccc \Rightarrow_4 aaaB\boldsymbol{bb}ccc \Rightarrow_4 aaa\boldsymbol{bb}bccc</math>
[10260740] |:(Note on notation: <math>L \Rightarrow_i R</math> reads "''L'' generates ''R'' by means of production ''i''" and the generated part is each time indicated in bold.)
[10260750] |This grammar defines the language <math>L = \left \{ a^{n}b^{n}c^{n} | n \ge 1 \right \}</math> where <math>a^{n}</math> denotes a string of ''n'' consecutive <math>a</math>'s.
[10260760] |Thus, the language is the set of strings that consist of 1 or more <math>a</math>'s, followed by the same number of <math>b</math>'s, followed by the same number of <math>c</math>'s.
[10260770] |=== The Chomsky hierarchy === 
[10260780] |When [[Noam Chomsky]] first formalized generative grammars in 1956, he classified them into types now known as the [[Chomsky hierarchy]].
[10260790] |The difference between these types is that they have increasingly strict production rules and can express fewer formal languages.
[10260800] |Two important types are ''[[context-free grammar]]s'' (Type 2) and ''[[regular grammar]]s'' (Type 3).
[10260810] |The languages that can be described with such a grammar are called ''[[context-free language]]s'' and ''[[regular language]]s'', respectively.
[10260820] |Although much less powerful than unrestricted grammars (Type 0), which can in fact express any language that can be accepted by a [[Turing machine]], these two restricted types of grammars are most often used because [[parsing|parser]]s for them can be efficiently implemented.
[10260830] |For example, all regular languages can be recognized by a [[finite state machine]], and for useful subsets of context-free grammars there are well-known algorithms to generate efficient [[LL parser]]s and [[LR parser]]s to recognize the corresponding languages those grammars generate.
[10260840] |==== Context-free grammars ==== 
[10260850] |A ''[[context-free grammar]]'' is a grammar in which the left-hand side of each production rule consists of only a single nonterminal symbol.
[10260860] |This restriction is non-trivial; not all languages can be generated by context-free grammars.
[10260870] |Those that can are called ''context-free languages''.
[10260880] |The language defined above is not a context-free language, and this can be strictly proven using the [[pumping lemma for context-free languages]], but for example the language <math>\left \{ a^{n}b^{n} | n \ge 1 \right \}</math> (at least 1 <math>a</math> followed by the same number of <math>b</math>'s) is context-free, as it can be defined by the grammar <math>G_2</math> with <math>N=\left \{S\right \}</math>, <math>\Sigma=\left \{a,b\right \}</math>, <math>S</math> the start symbol, and the following production rules:
[10260890] |: 1. <math>S \rightarrow aSb</math>
[10260900] |: 2. <math>S \rightarrow ab</math>
[10260910] |A context-free language can be recognized in <math>O(n^3)</math> time (''see'' [[Big O notation]]) by an algorithm such as [[Earley's algorithm]].
[10260920] |That is, for every context-free language, a machine can be built that takes a string as input and determines in <math>O(n^3)</math> time whether the string is a member of the language, where <math>n</math> is the length of the string.
[10260930] |Further, some important subsets of the context-free languages can be recognized in linear time using other algorithms.
[10260940] |==== Regular grammars ==== 
[10260950] |In [[regular grammar]]s, the left hand side is again only a single nonterminal symbol, but now the right-hand side is also restricted: It may be the empty string, or a single terminal symbol, or a single terminal symbol followed by a nonterminal symbol, but nothing else.
[10260960] |(Sometimes a broader definition is used: one can allow longer strings of terminals or single nonterminals without anything else, making languages [[syntactic sugar|easier to denote]] while still defining the same class of languages.)
[10260970] |The language defined above is not regular, but the language <math>\left \{ a^{n}b^{m} \,| \, m,n \ge 1 \right \}</math> (at least 1 <math>a</math> followed by at least 1 <math>b</math>, where the numbers may be different) is, as it can be defined by the grammar <math>G_3</math> with <math>N=\left \{S, A,B\right \}</math>, <math>\Sigma=\left \{a,b\right \}</math>, <math>S</math> the start symbol, and the following production rules:
[10260980] |:# <math>S \rightarrow aA</math>
[10260990] |:# <math>A \rightarrow aA</math>
[10261000] |:# <math>A \rightarrow bB</math>
[10261010] |:# <math>B \rightarrow bB</math>
[10261020] |:# <math>B \rightarrow \epsilon</math>
[10261030] |All languages generated by a regular grammar can be recognized in linear time by a [[finite state machine]].
[10261040] |Although, in practice, regular grammars are commonly expressed using [[regular expression]]s, some forms of regular expression used in practice do not strictly generate the regular languages and do not show linear recognitional performance due to those deviations.
[10261050] |=== Other forms of generative grammars === 
[10261060] |Many extensions and variations on Chomsky's original hierarchy of formal grammars have been developed more recently, both by linguists and by computer scientists, usually either in order to increase their expressive power or in order to make them easier to analyze or [[parsing|parse]].
[10261070] |Some forms of grammars developed include:
[10261080] |* [[Tree-adjoining grammar]]s increase the expressiveness of conventional generative grammars by allowing rewrite rules to operate on [[parse tree]]s instead of just strings.
[10261090] |* [[Affix grammar]]s and [[attribute grammar]]s allow rewrite rules to be augmented with semantic attributes and operations, useful both for increasing grammar expressiveness and for constructing practical language translation tools.
[10261100] |== Analytic grammars == 
[10261110] |Though there is very little literature on [[parsing]] [[algorithms]], most of these algorithms assume that the language to be parsed is initially ''described'' by means of a ''generative'' formal grammar, and that the goal is to transform this generative grammar into a working parser.
[10261120] |Strictly speaking, a generative grammar does not in any way correspond to the algorithm used to parse a language, and various algorithms have different restrictions on the form of production rules that are considered well-formed.
[10261130] |An alternative approach is to formalize the language in terms of an analytic grammar in the first place, which more directly corresponds to the structure and semantics of a parser for the language.
[10261140] |Examples of analytic grammar formalisms include the following:
[10261150] |* [[The Language Machine]] directly implements unrestricted analytic grammars.
[10261160] |Substitution rules are used to transform an input to produce outputs and behaviour.
[10261170] |The system can also produce [http://languagemachine.sourceforge.net/picturebook.html the lm-diagram] which shows what happens when the rules of an unrestricted analytic grammar are being applied.
[10261180] |* [[Top-down parsing language]] (TDPL): a highly minimalist analytic grammar formalism developed in the early 1970s to study the behavior of [[Top-down parsing|top-down parsers]].
[10261190] |* [[Link grammar]]s: a form of analytic grammar designed for [[linguistics]], which derives syntactic structure by examining the positional relationships between pairs of words.
[10261200] |* [[Parsing expression grammar]]s (PEGs): a more recent generalization of TDPL designed around the practical [[expressiveness]] needs of [[programming language]] and [[compiler]] writers.
[10270010] |<article>Free software</article>
[10270020] |'''Free software''' or software libre is [[software]] that can be used, studied, and modified without restriction, and which can be copied and redistributed in modified or unmodified form either without restriction, or with minimal restrictions only to ensure that further recipients can also do these things.
[10270030] |In practice, for software to be distributed as free software, the human readable form of the program (the "[[source code]]") must be made available to the recipient along with a notice granting the above permissions.
[10270040] |Such a notice is a "[[free software licence]]", or, in theory, could be a notice saying that the source code is released into the [[public domain]].
[10270050] |The [[free software movement]] was conceived in 1983 by [[Richard Stallman]] to make these freedoms available to every computer user.
[10270060] |From the late 1990s onward, [[alternative terms for free software]] came into use.
[10270070] |"'''[[Open source software]]'''" is the most common such alternative term.
[10270080] |Others include "'''software [[Gratis versus Libre|libre]]'''", "free, libre and open-source software" ("'''[[FOSS]]'''", or, with "libre", "'''FLOSS'''").
[10270090] |The antonym of free software is "''[[proprietary software]]''" or ''non-free software''.
[10270100] |Free software is distinct from "[[freeware]]" which is [[proprietary software]] made available free of charge.
[10270110] |Users usually cannot study, modify, or redistribute freeware.
[10270120] |Since free software may be freely redistributed, it generally is available at little or no cost.
[10270130] |Free software business models are usually based on adding value such as support, training, customization, integration, or certification.
[10270140] |At the same time, some business models which work with [[proprietary software]] are not compatible with free software, such as those that depend on a user paying for a licence in order to lawfully use a software product.
[10270150] |== History == 
[10270160] |In the 1950s, 1960s, and 1970s, it was normal for computer users to have the freedoms that are provided by free software.
[10270170] |[[Software]] was commonly shared by individuals who used computers and by hardware manufacturers who were glad that people were making software that made their hardware useful.
[10270180] |In the 1970s and early 1980s, the [[software industry]] began using technical measures (such as only distributing [[Executable|binary copies]] of [[computer programs]]) to prevent [[computer users]] from being able to study and modify software..
[10270190] |In 1980 [[copyright]] law was extended to computer programs.
[10270200] |In 1983, [[Richard Stallman]], longtime member of the [[hacker (free and open source software)|hacker]] community at the [[MIT Artificial Intelligence Laboratory]], announced the [[GNU project]], saying that he had become frustrated with the effects of the change in culture of the computer industry and its users.
[10270210] |Software development for the [[GNU operating system]] began in January 1984, and the [[Free Software Foundation]] (FSF) was founded in October 1985.
[10270220] |He developed a free software definition and the concept of "[[copyleft]]", designed to ensure software freedom for all.
[10270230] |Free software is a widespread international concept, producing software used by individuals, large organizations, and governmental administrations.
[10270240] |Free software has a very high market penetration in server-side Internet applications such as the [[Apache web server]], [[MySQL]] database, and [[PHP]] scripting language.
[10270250] |Completely free computing environments are available as large packages of basic system software, such as the many [[GNU/Linux distribution]]s and [[FreeBSD]].
[10270260] |Free software [[Software development|developers]] have also created free versions of almost all commonly used desktop applications, including Web browsers, office productivity suites, and multimedia players.
[10270270] |It is important to note, however, that in many categories, free software for individual [[workstation]]s or home users has only a fraction of the market share of its proprietary competitors.
[10270280] |Most free software is distributed [[online]] without charge, or [[off-line]] at the [[marginal cost]] of distribution, but this pricing model is not required, and people may sell copies of free software programs for any price.
[10270290] |The economic viability of free software has been recognised by large corporations such as [[IBM]], [[Red Hat]], and [[Sun Microsystems]].
[10270300] |Many companies whose core business is not in the IT sector choose free software for their Internet information and sales sites, due to the lower initial capital investment and ability to freely customize the application packages.
[10270310] |Also, some non-software industries are beginning to use techniques similar to those used in free software development for their research and development process; scientists, for example, are looking towards more open development processes, and hardware such as microchips are beginning to be developed with specifications released under [[copyleft]] licenses (see the [[OpenCores]] project, for instance).
[10270320] |[[Creative Commons]] and the [[free culture movement]] have also been largely influenced by the free software movement.
[10270330] |===Naming=== 
[10270340] |The FSF recommends using the term "free software" rather than "open source software" because that term and the associated marketing campaign focuses on the technical issues of software development, avoiding the issue of user freedoms.
[10270350] |"[[Libre]]" is used to avoid the ambiguity of the word "free".
[10270360] |However, amongst English speakers, ''libre'' is primarily only used within the free software movement.
[10270370] |== Definition == 
[10270380] |The first formal definition of free software was published by FSF in February 1986.
[10270390] |That definition, written by Richard Stallman, is still maintained today and states that software is free software if people who receive a copy of the software have the following four freedoms:
[10270400] |* Freedom 0: The freedom to run the program for any purpose.
[10270410] |* Freedom 1: The freedom to study and modify the program.
[10270420] |* Freedom 2: The freedom to copy the program so you can help your neighbor.
[10270430] |* Freedom 3: The freedom to improve the program, and release your improvements to the public, so that the whole community benefits.
[10270440] |Freedoms 1 and 3 require [[source code]] to be available because studying and modifying software without its source code is highly impractical.
[10270450] |Thus, free software means that [[user (computing)|computer users]] have the freedom to cooperate with whom they choose, and to control the software they use.
[10270460] |To summarize this into a remark distinguishing ''[[Gratis versus Libre|libre]]'' (freedom) software from ''[[Gratis versus Libre|gratis]]'' (zero price) software, [[Richard Stallman]] said: "''Free software is a matter of liberty, not price.
[10270470] |To understand the concept, you should think of 'free' as in '[[free speech]]', not as in '[[free beer]]<nowiki>'</nowiki>''".
[10270480] |In the late 90s, other groups published their own definitions which describe an almost identical set of software.
[10270490] |The most notable are [[Debian Free Software Guidelines]] published in 1997, and the [[Open Source Definition]], published in 1998.
[10270500] |The BSD-based operating systems, such as [[FreeBSD]], [[OpenBSD]], and [[NetBSD]], do not have their own formal definitions of free software.
[10270510] |Users of these systems generally find the same set of software to be acceptable, but sometimes see copyleft as restrictive.
[10270520] |They generally advocate [[permissive free software licenses]], which allow others to make software based on their source code, and then release the modified result as proprietary software.
[10270530] |Their view is that this permissive approach is more free.
[10270540] |The [[Kerberos (protocol)|Kerberos]], [[X.org]], and [[Apache License|Apache]] software licenses are substantially similar in intent and implementation.
[10270550] |All of these software packages originated in academic institutions interested in wide technology transfer ([[University of California]], [[Massachusetts Institute of Technology|MIT]], and [[University of Illinois at Urbana-Champaign|UIUC]]).
[10270560] |== Examples of free software == 
[10270570] |The [[Free Software Directory]] is a free software project that maintains a large database of free software packages.
[10270580] |===Notable free software=== 
[10270590] |* [[Graphical user interface|GUI]] related
[10270600] |**[[X Window System]]
[10270610] |**[[GNOME]]
[10270620] |**[[KDE]]
[10270630] |**[[Xfce]] desktop environments
[10270640] |* [[OpenOffice.org]] office suite
[10270650] |* [[Mozilla Application Suite|Mozilla]] and [[Mozilla Firefox|Firefox]] web browsers.
[10270660] |* Typesetting and document preparation systems
[10270670] |**[[TeX]]
[10270680] |**[[LaTeX]]
[10270690] |* Graphics tools like [[GIMP]] image graphics editor and [[Blender (software)|Blender]] 3D animation program.
[10270700] |* [[Text editor]]s like [[vi]] or [[emacs]].
[10270710] |* [[ogg]] is a free software multimedia container, used to hold [[ogg vorbis]] sound and [[ogg theora]] video.
[10270720] |* [[Relational database]] systems
[10270730] |**[[MySQL]]
[10270740] |**[[PostgreSQL]]
[10270750] |* [[GNU Compiler Collection|GCC]] compilers, [[GDB]] debugger and the [[GNU C Library]].
[10270760] |====Programming languages==== 
[10270770] |*[[Java (programming language)|Java]]
[10270780] |*[[Perl]]
[10270790] |*[[PHP]]
[10270800] |*[[Python (programming language)|Python]]
[10270810] |*[[Lua (programming language)|Lua]]
[10270820] |*[[Ruby programming language|Ruby]]
[10270830] |*[[Tcl]]
[10270840] |====Servers==== 
[10270850] |*[[Apache HTTP Server|Apache web server]]
[10270860] |*[[BIND]] name server
[10270870] |*[[Sendmail]] mail transport
[10270880] |*[[Samba software|Samba]] file server.
[10270890] |====Operating systems==== 
[10270900] |*[[GNU/Linux]]
[10270910] |*[[Berkeley Software Distribution|BSD]]
[10270920] |*[[Darwin (operating system)|Darwin]]
[10270930] |*[[OpenSolaris]]
[10270940] |== Free software licenses == 
[10270950] |All free software licenses must grant people all the freedoms discussed above.
[10270960] |However, unless the applications' licenses are compatible, combining programs by mixing source code or directly linking binaries is problematic, because of license technicalities.
[10270970] |Programs indirectly connected together may avoid this problem.
[10270980] |The majority of free software uses a small set of licenses.
[10270990] |The most popular of these licenses are:
[10271000] |* the [[GNU General Public License]]
[10271010] |* the [[GNU Lesser General Public License]]
[10271020] |* the [[BSD License]]
[10271030] |* the [[Mozilla Public License]]
[10271040] |* the [[MIT License]]
[10271050] |* the [[Apache License]]
[10271060] |The Free Software Foundation and the Open Source Initiative both publish lists of licenses that they find to comply with their own definitions of free software and open-source software respectively.
[10271070] |* [[List of FSF approved software licenses]]
[10271080] |* [[List of OSI approved software licenses]]
[10271090] |These lists are necessarily incomplete, because a license need not be known by either organization in order to provide these freedoms.
[10271100] |Apart from these two organizations, the [[Debian]] project is seen by some to provide useful advice on whether particular licenses comply with their [[Debian Free Software Guidelines]].
[10271110] |Debian doesn't publish a list of ''approved'' licenses, so its judgments have to be tracked by checking what software they have allowed into their software archives.
[10271120] |That is summarized at the Debian web site.
[10271130] |However, it is rare that a license is announced as being in-compliance by either FSF or OSI guidelines and not [[Vice_versa##vice_versa|vice versa]] (the [[Netscape Public License]] used for early versions of Mozilla being an exception), so exact definitions of the terms have not become hot issues.
[10271140] |=== Permissive and copyleft licenses === 
[10271150] |The FSF categorizes licenses in the following ways:
[10271160] |* [[Public domain]] software - the copyright has expired, the work was not copyrighted or the author has abandoned the copyright.
[10271170] |Since public-domain software lacks copyright protection, it may be freely incorporated into any work, whether proprietary or free.
[10271180] |* [[permissive free software licences|Permissive licenses]], also called BSD-style because they are applied to much of the software distributed with the [[Berkeley Software Distribution|BSD]] operating systems.
[10271190] |The author retains copyright solely to disclaim warranty and require proper attribution of modified works, but permits redistribution and modification in ''any'' work, even proprietary ones.
[10271200] |* [[Copyleft]] licenses, the [[GNU General Public License]] being the most prominent.
[10271210] |The author retains copyright and permits redistribution and modification provided all such redistribution is licensed under the same license.
[10271220] |Additions and modifications by others must also be licensed under the same 'copyleft' license whenever they are distributed with part of the original licensed product.
[10271230] |== Security and reliability== 
[10271240] |There is debate over the [[computer security|security]] of free software in comparison to proprietary software, with a major issue being [[security through obscurity]].
[10271250] |A popular quantitative test in computer security is using relative counting of known unpatched security flaws.
[10271260] |Generally, users of this method advise avoiding products which lack fixes for known security flaws, at least until a fix is available.
[10271270] |Some claim that this method is biased by counting more vulnerabilities for the free software, since its source code is accessible and its community is more forthcoming about what problems exist.
[10271280] |Free software advocates rebut that even if proprietary software does not have "published" flaws, flaws could still exist and possibly be known to malicious users.
[10271290] |The ability of users to view and modify the source code allows many more people to potentially analyse the code and possibly to have a higher rate of finding bugs and flaws than an average sized corporation could manage.
[10271300] |Users having access to the source code also makes creating and deploying [[spyware]] far more difficult.
[10271310] |[[David A. Wheeler]] has published research concluding that free software is quantitatively more reliable than proprietary software.
[10271320] |== Adoption == 
[10271330] |Free software played a part in the development of the Internet, the World Wide Web and the infrastructure of [[dot-com companies]].
[10271340] |Free software allows users to cooperate in enhancing and refining the programs they use; free software is a [[pure public good]] rather than a [[private good]].
[10271350] |Companies that contribute to free software can increase commercial [[innovation]] amidst the void of [[patent]] [[cross licensing]] lawsuits.
[10271360] |(See [[Mpeg2#Patent holders|mpeg2 patent holders]])
[10271370] |Under the free software business model, free software vendors may charge a fee for distribution and offer pay support and software customization services.
[10271380] |Proprietary software uses a different business model, where a customer of the proprietary software pays a fee for a license to use the software.
[10271390] |This license may grant the customer the ability to configure some or no parts of the software themselves.
[10271400] |Often some level of support is included in the purchase of proprietary software, but additional support services (especially for enterprise applications) are usually available for an additional fee.
[10271410] |Some proprietary software vendors will also customize software for a fee.
[10271420] |Free software is generally available at little to no cost and can result in permanently lower costs compared to [[proprietary software]].
[10271430] |With free software, businesses can fit software to their specific needs by changing the software themselves or by hiring programmers to modify it for them.
[10271440] |Free software often has no warranty, and more importantly, generally does not assign legal liability to anyone.
[10271450] |However, warranties are permitted between any two parties upon the condition of the software and its usage.
[10271460] |Such an agreement is made separately from the free software license.
[10271470] |== Controversies == 
[10271480] |=== Binary blobs === 
[10271490] |In 2006, [[OpenBSD]] started the first campaign against the use of [[binary blobs]], in [[kernel (computer science)|kernels]].
[10271500] |Blobs are usually freely distributable [[device driver]]s for hardware from vendors that do not reveal driver source code to users or developers.
[10271510] |This restricts the users' freedom to effectively modify the software and distribute modified versions.
[10271520] |Also, since the blobs are undocumented and may have [[computer bug|bugs]], they pose a security risk to any [[operating system]] whose kernel includes them.
[10271530] |The proclaimed aim of the campaign against blobs is to collect hardware documentation that allows developers to write free software drivers for that hardware, ultimately enabling all free operating systems to become or remain blob-free.
[10271540] |The issue of binary blobs in the [[Linux kernel]] and other device drivers motivated some developers in Ireland to launch [[gNewSense]], a GNU/Linux distribution with all the binary blobs removed.
[10271550] |The project received support from the [[Free Software Foundation]]
[10271560] |=== BitKeeper === 
[10271570] |[[Larry McVoy]] invited high-profile free software projects to use his proprietary [[versioning system]], [[BitKeeper]], free of charge, in order to attract paying users.
[10271580] |In 2002, Linux coordinator [[Linus Torvalds]] decided to use BitKeeper to develop the Linux kernel, a free software project, claiming no free software alternative met his needs.
[10271590] |This controversial decision drew criticism from several sources, including the Free Software Foundation's founder Richard Stallman.
[10271600] |Following the apparent [[reverse engineering]] of BitKeeper's protocols, McVoy withdrew permission for gratis use by free software projects, leading the Linux kernel community to develop a free software replacement in [[Git (software)|Git]].
[10271610] |=== Patent deals === 
[10271620] |In November 2006, the [[Microsoft]] and [[Novell]] software corporations announced a controversial partnership involving, among other things, patent protection for some customers of Novell under certain conditions.
[10280010] |<article>Freeware</article>
[10280020] |'''Freeware''' is computer [[software]] that is available for use at no cost or for an optional fee.
[10280030] |Freeware is often made available in a binary-only, [[proprietary software|proprietary]] form, thus making it distinct from [[free software]].
[10280040] |Proprietary freeware allows authors to contribute something for the benefit of the community, while at the same time allowing them to retain control of the source code and preserve its business potential.
[10280050] |Freeware is different from [[shareware]], where the user is obliged to pay (e.g. after some trial period or for additional functionality).
[10280060] |== History == 
[10280070] |The term ''freeware'' was coined by [[Andrew Fluegelman]] when he wanted to sell a communications program named [[PC-Talk]] that he had created but for which he did not wish to use traditional methods of distribution because of their cost.
[10280080] |Fluegelman actually distributed PC-Talk via a process now referred to as [[shareware]].
[10280090] |Current use of the term freeware does not necessarily match the original concept by Andrew Fluegelman.
[10280100] |== Criteria == 
[10280110] |The only criterion for being classified as freeware is that the software must be fully functional for an unlimited time with no monetary cost.
[10280120] |The software license may impose one or more other restrictions on the type of use including personal use, individual use, non-profit use, non-commercial use, academic use, commercial use or any combination of these.
[10280130] |For instance, the license may be "free for personal, non-commercial use."
[10280140] |Everything created with the freeware programs can be distributed at no cost (for example graphic, documents, or sounds made by user).
[10290010] |<article>French language</article>
[10290020] |'''French''' (''français'', ) is today spoken around the world by 72 to 130 million people as a [[first language|native]] language, and by about 190 to 600 million people as a [[second language|second]] or third language, with significant speakers in 54 countries.
[10290030] |Most native speakers of the language live in [[France]], where the language originated.
[10290040] |The rest live in [[Canada]], [[Belgium]] and [[Switzerland]].
[10290050] |French is a descendant of the [[Latin]] language of the [[Roman Empire]], as are languages such as [[Portuguese language|Portuguese]], [[Spanish language|Spanish]], [[Italian language|Italian]], [[Catalan language|Catalan]] and [[Romanian language|Romanian]].
[10290060] |Its development was also influenced by the native [[Celtic languages]] of Roman [[Gaul]] and by the [[Germanic languages|Germanic]] language of the post-Roman [[Frankish]] invaders.
[10290070] |It is an [[official language]] in [[List of countries where French is an official language|29 countries]], most of which form what is called in French ''La [[Francophonie]]'', the community of French-speaking nations.
[10290080] |It is an official language of all [[United Nations]] agencies and a [[List of international organisations which have French as an official language|large number of international organizations]].
[10290090] |According to the [[European Union]], 129 million (26% of the 497,198,740) people in 27 member states speak French, of which 59 million (12%) speak it natively and 69 million (14%) claim to speak it as a second language, which makes it the third most spoken second language in the Union, after English and German respectively.
[10290100] |== Geographic distribution== 
[10290110] |===Europe=== 
[10290120] |====Legal status in France==== 
[10290130] |Per the [[Constitution of France]], French has been the official language since 1992 (although previous legal texts have made it official since 1539, see [[ordinance of Villers-Cotterêts]]).
[10290140] |[[France]] mandates the use of French in official government publications, public [[education]] outside of specific cases (though these dispositions are often ignored) and legal [[contract]]s; [[advertisement]]s must bear a translation of foreign words.
[10290150] |In addition to French, there are also a variety of regional languages.
[10290160] |France has signed the European Charter for Regional Languages but has not ratified it since that would go against the 1958 Constitution.
[10290170] |====Switzerland==== 
[10290180] |French is one of the four official languages of [[Switzerland]] (along with [[German language|German]], [[Italian language|Italian]], and [[Romansh language|Romansh]]) and is spoken in the part of Switzerland called ''[[Romandie]]''.
[10290190] |French is the native language of about 20% of the Swiss population.
[10290200] |====Belgium==== 
[10290210] |In [[Belgium]], French is the official language of [[Wallonia]] (excluding the [[East Cantons]], which are [[German language|German-speaking]]) and one of the two official languages—along with [[Dutch language|Dutch]]—of the [[Brussels-Capital Region]] where it is spoken by the majority of the population, though often not as their primary language.
[10290220] |French and German are not official languages nor recognised minority languages in the [[Flemish Region]], although along borders with the Walloon and Brussels-Capital regions, there are a dozen of [[municipalities with language facilities]] for French-speakers; a mirroring situation exists for the Walloon Region with respect to the Dutch and German languages.
[10290230] |In total, native French-speakers make up about 40% of the country's population, the remaining 60% speak Dutch, the latter of which 59% claim to speak French as a second language.
[10290240] |French is thus known by an estimated 75% of all Belgians, either as a mother tongue, as second, or as third language.
[10290250] |====Monaco and Andorra==== 
[10290260] |Although [[Monégasque language|Monégasque]] is the national language of the [[Principality of Monaco]], French is the only official language, and French nationals make up some 47% of the population.
[10290270] |[[Catalan language|Catalan]] is the only official language of [[Andorra]]; however, French is commonly used due to the proximity to France.
[10290280] |French nationals make up 7% of the population.
[10290290] |====Italy==== 
[10290300] |French is also an official language, along with [[Italian language|Italian]], in the province of [[Aosta Valley]], [[Italy]].
[10290310] |In addition, a number of [[Franco-Provençal language|Franco-Provençal]] dialects are spoken in the province, although they do not have official recognition.
[10290320] |====Luxembourg==== 
[10290330] |French is one of three official languages of [[Luxembourg|the Grand Duchy of Luxembourg ]] ;
[10290340] |the other official languages of Luxembourg are 
[10290350] |*[[German language|German]] 
[10290360] |*[[Lëtzebuergesch|Luxemburgish]].
[10290370] |Luxemburgish is the natively-spoken language of Luxembourg ;
[10290380] |Luxembourg's education system is trilingual: the first years of primary school are in Luxembourgish, before changing to German, while secondary school, the language of instruction changes to French.
[10290390] |====The Channel Islands==== 
[10290400] |Although [[Jersey]] and [[Guernsey]], the two bailiwicks collectively referred to as the [[Channel Islands]], are separate entities, both use French to some degree, mostly in an administrative capacity.
[10290410] |[[Jersey Legal French]] is the standardized variety used in Jersey.
[10290420] |===The Americas=== 
[10290430] |====Legal status in Canada==== 
[10290440] |About 7 million [[Canadian]]s are native French-speakers, of whom 6 million live in [[Quebec]], and French is one of [[Canada]]'s two official languages (the other being [[English language|English]]).
[10290450] |Various provisions of the [[Canadian Charter of Rights and Freedoms]] deal with Canadians' right to access services in both languages, including the right to a publicly funded education in the minority language of each province, where numbers warrant in a given locality.
[10290460] |By [[law]], the federal government must operate and provide services in both English and French, proceedings of the [[Parliament of Canada]] must be translated into both these languages, and most products sold in Canada must have labeling in both languages.
[10290470] |Overall, about 13% of Canadians have knowledge of French only, while 18% have knowledge of both English and French.
[10290480] |In contrast, over 82% of the population of Quebec speaks French natively, and almost 96% speak it as either their first or second language.
[10290490] |It has been the sole official language of Quebec since 1974.
[10290500] |The legal status of French was further strengthened with the 1977 adoption of the [[Charter of the French Language]] (popularly known as ''Bill 101''), which guarantees that every person has a right to have the civil administration, the health and social services, corporations, and enterprises in Quebec communicate with him in French.
[10290510] |While the Charter mandates that certain provincial government services, such as those relating to health and education, be offered to the English minority in its language, where numbers warrant, its primary purpose is to cement the role of French as the primary language used in the public sphere.
[10290520] |[[Image:Knowledge French EU map.png|right|thumb|240px|Knowledge of French in the European Union and candidate countries]] The provision of the Charter that has arguably had the most significant impact mandates French-language [[education]] unless a child's parents or siblings have received the majority of their own primary education in English within Canada, with minor exceptions.
[10290530] |This measure has reversed a historical trend whereby a large number of immigrant children would attend English schools.
[10290540] |In so doing, the Charter has greatly contributed to the "visage français" (French face) of Montreal in spite of its growing immigrant population.
[10290550] |Other provisions of the Charter have been ruled unconstitutional over the years, including those mandating French-only commercial signs, court proceedings, and debates in the legislature.
[10290560] |Though none of these provisions are still in effect today, some continued to be on the books for a time even after courts had ruled them unconstitutional as a result of the government's decision to invoke the so-called [[Section Thirty-three of the Canadian Charter of Rights and Freedoms|notwithstanding clause]] of the Canadian constitution to override constitutional requirements.
[10290570] |In 1993, the Charter was rewritten to allow signage in other languages so long as French was markedly "predominant."
[10290580] |Another section of the Charter guarantees every person the right to work in French, meaning the right to have all communications with one's superiors and coworkers in French, as well as the right not to be required to know another language as a condition of hiring, unless this is warranted by the nature of one's duties, such as by reason of extensive interaction with people located outside the province or similar reasons.
[10290590] |This section has not been as effective as had originally been hoped, and has faded somewhat from public consciousness.
[10290600] |As of 2006, approximately 65% of the workforce on the island of Montreal predominantly used French in the workplace.
[10290610] |The only other province that recognizes French as an official language is [[New Brunswick]], which is officially bilingual, like the nation as a whole.
[10290620] |Outside of [[Quebec]], the highest number of Francophones in Canada, 485,000, excluding those who claim multiple mother tongues, reside in [[Ontario]], whereas [[New Brunswick]], home to the vast majority of [[Acadians]], has the highest ''percentage'' of Francophones after [[Quebec]], 33%, or 237,000.
[10290630] |In [[Ontario]], [[Nova Scotia]], [[Prince Edward Island]], and [[Manitoba]], French does not have full official status, although the provincial governments do provide some French-language services in all communities where significant numbers of Francophones live.
[10290640] |Canada's three northern territories ([[Yukon]], [[Northwest Territories]], and [[Nunavut]]) all recognize French as an official language as well.
[10290650] |All provinces make some effort to accommodate the needs of their Francophone [[citizen]]s, although the level and quality of French-language service vary significantly from province to province.
[10290660] |The Ontario [[French Language Services Act]], adopted in 1986, guarantees French language services in that province in regions where the Francophone population exceeds 10% of the total population, as well as communities with Francophone populations exceeding 5,000, and certain other designated areas; this has the most effect in the north and east of the province, as well as in other larger centres such as [[Ottawa]], [[Toronto]], [[Hamilton, Ontario|Hamilton]], [[Mississauga, Ontario|Mississauga]], [[London, Ontario|London]], [[Kitchener, Ontario|Kitchener]], [[St. Catharines, Ontario|St. Catharines]], [[Greater Sudbury]] and [[Windsor, Ontario|Windsor]].
[10290670] |However, the French Language Services Act does not confer the status of "official bilingualism" on these cities, as that designation carries with it implications which go beyond the provision of services in both languages.
[10290680] |The City of Ottawa's language policy (by-law 2001-170) allows employees to work in their official language of choice and be supervised in the language of choice.
[10290690] |Canada has the status of member state in the Francophonie, while the provinces of Quebec and New Brunswick are recognized as participating governments.
[10290700] |Ontario is currently seeking to become a full member on its own.
[10290710] |====Haiti==== 
[10290720] |French is an official language of [[Haiti]], although it is mostly spoken by the [[upper class]], while [[Haitian Creole]] (a [[French-based creole language]]) is more widely spoken as a [[mother tongue]].
[10290730] |====French overseas territories==== 
[10290740] |French is also the official language in France's overseas territories of [[French Guiana]], [[Guadeloupe]], [[Martinique]], [[Saint Barthélemy]], [[Saint Martin (France)|St. Martin]] and [[Saint-Pierre and Miquelon]].
[10290750] |====The United States==== 
[10290760] |Although it has no official recognition on a federal level, French is the third most-spoken language in the United States, after [[English language|English]] and [[Spanish language|Spanish]], and the second most-spoken in the states of [[Louisiana]], [[Maine]], [[Vermont]] and [[New Hampshire]].
[10290770] |Louisiana is home to two distinct dialects, [[Cajun French]] and [[Louisiana Creole French|Creole French]]
[10290780] |===Africa=== 
[10290790] |A majority of the world's French-speaking population lives in Africa.
[10290800] |According to the 2007 report by the Organisation internationale de la Francophonie, an estimated 115 million African people spread across 31 francophone African countries can speak French either as a [[first language|first]] or [[second language]].
[10290810] |French is mostly a second language in Africa, but in some areas it has become a first language, such as in the region of [[Abidjan]], [[Côte d'Ivoire]] and in [[Libreville]], [[Gabon]].
[10290820] |It is impossible to speak of a single form of [[African French]], but rather of diverse forms of African French which have developed due to the contact with many indigenous [[African languages]].
[10290830] |In the territories of the [[Indian Ocean]], the French language is often spoken alongside French-derived creole languages, the major exception being [[Madagascar]].
[10290840] |There, a Malayo-Polynesian language ([[Malagasy]]) is spoken alongside French.
[10290850] |The French language has also met competition with English since English has been the official language in [[Mauritius]] and the [[Seychelles]] for a long time and has recently become an official language of Madagascar.
[10290860] |[[Sub-Saharan Africa]] is the region where the French language is most likely to expand due to the expansion of education and it is also there the language has evolved most in recent years.
[10290870] |Some vernacular forms of French in Africa can be difficult to understand for French speakers from other countries but written forms of the language are very closely related to those of the rest of the French-speaking world.
[10290880] |French is an official language of many African countries, most of them former French or [[Belgian colonial empire|Belgian colonies]]:
[10290890] |:*[[Benin]]
[10290900] |:*[[Burkina Faso]]
[10290910] |:*[[Burundi]]
[10290920] |:*[[Cameroon]]
[10290930] |:*[[Central African Republic]]
[10290940] |:*[[Chad]]
[10290950] |:*[[Comoros]]
[10290960] |:*[[Congo (Brazzaville)]]
[10290970] |:*[[Côte d'Ivoire]]
[10290980] |:*[[Democratic Republic of the Congo]]
[10290990] |:*[[Djibouti]]
[10291000] |:*[[Equatorial Guinea]] (former colony of [[Spain]])
[10291010] |:*[[Gabon]]
[10291020] |:*[[Guinea]]
[10291030] |:*[[Madagascar]]
[10291040] |:*[[Mali]]
[10291050] |:*[[Niger]]
[10291060] |:*[[Rwanda]]
[10291070] |:*[[Senegal]]
[10291080] |:*[[Seychelles]]
[10291090] |:*[[Togo]]
[10291100] |In addition, French is an administrative language and commonly used though not on an official basis in [[Mauritius]] and in the [[Maghreb]] states: 
[10291110] |:* [[Mauritania]]
[10291120] |:* [[Algeria]]
[10291130] |:*[[Morocco]]
[10291140] |:*[[Tunisia]].
[10291150] |Various reforms have been implemented in recent decades in Algeria to improve the status of [[Arabic language|Arabic]] relative to French, especially in education.
[10291160] |While the predominant European language in [[Egypt]] is [[English language|English]], French is considered to be a more sophisticated language by some elements of the Egyptian upper and upper-middle classes; for this reason, a typical educated Egyptian will learn French in addition to English at some point in his or her education.
[10291170] |The perception of sophistication may be related to the use of French as the [[Noble court|royal court]] language of Egypt during the nineteenth century.
[10291180] |Egypt participates in [[La Francophonie]].
[10291190] |French is also the official language of [[Mayotte]] and [[Réunion]], two [[Overseas departments and territories of France|overseas territories]] of France located in the [[Indian Ocean]], as well as an administrative and educational language in [[Mauritius]], along with [[English language|English]].
[10291200] |===Asia=== 
[10291210] |====Lebanon ==== 
[10291220] |French was the official language in [[Lebanon]] along with [[Arabic language|Arabic]] until 1941, the country's declaration of independence from [[France]].
[10291230] |French is still seen as an official language by the [[Lebanese people]] as it is widely used by the Lebanese, especially for administrative purposes, and is taught in schools as a primary language along with [[Arabic]].
[10291240] |====Southeast Asia==== 
[10291250] |French is an administrative language in [[Laos]] and [[Cambodia]].
[10291260] |French was historically spoken by the elite in the leased territory [[Guangzhouwan]] in southern [[China]].
[10291270] |In colonial [[Vietnam]], the elites spoke French and many who worked for the French spoke a French creole known as "[[Tây Bồi]]" (now extinct).
[10291280] |====India==== 
[10291290] |French has official status in the Indian [[Union Territory]] of [[Puducherry|Pondicherry]], along with the regional language [[Tamil language|Tamil]] and some students of Tamil Nadu may opt French as their third or fourth language (usually behind [[English language|English]], Tamil, [[Hindi]]).
[10291300] |French is also commonly taught as third language in secondary school in most cities of [[Maharashtra]] State including [[Mumbai]] as part of the Secondary (X-SSC) and Higher secondary School (XII-HSC) certificate examinations.
[10291310] |===Oceania=== 
[10291320] |French is also a second official language of the [[Pacific Island]] nation of [[Vanuatu]], along with France's territories of [[French Polynesia]], [[Wallis & Futuna]] and [[New Caledonia]].
[10291330] |==Dialects== 
[10291340] |*[[Acadian French]]
[10291350] |*[[African French]]
[10291360] |*[[Aostan French]]
[10291370] |*[[Belgian French]]
[10291380] |*[[Cajun French]]
[10291390] |*[[Canadian French]]
[10291400] |*[[Cambodian French]]
[10291410] |*Guyana French (see [[French Guiana]])
[10291420] |*[[Indian French]]
[10291430] |*[[Jersey Legal French]]
[10291440] |*[[Lao French]]
[10291450] |*[[Levantine French]] (most commonly referred to as Lebanese French, very similar to [[Maghreb French]])
[10291460] |*[[Louisiana Creole French]]
[10291470] |*[[Maghreb French]] (see also North African French)
[10291480] |*[[Meridional French]]
[10291490] |*[[Metropolitan France|Metropolitan French]]
[10291500] |*[[Caldoche|New Caledonian French]]
[10291510] |*[[Newfoundland French]]
[10291520] |*Oceanic French
[10291530] |*[[Quebec French]]
[10291540] |*[[South East Asian French]]
[10291550] |*[[Swiss French]]
[10291560] |*[[Vietnamese French (dialect)|Vietnamese French]]
[10291570] |*West Indian French
[10291580] |==History== 
[10291590] |==Sounds== 
[10291600] |{{IPA notice}}
[10291610] |Although there are many French regional accents, only one version of the language is normally chosen as a model for foreign learners, which has no commonly used special name, but has been termed ''[[français neutre]]'' (neutral French).
[10291620] |* Voiced stops (i.e. {{IPA|/b d g/}}) are typically produced fully voiced throughout.
[10291630] |* Voiceless stops (i.e. {{IPA|/p t k/}}) are unaspirated.
[10291640] |* Nasals: The velar nasal {{IPA|/ŋ/}} occurs only in final position in borrowed (usually English) words: parking, camping, swing.
[10291650] |The palatal nasal {{IPA|/ɲ/}}can occur in word initial position (e.g. gnon), but it is most frequently found in intervocalic, onset position or word-finally (e.g. montagne).
[10291660] |* Fricatives: French has three pairs of homorganic fricatives distinguished by voicing, i.e. labiodental {{IPA|/f/–/v/}}, dental {{IPA|/s/–/z/}}, and palato-alveolar {{IPA|/ʃ/–/ʒ/}}.
[10291670] |Notice that {{IPA|/s/–/z/}} are dental, like the plosives {{IPA|/t/–/d/}}, and the nasal {{IPA|/n/}}.
[10291680] |* French has one rhotic whose pronunciation varies considerably among speakers and phonetic contexts.
[10291690] |In general it is described as a voiced uvular fricative as in {{IPA|[ʁu]}} roue "wheel" .
[10291700] |Vowels are often lengthened before this segment.
[10291710] |It can be reduced to an approximant, particularly in final position (e.g. "fort") or reduced to zero in some word-final positions.
[10291720] |For other speakers, a uvular trill is also fairly common, and an apical trill {{IPA|[r]}} occurs in some dialects.
[10291730] |* Lateral and central approximants: The lateral approximant {{IPA|/l/}} is unvelarised in both onset (''lire'') and coda position (''il'').
[10291740] |In the onset, the central approximants {{IPA|[w]}}, {{IPA|[ɥ]}}, and {{IPA|[j]}} each correspond to a high vowel, {{IPA|/u/}}, {{IPA|/y/}}, and {{IPA|/i/}} respectively.
[10291750] |There are a few minimal pairs where the approximant and corresponding vowel contrast, but there are also many cases where they are in free variation.
[10291760] |Contrasts between {{IPA|/j/}} and {{IPA|/i/}} occur in final position as in {{IPA|/pɛj/}} ''paye'' "pay" vs. {{IPA|/pɛi/}} ''pays'' "country".
[10291770] |French pronunciation follows strict rules based on spelling, but French spelling is often based more on history than phonology.
[10291780] |The rules for pronunciation vary between dialects, but the standard rules are: 
[10291790] |* final consonants: Final single consonants, in particular ''s'', ''x'', ''z'', ''t'', ''d'', ''n'' and ''m'', are normally silent.
[10291800] |(The final letters ''c'', ''r'', ''f'' and ''l'', however, are normally pronounced.)
[10291810] |**When the following word begins with a vowel, though, a silent consonant ''may'' once again be pronounced, to provide a ''[[liaison (linguistics)|liaison]]'' or "link" between the two words.
[10291820] |Some liaisons are ''mandatory'', for example the ''s'' in ''les amants'' or ''vous avez''; some are ''optional'', depending on [[dialect]] and [[register (linguistics)|register]], for example the first ''s'' in ''deux cents euros'' or ''euros irlandais''; and some are ''forbidden'', for example the ''s'' in ''beaucoup d'hommes aiment''.
[10291830] |The ''t'' of ''et'' is never pronounced and the silent final consonant of a noun is only pronounced in the plural and in [[set phrase]]s like ''pied-à-terre''.
[10291840] |Note that in the case of a word ending ''d'' as in ''pied-à-terre'', the consonant ''t'' is pronounced instead.
[10291850] |** Doubling a final ''n'' and adding a silent ''e'' at the end of a word (e.g. ''chien'' → ''chienne'') makes it clearly pronounced.
[10291860] |Doubling a final ''l'' and adding a silent ''e'' (e.g. ''gentil'' → ''gentille'') adds a [j] sound.
[10291870] |* [[elision (French)|elision]] or vowel dropping: Some monosyllabic function words ending in ''a'' or ''e'', such as ''je'' and ''que'', drop their final vowel when placed before a word that begins with a vowel sound (thus avoiding a [[hiatus (linguistics)|hiatus]]).
[10291880] |The missing vowel is replaced by an apostrophe. (e.g. ''je ai'' is instead pronounced and spelt → ''j'ai'').
[10291890] |This gives for example the same pronunciation for ''l'homme qu'il a vu'' ("the man whom he saw") and ''l'homme qui l'a vu'' ("the man who saw him").
[10291900] |==Orthography== 
[10291910] |* [[Nasal vowel|Nasal]]: ''[[n]]'' and ''[[m]]''.
[10291920] |When ''n'' or ''m'' follows a vowel or diphthong, the ''n'' or ''m'' becomes silent and causes the preceding vowel to become nasalized (i.e. pronounced with the soft palate extended downward so as to allow part of the air to leave through the nostrils).
[10291930] |Exceptions are when the ''n'' or ''m'' is doubled, or immediately followed by a vowel.
[10291940] |The prefixes ''en-'' and ''em-'' are always nasalized.
[10291950] |The rules get more complex than this but may vary between dialects.
[10291960] |* [[digraph (orthography)|Digraphs]]: French does not introduce extra letters or [[diacritic]]s to specify its large range of vowel sounds and [[diphthongs]], rather it uses specific combinations of vowels, sometimes with following consonants, to show which sound is intended.
[10291970] |* [[Consonant length|Gemination]]: Within words, double consonants are generally not pronounced as geminates in modern French (but geminates can be heard in the cinema or TV news from as recently as the 1970s, and in very refined elocution they may still occur).
[10291980] |For example, ''illusion'' is pronounced {{IPA|[ilyzjɔ̃]}} and not {{IPA|[illyzjɔ̃]}}.
[10291990] |But gemination does occur between words.
[10292000] |For example, ''une info'' ("a news") is pronounced {{IPA|[ynɛ̃fo]}}, whereas ''une nympho'' ("a nympho") is pronounced {{IPA|[ynnɛ̃fo]}}.
[10292010] |* [[Diacritic|Accents]] are used sometimes for pronunciation, sometimes to distinguish similar words, and sometimes for etymology alone.
[10292020] |**Accents that affect pronunciation
[10292030] |***The [[acute accent]] (''l'accent aigu''), ''é'' (e.g. ''école''—school), means that the vowel is pronounced {{IPA|/e/}} instead of the default {{IPA|/ə/}}.
[10292040] |***The [[grave accent]] (''l'accent grave''), ''è'' (e.g. ''élève''—pupil) means that the vowel is pronounced {{IPA|/ɛ/}} instead of the default {{IPA|/ə/}}.
[10292050] |***The [[circumflex]] (''l'accent circonflexe'') ''ê'' (e.g. ''forêt''—forest) shows that an ''e'' is pronounced {{IPA|/ɛ/}} and that an ''o'' is pronounced {{IPA|/o/}}.
[10292060] |In standard French it also signifies a pronunciation of {{IPA|/ɑ/}} for the letter ''a'', but this differentiation is disappearing.
[10292070] |In the late 19th century, the circumflex was used in place of ''s'' where that letter was not to be pronounced.
[10292080] |Thus, ''forest'' became ''forêt'' and ''hospital'' became'' hôpital''.
[10292090] |***The [[Umlaut (diacritic)|diaeresis]] (''le tréma'') (e.g. ''naïf''—foolish, ''Noël''—Christmas) as in English, specifies that this vowel is pronounced separately from the preceding one, not combined and is not a [[schwa]].
[10292100] |***The [[cedilla]] (''la cédille'') ''ç'' (e.g. ''garçon''—boy) means that the letter ''c'' is pronounced {{IPA|/s/}} in front of the hard vowels ''a'', ''o'' and ''u'' (''c'' is otherwise {{IPA|/k/}} before a hard vowel).
[10292110] |''C'' is always pronounced {{IPA|/s/}} in front of the soft vowels ''e'', ''i'', and ''y'', thus ''ç'' is never found in front of soft vowels.
[10292120] |**Accents with no pronunciation effect
[10292130] |***The circumflex does not affect the pronunciation of the letters ''i'' or ''u'', and in most dialects, ''a'' as well.
[10292140] |It usually indicates that an ''s'' came after it long ago, as in ''hôtel''.
[10292150] |***All other accents are used only to distinguish similar words, as in the case of distinguishing the adverbs ''là'' and ''où'' ("there", "where") from the article ''la'' and the conjunction ''ou'' ("the" fem. sing., "or") respectively.
[10292160] |==Grammar== 
[10292170] |French grammar shares several notable features with most other Romance languages, including: 
[10292180] |* the loss of Latin's [[declension]]s
[10292190] |* only two [[grammatical gender]]s
[10292200] |* the development of grammatical [[article (grammar)|article]]s from Latin [[demonstrative]]s
[10292210] |* new [[tense]]s formed from auxiliaries
[10292220] |French word order is [[Subject Verb Object]], except when the object is a pronoun, in which case the word order is [[Subject Object Verb]].
[10292230] |Some rare archaisms allow for different word orders.
[10292240] |==Vocabulary== 
[10292250] |The majority of French words derive from [[Vulgar Latin]] or were constructed from Latin or Greek roots.
[10292260] |There are often pairs of words, one form being "popular" (noun) and the other one "savant" (adjective), both originating from Latin.
[10292270] |Example: 
[10292280] |* brother: ''frère'' / ''fraternel'' < from Latin ''frater''
[10292290] |* finger: ''doigt'' / ''digital'' < from Latin ''digitus''
[10292300] |* faith: ''foi'' / ''fidèle'' < from Latin ''fides''
[10292310] |* cold: ''froid'' / ''frigide'' < from Latin ''frigidus''
[10292320] |* eye: ''œil'' / ''oculaire'' < from Latin ''oculus''
[10292330] |In some examples there is a common word from Vulgar Latin and a more savant word borrowed directly from [[Medieval Latin]] or even [[Ancient Greek]].
[10292340] |* '''Cheval'''—Concours '''équestre'''—'''Hippo'''drome
[10292350] |The French words which have developed from Latin are usually less recognisable than [[Italian language|Italian]] words of Latin origin because as French evolved from [[Vulgar Latin]], the unstressed final [[syllable]] of many words was dropped or elided into the following word.
[10292360] |It is estimated that 12% (4,200) of common French words found in a typical [[dictionary]] such as the ''Petit Larousse'' or ''Micro-Robert Plus'' (35,000 words) are of foreign origin.
[10292370] |About 25% (1,054) of these foreign words come from [[English language|English]] and are fairly recent borrowings.
[10292380] |The others are some 707 words from [[Italian language|Italian]], 550 from ancient [[Germanic languages]], 481 from ancient [[Gallo-Romance languages]], 215 from [[Arabic language|Arabic]], 164 from [[German language|German]], 160 from [[Celtic languages]], 159 from [[Spanish language|Spanish]], 153 from [[Dutch language|Dutch]], 112 from [[Persian language|Persian]] and [[Sanskrit language|Sanskrit]], 101 from [[Native American languages]], 89 from other [[Asian languages]], 56 from other [[Afro-Asiatic languages]], 55 from [[Slavic languages]] and [[Baltic languages]], 10 for [[Basque language|Basque]] and 144 — about three percent — from other languages.
[10292390] |===Numerals=== 
[10292400] |The French counting system is partially [[vigesimal]]: [[20 (number)|twenty]] (''{{lang|fr|vingt}}'') is used as a base number in the names of numbers from 60–99.
[10292410] |The French word for ''eighty'', for example, is ''{{lang|fr|quatre-vingts}}'', which literally means "four twenties", and ''{{lang|fr|soixante-quinze}}'' (literally "sixty-fifteen") means 75.
[10292420] |This reform arose after the [[French Revolution]] to unify the different counting system (mostly vigesimal near the coast, due to Celtic (via [[Basque language|Basque]]) and Viking influence).
[10292430] |This system is comparable to the archaic English use of ''score'', as in "fourscore and seven" (87), or "threescore and ten" (70).
[10292440] |[[Belgian French]] and [[Swiss French]] are different in this respect.
[10292450] |In Belgium and Switzerland 70 and 90 are ''{{lang|fr|septante}}'' and ''{{lang|fr|nonante}}''.
[10292460] |In Switzerland, depending on the local dialect, 80 can be ''{{lang|fr|quatre-vingts}}'' (Geneva, Neuchâtel, Jura) or ''{{lang|fr|huitante}}'' (Vaud, Valais, Fribourg).
[10292470] |''Octante'' had been used in Switzerland in the past, but is now considered archaic.
[10292480] |In Belgium, however, ''quatre-vingts'' is universally used.
[10292490] |==Writing system== 
[10292500] |French is written using the 26 letters of the [[Latin alphabet]], plus five diacritics (the [[circumflex]] accent, [[acute accent]], [[grave accent]], [[Umlaut (diacritic)|diaeresis]], and [[cedilla]]) and the two [[Ligature (typography)|ligatures]] (œ) and (æ).
[10292510] |French spelling, like English spelling, tends to preserve obsolete pronunciation rules.
[10292520] |This is mainly due to extreme phonetic changes since the Old French period, without a corresponding change in spelling.
[10292530] |Moreover, some conscious changes were made to restore Latin orthography: 
[10292540] |* Old French ''doit'' > French ''doigt'' "finger" (Latin ''digitus'')
[10292550] |* Old French ''pie'' > French ''pied'' "foot" (Latin ''pes'' (stem: ''ped-'')
[10292560] |As a result, it is difficult to predict the spelling on the basis of the sound alone.
[10292570] |Final consonants are generally silent, except when the following word begins with a vowel.
[10292580] |For example, all of these words end in a vowel sound: ''pied'', ''aller'', ''les'', ''finit'', ''beaux''.
[10292590] |The same words followed by a vowel, however, may sound the consonants, as they do in these examples: ''beaux-arts'', ''les amis'', ''pied-à-terre''.
[10292600] |On the other hand, a given spelling will almost always lead to a predictable sound, and the [[Académie française]] works hard to enforce and update this correspondence.
[10292610] |In particular, a given vowel combination or diacritic predictably leads to one phoneme.
[10292620] |The diacritics have '''phonetic''', '''semantic''', and '''etymological''' significance.
[10292630] |* [[acute accent]] (''é''): Over an ''e'', indicates the sound of a short ''ai'' in English, with no [[diphthong]].
[10292640] |An ''é'' in modern French is often used where a combination of ''e'' and a consonant, usually ''s,'' would have been used formerly: ''écouter'' < ''escouter''.
[10292650] |This type of accent mark is called ''accent aigu'' in French.
[10292660] |* [[grave accent]] (''à'', ''è'', ''ù''): Over ''a'' or ''u'', used only to distinguish homophones: ''à'' ("to") vs. ''a'' ("has"), ''ou'' ("or") vs. ''où'' ("where").
[10292670] |Over an ''e'', indicates the sound {{IPA|/ɛ/}}.
[10292680] |* [[circumflex]] (''â'', ''ê'', ''î'', ''ô'', ''û''): Over an ''a'', ''e'' or ''o'', indicates the sound {{IPA|/ɑ/}}, {{IPA|/ɛ/}} or {{IPA|/o/}}, respectively (the distinction ''a'' {{IPA|/a/}} vs. ''â'' {{IPA|/ɑ/}} tends to disappear in many dialects).
[10292690] |Most often indicates the historical deletion of an adjacent letter (usually an ''s'' or a vowel): ''château'' < ''castel'', ''fête'' < ''feste'', ''sûr'' < ''seur'', ''dîner'' < ''disner''.
[10292700] |It has also come to be used to distinguish homophones: ''du'' ("of the") vs. ''dû'' (past participle of ''devoir'' "to have to do something (pertaining to an act)"; note that ''dû'' is in fact written thus because of a dropped ''e'': ''deu'').
[10292710] |(''See [[Use of the circumflex in French]]'')
[10292720] |* [[Umlaut (diacritic)|diaeresis]] or ''tréma'' (''ë'', ''ï'', ''ü'', ''ÿ''): Indicates that a vowel is to be pronounced separately from the preceding one: ''naïve'', ''Noël''.
[10292730] |A diaeresis on ''y'' only occurs in some proper names and in modern editions of old French texts.
[10292740] |Some proper names in which ''ÿ'' appears include ''Aÿ'' (commune in ''canton de la Marne'' formerly ''Aÿ-Champagne''), ''Rue des Cloÿs'' (alley in the 18th arrondisement of Paris), ''Croÿ'' (family name and hotel on the Boulevard Raspail, Paris), ''[[Château du Feÿ]]'' (near Joigny), ''Ghÿs'' (name of Flemish origin spelt ''Ghĳs'' where ''ĳ'' in handwriting looked like ''ÿ'' to French clerks), ''l'Haÿ-les-Roses'' (commune between Paris and Orly airport), Pierre Louÿs (author), Moÿ (place in ''commune de l'Aisne'' and family name), and ''Le Blanc de Nicolaÿ'' (an insurance company in eastern France).
[10292750] |The diaresis on ''u'' appears only in the biblical proper names ''Archélaüs'', ''Capharnaüm'', ''Emmaüs'', ''Ésaü'' and ''Saül''.
[10292760] |Nevertheless, since the 1990 orthographic rectifications (which are not applied at all by most French people), the diaeresis in words containing ''guë'' (such as ''aiguë'' or ''ciguë'') may be moved onto the ''u'': ''aigüe'', ''cigüe''.
[10292770] |Words coming from German retain the old Umlaut (''ä'', ''ö'' and ''ü'') if applicable but use French pronunciation, such as ''kärcher'' (trade mark of a pressure washer).
[10292780] |* [[cedilla]] (''ç''): Indicates that an etymological ''c'' is pronounced {{IPA|/s/}} when it would otherwise be pronounced /k/.
[10292790] |Thus ''je lance'' "I throw" (with ''c'' = {{IPA|[s]}} before ''e''), ''je lan'''ç'''ais'' "I was throwing" (''c'' would be pronounced {{IPA|[k]}} before ''a'' without the cedilla).
[10292800] |The c cedilla (ç) softens the hard /k/ sound to /s/ before the vowels '''a''', '''o''' or '''u''', for example '''ça''' /sa/.
[10292810] |C cedilla is never used before the vowels '''e''' or '''i''' since these two vowels always produce a soft /s/ sound ('''ce''', '''ci''').
[10292820] |There are two [[ligatures]], which have various origins.
[10292830] |* The ligature ''[[œ]]'' is a mandatory contraction of ''oe'' in certain words.
[10292840] |Some of these are native French words, with the pronunciation {{IPA|/œ/}} or {{IPA|/ø/}}, e.g. ''sœur'' "sister" {{IPA|/sœʁ/}}, ''œuvre'' "work (of art)" {{IPA|/œvʁ/}}.
[10292850] |Note that it usually appears in the combination ''œu''; ''œil'' is an exception.
[10292860] |Many of these words were originally written with the [[Digraph (orthography)|digraph]] ''eu''; the ''o'' in the ligature represents a sometimes artificial attempt to imitate the Latin spelling: Latin ''bovem'' > Old French ''buef''/''beuf'' > Modern French ''bœuf''. ''Œ'' is also used in words of Greek origin, as the Latin rendering of the Greek diphthong ''οι'', e.g. ''cœlacanthe'' "coelacanth".
[10292870] |These words used to be pronounced with the vowel {{IPA|/e/}}, but in recent years a spelling pronunciation with {{IPA|/ø/}} has taken hold, e.g. ''œsophage'' {{IPA|/ezɔfaʒ/}} or {{IPA|/øzɔfaʒ/}}.
[10292880] |The pronunciation with {{IPA|/e/}} is often seen to be more correct.
[10292890] |The ligature œ is not used in some occurrences of the letter combination ''oe'', for example, when ''o'' is part of a prefix (''coexister'').
[10292900] |* The ligature ''[[æ]]'' is rare and appears in some words of Latin and Greek origin like ''ægosome'', ''ægyrine'', ''æschne'', ''cæcum'', ''nævus'' or ''uræus''.
[10292910] |The vowel quality is identical to é {{IPA|/e/}}.
[10292920] |French writing, as with any language, is affected by the spoken language.
[10292930] |In Old French, the plural for ''animal'' was ''animals''.
[10292940] |Common speakers pronounced a ''u'' before a word ending in ''l'' as the plural.
[10292950] |This resulted in ''animauls''.
[10292960] |As the French language evolved this vanished and the form ''animaux'' (''aux'' pronounced {{IPA|/o/}}) was admitted.
[10292970] |The same is true for ''cheval'' pluralized as ''chevaux'' and many others.
[10292980] |Also ''castel'' pl. ''castels'' became ''château'' pl. ''châteaux''.
[10292990] |==Samples== 
[10300010] |<article>German language</article>
[10300020] |The '''German language''' ({{lang|de|''Deutsch''}}) is a [[West Germanic languages|West Germanic language]] and one of the world's [[world language|major languages]].
[10300030] |German is closely related to and classified alongside [[English language|English]] and [[Dutch language|Dutch]].
[10300040] |Around the world, German is spoken by approximately 100 million [[First language|native speakers]] and also about 80 million non-native speakers, and [[Standard German]] is widely taught in schools, universities, and [[Goethe Institute]]s worldwide.
[10300050] |==Geographic distribution== 
[10300060] |===Europe=== 
[10300070] |German is spoken primarily in [[Languages of Germany|Germany]] (95%), [[Languages of Austria|Austria]] (89%) and [[Linguistic geography of Switzerland|Switzerland]] (64%) together with [[Liechtenstein]], [[Luxembourg]] ([[D-A-CH-Li-Lux]]) constituting the countries where German is the majority language.
[10300080] |Other European German-speaking communities are found in [[Italy]] ([[Province of Bolzano-Bozen|Bolzano-Bozen]]), in the [[German speaking community in Belgium|East Cantons]] of [[Belgium]], in the [[France|french]] area [[Alsace]] which often was traded between Germany and France in history and in some border villages of the former [[South Jutland County]] (in German, ''Nordschleswig'', in Danish, ''Sønderjylland'') of [[Denmark]].
[10300090] |Some German-speaking communities still survive in parts of [[Romania]], the [[Czech Republic]], [[Poland]], [[Hungary]], and above all [[Russia]] and [[Kazakhstan]], although forced expulsions after World War II and massive emigration to Germany in the 1980s and 1990s have depopulated most of these communities.
[10300100] |It is also spoken by German-speaking foreign populations and some of their descendants in [[Portugal]], [[Spain]], Italy, [[Morocco]], [[Egypt]], [[Israel]], [[Cyprus]], [[Turkey]], [[Greece]], [[United Kingdom]], [[Netherlands]], [[Scandinavia]], [[Siberia]] in Russia, Hungary, Romania, [[Bulgaria]], and the former [[Yugoslavia]] ([[Bosnia and Herzegovina|Bosnia]], [[Serbia]], [[Republic of Macedonia|Macedonia]], [[Croatia]] and [[Slovenia]]).
[10300110] |In Luxembourg and the surrounding areas, big parts of the native population speak German dialects, and some people also master standard German (especially in Luxembourg), although in the [[France|French]] regions of [[Alsace]] (German: ''Elsass'') and [[Lorraine (region)|Lorraine]] (German: ''Lothringen'') [[French language|French]] has replaced the local German dialects as the official language, even though it has not been fully replaced on the street.
[10300120] |===Overseas=== 
[10300130] |Outside of Europe and the former [[Soviet Union]], the largest German-speaking communities are to be found in the [[United States]], [[Canada]], [[Brazil]] and in [[Argentina]] where millions of Germans migrated in the last 200 years; but the vast majority of their descendants no longer speak German.
[10300140] |Additionally, German-speaking communities can be found in the former [[List of former German colonies|German colony]] of [[Namibia]] independent from [[South Africa]] since 1990, as well as in the other countries of German emigration such as [[Canada]], [[Mexico]], [[Dominican Republic]], [[Paraguay]], [[Uruguay]], [[Chile]], [[Peru]], [[Venezuela]] (where [[Alemán Coloniero]] developed), South Africa and [[Australia]].
[10300150] |====South America==== 
[10300160] |In Brazil the largest concentrations of German speakers are in [[Rio Grande do Sul]] (where [[Riograndenser Hunsrückisch]] was developed), [[Santa Catarina (state)|Santa Catarina]], [[Paraná (state)|Paraná]], and [[Espírito Santo]], and large German-speaking descendant communities in Argentina, Uruguay and Chile.
[10300170] |In the 20th century, over 100,000 German [[Refugee|political refugees]] and invited entrepreneurs settled in [[Latin America]], such as [[Costa Rica]], [[Panama]], Venezuela and the Dominican Republic to establish German-speaking enclaves, and there is a reportedly small [[German immigration to Puerto Rico]].
[10300180] |====North America==== 
[10300190] |The United States has the largest concentration of German speakers outside of Europe; an indication of this presence can be found in the names of such villages and towns as [[New Leipzig, North Dakota|New Leipzig]], [[Munich, North Dakota|Munich]], [[Karlsruhe, North Dakota|Karlsruhe]], and [[Strasburg, North Dakota|Strasburg]], [[North Dakota]], and [[New Braunfels]], Texas.
[10300200] |Though over the course of the 20th century many of the descendants of 18th and 19th-century immigrants ceased speaking German at home, small populations of elderly (as well as some younger) speakers can be found in [[Pennsylvania]] ([[Amish]], [[Hutterites]], [[Dunkards]] and some [[Mennonites]] historically spoke [[Pennsylvania German language|Pennsylvania Dutch]] (a [[West Central German]] variety) and [[Hutterite German]]), [[Kansas]] (Mennonites and [[Volga German]]s), North Dakota (Hutterite Germans, Mennonites, [[History of Germans in Russia and the Soviet Union|Russian German]]s, Volga Germans, and [[Baltic Germans]]), [[South Dakota]], [[Montana]], [[Texas]] ([[Texas German]]), [[Wisconsin]], [[Indiana]], [[Louisiana]] and [[Oklahoma]].
[10300210] |Early twentieth century immigration was often to [[St. Louis, Missouri|St. Louis]], [[Chicago]], [[New York]], [[Pittsburgh]] and [[Cincinnati]].
[10300220] |Most of the post–[[World War II]] wave are in the New York, [[Philadelphia]], [[Los Angeles]], [[San Francisco]] and Chicago [[urban area]]s, and in [[Florida]], [[Arizona]] and [[California]] where large communities of retired German, Swiss and Austrian expatriates live.
[10300230] |The [[German Americans|American population of German ancestry]] is above 60 million.
[10300240] |The German language is the third largest language in the U.S. after [[Spanish language|Spanish]].
[10300250] |In Canada there are people of German ancestry throughout the country and especially in the western cities such as [[Kelowna]].
[10300260] |German is also spoken in [[Ontario]] and southern [[Nova Scotia]].
[10300270] |There is a large and vibrant community in the city of [[Kitchener, Ontario]].
[10300280] |German immigrants were instrumental in the country's three largest urban areas: [[Montreal]], [[Toronto]] and [[Vancouver]], but post-WWII immigrants managed to preserve a fluency in the German language in their respective neighborhoods and sections.
[10300290] |In the first half of the 20th century, over a million [[German-Canadian]]s made the language one of Canada's most spoken after [[French language|French]].
[10300300] |In Mexico there are also large populations of German ancestry, mainly in the cities of: [[Mexico City]], [[Puebla]], [[Mazatlán]], [[Tapachula]], and larger populations scattered in the states of [[Chihuahua]], [[Durango]], and [[Zacatecas]].
[10300310] |German ancestry is also said to be found in neighboring towns around [[Guadalajara, Jalisco]] and much of Northern Mexico, where German influence was immersed into the Mexican culture.
[10300320] |Standard German is spoken by the affluent German communities in Puebla, Mexico City, [[Nuevo Leon]], [[San Luis Potosi]] and [[Quintana Roo]].
[10300330] |German immigration in the twentieth century was small, but produced German-speaking communities in Central America (i.e.
[10300340] |[[Guatemala]], [[Honduras]] and [[Nicaragua]]) and the Caribbean Islands like the [[Dominican Republic]].
[10300350] |'''Dialects in North America:'''
[10300360] |The dialects of German which are or were primarily spoken in colonies or communities founded by German speaking people resemble the dialects of the regions the founders came from.
[10300370] |For example, Pennsylvania German resembles dialects of the [[Rhenish Palatinate|Palatinate]], and Hutterite German resembles dialects of [[Carinthia (state)|Carinthia]].
[10300380] |[[Texas German]] is a dialect spoken in the areas of Texas settled by the [[Adelsverein]], such as New Braunfels and Fredericksburg.
[10300390] |In the [[Amana Colonies]] in the state of Iowa [[Amana German]] is spoken.
[10300400] |[[Plautdietsch]] is a large [[minority language]] spoken in Northern Mexico by the [[Mennonite]] communities, and is spoken by more than 200,000 people in Mexico.
[10300410] |[[Hutterite German]] is an Upper German dialect of the [[Austro-Bavarian]] variety of the German language, which is spoken by Hutterite communities in Canada and the United States.
[10300420] |Hutterite is spoken in the U.S. states of [[Washington]], Montana, North Dakota and South Dakota, and [[Minnesota]]; and in the Canadian provinces of [[Alberta]], [[Saskatchewan]] and [[Manitoba]].
[10300430] |Its speakers belong to some Schmiedleit, Lehrerleit, and Dariusleit Hutterite groups, but there are also speakers among the older generations of Prairieleit (the descendants of those Hutterites who chose not to settle in colonies).
[10300440] |Hutterite children who grow up in the colonies learn and speak first Hutterite German before learning English in the public school, the standard language of the surrounding areas.
[10300450] |Many colonies though continue with German Grammar School, separate from the public school, throughout a student's elementary education.
[10300460] |====Creoles==== 
[10300470] |There is an important German creole being studied and recovered, named [[Unserdeutsch]], spoken in the former German colony of [[Papua New Guinea]], across [[Micronesia]] and in northern Australia (i.e. coastal parts of [[Queensland]] and [[Western Australia]]), by few elderly people.
[10300480] |The risk of its extinction is serious and efforts to revive interest in the language are being implemented by scholars.
[10300490] |====Internet==== 
[10300500] |According to [[Global Reach]] (2004), 6.9% of the Internet population is German.
[10300510] |According to [[Netz-tipp]] (2002), 7.7% of webpages are written in German, making it second only to English in the European language group.
[10300520] |They also report that 12% of Google's users use its German interface.
[10300530] |Older statistics: Babel (1998) found somewhat similar demographics.
[10300540] |FUNREDES (1998) and Vilaweb (2000) both found that German is the third most popular language used by websites, after English and Japanese.
[10300550] |==History== 
[10300560] |The history of the language begins with the [[High German consonant shift]] during the [[migration period]], separating [[High German]] dialects from common [[West Germanic]].
[10300570] |The earliest testimonies of [[Old High German]] are from scattered [[Elder Futhark]] inscriptions, especially in [[Alemannic]], from the 6th century, the earliest glosses (''[[Abrogans]]'') date to the 8th and the oldest coherent texts (the ''[[Hildebrandslied]]'', the ''[[Muspilli]]'' and the [[Merseburg Incantations]]) to the 9th century.
[10300580] |[[Old Saxon]] at this time belongs to the [[Ingvaeonic|North Sea Germanic]] cultural sphere, and [[Low Saxon]] should fall under German rather than [[Anglo-Frisian]] influence during the [[Holy Roman Empire]].
[10300590] |As Germany was divided into many different [[state]]s, the only force working for a unification or [[standard language|standardization]] of German during a period of several hundred years was the general preference of writers trying to write in a way that could be understood in the largest possible area.
[10300600] |When [[Martin Luther]] translated the [[Bible]] (the [[New Testament]] in 1522 and the [[Old Testament]], published in parts and completed in 1534) he based his translation mainly on the bureaucratic standard language used in Saxony (''sächsische Kanzleisprache'') also known as ''Meißner-Deutsch'' (Meißner-German), which was the most widely understood language at this time, because the region it was spoken in was quite influential amongst the German states.
[10300610] |This language was based on Eastern Upper and Eastern Central German dialects and preserved much of the grammatical system of Middle High German (unlike the spoken German dialects in Central and Upper Germany that already at that time began to lose the [[genitive case]] and the preterite tense).
[10300620] |In the beginning, copies of the Bible had a long list for each region, which translated words unknown in the region into the regional dialect.
[10300630] |[[Roman Catholics]] rejected Luther's translation in the beginning and tried to create their own Catholic standard (''gemeines Deutsch'') — which, however, only differed from 'Protestant German' in some minor details.
[10300640] |It took until the middle of the 18th century to create a standard that was widely accepted, thus ending the period of [[Early New High German]].
[10300650] |In 1901 the 2nd Orthographical Conference ended with a complete standardization of German language in written form while the ''Deutsche Bühnensprache'' (literally: ''German stage-language'') had already established spelling-rules for German three years earlier which were later to become obligatory for general German pronunciation.
[10300660] |German used to be the language of commerce and government in the [[Habsburg Empire]], which encompassed a large area of Central and Eastern Europe.
[10300670] |Until the mid-19th century it was essentially the language of townspeople throughout most of the Empire.
[10300680] |It indicated that the speaker was a [[merchant]], an urbanite, not their nationality.
[10300690] |Some cities, such as [[Prague]] (German: ''Prag'') and [[Budapest]] ([[Buda]], German: ''Ofen''), were gradually [[Germanization|Germanized]] in the years after their incorporation into the Habsburg domain.
[10300700] |Others, such as [[Bratislava]](German: ''Pressburg''), were originally settled during the Habsburg period and were primarily German at that time.
[10300710] |A few cities such as [[Milan]] (German: ''Mailand'') remained primarily non-German.
[10300720] |However, most cities were primarily German during this time, such as Prague, Budapest, Bratislava (German: ''Pressburg''), [[Zagreb]] (German: ''Agram''), and [[Ljubljana]] (German: ''Laibach''), though they were surrounded by territory that spoke other languages.
[10300730] |Until about 1800, standard German was almost only a written language.
[10300740] |At this time, people in urban [[northern Germany]], who spoke dialects very different from Standard German, learned it almost like a foreign language and tried to pronounce it as close to the spelling as possible.
[10300750] |Prescriptive pronunciation guides used to consider northern [[German phonology|German pronunciation]] to be the standard.
[10300760] |However, the actual pronunciation of standard German varies from region to region.
[10300770] |Media and written works are almost all produced in standard German (often called ''Hochdeutsch'' in German) which is understood in all areas where German is spoken, except by [[Nursery school|pre-school]] children in areas which speak only dialect, for example [[Switzerland]] and [[Austria]].
[10300780] |However, in this age of television, even they now usually learn to understand Standard German before school age.
[10300790] |The first dictionary of the [[Brothers Grimm]], the 16 parts of which were issued between 1852 and 1860, remains the most comprehensive guide to the words of the German language.
[10300800] |In 1860, grammatical and orthographic rules first appeared in the ''[[Duden Handbook]]''.
[10300810] |In 1901, this was declared the standard definition of the German language.
[10300820] |Official revisions of some of these rules were not issued until 1998, when the [[German spelling reform of 1996]] was officially promulgated by governmental representatives of all German-speaking countries.
[10300830] |Since the reform, German spelling has been in an eight-year transitional period where the reformed spelling is taught in most schools, while traditional and reformed spellings co-exist in the media.
[10300840] |See [[German spelling reform of 1996]] for an overview of the public debate concerning the reform with some major newspapers and magazines and several known writers refusing to adopt it.
[10300850] |The German spelling reform of 1996 led to public controversy indeed to considerable dispute.
[10300860] |Some state parliaments (Bundesländer) would not accept it ([[North Rhine-Westphalia|North Rhine Westphalia]] and Bavaria).
[10300870] |The dispute landed at one point in the highest court which made a short issue of it, claiming that the states had to decide for themselves and that only in schools could the reform be made the official rule - everybody else could continue writing as they had learned it.
[10300880] |After 10 years, without any intervention by the federal parliament, a major yet incomplete revision was installed in 2006, just in time for the new school year of 2006.
[10300890] |In 2007, some venerable spellings will be finally invalidated even though they caused little or no trouble.
[10300900] |The only sure and easily recognizable symptom of a text's being in compliance with the reform is the -ss at the end of words, like in ''dass'' and ''muss''.
[10300910] |Classic spelling forbade this ending, instead using ''daß'' and ''muß''.
[10300920] |The cause of the controversy evolved around the question whether a language is part of the culture which must be preserved or a means of communicating information which has to allow for growth.
[10300930] |(The reformers seemed to be unimpressed by the fact that a considerable part of that culture - namely the entire German literature of the 20th century - is in the old spelling.)
[10300940] |The increasing use of English in Germany's higher education system, as well as in business and in popular culture, has led various German academics to state, not necessarily from an entirely negative perspective, that German is a language in decline in its native country.
[10300950] |For example, Ursula Kimpel, of the [[University of Tübingen]], said in 2005 that “German universities are offering more courses in English because of the large number of students coming from abroad.
[10300960] |German is unfortunately a language in decline.
[10300970] |We need and want our professors to be able to teach effectively in English.”
[10300980] |==Standard German== 
[10300990] |Standard German originated not as a traditional dialect of a specific region, but as a [[written language]].
[10301000] |However, there are places where the traditional regional dialects have been replaced by standard German; this is the case in vast stretches of Northern Germany, but also in major cities in other parts of the country.
[10301010] |Standard German differs regionally, between German-speaking countries, in [[vocabulary]] and some instances of [[pronunciation]], and even [[grammar]] and [[orthography]].
[10301020] |This variation must not be confused with the variation of local dialects.
[10301030] |Even though the regional varieties of standard German are only to a certain degree influenced by the local dialects, they are very distinct.
[10301040] |German is thus considered a pluricentric language.
[10301050] |In most regions, the speakers use a continuum of mixtures from more dialectal varieties to more standard varieties according to situation.
[10301060] |In the German-speaking parts of Switzerland, mixtures of dialect and standard are very seldom used, and the use of standard German is largely restricted to the written language.
[10301070] |Therefore, this situation has been called a ''medial [[diglossia]]''.
[10301080] |[[Swiss Standard German]] is used in the Swiss education system.
[10301090] |===Official status=== 
[10301100] |Standard German is the only [[official language]] in Liechtenstein and Austria; it shares official status in [[Germany]] (with [[Danish language|Danish]], [[Frisian languages|Frisian]] and [[Sorbian languages|Sorbian]] as minority languages), Switzerland (with [[French language|French]], [[Italian language|Italian]] and [[Romansh language|Romansh]]), Belgium (with [[Dutch language|Dutch]] and French) and Luxembourg (with French and [[Luxembourgish language|Luxembourgish]]).
[10301110] |It is used as a local official language in Italy ([[Province of Bolzano-Bozen]]), as well as in the cities of [[Sopron]] (Hungary), Krahule ([[Slovakia]]) and several cities in Romania.
[10301120] |It is the official language (with Italian) of the [[Vatican City|Vatican]] [[Swiss Guard]].
[10301130] |German has an officially recognized status as regional or auxiliary language in Denmark ([[South Jutland]] region), France (Alsace and [[Moselle]] regions), Italy (Gressoney valley), Namibia, [[Poland]] ([[Bilingual communes in Poland|Opole]] region), and Russia (Asowo and Halbstadt).
[10301140] |German is one of the 23 official [[languages of the European Union]].
[10301150] |It is the language with the largest number of native speakers in the [[European Union]], and, shortly after English and long before French, the second-most spoken language in Europe.
[10301160] |===German as a foreign language=== 
[10301170] |German is the third most taught [[foreign language]] in the English speaking world after French and Spanish.
[10301180] |German is the main language of about 90–95 million people in Europe (as of 2004), or 13.3% of all Europeans, being the second most spoken native language in Europe after [[Russian language|Russian]], above French (66.5 million speakers in 2004) and English (64.2 million speakers in 2004).
[10301190] |It is therefore the most spoken first language in the EU.
[10301200] |It is the second most known foreign language in the EU.
[10301210] |It is one of the official languages of the European Union, and one of the three [[working language]]s of [[European Commission|the European Commission]], along with English and French.
[10301220] |Thirty-two percent of citizens of the EU-15 countries say they can converse in German (either as a mother tongue or as a second or foreign language).
[10301230] |This is assisted by the widespread availability of German TV by cable or satellite.
[10301240] |German was once, and still remains to some extent, a [[lingua franca]] in Central, Eastern and [[Northern Europe]].
[10301250] |==Dialects== 
[10301260] |German is a member of the [[West Germanic language|western branch]] of the [[Germanic languages|Germanic]] [[Language family|family of languages]], which in turn is part of the [[Indo-European language family]].
[10301270] |The German dialect continuum is traditionally divided most broadly into [[High German languages|High German]] and Low German.
[10301280] |The variation among the German dialects is considerable, with only the neighbouring dialects being mutually intelligible.
[10301290] |Some dialects are not intelligible to people who only know standard German.
[10301300] |However, all German dialects belong to the dialect continuum of High German and Low Saxon languages.
[10301310] |Until roughly the end of the Second World War, there was a dialect continuum of all the continental West Germanic languages because nearly any pair of neighbouring dialects were perfectly mutually intelligible.
[10301320] |=== Low German === 
[10301330] |Low Saxon varieties (spoken on German territory) are considered linguistically a language separate from the German language by some, but just a dialect by others.
[10301340] |Sometimes, Low Saxon and [[Low Franconian]] are grouped together because both are unaffected by the High German consonant shift.
[10301350] |However, the part of the population capable of speaking and responding to it, or of understanding it has decreased continuously since WWII.
[10301360] |Currently the effort to maintain a residual presence in cultural life is negligible.
[10301370] |[[Middle Low German]] was the [[lingua franca]] of the [[Hanseatic League]].
[10301380] |It was the predominant language in Northern Germany.
[10301390] |This changed in the 16th century.
[10301400] |In 1534 the [[Luther Bible]] by Martin Luther was printed.
[10301410] |This translation is considered to be an important step towards the evolution of the Early New High German.
[10301420] |It aimed to be understandable to an ample audience and was based mainly on Central and [[Upper German]] varieties.
[10301430] |The Early New High German language gained more prestige than Low Saxon and became the language of science and literature.
[10301440] |Other factors were that around the same time, the Hanseatic league lost its importance as new trade routes to [[Asia]] and the [[Americas]] were established, and that the most powerful German states of that period were located in Middle and Southern Germany.
[10301450] |The 18th and 19th centuries were marked by mass [[education]], the language of the schools being standard German.
[10301460] |Slowly Low Saxon was pushed back and back until it was nothing but a language spoken by the uneducated and at home.
[10301470] |Today Low Saxon can be divided in two groups: Low Saxon varieties with a reasonable standard German influx and varieties of Standard German with a Low Saxon influence known as [[Missingsch]].
[10301480] |=== High German === 
[10301490] |High German is divided into [[Central German]] and [[Upper German language|Upper German]].
[10301500] |Central German dialects include [[Ripuarian]], [[Moselle Franconian]], [[Hessian language|Hessian]], [[Thuringian]], [[South Franconian]], [[Lorraine Franconian]] and [[Upper Saxon dialect|Upper Saxon]].
[10301510] |It is spoken in the southeastern Netherlands, eastern Belgium, Luxembourg, parts of France, and in Germany approximately between the River [[Main]] and the southern edge of the Lowlands.
[10301520] |Modern Standard German is mostly based on Central German, but it should be noted that the common (but not linguistically correct) German term for modern Standard German is ''Hochdeutsch'', that is, ''High German''.
[10301530] |The Moselle Franconian varieties spoken in Luxembourg have been officially standardised and institutionalised and are therefore usually considered a separate language known as [[Luxembourgish language|Luxembourgish]].
[10301540] |Upper German dialects include [[Alemannic German|Alemannic]] (for instance [[Swiss German (linguistics)|Swiss German]]), [[Swabian German|Swabian]], [[East Franconian German|East Franconian]], [[Alsatian]] and [[Austro-Bavarian]].
[10301550] |They are spoken in parts of the Alsace, southern Germany, Liechtenstein, Austria, and in the German-speaking parts of Switzerland and Italy.
[10301560] |[[Wymysorys]], [[Sathmarisch]] and [[Siebenbürgisch]] are High German dialects of Poland and Romania respectively.
[10301570] |The High German varieties spoken by [[Ashkenazi Jew]]s (mostly in the former [[Soviet Union]]) have several unique features, and are usually considered as a separate language, [[Yiddish]].
[10301580] |It is the only Germanic language that does not use the [[Latin alphabet]] as its [[official script|standard script]].
[10301590] |===German dialects versus varieties of standard German=== 
[10301600] |In German [[linguistics]], German [[dialect]]s are distinguished from [[variety (linguistics)|varieties]] of [[standard German]].
[10301610] |*The ''German dialects'' are the traditional local varieties.
[10301620] |They are traditionally traced back to the different German tribes.
[10301630] |Many of them are hardly understandable to someone who knows only standard German, since they often differ from standard German in [[lexicon]], [[phonology]] and [[syntax]].
[10301640] |If a narrow definition of [[language]] based on [[mutual intelligibility]] is used, many German dialects are considered to be separate languages (for instance in the [[Ethnologue]]).
[10301650] |However, such a point of view is unusual in German linguistics.
[10301660] |*The ''varieties of standard German'' refer to the different local varieties of the [[pluricentric language|pluricentric]] standard German.
[10301670] |They only differ slightly in lexicon and phonology.
[10301680] |In certain regions, they have replaced the traditional German dialects, especially in Northern Germany.
[10301690] |==Grammar== 
[10301700] |German is an [[Fusional language|inflected language]].
[10301710] |===Noun inflection=== 
[10301720] |[[German nouns]] inflect into: 
[10301730] |* one of four [[Grammatical case|case]]s: [[nominative]], [[genitive]], [[dative case|dative]], and [[accusative case|accusative]].
[10301740] |* one of three [[grammatical gender|genders]]: masculine, feminine, or neuter.
[10301750] |Word endings sometimes reveal grammatical gender; for instance, nouns ending in '''...ung'''([[-ing]]), '''...e''','''...schaft'''([[-ship]]), '''...keit''' or '''...heit'''([[-hood]]) are feminine, while nouns ending in '''...chen''' or '''...lein''' ([[diminutive]] forms) are neuter and nouns ending in '''...ismus ([[-ism]])''' are masculine.
[10301760] |Others are controversial, sometimes depending on the region in which it is spoken.
[10301770] |Additionally, ambiguous endings exist, such as '''...er''' ([[-er]]), e.g. ''Feier (feminine)'', engl. ''celebration, party'', and ''Arbeiter (masculine)'', engl. ''labourer''.
[10301780] |Sentences can usually be reorganized to avoid a misunderstanding.
[10301790] |* two numbers: singular and plural
[10301800] |Although German is usually cited as an outstanding example of a highly inflected language, the degree of inflection is considerably less than in [[Old German]], or in other old [[Indo-European languages]] such as [[Latin]], [[Ancient Greek]], or [[Sanskrit]].
[10301810] |The three genders have collapsed in the plural, which now behaves, grammatically, somewhat as a fourth gender.
[10301820] |With four cases and three genders plus plural there are 16 distinct possible combinations of case and gender/number, but presently there are only six forms of the [[Article (grammar)|definite article]] used for the 16 possibilities.
[10301830] |Inflection for case on the noun itself is required in the singular for strong masculine and neuter nouns in the genitive and sometimes in the dative.
[10301840] |Both of these cases are losing way to substitutes in [[Natural language|informal speech]].
[10301850] |The dative ending is considered somewhat old-fashioned in many contexts and often dropped, but it is still used in sayings and in formal speech or in written language.
[10301860] |Weak masculine nouns share a common case ending for genitive, dative and accusative in the singular.
[10301870] |Feminines are not declined in the singular.
[10301880] |The plural does have an inflection for the dative.
[10301890] |In total, seven inflectional endings (not counting plural markers) exist in German: ''-s, -es, -n, -ns, -en, -ens, -e''.
[10301900] |In the German orthography, nouns and most words with the syntactical function of nouns are capitalised, which is supposed to make it easier for readers to find out what function a word has within the sentence (''Am Freitag bin ich einkaufen gegangen.'' — "On Friday I went shopping."; ''Eines Tages war er endlich da.'' — "One day he finally showed up".)
[10301910] |This spelling convention is almost unique to German today (shared perhaps only by the closely related [[Luxemburgish language]]), although it was historically common in other languages (e.g., Danish and English), too.
[10301920] |Like most Germanic languages, German forms left-branching noun [[compound (linguistics)|compound]]s, where the first noun modifies the category given by the second, for example: ''Hundehütte'' (eng. ''dog hut''; specifically: ''doghouse'').
[10301930] |Unlike English, where newer compounds or combinations of longer nouns are often written in ''open'' form with separating spaces, German (like the other German languages) nearly always uses the ''closed'' form without spaces, for example: Baumhaus (eng. ''tree house'').
[10301940] |Like English, German allows arbitrarily long compounds, but these are rare.
[10301950] |(''See also'' [[English compounds]].)
[10301960] |The longest German word verified to be actually in (albeit very limited) use is [[Rinderkennzeichnungs- und Rindfleischetikettierungsüberwachungsaufgabenübertragungsgesetz|Rindfleischetikettierungsüberwachungsaufgabenübertragungsgesetz]]. [which, literally translated, breaks up into: Rind (cattle) - Fleisch (meat) - Etikettierung(s) (labelling) - Überwachung(s) (supervision) - Aufgaben (duties) - Übertragung(s) (assignment) - Gesetz (law), so "Beef labelling supervision duty assignment law".]
[10301970] |===Verb inflection=== 
[10301980] |Standard German verbs inflect into: 
[10301990] |* one of two conjugation classes, [[weak verb|weak]] and [[strong verb|strong]] (like English).
[10302000] |(There is actually a third class, known as mixed verbs, which exhibit inflections combining features of both the strong and weak patterns.)
[10302010] |* three persons: 1st, 2nd, 3rd.
[10302020] |* two numbers: singular and plural
[10302030] |* three [[Grammatical mood|mood]]s: Indicative, Subjunctive, Imperative
[10302040] |* two [[Grammatical voice|genera verbi]]: active and passive; the passive being composed and dividable into static and dynamic.
[10302050] |* two non-composed tenses ([[present tense|present]], [[preterite]]) and four composed tenses ([[perfect tense|perfect]], [[pluperfect]], [[Future tense|future]] and [[Future perfect tense|future perfect]]) 
[10302060] |* distinction between [[grammatical aspect]]s is rendered by combined use of subjunctive and/or preterite marking; thus: neither of both is plain indicative voice, sole subjunctive conveys second-hand information, subjunctive plus Preterite marking forms the conditional state, and sole preterite is either plain indicative (in the past), or functions as a (literal) alternative for either second-hand-information or for the conditional state of the verb, when one of them may seem indistinguishable otherwise.
[10302070] |* distinction between perfect and [[Continuous and progressive aspects|progressive aspect]] is and has at every stage of development been at hand as a productive category of the older language and in nearly all documented dialects, but, strangely enough, is nowadays rigorously excluded from written usage in its present normalised form.
[10302080] |* disambiguation of completed vs. uncompleted forms is widely observed and regularly generated by common prefixes (blicken - to look, erblicken - to see [unrelated form: sehen - to see]).
[10302090] |====Verb prefixes==== 
[10302100] |There are also many ways to expand, and sometimes radically change, the meaning of a base verb through a relatively small number of prefixes.
[10302110] |Some of those prefixes have a meaning themselves (Example: zer- refers to the destruction of things, as in zerreißen&nbsp;=&nbsp;to tear apart, zerbrechen&nbsp;=&nbsp;to break apart, zerschneiden&nbsp;=&nbsp;to cut apart), others do not have more than the vaguest meaning in and of themselves (Example: ver- , as in versuchen&nbsp;=&nbsp;to try, vernehmen&nbsp;=&nbsp;to interrogate, verteilen&nbsp;=&nbsp;to distribute, verstehen&nbsp;=&nbsp;to understand).
[10302120] |More examples: haften&nbsp;=&nbsp;to stick, verhaften&nbsp;=&nbsp;to imprison; kaufen&nbsp;=&nbsp;to buy, verkaufen&nbsp;=&nbsp;to sell; hören&nbsp;=&nbsp;to hear, aufhören&nbsp;=&nbsp;to cease; fahren&nbsp;=&nbsp;to drive, erfahren&nbsp;=&nbsp;to get to know, to hear about something.
[10302130] |=====Separable prefixes===== 
[10302140] |Many [[German verbs]] have a separable prefix, often with an adverbial function.
[10302150] |In [[finite verb]] forms this is split off and moved to the end of the clause, and is hence considered by some to be a "resultative particle".
[10302160] |For example, ''mitgehen'' meaning "to go with" would be split giving ''Gehen Sie mit?''
[10302170] |(Literal: "Go you with?" ; Formal: "Are you going along"?).
[10302180] |Indeed, several [[parenthetic]]al clauses may occur between the prefix of a finite verb and its complement; e.g. 
[10302190] |:''Er '''kam''' am Freitagabend nach einem harten Arbeitstag und dem üblichen Ärger, der ihn schon seit Jahren immer wieder an seinem Arbeitsplatz plagt, mit fraglicher Freude auf ein Mahl, das seine Frau ihm, wie er hoffte, bereits aufgetischt hatte, endlich zu Hause '''an''' ''.
[10302200] |A literal translation of this example might look like this: 
[10302210] |:He '''arr-''' on a Friday evening after a hard day at work and the usual disagreements that had been troubling him repeatedly, looking forward to a questionable meal which, as he hoped, his wife had already fixed for him, '''-ived''' at home.
[10302220] |===Word order=== 
[10302230] |German requires that a verbal element (main verb or [[auxiliary verb]]) appear second in the sentence, preceded by the most important topical phrase.
[10302240] |The second most important phrase appears at the end of the sentence.
[10302250] |For a sentence without an auxiliary, this gives several options:
[10302260] |: ''{{lang|de|Der alte Mann gibt mir das Buch heute.}}''
[10302265] |(The old man gives me the book today)
[10302270] |: ''{{lang|de|Der alte Mann gibt mir heute das Buch.}}''
[10302280] |: ''{{lang|de|Das Buch gibt mir der alte Mann heute.}}''
[10302290] |: ''{{lang|de|Das Buch gibt der alte Mann heute mir.}}'' ([[stress (linguistics)|stress]] on ''mir'')
[10302300] |: ''{{lang|de|Das Buch gibt heute der alte Mann mir.}}'' (as well)
[10302310] |: ''{{lang|de|Das Buch gibt der alte Mann mir heute.}}''
[10302320] |: ''{{lang|de|Das Buch gibt heute mir der alte Mann.}}''
[10302330] |: ''{{lang|de|Das Buch gibt mir heute der alte Mann.}}''
[10302340] |: ''{{lang|de|Heute gibt mir der alte Mann das Buch.}}''
[10302350] |: ''{{lang|de|Heute gibt mir das Buch der alte Mann.}}''
[10302360] |: ''{{lang|de|Heute gibt der alte Mann mir das Buch.}}''
[10302370] |: ''{{lang|de|Mir gibt der alte Mann das Buch heute.}}''
[10302380] |: ''{{lang|de|Mir gibt heute der alte Mann das Buch.}}''
[10302390] |: ''{{lang|de|Mir gibt der alte Mann heute das Buch.}}''
[10302400] |The position of a noun as a subject or object in a German sentence doesn't affect the meaning of the sentence as it would in English.
[10302410] |In a [[Sentence (linguistics)|declarative sentence]] in English if the subject does not occur before the predicate the sentence could well be misunderstood.
[10302420] |For example, in the sentence "Man bites dog" it is clear who did what to whom.
[10302430] |To exchange the place of the subject with that of the object — "Dog bites man" — changes the meaning completely.
[10302440] |In other words the word order in a sentence conveys significant information.
[10302450] |In German, nouns and articles are declined as in Latin thus indicating whether it is the [[subject (linguistics)|subject]] or [[object (linguistics)|object]] of the verb's action.
[10302460] |The above example in German would be ''{{lang|de|Ein Mann beißt den Hund}}'' or ''{{lang|de|Den Hund beißt ein Mann}}'' with both having exactly the same meaning.
[10302470] |If the articles are omitted, which is sometimes done in headlines (''{{lang|de|Mann beißt Hund}}''), the syntax applies as in English — the first noun is the subject and the noun following the predicate is the object.
[10302480] |Except for emphasis, adverbs of time have to appear in the third place in the sentence, just after the predicate.
[10302490] |Otherwise the speaker would be recognised as non-German.
[10302500] |For instance the German word order (in Modern English) is: We're going tomorrow to town. (''{{lang|de|Wir gehen morgen in die Stadt.}}'')
[10302510] |====Auxiliary verbs==== 
[10302520] |When an [[auxiliary verb]] is present, the auxiliary appears in second position, and the main verb appears at the end.
[10302530] |This occurs notably in the creation of the [[perfect tense]].
[10302540] |Many word orders are still possible, e.g.: 
[10302550] |:''{{lang|de|Der alte Mann hat mir das Buch gestern gegeben.}}''
[10302555] |(The old man gave me the book yesterday.)
[10302560] |:''{{lang|de|Der alte Mann hat mir gestern das Buch gegeben.}}''
[10302570] |:''{{lang|de|Das Buch hat mir der alte Mann gestern gegeben.}}''
[10302580] |:''{{lang|de|Das Buch hat mir gestern der alte Mann gegeben.}}''
[10302590] |:''{{lang|de|Gestern hat mir der alte Mann das Buch gegeben.}}''
[10302600] |:''{{lang|de|Gestern hat mir das Buch der alte Mann gegeben.}}''
[10302610] |The word order is generally less rigid than in Modern English except for nouns (see below).
[10302620] |There are two common [[word order]]s; one is for main [[clause]]s and another for [[subordinate clause]]s.
[10302630] |In normal positive sentences the ''inflected'' verb always has position 2; in questions, exclamations and wishes it always has position 1.
[10302640] |In subordinate clauses the verb is supposed to occur at the very end, but in speech this rule is often disregarded.
[10302650] |For example in a [[Dependent clause|subordinate clause]] introduced by "weil" ("because") the verb quite often occupies the same order as in a [[Independent clause|main clause]].
[10302660] |The correct way of saying "because I'm broke" is ''"{{lang|de|…weil ich pleite bin.}}"''.
[10302670] |In the vernacular you may hear instead ''"{{lang|de|…weil ich bin pleite.}}"''
[10302675] |This phenomenon may be caused by mixing the word-order pattern used for the word ''{{lang|de|weil}}'' with the pattern used for an alternative word for "because", ''{{lang|de|denn}}'', which is used with the main clause order (''"{{lang|de|…denn ich bin pleite.}}"'').
[10302680] |====Modal verbs==== 
[10302690] |Sentences using modal verbs place the infinitive at the end.
[10302700] |For example, the sentence in Modern English "Should he go home?" would be rearranged in German to say "Should he (to) home go?" (''{{lang|de|Soll er nach Hause gehen?}}'').
[10302710] |Thus in sentences with several subordinate or relative clauses the infinitives are clustered at the end.
[10302720] |Compare the similar clustering of prepositions in the following English sentence: "What did you bring that book that I don't like to be read to out of up for?"
[10302730] |====Multiple infinitives==== 
[10302740] |The number of infinitives at the end is usually restricted to two, causing the third infinitive or auxiliary verb that would have gone at the very end to be placed instead at the beginning of the chain of verbs.
[10302750] |For example in the sentence "Should he move into the house that he just has had renovated?" would be rearranged to "Should he into the house move, that he just renovated had?".
[10302755] |(''{{lang|de|Soll er in das Haus einziehen, das er gerade hat renovieren lassen?}}'').
[10302760] |The older form would have been (''{{lang|de|Soll er in das Haus, das er gerade hat renovieren lassen, einziehen?}}'').
[10302770] |If there are more than three infinitives, all except the first two are relocated to the beginning of the chain.
[10302780] |Needless to say the rule is not rigorously applied.
[10302790] |==Vocabulary== 
[10302800] |Most German vocabulary is derived from the Germanic branch of the Indo-European language family, although there are significant minorities of words derived from Latin, and [[Greek language|Greek]], and a smaller amount from French and most recently English .
[10302810] |At the same time, the effectiveness of the German language in forming equivalents for foreign words from its inherited Germanic stem repertory is great.
[10302820] |Thus, [[Notker Labeo]] was able to translate Aristotelian treatises in pure (Old High) German in the decades after the year 1000.
[10302830] |Overall, German has fewer Romance-language loanwords than does English.
[10302840] |The coining of new, autochthonous words gave German a vocabulary of an estimated 40,000 words as early as the ninth century.
[10302850] |In comparison, Latin, with a written tradition of nearly 2,500 years in an empire which ruled the Mediterranean, has grown to no more than 45,000 words today.
[10302860] |Even today, many low-key scholarly movements try to promote the ''[[Ersatz]]'' (substitution) of virtually all foreign words with ancient, dialectal, or [[neologism|neologous]] German alternatives.
[10302870] |It is claimed that this would also help in spreading modern or scientific notions among the less educated, and thus democratise public life, too.
[10302880] |Jurisprudence in Germany, for example, uses perhaps the "purest" tongue in terms of "Germanness", but also the most cumbersome, to be found today..
[10302890] |In the modern scientific German vocabulary data base in Leipzig (as of July 2003) there are nine million words and word groups in 35 million sentences (out of a corpus of 500 million words).
[10302900] |==Writing system== 
[10302910] |=== Present === 
[10302920] |German is written using the Latin alphabet.
[10302930] |In addition to the 26 standard letters, German has three vowels with [[Umlaut (diacritic)|Umlaut]], namely ''ä'', ''ö'' and ''ü'', as well as the Eszett or ''[[scharfes s]]'' (sharp s), ''[[ß]]''.
[10302940] |Before the German spelling reform of 1996, ''ß'' replaced ''ss'' after [[Vowel length|long vowels]] and diphthongs and before consonants, word-, or partial-word-endings.
[10302950] |In reformed spelling, ''ß'' replaces ''ss'' only after long vowels and diphthongs.
[10302960] |Since there is no [[capital ß]], it is always written as SS when capitalization is required.
[10302970] |For example, ''Maßband'' (tape measure) is capitalized ''MASSBAND''.
[10302980] |An exception is the use of ß in legal documents and forms when capitalizing names.
[10302990] |To avoid confusion with similar names, a "ß" is to be used instead of "SS".
[10303000] |(So: "KREßLEIN" instead of "KRESSLEIN".)
[10303010] |A capital ß has been proposed and included in [[Unicode]], but it is not yet recognized as standard German.
[10303020] |In [[Switzerland]], ß is not used at all.
[10303030] |Umlaut vowels (ä, ö, ü) are commonly circumscribed with ae, oe, and ue if the umlauts are not available on the keyboard used.
[10303040] |In the same manner ß can be circumscribed as ss. German readers understand those circumscriptions (although they look unusual), but they are avoided if the regular umlauts are available because they are considered a makeshift, not proper spelling.
[10303050] |(In Westphalia, city and family names exist where the extra e has a vowel lengthening effect, e.g. ''Raesfeld'' [ˈraːsfɛlt] and ''Coesfeld'' [ˈkoːsfɛlt], but this use of the letter e after a/o/u does not occur in the present-day spelling of words other than [[proper noun]]s.
[10303060] |)
[10303070] |Unfortunately there is still no general agreement exactly where these umlauts occur in the sorting sequence.
[10303080] |Telephone directories treat them by replacing them with the base vowel followed by an e, whereas dictionaries use just the base vowel.
[10303090] |As an example in a [[Telephone directory|telephone book]] ''Ärzte'' occurs after ''Adressenverlage'' but before ''Anlagenbauer'' (because Ä is replaced by Ae).
[10303100] |In a dictionary ''Ärzte'' occurs after ''Arzt'' but before ''Asbest'' (because Ä is treated as A).
[10303110] |In some older dictionaries or indexes, initial ''Sch'' and ''St'' are treated as separate letters and are listed as separate entries after ''S''.
[10303120] |=== Past === 
[10303130] |Until the early 20th century, German was mostly printed in [[blackletter]] [[typefaces]] (mostly in [[fraktur (typeface)|Fraktur]], but also in [[Schwabacher]]) and written in corresponding [[Penmanship|handwriting]] (for example [[Kurrent]] and [[Sütterlin]]).
[10303140] |These variants of the Latin alphabet are very different from the serif or [[Sans-serif|sans serif]] [[Antiqua]] typefaces used today, and particularly the handwritten forms are difficult for the untrained to read.
[10303150] |The printed forms however were claimed by some to be actually more readable when used for printing [[Germanic language]]s .
[10303160] |The [[Nazis]] initially promoted Fraktur and Schwabacher since they were considered [[Aryan]], although they later abolished them in 1941 by claiming that these letters were Jewish.
[10303170] |The latter fact is not widely known anymore; today the letters are often associated with the Nazis and are no longer commonly used .
[10303180] |The Fraktur script remains present in everyday life through road signs, pub signs, beer brands and other forms of advertisement, where it is used to convey a certain rusticality and oldness.
[10303190] |A proper use of the [[long s]], (''langes s''), [[Long s|ſ]], is essential to write German text in [[Fraktur (script)|Fraktur]] typefaces.
[10303200] |Many [[Antiqua script|Antiqua]] typefaces include the [[long s]], also.
[10303210] |A specific set of rules applies for the use of long s in German text, but it is rarely used in Antiqua typesetting, recently.
[10303220] |Any lower case "s" at the beginning of a syllable would be a long s, as opposed to a terminal s or short s (the more common variation of the letter s), which marks the end of a syllable; for example, in differentiating between the words ''Wachſtube'' (=guard-house) and ''Wachstube'' (=tube of floor polish).
[10303230] |One can decide which "s" to use by appropriate hyphenation, easily ("Wach-ſtube" vs. "Wachs-tube").
[10303240] |The long s only appears in [[lower case]].
[10303250] |The widespread ignorance of the correct use of the Fraktur scripts shows however in the many mistakes made&mdash; such as the frequent erroneous use of the round s instead of the [[long s]] at the beginning of a syllable, the failure to employ the mandatory [[Typographical ligature|ligature]]s of Fraktur, or the use of letter-forms more alike to the Antiqua for certain especially hard-to-read Fraktur letters.
[10303260] |==Phonology== 
[10303270] |===Vowels=== 
[10303280] |German vowels (excluding diphthongs; see below) come in ''short'' and ''long'' varieties, as detailed in the following table:
[10303290] |Short {{IPA|/ɛ/}} is realised as {{IPA|[ɛ]}} in stressed syllables (including [[secondary stress]]), but as {{IPA|[ǝ]}} in unstressed syllables.
[10303300] |Note that stressed short {{IPA|/ɛ/}} can be spelled either with ''e'' or with ''ä'' (''hätte'' 'would have' and ''Kette'' 'chain', for instance, rhyme).
[10303310] |In general, the short vowels are open and the long vowels are closed.
[10303320] |The one exception is the open {{IPA|/ɛː/}} sound of long Ä; in some varieties of standard German, {{IPA|/ɛː/}} and {{IPA|/eː/}} have merged into {{IPA|[eː]}}, removing this anomaly.
[10303330] |In that case, pairs like ''Bären/Beeren'' 'bears/berries' or ''Ähre/Ehre'' 'spike/honour' become homophonous).
[10303340] |In many varieties of standard German, an unstressed {{IPA|/ɛr/}} is not pronounced as {{IPA|[ər]}}, but vocalised to {{IPA|[ɐ]}}.
[10303350] |Whether any particular vowel letter represents the long or short phoneme is not completely predictable, although the following regularities exist: 
[10303360] |* If a vowel (other than ''i'') is at the end of a syllable or followed by a single consonant, it is usually pronounced long (e.g. ''Hof'' [hoːf]).
[10303370] |* If the vowel is followed by a double consonant (e.g. ''ff'', ''ss'' or ''tt''), ''ck'', ''tz'' or a [[consonant cluster]] (e.g. ''st'' or ''nd''), it is nearly always short (e.g. ''hoffen'' [ˈhɔfǝn]).
[10303380] |Double consonants are used only for this function of marking preciding vowels as short; the consonant itself is never pronounced lengthened or doubled.
[10303390] |Both of these rules have exceptions (e.g. ''hat'' [hat] 'has' is short despite the first rule; ''Kloster'' {{IPA|[kloːstər]}}, '[[cloister]]'; ''Mond'' {{IPA|[moːnt]}}, '[[moon]]' are long despite the second rule).
[10303400] |For an ''i'' that is neither in the combination ''ie'' (making it long) nor followed by a double consonant or cluster (making it short), there is no general rule.
[10303410] |In some cases, there are regional differences: In central Germany (Hessen), the ''o'' in the [[Noun#Proper nouns and common nouns|proper name]] "Hoffmann" is pronounced long while most other Germans would pronounce it short; the same applies to the ''e'' in the geographical name "Mecklenburg" for people in that region.
[10303420] |The word ''Städte'' 'cities', is pronounced with a short vowel {{IPA|[ˈʃtɛtə]}} by some (Jan Hofer, ARD Television) and with a long vowel {{IPA|[ˈʃtɛːtə]}} by others (Marietta Slomka, ZDF Television).
[10303430] |Finally, a vowel followed by ''ch'' can be short (''Fach'' {{IPA|[fax]}} 'compartment', ''Küche'' {{IPA|[ˈkʏçe]}} 'kitchen') or long (''Suche'' {{IPA|[ˈzuːxǝ]}} 'search', ''Bücher'' {{IPA|[ˈbyːçər]}} 'books') almost at random.
[10303440] |Thus, ''Lache'' is homographous: {{IPA|[la:xe]}} 'puddle' and {{IPA|[laxe]}} 'manner of laughing' (coll.), 'laugh!'
[10303450] |(Imp.).
[10303460] |German vowels can form the following digraphs (in writing) and diphthongs (in pronunciation); note that the pronunciation of some of them (ei, äu, eu) is very different from what one would expect when considering the component letters:
[10303470] |Additionally, the digraph ''ie'' generally represents the phoneme {{IPA|/iː/}}, which is not a diphthong.
[10303480] |In many varieties, a /r/ at the end of a syllable is vocalised.
[10303490] |However, a sequence of a vowel followed by such a vocalised /r/ is not considered a diphthong: Bär {{IPA|[bɛːɐ̯]}} 'bear', er {{IPA|[eːɐ̯]}} 'he', wir {{IPA|[viːɐ̯]}} 'we', Tor {{IPA|[toːɐ̯]}} 'gate', kurz {{IPA|[kʊɐ̯ts]}} 'short', Wörter {{IPA|[vœɐ̯tɐ]}} 'words'.
[10303500] |In most varieties of standard German, word stems that begin with a vowel are preceded by a [[glottal stop]] [ʔ].
[10303510] |===Consonants=== 
[10303520] |* '''c''' standing by itself is not a German letter.
[10303530] |In borrowed words, it is usually pronounced [ʦ] (before ä, äu, e, i, ö, ü, y) or [k] (before a, o, u, or before consonants).
[10303540] |The combination '''ck''' is, as in English, used to indicate that the preceding vowel is short.
[10303550] |* '''ch''' occurs most often and is pronounced either [ç] (after ä, ai, äu, e, ei, eu, i, ö, ü and after consonants) or [x] (after a, au, o, u).
[10303560] |Ch never occurs at the beginning of an originally German word.
[10303570] |In borrowed words with initial Ch there is no single agreement on the pronunciation.
[10303580] |For example, the word ''"Chemie"'' (chemistry) can be pronounced [keːˈmiː], [çeːˈmiː] or [ʃeːˈmiː] depending on dialect.
[10303590] |* '''dsch''' is pronounced ʤ (like ''j'' in ''Jungle'') but appears in a few [[loanwords]] only.
[10303600] |* '''f''' is pronounced [f] as in "''f''ather".
[10303610] |* '''h''' is pronounced [h] like in "''h''ome" at the beginning of a syllable.
[10303620] |After a vowel it is silent and only lengthens the vowel (e.g. ''"Reh"'' = [[roe deer]]).
[10303630] |* '''j''' is pronounced [j] in Germanic words (''"Jahr"'' [jaːɐ]).
[10303640] |In younger loanwords, it follows more or less the respective languages' pronunciations.
[10303650] |* '''l''' is always pronounced [l], never [ɫ] (the English "[[Dark L]]").
[10303660] |* '''q''' only exists in combination with '''u''' and appears both in Germanic and Latin words (''"quer"''; ''"Qualität"'').
[10303670] |It is pronounced [kv].
[10303680] |* '''r''' is pronounced as a [[Guttural R|guttural sound]] (an [[uvular trill]], [ʀ]) in front of a vowel or consonant (''"Rasen"'' [ʀaːzən]; ''"Burg"'' like [buʀg]).
[10303690] |In spoken German however, it is commonly vocalised after a vowel (''"er"'' being pronounced rather like ['ɛɐ] - ''"Burg"'' [buɐg]).
[10303700] |In some southern non-standard varieties, the '''r''' is pronounced as a tongue-tip r (the [[alveolar trill]]).
[10303710] |* '''s''' in Germany, is pronounced [z] (as in "''Z''ebra") if it forms the [[syllable onset]] (e.g. Sohn [zoːn]), otherwise [s] (e.g. Bus [bʊs]).
[10303720] |In Austria, always pronounced [s].
[10303730] |A '''ss''' [s] indicates that the preceding vowel is short. '''st''' and '''sp''' at the beginning of words of German origin are pronounced [ʃt] and [ʃp], respectively.
[10303740] |* '''ß''' (a letter unique to German called "Esszet") was a ligature of a double '''s''' ''and'' of a '''sz''' and is always pronounced [s].
[10303750] |Originating in [[Blackletter]] typeface, it traditionally replaced '''ss''' at the end of a syllable (e.g. ''"ich muss"'' → ''"ich muß"''; ''"ich müsste"'' → ''"ich müßte"''); within a word it contrasts with '''ss''' [s] in indicating that the preceding vowel is long (compare ''"in Maßen"'' [in 'maːsən] "with moderation" and ''"in Massen"'' [in 'masən] "in loads").
[10303760] |The use of '''ß''' has recently been limited by the latest German spelling reform and is no longer used for '''ss''' at the end of a syllable; Switzerland and Liechtenstein already abolished it in 1934.
[10303770] |* '''sch''' is pronounced [ʃ] (like "sh" in "Shine").
[10303780] |* '''v''' is pronounced [f] in words of Germanic origin (e.g. ''"Vater"'' [ˈfaːtɐ]) and [v] in most other words (e.g. ''"Vase"'' [ˈvaːzǝ]).
[10303790] |* '''w''' is pronounced [v] like in "''v''acation" (e.g. ''"was"'' [vas]).
[10303800] |* '''y''' only appears in loanwords and is traditionally considered a vowel.
[10303810] |* '''z''' is always pronounced [ʦ] (e.g. ''"zog"'' [ʦoːk]).
[10303820] |A '''tz''' indicates that the preceding vowel is short.
[10303830] |====Consonant shifts==== 
[10303840] |German does not have any [[dental fricative]]s (as English '''th''').
[10303850] |The '''th''' sounds, which the English language has inherited from [[Anglo-Saxons|Anglo Saxon]], survived on the continent up to Old High German and then disappeared in German with the consonant shifts between the 8th and the 10th century.
[10303860] |It is sometimes possible to find parallels between German by replacing the English '''th''' with '''d''' in German: "Thank" → in German "Dank", "this" and "that" → "dies" and "das", "[[thou]]" (old 2nd person singular pronoun) → "du", "think" → "denken", "thirsty" → "durstig" and many other examples.
[10303870] |Likewise, the '''gh''' in [[Germanic languages|Germanic]] English words, pronounced in several different ways in modern English (as an '''f''', or not at all), can often be linked to German '''ch''': "to laugh" → "lachen", "through" and "thorough" → "durch", "high" → "hoch", "naught" → "nichts", etc.
[10303880] |==Cognates with English== 
[10303890] |There are many thousands of German words that are [[cognate]] to English words (in fact a sizeable fraction of native German and English vocabulary, although for various reasons much of it is not immediately obvious).
[10303900] |Most of the words in the following table have almost the same meaning as in English.
[10303910] |Compound word cognates 
[10303920] |When these cognates have slightly different consonants, this is often due to the High German consonant shift.
[10303930] |Hence the affinity of English words with those of German dialects is more evidently: 
[10303940] |There are cognates whose meanings in either language have changed through the centuries.
[10303950] |It is sometimes difficult for both English and German speakers to discern the relationship.
[10303960] |On the other hand, once the definitions are made clear, then the logical relation becomes obvious.
[10303970] |Sometimes the generality or specificity of word pairs may be opposite in the two languages.
[10303980] |German and English also share many borrowings from other languages, especially Latin, French and Greek.
[10303990] |Most of these words have the same meaning, while a few have subtle differences in meaning.
[10304000] |As many of these words have been borrowed by numerous languages, not only German and English, they are called ''[[internationalism (linguistics)|internationalisms]]'' in German linguistics.
[10304010] |For reference, a good number of these borrowed words are of the neuter gender.
[10304020] |==Words borrowed by English== 
[10304030] |:''For a list of German loanwords in English, see [[:Category:German loanwords]]''
[10304040] |In the English language, there are also many words taken from German without any letter change, e.g.:
[10304050] |==Names for German in other languages== 
[10304060] |:''See also: [[Deutsch]], [[Names for the Dutch language|Dutch]], [[Deitsch]], [[Dietsch]], [[Teuton]], [[Teutonic]], [[Allemanic]], [[Alleman]], [[Theodisca]]''
[10304070] |The names that countries have for the language differ from region to region.
[10304080] |In Italian the sole name for German is still ''tedesco'', from the Latin ''[[theodiscus]]'', meaning "vernacular".
[10304090] |A possible explanation for the use of words meaning "mute" (e.g., ''nemoj'' in Russian, ''němý'' in Czech, ''nem'' in [[Serbian language|Serbian]]) to refer to German (and also to Germans) in Slavic languages is that Germans were the first people [[Slavic peoples|Slavic tribes]] encountered with whom they could not communicate.
[10304100] |[[Romanian language|Romanian]] used to use the Slavonic term "nemţeşte", but "germană" is now widely used.
[10304110] |Hungarian "német" is also of Slavonic origin.
[10304120] |The [[Arabic language|Arabic]] name for Austria, النمسا ("an-namsa"), is derived from the Slavonic term.
[10304130] |Note also that though the Russian term for the language is ''немецкий'' ''(nemetskij)'', the country is ''Германия'' ''(Germania)''.
[10304140] |However, in certain other [[Slavic languages]], such as Czech, the country name (''Německo'') is similar to the name of the language, ''německý'' (jazyk).
[10304150] |[[Finns]] and [[Estonians]] use the term ''saksa'', originally from the [[Saxon people|Saxon]] tribe.
[10304160] |[[Scandinavians]] use derivatives of the word ''Tyskland/Þýskaland'' (from Theodisca) for the country and ''tysk(a)/þýska'' for the language.
[10304170] |[[Hebrew language|Hebrew]] traditionally (nowadays this is not the case) used the Biblical term אַשְׁכֲּנָז ([[Ashkenaz]]) (Genesis 10:3) to refer to Germany, or to certain parts of it, and the [[Ashkenazi]] Jews are those who originate from Germany and [[Eastern Europe]] and formerly spoke Yiddish as their native language, derived from [[Middle High German]].
[10304180] |Modern Hebrew uses גֶּרְמָנִי ''germaní'' (Or גֶּרְמָנִית ''germanít'' for the language).
[10304190] |The French term is ''allemand'', the Spanish term is ''alemán'', the [[Catalan language|Catalan]] term is ''alemany'', and the [[Portuguese language|Portuguese]] term is ''alemão''; all derive from the ancient [[Alamanni]] tribal alliance, meaning literally "''All Men''".
[10304200] |The [[Latvian language|Latvian]] term ''vācu'' means "tinny" and refers disparagingly to the iron-clad [[Teutonic Knights]] that colonized the Baltic in the Middle Ages.
[10304210] |The [[Scottish Gaelic]] term for the German language, ''Gearmailtis'', is formed in the standard way of adding ''-(a)is'' to the end of the country name.
[10304220] |See [[Names for Germany]] for further details on the origins of these and other terms.
[10310010] |<article>GNU General Public License</article>
[10310020] |The '''GNU General Public License''' ('''GNU GPL''' or simply '''GPL''') is a widely used [[free software license]], originally written by [[Richard Stallman]] for the [[GNU project]].
[10310030] |The GPL is the most popular and well-known example of the type of strong [[copyleft]] license that requires derived works to be available under the same copyleft.
[10310040] |Under this philosophy, the GPL is said to grant the recipients of a [[computer program]] the rights of the [[free software definition]] and uses copyleft to ensure the freedoms are preserved, even when the work is changed or added to.
[10310050] |This is in distinction to [[permissive free software licenses]], of which the [[BSD licenses]] are the standard examples.
[10310060] |The [[GNU Lesser General Public License]] (LGPL) is a modified, more permissive, version of the GPL, originally intended for some [[library (computing)|software libraries]].
[10310070] |There is also a [[GNU Free Documentation License]], which was originally intended for use with documentation for GNU software, but has also been adopted for other uses, such as the [[Wikipedia]] project.
[10310080] |The [[Affero General Public License]] (GNU AGPL) is a similar license with a focus on networking server software.
[10310090] |The GNU AGPL is similar to the GNU General Public License, except that it additionally covers the use of the software over a computer network, requiring that the complete source code be made available to any network user of the AGPLed work, for example a web application.
[10310100] |The Free Software Foundation recommends that this license is considered for any software that will commonly be run over the network.
[10310110] |==History== 
[10310120] |The GPL was written by [[Richard Stallman]] in 1989 for use with programs released as part of the [[GNU project]].
[10310130] |The original GPL was based on a unification of similar licenses used for early versions of [[GNU Emacs]], the [[GNU Debugger]] and the [[GNU Compiler Collection]].
[10310140] |These licenses contained similar provisions to the modern GPL, but were specific to each program, rendering them incompatible, despite being the same license.
[10310150] |Stallman's goal was to produce one license that could be used for any project, thus making it possible for many projects to share code.
[10310160] |An important vote of confidence in the GPL came from [[Linus Torvalds]]' adoption of the license for the [[History of the Linux kernel|Linux kernel]] in 1992, switching from an earlier license that prohibited commercial distribution.
[10310170] |As of August 2007, the GPL accounted for nearly 65% of the 43,442 free software projects listed on [[Freshmeat]], and [[As of 2006|as of January 2006]], about 68% of the projects listed on [[SourceForge.net]].
[10310180] |Similarly, a 2001 survey of [[Red Hat Linux]] 7.1 found that 50% of the source code was licensed under the GPL and a 1997 survey of [[Ibiblio|MetaLab]], then the largest free software archive, showed that the GPL accounted for about half of the licenses used.
[10310190] |One survey of a large repository of open-source software reported that in July 1997, about half the software packages with explicit license terms used the GPL.
[10310200] |Prominent free software programs licensed under the GPL include the [[Linux kernel]] and the [[GNU Compiler Collection]] (GCC).
[10310210] |Some other free software programs are [[dual-licensed]] under multiple licenses, often with one of the licenses being the GPL.
[10310220] |Some observers believe that the strong [[copyleft]] provided by the GPL was crucial to the success of Linux, giving the programmers who contributed to it the confidence that their work would benefit the whole world and remain free, rather than being exploited by software companies that would not have to give anything back to the community.
[10310230] |The second version of the license, version 2, was released in 1991.
[10310240] |Over the following 15 years, some members of the [[free software community|FOSS (Free and Open Source Software) community]] came to believe that some software and hardware vendors were finding loopholes in the GPL, allowing GPL-licensed software to be exploited in ways that were contrary to the intentions of the programmers.
[10310250] |These concerns included [[tivoization]] (the inclusion of GPL-licensed software in hardware that will refuse to run modified versions of its software); the use of unpublished, modified versions of GPL software behind web interfaces; and patent deals between [[Microsoft]] and Linux and Unix distributors that may represent an attempt to use patents as a weapon against competition from Linux.
[10310260] |Version 3 was developed to attempt to address these concerns.
[10310270] |It was [http://www.fsf.org/news/gplv3_launched officially released] on [[June 29]], [[2007]].
[10310280] |==Versions== 
[10310290] |===Version 1=== 
[10310300] |Version 1 of the GNU GPL, released in January 1989, prevented what were then the two main ways that software distributors restricted the freedoms that define free software.
[10310310] |The first problem was that distributors may publish [[binary file]]s only – executable, but not readable or modifiable by humans.
[10310320] |To prevent this, GPLv1 said that any vendor distributing binaries must also make the human readable source code available under the same licensing terms.
[10310330] |The second problem was the distributors might add additional restrictions, either by adding restrictions to the license, or by combining the software with other software which had other restrictions on its distribution.
[10310340] |If this was done, then the union of the two sets of restrictions would apply to the combined work, thus unacceptable restrictions could be added.
[10310350] |To prevent this, GPLv1 said that modified versions, as a whole, had to be distributed under the terms in GPLv1.
[10310360] |Therefore, software distributed under the terms of GPLv1 could be combined with software under more permissive terms, as this would not change the terms under which the whole could be distributed, but software distributed under GPLv1 could not be combined with software distributed under a more restrictive license, as this would conflict with the requirement that the whole be distributable under the terms of GPLv1.
[10310370] |===Version 2=== 
[10310380] |According to Richard Stallman, the major change in GPLv2 was the "Liberty or Death" clause, as he calls it - Section 7.
[10310390] |This section says that if someone has restrictions imposed that ''prevent'' him or her from distributing GPL-covered software in a way that respects other users' freedom (for example, if a legal ruling states that he or she can only distribute the software in binary form), he or she cannot distribute it at all.
[10310400] |By 1990, it was becoming apparent that a less restrictive license would be strategically useful for some software libraries; when version 2 of the GPL (GPLv2) was released in June 1991, therefore, a second license - the Library General Public License (LGPL) was introduced at the same time and numbered with version 2 to show that both were complementary.
[10310410] |The version numbers diverged in 1999 when version 2.1 of the LGPL was released, which renamed it the [[GNU Lesser General Public License]] to reflect its place in the GNU philosophy.
[10310420] |===Version 3=== 
[10310430] |In late 2005, the [[Free Software Foundation]] (FSF) announced work on version 3 of the GPL (GPLv3).
[10310440] |On [[January 16]], [[2006]], the first "discussion draft" of GPLv3 was published, and the public consultation began.
[10310450] |The public consultation was originally planned for nine to fifteen months but finally stretched to eighteen months with four drafts being published.
[10310460] |The official GPLv3 was released by FSF on [[June 29]], [[2007]].
[10310470] |GPLv3 was written by [[Richard Stallman]], with legal counsel from [[Eben Moglen]] and [[Software Freedom Law Center]].
[10310480] |According to Stallman, the most important changes are in relation to [[Software patents and free software|software patents]], [[free software license]] compatibility, the definition of "source code", and hardware restrictions on software modification ("[[tivoization]]").
[10310490] |Other changes relate to internationalisation, how license violations are handled, and how additional permissions can be granted by the copyright holder.
[10310500] |Other notable changes include allowing authors to add certain additional conditions or requirements to their contributions.
[10310510] |One of those new optional requirements, sometimes referred to as the Affero clause, is intended to fulfill a request regarding [[software as a service]]; the permitting addition of this requirement makes GPLv3 compatible with the [[Affero General Public License]].
[10310520] |The public consultation process was coordinated by the Free Software Foundation with assistance from [[Software Freedom Law Center]], [[Free Software Foundation Europe]], and other free software groups.
[10310530] |Comments were collected from the public via the gplv3.fsf.org web portal.
[10310540] |That portal runs purpose-written software called [[stet (software)|stet]].
[10310550] |These comments were passed to four committees comprising approximately 130 people, including supporters and detractors of FSF's goals.
[10310560] |Those committees researched the comments submitted by the public and passed their summaries to Stallman for a decision on what the license would do.
[10310570] |During the public consultation process, 962 comments were submitted for the first draft.
[10310580] |By the end, a total of 2,636 comments had been submitted.
[10310590] |The third draft was released on [[March 28]], [[2007]].
[10310600] |This draft included language intended to prevent patent cross-licenses like the controversial [[Novell#Agreement with Microsoft|Microsoft-Novell patent agreement]] and restricts the anti-tivoization clauses to a legal definition of a "User" or "consumer product."
[10310610] |It also explicitly removed the section on "Geographical Limitations", whose probable removal had been announced at the launch of the public consultation.
[10310620] |The fourth discussion draft, which was the last, was released on [[May 31]], [[2007]].
[10310630] |It introduced [[Apache Software License]] compatibility, clarified the role of outside contractors, and made an exception to permit the Microsoft-Novell agreement, saying in section 11 paragraph 6 that
[10310640] |This aims to make future such deals ineffective.
[10310650] |The license is also meant to cause Microsoft to extend the patent licenses it grants to Novell customers for the use of GPLv3 software to ''all'' users of that GPLv3 software; this is possible only if Microsoft is legally a "conveyor" of the GPLv3 software.
[10310660] |Others, notably some high-profile developers of the [[Linux kernel]], commented to the mass media and made public statements about their objections to parts of discussion drafts 1 and 2.
[10310670] |== Terms and conditions == 
[10310680] |The terms and conditions of the GPL are available to anybody receiving a copy of the work that has a GPL applied to it ("the licensee").
[10310690] |Any licensee who adheres to the terms and conditions is given permission to modify the work, as well as to copy and redistribute the work or any derivative version.
[10310700] |The licensee is allowed to charge a fee for this service, or do this free of charge.
[10310710] |This latter point distinguishes the GPL from software licenses that prohibit commercial redistribution.
[10310720] |The FSF argues that free software should not place restrictions on commercial use, and the GPL explicitly states that GPL works may be sold at any price.
[10310730] |The GPL additionally states that a distributor may not impose "further restrictions on the rights granted by the GPL".
[10310740] |This forbids activities such as distributing of the software under a non-disclosure agreement or contract.
[10310750] |Distributors under the GPL also grant a license for any of their patents practiced by the software, to practice those patents in GPL software.
[10310760] |Section three of the license requires that programs distributed as pre-compiled binaries are accompanied by a copy of the source code, a written offer to distribute the source code via the same mechanism as the pre-compiled binary or the written offer to obtain the source code that you got when you received the pre-compiled binary under the GPL.
[10310770] |=== Copyleft === 
[10310780] |The distribution rights granted by the GPL for modified versions of the work are not unconditional.
[10310790] |When someone distributes a GPL'd work plus their own modifications, the requirements for distributing the whole work cannot be any greater than the requirements that are in the GPL.
[10310800] |This requirement is known as copyleft.
[10310810] |It earns its legal power from the use of [[copyright]] on software programs.
[10310820] |Because a GPL work is copyrighted, a licensee has no right to redistribute it, not even in modified form (barring [[fair use]]), except under the terms of the license.
[10310830] |One is only required to adhere to the terms of the GPL if one wishes to exercise rights normally restricted by copyright law, such as redistribution.
[10310840] |Conversely, if one distributes copies of the work without abiding by the terms of the GPL (for instance, by keeping the source code secret), he or she can be [[lawsuit|sued]] by the original author under copyright law.
[10310850] |Copyleft thus uses copyright law to accomplish the opposite of its usual purpose: instead of imposing restrictions, it grants rights to other people, in a way that ensures the rights cannot subsequently be taken away.
[10310860] |It also ensures that unlimited redistribution rights are not granted, should any legal flaw (or "[[computer bug|bug]]") be found in the copyleft statement.
[10310870] |Many distributors of GPL'ed programs bundle the source code with the [[executable]]s.
[10310880] |An alternative method of satisfying the copyleft is to provide a written offer to provide the source code on a physical medium (such as a CD) upon request.
[10310890] |In practice, many GPL'ed programs are distributed over the [[Internet]], and the source code is made available over [[File Transfer Protocol|FTP]].
[10310900] |For Internet distribution, this complies with the license.
[10310910] |Copyleft applies only when a person seeks to redistribute the program.
[10310920] |One is allowed to make private modified versions, without any obligation to divulge the modifications as long as the modified software is not distributed to anyone else.
[10310930] |Note that the copyleft applies only to the software and not to its output (unless that output is itself a derivative work of the program); for example, a public web portal running a modified derivative of a GPL'ed [[content management system]] is not required to distribute its changes to the underlying software.
[10310940] |==Licensing and contractual issues== 
[10310950] |The GPL was designed as a [[license]], rather than a [[contract]].
[10310960] |In some [[Common Law]] jurisdictions, the legal distinction between a license and a contract is an important one: contracts are enforceable by [[contract law]], whereas licenses are enforced under [[copyright law]].
[10310970] |However, this distinction is not useful in the many jurisdictions where there are no differences between contracts and licenses, such as [[Civil law (legal system)|Civil Law]] systems.
[10310980] |Those who do not agree to the GPL's terms and conditions do not have permission, under copyright law, to copy or distribute GPL licensed software or derivative works.
[10310990] |However, they may still use the software however they like.
[10311000] |== Copyright holders == 
[10311010] |The text of the GPL is itself copyrighted, and the copyright is held by the [[Free Software Foundation]] (FSF).
[10311020] |However, the FSF does not hold the copyright for a work released under the GPL, unless an author explicitly assigns copyrights to the FSF (which seldom happens except for programs that are part of the [[GNU]] project).
[10311030] |Only the individual copyright holders have the authority to sue when a license violation takes place.
[10311040] |The FSF permits people to create new licenses based on the GPL, as long as the derived licenses do not use the GPL preamble without permission.
[10311050] |This is discouraged, however, since such a license is generally incompatible with the GPL.
[10311060] |(See the [http://www.fsf.org/licenses/gpl-faq.html#ModifyGPL GPL FAQ] for more information.)
[10311070] |Other licenses created by the GNU project include the [[GNU Lesser General Public License]] and the [[GNU Free Documentation License]].
[10311080] |== The GPL in court == 
[10311090] |A key dispute related to the GPL is whether or not non-GPL software can [[library linking|dynamically link]] to GPL libraries.
[10311100] |The GPL is clear in requiring that all [[derivative work]]s of GPL'ed code must themselves be GPL'ed.
[10311110] |However, it is not clear whether an executable that dynamically links to a GPL code should be considered a derivative work.
[10311120] |The free/open-source software community is split on this issue.
[10311130] |The FSF asserts that such an executable is indeed a derivative work if the executable and GPL code "make function calls to each other and share data structures," with others agreeing, while some (e.g. [[Linus Torvalds]]) agree that dynamic linking can create derived works but disagree over the circumstances.
[10311150] |On the other hand, some experts have argued that the question is still open: one [[Novell]] lawyer has written that dynamic linking not being derivative "makes sense" but is not "clear-cut," and [[Lawrence Rosen]] has claimed that a court of law would "probably" exclude dynamic linking from derivative works although "there are also good arguments" on the other side and "the outcome is not clear" (on a later occasion, he argued that "market-based" factors are more important than the linking technique).
[10311160] |This is ultimately a question not of the GPL ''per se'', but of how copyright law defines derivative works.
[10311170] |In ''[[Galoob v. Nintendo]]'' the [[Ninth Circuit Court of Appeals]] defined a derivative work as having "'form' or permanence" and noted that "the infringing work must incorporate a portion of the copyrighted work in some form," but there have been no clear court decisions to resolve this particular conflict.
[10311180] |Since there is no record of anyone circumventing the GPL by dynamic linking and contesting when threatened with lawsuits by the copyright holder, the restriction appears ''[[de facto]]'' enforceable even if not yet proven ''[[de jure]]''.
[10311190] |In 2002, MySQL AB sued Progress NuSphere for copyright and trademark infringement in [[U.S. District Court for the District of Massachusetts|United States district court]].
[10311200] |NuSphere had allegedly violated MySQL's copyright by linking code for the Gemini table type into the MySQL server.
[10311210] |After a preliminary hearing before Judge [[Patti Saris]] on [[February 27]], [[2002]], the parties entered settlement talks and eventually settled.
[10311220] |At the hearing, Judge Saris "saw no reason" that the GPL would not be enforceable.
[10311230] |In August 2003, the [[SCO Group]] stated that they believed the GPL to have no legal validity, and that they intended to take up lawsuits over sections of code supposedly copied from SCO Unix into the [[Linux kernel]].
[10311240] |This was a problematic stand for them, as they had distributed Linux and other GPL'ed code in their [[Caldera OpenLinux]] distribution, and there is little evidence that they had any legal right to do so except under the terms of the GPL.
[10311250] |For more information, see [[SCO-Linux controversies]] and [[SCO v. IBM]].
[10311260] |In April 2004 the [[netfilter/iptables]] project was granted a preliminary [[injunction]] against Sitecom Germany by [[Munich]] District Court after Sitecom refused to desist from distributing Netfilter's GPL'ed software in violation of the terms of the GPL.
[10311270] |On July 2004 , the German court confirmed this injunction as a final ruling against Sitecom.
[10311280] |The court's justification for its decision exactly mirrored the predictions given earlier by the FSF's [[Eben Moglen]]:
[10311290] |: ''Defendant has infringed on the copyright of plaintiff by offering the software 'netfilter/iptables' for download and by advertising its distribution, without adhering to the license conditions of the GPL.
[10311300] |Said actions would only be permissible if defendant had a license grant...
[10311310] |This is independent of the questions whether the licensing conditions of the GPL have been effectively agreed upon between plaintiff and defendant or not.
[10311320] |If the GPL were not agreed upon by the parties, defendant would notwithstanding lack the necessary rights to copy, distribute, and make the software 'netfilter/iptables' publicly available.''
[10311330] |This ruling was important because it was the first time that a court had confirmed that violating terms of the GPL was an act of copyright violation.
[10311340] |However, the case was not as crucial a test for the GPL as some have concluded.
[10311350] |In the case, the enforceability of GPL itself was not under attack.
[10311360] |Instead, the court was merely attempting to discern if the license itself was in effect.
[10311370] |In May of [[2005]], [[Wallace versus International Business Machines et al|Daniel Wallace]] filed suit against the [[Free Software Foundation]] (FSF) in the [[U.S. District Court for the Southern District of Indiana|Southern District of Indiana]], contending that the GPL is an illegal attempt to fix prices at zero.
[10311380] |The suit was dismissed in March 2006, on the grounds that Wallace had failed to state a valid anti-trust claim; the court noted that "the GPL encourages, rather than discourages, free competition and the distribution of computer operating systems, the benefits of which directly pass to consumers."
[10311390] |Wallace was denied the possibility of further amending his complaint, and was ordered to pay the FSF's legal expenses.
[10311400] |On September 8, 2005, Seoul Central District Court ruled that GPL has no legal relevance concerning the case dealing with [[trade secret]] derived from GPL-licensed work.
[10311410] |Defendants argued that since it is impossible to maintain trade secret while being compliant with GPL and distributing the work, they aren't in breach of trade secret.
[10311420] |This argument was considered without ground.
[10311430] |On September 6, 2006, the [[gpl-violations.org]] project prevailed in court litigation against D-Link Germany GmbH regarding D-Link's inappropriate and copyright infringing use of parts of the Linux Operating System Kernel.
[10311440] |The judgment finally provided the on-record, legal precedent that the GPL is valid and legally binding, and that it will stand up in German court.
[10311450] |In late 2007, the developers of [[BusyBox]] and the [[Software Freedom Law Center]] embarked upon a program to gain GPL compliance from distributors of BusyBox in [[embedded system]]s, suing those who would not comply.
[10311460] |These were claimed to be the first US uses of courts for enforcement of GPL obligations.
[10311470] |''See'' [[BusyBox#GPL lawsuits]].
[10311480] |== Compatibility and multi-licensing== 
[10311490] |Many of the most common free software licenses, such as the original [[MIT License|MIT/X license]], the [[BSD license]] (in its current 3-clause form), and the [[GNU Lesser General Public License|LGPL]], are "GPL-[[License compatibility|compatible]]".
[10311500] |That is, their code can be combined with a program under the GPL without conflict (the new combination would have the GPL applied to the whole).
[10311510] |However, some free/open source software licenses are not GPL-compatible.
[10311520] |Many GPL proponents have strongly advocated that free/open source software developers use only GPL-compatible licenses, because doing otherwise makes it difficult to reuse software in larger wholes.
[10311530] |Note that this issue only arises in concurrent use of licenses which impose conditions on their manner of combination.
[10311540] |Some licenses, such as the BSD license, impose no conditions on the manner of their combination.
[10311550] |Also see the [[list of FSF approved software licenses]] for examples of compatible and incompatible licenses.
[10311560] |A number of businesses use [[dual-licensing]] to distribute a GPL version and sell a [[proprietary software|proprietary]] license to companies wishing to combine the package with proprietary code, using dynamic linking or not.
[10311570] |Examples of such companies include [[MySQL AB]], [[Trolltech]] ([[Qt (toolkit)|Qt toolkit]]), [[Namesys]] ([[ReiserFS]]) and [[Red Hat]] ([[Cygwin]]).
[10311580] |== Adoption == 
[10311590] |The Open Source License Resource Center maintained by [[Black Duck Software]] shows that GPL is the license used in about 70% of all open source software.
[10311600] |The vast majority of projects are released under GPL 2 with 3000 open source projects having migrated to GPL 3.
[10311610] |==Criticism== 
[10311620] |In [[2001]] [[Microsoft]] [[CEO]] [[Steve Ballmer]] referred to Linux as "a cancer that attaches itself in an intellectual property sense to everything it touches."
[10311630] |Critics of Microsoft claim that the real reason Microsoft dislikes the GPL is that the GPL resists proprietary vendors' attempts to "[[embrace, extend and extinguish]]".
[10311640] |Microsoft has released [[Microsoft Windows Services for UNIX]] which contains GPL-licensed code.
[10311650] |In response to Microsoft's attacks on the GPL, several prominent Free Software developers and advocates released a joint statement supporting the license.
[10311660] |The GPL has been described as being [[Copyleft#Is copyleft .22viral.22.3F|"viral"]] by many of its critics because the GPL only allows conveyance of whole programs, which means that programmers are not allowed to convey programs that [[GPL linking exception|link]] to libraries having GPL-incompatible licenses.
[10311670] |The so-called "viral" effect of this is that under such circumstances disparately licensed software cannot be combined unless one of the licenses is changed.
[10311680] |Although theoretically either license could be changed, in the "viral" scenario the GPL cannot be practically changed (because the software may have so many contributors, some of whom will likely refuse), whereas the license of the other software ''can'' be practically changed.
[10311690] |This is part of a [[BSD and GPL licensing|philosophical difference]] between the GPL and permissive free software licenses such as the [[BSD licenses|BSD-style licenses]], which do not put such a requirement on modified versions.
[10311700] |While proponents of the GPL believe that free software should ensure that its freedoms are preserved all the way from the developer to the user, others believe that intermediaries between the developer and the user should be free to redistribute the software as non-free software.
[10311710] |More specifically, the GPL requires that redistribution occur subject to the GPL, whereas more "permissive" licenses allow redistribution to occur under licenses more restrictive than the original license.
[10311720] |While the GPL does allow commercial distribution of GPL software, the market price will settle near the price of distribution&mdash;near zero&mdash;since the purchasers may redistribute the software and its source code for their cost of redistribution.
[10311730] |This could be seen to inhibit commercial use of GPL'ed code by others wishing to use that code for proprietary purposes&mdash;if they don't wish to avail themselves of GPL'ed code, they will have to re-implement it themselves.
[10311740] |Microsoft has included anti-GPL terms in their open source software.
[10311750] |In addition, the [[FreeBSD]] project has stated that "a less publicized and unintended use of the GPL is that it is very favorable to large companies that want to undercut software companies.
[10311760] |In other words, the GPL is well suited for use as a marketing weapon, potentially reducing overall economic benefit and contributing to monopolistic behavior".
[10311770] |It's not clear that there are any cases of this happening in practice, however.
[10311780] |The GPL has no [[Indemnity|indemnification]] clause explicitly protecting maintainers and developers from litigation resulting from unscrupulous contribution.
[10311790] |(If a developer submits existing patented or copyright work to a GPL project claiming it as their own contribution, all the project maintainers and even other developers can be held legally responsible for damages to the copyright or patent holder.)
[10311800] |Lack of indemnification is one criticism that lead Mozilla to create the [[Mozilla Public License]] rather than use the GPL or LGPL.
[10311810] |However, Mozilla later relicensed their work under a GPL/LGPL/MPL triple license, due to problems with the GPL-incompatibility of the MPL.
[10311820] |Some software developers have found the extensive scope of the GPL to be too restrictive.
[10311830] |For example, Bjørn Reese and Daniel Stenberg describe how the downstream effects of the GPL on later developers creates a "quodque pro quo" (Latin, "Everything in return for something").
[10311840] |For that reason, in 2001 they abandoned the GPLv2 in favor of less restrictive copyleft licenses.
[10311850] |A more specific example of the downstream effects of the GPL can be observed through the frame of incompatible licenses.
[10311860] |Sun Microsystems' ZFS, because it is licensed under the GPL-incompatible CDDL and covered by several Sun patents, cannot link to the GPL-licensed linux kernel.
[10311870] |Some have also argued that the GPL could, and should, be shorter.
[10320010] |<article>Google</article>
[10320020] |'''Google Inc.''' ( and ) is an [[United States|American]] [[public company|public corporation]], earning revenue from [[AdWords|advertising]] related to its [[Google search|Internet search]], [[Gmail|web-based e-mail]], [[Google Maps|online mapping]], [[Google Apps|office productivity]], [[Orkut|social networking]], and [[YouTube|video sharing]] services as well as selling advertising-free versions of the [[Google Search Appliance|same technologies]].
[10320030] |Google's headquarters, the [[Googleplex]], is located in [[Mountain View, California]].
[10320040] |As of [[June 30]] [[2008]] the company has 19,604 full-time employees.
[10320050] |As of [[October 31]], [[2007]], it is the largest American company (by [[market capitalization]]) that is not part of the [[Dow Jones Industrial Average]].
[10320060] |Google was co-founded by [[Larry Page]] and [[Sergey Brin]] while they were students at [[Stanford University]] and the company was first incorporated as a [[privately held company]] on [[September 7]], [[1998]].
[10320070] |Google's [[initial public offering]] took place on [[August 19]], [[2004]], raising [[United States dollar|US$]]1.67 billion, making it worth US$23 billion.
[10320080] |Google has continued its growth through a series of new product developments, [[List of Google acquisitions|acquisitions]], and [[Google#Partnerships|partnerships]].
[10320090] |[[Google#Environmentalism|Environmentalism]], [[Google.org|philanthropy]], and [[Google#Corporate affairs and culture|positive employee relations]] have been important tenets during Google's growth, the latter resulting in being identified multiple times as [[Fortune Magazine|Fortune Magazine's]] #1 Best Place to Work.
[10320100] |The company's unofficial slogan is "[[Don't be evil]]", although [[criticism of Google]] include concerns regarding the [[privacy]] of personal information, [[copyright]], [[censorship by Google|censorship]], and discontinuation of services.
[10320110] |==History== 
[10320120] |Google began in January 1996, as a research project by [[Larry Page]], who was soon joined by [[Sergey Brin]], two [[Doctor of Philosophy|Ph.D.]] students at [[Stanford University]] in [[California]].
[10320130] |They hypothesized that a search engine that analyzed the relationships between websites would produce better ranking of results than existing techniques, which ranked results according to the number of times the search term appeared on a page.
[10320140] |Their search engine was originally nicknamed "BackRub" because the system checked [[backlinks]] to estimate a site's importance.
[10320150] |A small search engine called Rankdex was already exploring a similar strategy.
[10320160] |Convinced that the pages with the most links to them from other highly relevant web pages must be the most relevant pages associated with the search, Page and Brin tested their thesis as part of their studies, and laid the foundation for their search engine.
[10320170] |Originally, the search engine used the [[Stanford University]] website with the domain ''google.stanford.edu''.
[10320180] |The domain ''google.com'' was registered on [[September 15]], [[1997]], and the company was incorporated as ''Google Inc.'' on [[September 7]], [[1998]] at a friend's garage in [[Menlo Park, California]].
[10320190] |The total initial investment raised for the new company amounted to almost US$1.1 million, including a US$100,000 check by [[Andy Bechtolsheim]], one of the founders of [[Sun Microsystems]].
[10320200] |In March 1999, the company moved into offices in [[Palo Alto, California|Palo Alto]], home to several other noted [[Silicon Valley]] technology startups.
[10320210] |After quickly outgrowing two other sites, the company leased a complex of buildings in [[Mountain View, Santa Clara County, California|Mountain View]] at 1600 Amphitheatre Parkway from [[Silicon Graphics]] (SGI) in 2003.
[10320220] |The company has remained at this location ever since, and the complex has since come to be known as the [[Googleplex]] (a play on the word [[googolplex]]).
[10320230] |In 2006, Google bought the property from SGI for US$319 million.
[10320240] |The Google search engine attracted a loyal following among the growing number of Internet users, who liked its simple design and usability.
[10320250] |In 2000, Google began selling [[advertising|advertisements]] associated with search [[keyword (internet search)|keywords]].
[10320260] |The ads were text-based to maintain an uncluttered page design and to maximize page loading speed.
[10320270] |Keywords were sold based on a combination of price bid and clickthroughs, with bidding starting at US$.05 per click.
[10320280] |This model of selling keyword advertising was pioneered by [[Yahoo! Search Marketing|Goto.com]] (later renamed Overture Services, before being acquired by [[Yahoo!]] and rebranded as [[Yahoo! Search Marketing]]).
[10320290] |While many of its [[dot-com]] rivals failed in the new Internet marketplace, Google quietly rose in stature while generating revenue.
[10320300] |The name "Google" originated from a common misspelling of the word "[[googol]]", which refers to 10<sup>100</sup>, the number represented by a 1 followed by one hundred zeros.
[10320310] |Having found its way increasingly into everyday language, the verb "[[google (verb)|google]]", was added to the ''[[Merriam-Webster|Merriam Webster Collegiate Dictionary]]'' and the ''[[Oxford English Dictionary]]'' in 2006, meaning "to use the Google search engine to obtain information on the Internet."
[10320320] |A [[patent]] describing part of Google's ranking mechanism ([[PageRank]]) was granted on [[September 4]], [[2001]].
[10320330] |The patent was officially assigned to Stanford University and lists Lawrence Page as the inventor.
[10320340] |===Financing and initial public offering=== 
[10320350] |The first funding for Google as a company was secured in 1998, in the form of a US$100,000 contribution from [[Andy Bechtolsheim]], co-founder of [[Sun Microsystems]], given to a corporation which did not yet exist.
[10320360] |Around six months later, a much larger round of funding was announced, with the major investors being rival venture capital firms [[Kleiner Perkins Caufield & Byers]] and [[Sequoia Capital]].
[10320370] |Google's [[IPO]] took place on [[August 19]], [[2004]].
[10320380] |19,605,052 [[stock|shares]] were offered at a price of US$85 per share.
[10320390] |Of that, 14,142,135 (another mathematical reference as [[square root of two|√2]] ≈ 1.4142135) were floated by Google, and the remaining 5,462,917 were offered by existing stockholders.
[10320400] |The sale of US$1.67 billion gave Google a [[market capitalization]] of more than US$23 billion.
[10320410] |The vast majority of Google's 271 million shares remained under Google's control.
[10320420] |Many of Google's employees became instant [[paper millionaires]].
[10320430] |[[Yahoo!]], a competitor of Google, also benefited from the IPO because it owned 8.4 million shares of Google as of [[August 9]], [[2004]], ten days before the IPO.
[10320440] |Google's stock performance after its first IPO launch has gone well, with shares hitting US$700 for the first time on [[October 31]], [[2007]], due to strong sales and earnings in the advertising market, as well as the release of new features such as the [[Google Desktop|desktop search function]] and its iGoogle personalized home page.
[10320450] |The surge in stock price is fueled primarily by individual investors, as opposed to large institutional investors and [[mutual fund]]s.
[10320460] |The company is listed on the [[NASDAQ]] stock exchange under the [[ticker]] symbol '''GOOG''' and under the [[London Stock Exchange]] under the ticker symbol '''GGEA'''.
[10320470] |===Growth=== 
[10320480] |While the company's primary business interest is in the web content arena, Google has begun experimenting with other markets, such as [[radio]] and print publications.
[10320490] |On [[January 17]], [[2006]], Google announced that its purchase of a radio advertising company "dMarc", which provides an automated system that allows companies to advertise on the radio.
[10320500] |This will allow Google to combine two niche advertising media&mdash;the Internet and radio&mdash;with Google's ability to laser-focus on the tastes of consumers.
[10320510] |Google has also begun an experiment in selling advertisements from its advertisers in offline newspapers and magazines, with select advertisements in the [[Chicago Sun-Times]].
[10320520] |They have been filling unsold space in the newspaper that would have normally been used for in-house advertisements.
[10320530] |Google was added to the [[S&P 500 index]] on [[March 30]], [[2006]].
[10320540] |It replaced [[Burlington Resources]], a major oil producer based in [[Houston]] which was acquired by [[ConocoPhillips]].
[10320550] |===Acquisitions=== 
[10320560] |Since 2001, Google has acquired several small start-up companies, often consisting of innovative teams and products.
[10320570] |One of the earlier companies that Google bought was [[Pyra Labs]].
[10320580] |They were the creators of [[Blogger (service)|Blogger]], a weblog publishing platform, first launched in 1999.
[10320590] |This acquisition led to many premium features becoming free.
[10320600] |Pyra Labs was originally formed by [[Evan Williams (blogger)|Evan Williams]], yet he left Google in 2004.
[10320610] |In early 2006, Google acquired Upstartle, a company responsible for the online word processor, [[Writely]].
[10320620] |The technology in this product was used by Google to eventually create [[Google Docs & Spreadsheets]].
[10320630] |In 2004, Google acquired a company called [[Keyhole, Inc.]], which developed a product called ''Earth Viewer'' which was renamed in 2005 to [[Google Earth]].
[10320640] |In February 2006, software company Adaptive Path sold Measure Map, a [[weblog]] statistics application, to Google.
[10320650] |Registration to the service has since been temporarily disabled.
[10320660] |The last update regarding the future of Measure Map was made on [[April 6]], [[2006]] and outlined many of the service's known issues.
[10320670] |In late 2006, Google bought online video site [[YouTube]] for US$1.65 billion in stock.
[10320680] |Shortly after, on [[October 31]], [[2006]], Google announced that it had also acquired [[JotSpot]], a developer of wiki technology for collaborative Web sites.
[10320690] |On [[April 13]], [[2007]], Google reached an agreement to acquire [[DoubleClick]].
[10320700] |Google agreed to buy the company for US$3.1 billion.
[10320710] |On [[July 9]], [[2007]], Google announced that it had signed a definitive agreement to acquire enterprise messaging security and compliance company [[Postini]].
[10320720] |===Partnerships=== 
[10320730] |In 2005, Google entered into partnerships with other companies and government agencies to improve production and services.
[10320740] |Google announced a partnership with [[NASA Ames Research Center]] to build up of offices and work on research projects involving large-scale data management, [[nanotechnology]], [[distributed computing]], and the entrepreneurial space industry.
[10320750] |Google also entered into a partnership with [[Sun Microsystems]] in October to help share and distribute each other's technologies.
[10320760] |The company entered into a partnership with [[Time Warner]]'s [[AOL]], to enhance each other's video search services.
[10320770] |The same year, the company became a major financial investor of the new [[.mobi]] [[top-level domain]] for mobile devices, in conjunction with several other companies, including [[Microsoft]], [[Nokia]], and [[Ericsson]] among others.
[10320780] |In September 2007, Google launched, "Adsense for Mobile", a service for its publishing partners which provides the ability to monetize their mobile websites through the targeted placement of mobile text ads, and acquired the mobile social networking site, ''Zingku.mobi'', to "provide people worldwide with direct access to Google applications, and ultimately the information they want and need, right from their mobile devices."
[10320790] |In 2006, Google and [[News Corporation|News Corp.]]'s Fox Interactive Media entered into a US$900 million agreement to provide search and advertising on the popular social networking site, [[MySpace]].
[10320800] |On November 5, 2007 Google announced the [[Open Handset Alliance]] to develop an open platform for mobile services called [[Google Android|Android]].
[10320810] |On March,2008 Google, [[Sprint]], [[Intel]], [[Comcast]], [[Time Warner Cable]],[[Bright House Networks]],[[Clearwire]] together found [[Xohm]] to provide wireless [[telecommunication]] service.
[10320820] |==Products and services== 
[10320830] |Google has created services and tools for the general public and business environment alike; including Web applications, advertising networks and solutions for businesses.
[10320840] |===Advertising=== 
[10320850] |Most of Google's revenue is derived from advertising programs.
[10320860] |For the 2006 fiscal year, the company reported US$10.492 billion in total advertising revenues and only US$112 million in licensing and other revenues.
[10320870] |Google [[AdWords]] allows Web advertisers to display advertisements in Google's search results and the Google Content Network, through either a cost-per-click or cost-per-view scheme.
[10320880] |Google [[AdSense]] website owners can also display adverts on their own site, and earn money every time ads are clicked.
[10320890] |===Web-based software=== 
[10320900] |The [[Google search|Google web search engine]] is the company's most popular service.
[10320910] |As of August 2007, Google is the most used [[search engine]] on the web with a 53.6% market share, ahead of [[Yahoo!]] (19.9%) and [[Live Search]] (12.9%).
[10320920] |Google indexes billions of Web pages, so that users can search for the information they desire, through the use of [[keyword (Internet search)|keywords]] and [[operators]].
[10320930] |Google has also employed the Web Search technology into other search services, including Image Search, [[Google News]], the price comparison site [[Google Product Search]], the interactive [[Usenet]] archive [[Google Groups]], [[Google Maps]], and more.
[10320940] |In 2004, Google launched its own free web-based e-mail service, known as [[Gmail]] (or Google Mail in some jurisdictions).
[10320950] |Gmail features [[e-mail filtering|spam-filtering technology]] and the capability to use Google technology to search e-mail.
[10320960] |The service generates revenue by displaying advertisements and links from the [[AdWords]] service that are tailored to the choice of the user and/or content of the e-mail messages displayed on screen.
[10320970] |In early 2006, the company launched [[Google Video]], which not only allows users to search and view freely available videos but also offers users and media publishers the ability to publish their content, including television shows on [[CBS]], [[NBA]] basketball games, and music videos.
[10320980] |In August 2007, Google announced that it would shut down its video rental and sale program and offer refunds and [[Google Checkout]] credits to consumers who had purchased videos to own.
[10320990] |On [[February 28]], [[2008]] Google launched the [[Google Sites]] [[wiki]] as a [[Google Apps]] component.
[10321000] |Google has also developed several desktop applications, including [[Google Earth]], an interactive mapping program powered by satellite and aerial imagery that covers the vast majority of the planet.
[10321010] |Google Earth is generally considered to be remarkably accurate and extremely detailed.
[10321020] |Many major cities have such detailed images that one can zoom in close enough to see vehicles and pedestrians clearly.
[10321030] |Consequently, there have been some concerns about national security implications.
[10321040] |Specifically, some countries and militaries contend the software can be used to pinpoint with near-precision accuracy the physical location of critical infrastructure, commercial and residential buildings, bases, government agencies, and so on.
[10321050] |However, the satellite images are not necessarily frequently updated, and all of them are available at no charge through other products and even government sources.
[10321060] |For example, [[NASA]] and the [[NGA|National Geospatial-Intelligence Agency]].
[10321070] |Some counter this argument by stating that Google Earth makes it easier to access and research the images.
[10321080] |Many other products are available through [[Google Labs]], which is a collection of incomplete applications that are still being tested for use by the general public.
[10321090] |Google has promoted their products in various ways.
[10321100] |In [[London]], ''Google Space'' was set-up in [[Heathrow Airport]], showcasing several products, including Gmail, Google Earth and Picasa.
[10321110] |Also, a similar page was launched for American college students, under the name ''College Life, Powered by Google.''
[10321120] |In 2007, some reports surfaced that Google was planning the release of its own mobile phone, possibly a competitor to [[Apple Inc.|Apple]]'s [[iPhone]].
[10321130] |The project, called [[Android (mobile phone platform)|Android]] provides a standard development kit that will allow any "Android" phone to run software developed for the Android SDK, no matter the phone manufacturer.
[10321140] |In October 2007, Google SMS service was launched in [[India]] allowing users to get business listings, movie showtimes, and information by sending an [[SMS]].
[10321150] |===Enterprise products=== 
[10321160] |In 2007, Google launched [[Google Apps|Google Apps Premier Edition]], a version of Google Apps targeted primarily at the business user.
[10321170] |It includes such extras as more disk space for e-mail, API access, and premium support, for a price of US$50 per user per year.
[10321180] |A large implementation of Google Apps with 38,000 users is at [[Lakehead University]] in [[Thunder Bay, Ontario|Thunder Bay]], Ontario, Canada.
[10321190] |==Platform== 
[10321200] |Google runs its services on several [[server farm]]s, each comprising thousands of low-cost commodity computers running stripped-down versions of [[Linux]].
[10321210] |While the company divulges no details of its hardware, a 2006 estimate cites 450,000 servers, "racked up in clusters at data centers around the world."
[10321220] |==Corporate affairs and culture== 
[10321230] |Google is known for its relaxed corporate culture, of which its playful variations on [[Google logo#History of the Google Doodle|its own corporate logo]] are an indicator.
[10321240] |In 2007 and 2008, ''[[Fortune Magazine]]'' placed Google at the top of its list of the hundred best places to work.
[10321250] |Google's corporate philosophy embodies such casual principles as "you can make money without doing evil," "you can be serious without a suit," and "work should be challenging and the challenge should be fun."
[10321260] |Google has been criticized for having salaries below industry standards.
[10321270] |For example, some [[system administrator]]s earn no more than US$35,000 per year – considered to be quite low for the [[San Francisco Bay Area|Bay Area]] job market.
[10321280] |However, Google's stock performance following its [[Initial public offering|IPO]] has enabled many early employees to be competitively compensated by participation in the corporation's remarkable equity growth.
[10321290] |Google implemented other employee incentives in 2005, such as the [[Google Founders' Award]], in addition to offering higher salaries to new employees.
[10321300] |Google's workplace amenities, culture, global popularity, and strong brand recognition have also attracted potential applicants.
[10321310] |After the company's [[IPO]] in August 2004, it was reported that founders [[Sergey Brin]] and [[Larry Page]], and CEO [[Eric E. Schmidt|Eric Schmidt]], requested that their base salary be cut to US$1.00.
[10321320] |Subsequent offers by the company to increase their salaries have been turned down, primarily because, "their primary compensation continues to come from returns on their ownership stakes in Google.
[10321330] |As significant stockholders, their personal wealth is tied directly to sustained stock price appreciation and performance, which provides direct alignment with stockholder interests."
[10321340] |Prior to 2004, Schmidt was making US$250,000 per year, and Page and Brin each earned a salary of US$150,000.
[10321350] |They have all declined recent offers of bonuses and increases in compensation by Google's board of directors.
[10321360] |In a 2007 report of the United States' richest people, [[Forbes]] reported that [[Sergey Brin]] and [[Larry Page]] were tied for #5 with a net worth of US$18.5 billion each.
[10321370] |In 2007 and through early 2008, Google has seen the departure of several top executives.
[10321380] |Justin Rosenstein, Google’s product manager, left in June of 2007.
[10321390] |Shortly thereafter, Gideon Yu, former chief financial officer of [[YouTube]], a Google unit, joined [[Facebook]] along with Benjamin Ling, a high-ranking engineer, who left in October 2007.
[10321400] |In March 2008, two senior Google leaders announced their desire to pursue other opportunities.
[10321410] |Sheryl Sandburg, ex-VP of global online sales and operations began her position as COO of [[Facebook]] while Ash ElDifrawi, former head of brand advertising, left to become CMO of [[Netshops]] Inc. 
[10321420] |===Googleplex=== 
[10321430] |Google's headquarters in Mountain View, California, is referred to as "the [[Googleplex]]" in a play of words; a [[googolplex]] being 1 followed by a googol of zeros, and the HQ being a [[complex]] of buildings (cf. [[movie theater|multiplex]], cineplex, etc).
[10321440] |The lobby is decorated with a [[piano]], [[lava lamps]], old server clusters, and a projection of search queries on the wall.
[10321450] |The hallways are full of exercise balls and [[bicycle]]s.
[10321460] |Each employee has access to the corporate recreation center.
[10321470] |Recreational amenities are scattered throughout the campus and include a workout room with weights and rowing machines, locker rooms, washers and dryers, a massage room, assorted [[video game]]s, [[Foosball]], a [[piano|baby grand piano]], a pool table, and [[ping pong]].
[10321480] |In addition to the [[Recreation room|rec room]], there are snack rooms stocked with various foods and drinks.
[10321490] |In 2006, Google moved into of office space in [[New York City]], at 111 [[Eighth Avenue|Eighth Ave.]] in Manhattan.
[10321500] |The office was specially designed and built for Google and houses its largest advertising sales team, which has been instrumental in securing large partnerships, most recently deals with [[MySpace]] and [[AOL]].
[10321510] |In 2003, they added an engineering staff in New York City, which has been responsible for more than 100 engineering projects, including [[Google Maps]], [[Google Spreadsheet]]s, and others.
[10321520] |It is estimated that the building costs Google US$10 million per year to rent and is similar in design and functionality to its [[Mountain View, California|Mountain View]] headquarters, including [[foosball]], [[air hockey]], and ping-pong tables, as well as a video game area.
[10321530] |In November 2006, Google opened offices on [[Carnegie Mellon]]'s campus in [[Pittsburgh, Pennsylvania|Pittsburgh]].
[10321540] |By late 2006, Google also established a new headquarters for its AdWords division in [[Ann Arbor, Michigan]].
[10321550] |The size of Google's search system is presently undisclosed.
[10321560] |The best estimates place the total number of the company's servers at 450,000, spread over twenty five locations throughout the world, including major [[network operations center|operations centers]] in [[Dublin]] (European Operations [[Headquarters]]) and [[Atlanta, Georgia]].
[10321570] |Google is also in the process of constructing a major operations center in [[The Dalles, Oregon]], on the banks of the [[Columbia River]].
[10321580] |The site, also referred to by the media as ''Project 02'', was chosen due to the availability of inexpensive [[hydroelectric power]] and a large surplus of [[fiber optic]] cable, remnants of the dot com boom of the late 1990s.
[10321590] |The computing center is estimated to be the size of two [[American football|football fields]], and it has created hundreds of construction jobs, causing local real estate prices to increase 40%.
[10321600] |Upon completion, the center is expected to create 60 to 200 permanent jobs in the town of 12,000 people.
[10321610] |Google is taking steps to ensure that their operations are environmentally sound.
[10321620] |In October 2006, the company announced plans to install thousands of [[Photovoltaic module|solar panels]] to provide up to 1.6&nbsp;[[megawatt]]s of [[electricity]], enough to satisfy approximately 30% of the campus' energy needs.
[10321630] |The system will be the largest solar power system constructed on a [[United States|U.S.]] corporate campus and one of the largest on any corporate site in the world.
[10321640] |In June 2007, Google announced that they plan to become [[carbon neutral]] by 2008, which includes investing in energy efficiency, renewable energy sources, and purchasing carbon offsets, such as investing in projects like capturing and burning [[methane]] from animal waste at Mexican and Brazilian farms.
[10321650] |===Innovation time off=== 
[10321660] |As an interesting motivation technique (usually called [[ITO|Innovation Time Off]]), all Google engineers are encouraged to spend 20% of their work time (one day per week) on projects that interest them.
[10321670] |Some of Google's newer services, such as [[Gmail]], [[Google News]], [[Orkut]], and [[AdSense]] originated from these independent endeavors.
[10321680] |In a talk at [[Stanford University]], [[Marissa Mayer]], Google's Vice President of Search Products and User Experience, stated that her analysis showed that half of the new product launches originated from the 20% time.
[10321690] |===Easter eggs and April Fool's Day jokes=== 
[10321700] |Google has a tradition of creating [[April Fool's Day]] jokes&mdash;such as [[Google's hoaxes#2000|Google MentalPlex]], which allegedly featured the use of mental power to search the web.
[10321710] |In 2002, they claimed that [[pigeons]] were the [[Google's hoaxes#2002: Pigeon Rank|secret]] behind their growing [[search engine]].
[10321720] |In 2004, they featured [[Google's hoaxes#2004: Google Lunar/Copernicus Center|Google Lunar]] (which claimed to feature jobs on the [[moon]]), and in 2005, a [[fiction|fictitious]] brain-boosting drink, termed [[Google's hoaxes#2005: Google Gulp|Google Gulp]] was announced.
[10321730] |In 2006, they came up with [[Google's hoaxes#2006: Google Romance|Google Romance]], a hypothetical [[online dating]] service.
[10321740] |In 2007, Google announced two joke products.
[10321750] |The first was a free wireless Internet service called [[TiSP]] (Toilet Internet Service Provider) in which one obtained a connection by flushing one end of a [[fiber-optic]] cable down their toilet and waiting only an hour for a "Plumbing Hardware Dispatcher (PHD)" to connect it to the Internet.
[10321760] |Additionally, Google's [[Gmail]] page displayed an announcement for [[Gmail Paper]], which allows users of their free email service to have email messages printed and shipped to a snail mail address.
[10321770] |Google's services contain a number of [[Easter egg (virtual)|Easter eggs]]; for instance, the Language Tools page offers the search interface in the [[Swedish Chef]]'s "Bork bork bork," [[Pig Latin]], ”Hacker” (actually [[leetspeak]]), [[Elmer Fudd]], and [[Klingon language|Klingon]].
[10321780] |In addition, the search engine calculator provides the [[Answer to Life, the Universe, and Everything]] from [[Douglas Adams]]' ''[[The Hitchhiker's Guide to the Galaxy]]''.
[10321790] |As Google's search box can be used as a unit converter (as well as a calculator), some non-standard units are built in, such as the [[Smoot]].
[10321800] |Google also routinely modifies its logo in accordance with various holidays or special events throughout the year, such as [[Christmas]], [[Mother's Day]], or the [[birthday]]s of various notable individuals.
[10321810] |===IPO and culture=== 
[10321820] |Many people speculated that Google's [[initial public offering|IPO]] would inevitably lead to changes in the company's culture, because of shareholder pressure for employee benefit reductions and short-term advances, or because a large number of the company's employees would suddenly become millionaires on paper.
[10321830] |In a report given to potential investors, co-founders Sergey Brin and Larry Page promised that the IPO would not change the company's culture.
[10321840] |Later Mr. Page said, "We think a lot about how to maintain our culture and the fun elements.
[10321850] |We spent a lot of time getting our offices right.
[10321860] |We think it's important to have a high density of people.
[10321870] |People are packed together everywhere.
[10321880] |We all share offices.
[10321890] |We like this set of buildings because it's more like a densely packed university campus than a typical suburban office park."
[10321900] |However, many analysts are finding that as Google grows, the company is becoming more "corporate".
[10321910] |In 2005, articles in ''[[The New York Times]]'' and other sources began suggesting that Google had lost its anti-corporate, no evil philosophy.
[10321920] |In an effort to maintain the company's unique culture, Google has designated a Chief Culture Officer in 2006, who also serves as the Director of Human Resources.
[10321930] |The purpose of the Chief Culture Officer is to develop and maintain the culture and work on ways to keep true to the core values that the company was founded on in the beginning—a flat organization, a lack of hierarchy, a collaborative environment.
[10321940] |===Philanthropy=== 
[10321950] |In 2004, Google formed a for-profit philanthropic wing, [[Google.org]], with a start-up fund of US$1 billion.
[10321960] |The express mission of the organization is to create awareness about [[climate change]], global public health, and [[global poverty]].
[10321970] |One of its first projects is to develop a viable [[plug-in hybrid]] [[electric vehicle]] that can attain 100 [[fuel economy in automobiles|mpg]].
[10321980] |The founding and current director is Dr. [[Larry Brilliant]].
[10321990] |==Criticism== 
[10322000] |As it has grown, Google has found itself the focus of several controversies related to its business practices and services.
[10322010] |For example, [[Google Book Search]]'s effort to digitize millions of books and make the full text searchable has led to [[copyright]] disputes with the [[Authors Guild]].
[10322020] |Google's cooperation with the governments of [[People's Republic of China|China]], and to a lesser extent [[France]] and [[Germany]] (regarding [[Holocaust denial]]) to filter search results in accordance to regional laws and regulations has led to claims of [[censorship by Google|censorship]].
[10322030] |Google's persistent [[HTTP cookie|cookie]] and other information collection practices have led to concerns over user [[Google and privacy issues|privacy]].
[10322040] |As of [[December 11]], [[2007]], Google, like the [[Microsoft]] search engine, stores "personal information for 18 months" and by comparison, [[Yahoo!]] and [[AOL]] ([[Time Warner]]) "retain search requests for 13 months."
[10322050] |A number of [[India]]n state governments have raised concerns about the security risks posed by geographic details provided by [[Google Earth]]'s satellite imaging.
[10322060] |Google has also been criticized by advertisers regarding its inability to combat [[click fraud]], when a person or automated script is used to generate a charge on an advertisement without really having an interest in the product.
[10322070] |Industry reports in 2006 claim that approximately 14 to 20 percent of clicks were in fact fraudulent or invalid.
[10322080] |Further, Google has faced allegations of [[sexism]] and [[ageism]] from former employees.
[10322090] |Google has also faced accusations in [[Harper's Magazine]] of being extremely excessive with their energy usage, and were accused of employing their "[[Don't be evil]]" motto as well as their very public energy saving campaigns as means of trying to cover up or make up for the massive amounts of energy their servers actually require.
[10322100] |Also, US District Court Judge [[Louis Stanton]], on [[July 1]], 2008 ordered Google to give [[YouTube]] user data / log to [[Viacom]] to support its case in a billion-dollar [[copyright]] lawsuit against Google.
[10322110] |Google and [[Viacom]], however, on [[July 14]], 2008, agreed in [[compromise]] to protect [[YouTube]] users' personal data in the $ 1 billion (£ 497 million) copyright lawsuit.
[10322120] |Google agreed it will make user information and internet protocol addresses from its YouTube subsidiary anonymous before handing over the data to Viacom.
[10322130] |The privacy deal also applied to other litigants including the [[FA Premier League]], the Rodgers & Hammerstein Organisation and the [[Scottish Premier League]].
[10322140] |The deal however did not extend the anonymity to employees, since Viacom would prove that Google staff are aware of uploading of illegal material to the site.
[10322150] |The parties therefore will further meet on the matter lest the data be made available to the court.
[10330010] |<article>Google Translate</article>
[10330020] |'''Google Translate''' is a service provided by [[Google|Google Inc.]] to translate a section of text, or a webpage, into another language, with limits to the number of paragraphs, or range of technical terms, translated.
[10330030] |For some languages, users are asked for alternate translations, such as for technical terms, to be included for future updates to the translation process.
[10330040] |Unlike other translation services such as [[Babel Fish (website)|Babel Fish]], [[AOL]], and [[Yahoo!|Yahoo]] which use [[SYSTRAN]], Google uses its own translation software.
[10330050] |== Functions == 
[10330060] |The service also includes translation of an entire Web page.
[10330070] |The translation is limited in number of paragraphs per webpage (such as indicated by break-tags <code>&lt;br&gt;</code>); however, if text on a webpage is separated by horizontal blank-line images (auto-wrapped without using any <code>&lt;br&gt;</code>), a long webpage can be translated containing several thousand words.
[10330080] |Google Translate, like other automatic translation tools, has its limitations.
[10330090] |While it can help the reader to understand the general content of a foreign language text, it does not deliver accurate translations and does not produce publication-standard content, for example it often translates words out of context and is deliberately not applying any [[Grammar|grammatical]] rules.
[10330100] |== Approach == 
[10330110] |Google translate is based on an approach called [[statistical machine translation]], and more specifically, on research by [[Franz-Josef Och]] who won the [[DARPA]] contest for speed machine translation in 2003.
[10330120] |Och is now the head of Google's machine translation department.
[10330130] |According to Och, a solid base for developing a usable statistical machine translation system for a new pair of languages from scratch, would consist in having a bilingual [[text corpus]] (or [[parallel text|parallel collection]]) of more than a million words and two monolingual corpora of each more than a billion words.
[10330140] |Statistical [[Mathematical model|models]] from this data are then used to translate between those languages.
[10330150] |To acquire this huge amount of linguistic data, Google used [[United Nations]] documents.
[10330160] |The same document is normally available in all six official UN languages, thus Google now has a hectalingual corpus of 20 billion words' worth of human translations.
[10330170] |The availability of Arabic and Chinese as official UN languages is probably one of the reasons why Google Translate initially focused on the development of translation between English and those languages, and not, for example, [[Japanese language|Japanese]] and [[German language|German]], which are not official languages at the UN. 
[10330180] |Google representatives have been very active at domestic conferences in Japan in the field asking researchers to provide them with bilingual corpora.
[10330190] |== Options == 
[10330200] |(by chronological order)
[10330210] |*Beginning 
[10330220] |**English to Arabic
[10330230] |**English to French
[10330240] |**English to German
[10330250] |**English to Spanish
[10330260] |**French to English
[10330270] |**German to English
[10330280] |**Spanish to English
[10330290] |**Arabic to English
[10330300] |*2nd stage 
[10330310] |**English to Portuguese
[10330320] |**Portuguese to English
[10330330] |*3rd stage 
[10330340] |**English to Italian
[10330350] |**Italian to English
[10330360] |*4th stage 
[10330370] |**English to Chinese (Simplified) BETA
[10330380] |**English to Japanese BETA
[10330390] |**English to Korean BETA
[10330400] |**Chinese (Simplified) to English BETA
[10330410] |**Japanese to English BETA
[10330420] |**Korean to English BETA
[10330430] |*5th stage 
[10330440] |**English to Russian BETA
[10330450] |**Russian to English BETA
[10330460] |*6th stage 
[10330470] |**English to Arabic BETA
[10330480] |**Arabic to English BETA
[10330490] |*7th stage (launched February, 2007)
[10330500] |**English to Chinese (Traditional) BETA
[10330510] |**Chinese (Traditional) to English BETA
[10330520] |**Chinese (Simplified to Traditional) BETA
[10330530] |**Chinese (Traditional to Simplified) BETA
[10330540] |*8th stage (launched October, 2007)
[10330550] |** all 25 language pairs use Google's machine translation system
[10330560] |*9th stage 
[10330570] |**English to Hindi BETA
[10330580] |**Hindi to English BETA
[10330590] |*10th stage (as of this stage, translation can be done between any two languages) 
[10330600] |**Bulgarian
[10330610] |**Croatian
[10330620] |**Czech
[10330630] |**Danish
[10330640] |**Dutch
[10330650] |**Finnish
[10330660] |**Greek
[10330670] |**Norwegian
[10330680] |**Polish
[10330690] |**Romanian
[10330700] |**Swedish
[10340010] |<article>Grammar</article>
[10340020] |'''Grammar''' is the field of [[linguistics]] that covers the [[rules]] governing the use of any given [[natural language|natural language]].
[10340030] |It includes [[morphology (linguistics)|morphology]] and [[syntax]], often complemented by [[phonetics]], [[phonology]], [[semantics]], and [[pragmatics]].
[10340040] |Each language has its own distinct grammar.
[10340050] |"English grammar" is the rules of the English language itself.
[10340060] |"''An'' English grammar" is a specific study or analysis of these rules.
[10340070] |A [[reference book]] describing the grammar of a language is called a "reference grammar" or simply "a grammar".
[10340080] |A fully explicit grammar exhaustively describing the [[grammaticality|grammatical]] constructions of a language is called a descriptive grammar, as opposed to [[linguistic prescription]] which tries to enforce the governing rules how a language is to be used.
[10340090] |[[Grammatical framework]]s are approaches to constructing grammars.
[10340100] |The standard framework of [[generative grammar]] is the [[transformational grammar]] model developed by [[Noam Chomsky]] and his followers from the 1950s to 1980s.
[10340110] |==Etymology== 
[10340120] |The word "grammar," derives from [[Greek language|Greek]] ''γραμματική τέχνη'' (''grammatike techne''), which means "art of letters," from ''γράμμα'' (''gramma''), "letter," and that from ''γράφειν'' (''graphein''), "to draw, to write".
[10340130] |==History== 
[10340140] |The first systematic grammars originate in [[Iron Age India]], with [[Panini (grammarian)|Panini]] (4th c. BC) and his commentators [[Pingala]] (ca. 200 BC), [[Katyayana]], and [[Patanjali]] (2nd c. BC).
[10340150] |In the West, grammar emerges as a discipline in [[Hellenism]] from the 3rd c. BC forward with authors like [[Rhyanus]] and [[Aristarchus of Samothrace]], the oldest extant work being the ''[[Art of Grammar]]'' ({{lang|grc|Τέχνη Γραμματική}}), attributed to [[Dionysius Thrax]] (ca. 100 BC).
[10340160] |[[Latin grammar]] developed by following Greek models from the 1st century BC, due to the work of authors such as [[Orbilius Pupillus]], [[Remmius Palaemon]], [[Marcus Valerius Probus]], [[Verrius Flaccus]], [[Aemilius Asper]].
[10340170] |Tamil grammatical tradition also began around the 1st century BC with the [[Tolkāppiyam]].
[10340180] |A grammar of [[Old Irish|Irish]] originated in the 7th century with the [[Auraicept na n-Éces]].
[10340190] |[[Arabic grammar]] emerges from the 8th century with the work of [[Ibn Abi Ishaq]] and his students.
[10340200] |The first treatises on [[Hebrew grammar]] appear in the [[High Middle Ages]], in the context of [[Mishnah]] (exegesis of the [[Hebrew Bible]]).
[10340210] |The [[Karaite]] tradition originates in [[Abbasid]] [[Baghdad]].
[10340220] |The ''[[Diqduq]]'' (10th century) is one of the earliest grammatical commentaries on the Hebrew Bible.
[10340230] |[[Ibn Barun]] in the 12th century compares the Hebrew language with [[Arabic language|Arabic]] in the [[Islamic grammatical tradition]].
[10340240] |Belonging to the ''trivium'' of the seven [[liberal arts]], grammar was taught as a core discipline throughout the [[Middle Ages]], following the influence of authors from [[Late Antiquity]], such as [[Priscian]].
[10340250] |Treatment of vernaculars begins gradually during the [[High Middle Ages]], with isolated works such as the [[First Grammatical Treatise]], but becomes influential only in the [[Renaissance]] and [[Baroque]] periods.
[10340260] |In [[1486]], [[Antonio de Nebrija]] published ''Las introduciones Latinas contrapuesto el romance al Latin'', and the first [[Spanish grammar]], ''Gramática de la lengua castellana'', in 1492.
[10340270] |During the 16th century [[Italian Renaissance]], the ''Questione della lingua'' was the discussion on the status and ideal form of the [[Italian language]], initiated by [[Dante]]'s ''[[de vulgari eloquentia]]'' ([[Pietro Bembo]], ''Prose della volgar lingua'' Venice 1525).
[10340280] |Grammars of non-European languages began to be compiled for the purposes of [[evangelization]] and [[Bible translation]] from the 16th century onward, such as ''Grammatica o Arte de la Lengua General de los Indios de los Reynos del Perú'' (1560), and a [[Quechua]] grammar by [[Fray Domingo de Santo Tomás]].
[10340290] |In 1643 there appeared [[Ivan Uzhevych]]'s ''Grammatica sclavonica'' and, in 1762, the ''Short Introduction to English Grammar'' of [[Robert Lowth]] was also published.
[10340300] |The ''Grammatisch-Kritisches Wörterbuch der hochdeutschen Mundart'', a [[High German]] grammar in five volumes by [[Johann Christoph Adelung]], appeared as early as 1774.
[10340310] |From the latter part of the 18th century, grammar came to be understood as a subfield of the emerging discipline of modern [[linguistics]].
[10340320] |The Serbian grammar by [[Vuk Stefanović Karadžić]] arrived in 1814, while the ''Deutsche Grammatik'' of the [[Brothers Grimm]] was first published in 1818.
[10340330] |The ''Comparative Grammar'' of [[Franz Bopp]], the starting point of modern [[comparative linguistics]], came out in 1833.
[10340340] |In the [[USA]], the Society for the Promotion of Good Grammar has designated March 4, 2008 as National Grammar Day.
[10340350] |==Development of grammars== 
[10340360] |Grammars evolve through usage, and grammars also develop due to separations of the human population.
[10340370] |With the advent of written [[Knowledge representation|representation]]s, formal rules about language usage tend to appear also.
[10340380] |Formal grammars are [[codification (linguistics)|codifications]] of usage that are developed by repeated documentation over time, and by [[observation]] as well.
[10340390] |As the rules become established and developed, the prescriptive concept of grammatical correctness can arise.
[10340400] |This often creates a discrepancy between contemporary usage and that which has been accepted over time as being correct.
[10340410] |Linguists tend to believe that prescriptive grammars do not have any justification beyond their authors' aesthetic tastes; however, prescriptions are considered in [[sociolinguistics]] as part of the explanation for why some people say "I didn't do nothing", some say "I didn't do anything", and some say one or the other depending on social context.
[10340420] |The formal study of grammar is an important part of [[education]] for children from a young age through advanced [[learning]], though the rules taught in schools are not a "grammar" in the sense most [[linguistics|linguists]] use the term, as they are often [[prescriptive]] rather than [[descriptive]].
[10340430] |[[Constructed language]]s (also called planned languages or conlangs) are more common in the modern day.
[10340440] |Many have been designed to aid human [[communication]] (for example, naturalistic [[Interlingua]], schematic [[Esperanto]], and the highly logic-compatible artificial language [[Lojban]]).
[10340450] |Each of these languages has its own grammar.
[10340460] |No clear line can be drawn between syntax and morphology.
[10340470] |[[Analytic languages]] use [[syntax]] to convey information that is encoded via [[inflection]] in [[synthetic language]]s.
[10340480] |In other words, word order is not significant and [[morphology (linguistics)|morphology]] is highly significant in a purely synthetic language, whereas morphology is not significant and syntax is highly significant in an analytic language.
[10340490] |[[Chinese language|Chinese]] and [[Afrikaans language|Afrikaans]], for example, are highly analytic, and meaning is therefore very context – dependent.
[10340500] |(Both do have some inflections, and have had more in the past; thus, they are becoming even less synthetic and more "purely" analytic over time.)
[10340510] |[[Latin]], which is highly [[synthetic language|synthetic]], uses [[affix]]es and [[inflection]]s to convey the same information that Chinese does with [[syntax]].
[10340520] |Because Latin words are quite (though not completely) self-contained, an intelligible Latin [[Sentence (linguistics)|sentence]] can be made from elements that are placed in a largely arbitrary order.
[10340530] |Latin has a complex affixation and a simple syntax, while Chinese has the opposite.
[10340540] |==Grammar frameworks== 
[10340550] |Various "grammar frameworks" have been developed in [[theoretical linguistics]] since the mid 20th century, in particular under the influence of the idea of a "[[Universal grammar]]" in the USA.
[10340560] |Of these, the main divisions are:
[10340570] |*[[Transformational grammar]] (TG))
[10340580] |*[[Principles and Parameters|Principles and Parameters Theory]] (P&P) 
[10340590] |*[[Lexical functional grammar|Lexical-functional Grammar]] (LFG)
[10340600] |*[[Generalised Phrase Structure Grammar|Generalized Phrase Structure Grammar]] (GPSG)
[10340610] |*[[Head-Driven Phrase Structure Grammar]] (HPSG)
[10340620] |*[[Dependency grammar]]s (DG)
[10340630] |*[[Role and reference grammar]] (RRG)
[10350010] |<article>Hidden Markov model</article>
[10350020] |A '''hidden Markov model''' ('''HMM''') is a [[statistical model]] in which the system being modeled is assumed to be a [[Markov process]] with unknown parameters, and the challenge is to determine the hidden parameters from the [[observable]] parameters.
[10350030] |The extracted model parameters can then be used to perform further analysis, for example for [[pattern recognition]] applications.
[10350040] |An HMM can be considered as the simplest [[dynamic Bayesian network]].
[10350050] |In a regular [[Markov model]], the state is directly visible to the observer, and therefore the state transition probabilities are the only parameters.
[10350060] |In a ''hidden'' Markov model, the state is not directly visible, but variables influenced by the state are visible.
[10350070] |Each state has a probability distribution over the possible output tokens.
[10350080] |Therefore the sequence of tokens generated by an HMM gives some information about the sequence of states.
[10350090] |Hidden Markov models are especially known for their application in [[time| temporal]] pattern recognition such as [[speech recognition|speech]], [[handwriting recognition|handwriting]], [[gesture recognition]], [[musical score]] following, [[partial discharge]]s and [[bioinformatics]].
[10350100] |== Architecture of a hidden Markov model == 
[10350110] |The diagram below shows the general architecture of an instantiated HMM.
[10350120] |Each oval shape represents a random variable that can adopt a number of values.
[10350130] |The random variable <math>x(t)</math> is the hidden state at time <math>t</math> (with the model from the above diagram, <math>x(t) \in \{x_1, x_2, x_3\}</math>).
[10350140] |The random variable <math>y(t)</math> is the observation at time <math>t</math> (<math>y(t) \in \{y_1, y_2, y_3, y_4\}</math>).
[10350150] |The arrows in the diagram (often called a [[Trellis (graph)|trellis diagram]]) denote conditional dependencies.
[10350160] |From the diagram, it is clear that the value of the hidden variable <math>x(t)</math> (at time <math>t</math>) ''only'' depends on the value of the hidden variable <math>x(t-1)</math> : the values at time <math>t-2</math> and before have no influence.
[10350170] |This is called the [[Markov property]].
[10350180] |Similarly, the value of the observed variable <math>y(t)</math> only depends on the value of the hidden variable <math>x(t)</math> (both at time <math>t</math>).
[10350190] |==Probability of an observed sequence== 
[10350200] |The probability of observing a sequence <math>Y=y(0), y(1),\dots,y(L-1)</math> of length <math>L</math> is given by
[10350210] |:<math>P(Y)=\sum_{X}P(Y\mid X)P(X),</math>
[10350220] |where the sum runs over all possible hidden node sequences <math>X=x(0), x(1), \dots, x(L-1)</math>.
[10350230] |Brute force calculation of <math>P(Y)</math> is intractable for most real-life problems, as the number of possible hidden node sequences is typically extremely high.
[10350240] |The calculation can however be sped up enormously using the [[Viterbi algorithm|forward algorithm]] or the equivalent backward algorithm.
[10350250] |==Using hidden Markov models== 
[10350260] |There are three [[canonical]] problems associated with HMM: 
[10350270] |* Given the parameters of the model, compute the probability of a particular output sequence, and the probabilities of the hidden state values given that output sequence.
[10350280] |This problem is solved by the [[forward-backward algorithm]].
[10350290] |* Given the parameters of the model, find the most likely sequence of hidden states that could have generated a given output sequence.
[10350300] |This problem is solved by the [[Viterbi algorithm]].
[10350310] |* Given an output sequence or a set of such sequences, find the most likely set of state transition and output probabilities.
[10350320] |In other words, discover the parameters of the HMM given a dataset of sequences.
[10350330] |This problem is solved by the [[Baum-Welch algorithm]].
[10350340] |=== A concrete example === 
[10350350] |''This example is further elaborated in the [[Viterbi algorithm]] page.''
[10350360] |===Applications of hidden Markov models=== 
[10350370] |* [[Cryptanalysis]]
[10350380] |* [[Speech recognition]]
[10350390] |* [[Machine translation]] 
[10350400] |* [[Partial discharge]]
[10350410] |== History == 
[10350420] |Hidden Markov Models were first described in a series of statistical papers by [[Leonard E. Baum]] and other authors in the second half of the 1960s.
[10350430] |One of the first applications of HMMs was [[speech recognition]], starting in the mid-1970s.
[10350440] |In the second half of the 1980s, HMMs began to be applied to the analysis of biological sequences, in particular [[DNA]].
[10350450] |Since then, they have become ubiquitous in the field of [[bioinformatics]].
[10360010] |<article>HTML</article>
[10360020] |'''HTML''', an [[Acronym and initialism|initialism]] of '''HyperText Markup Language''', is the predominant [[markup language]] for [[web page]]s.
[10360030] |It provides a means to describe the structure of text-based information in a document — by denoting certain text as links, headings, paragraphs, lists, and so on — and to supplement that text with ''interactive forms'', embedded ''images'', and other objects.
[10360040] |HTML is written in the form of tags, surrounded by [[Brackets#Angle brackets or chevrons .3C .3E|angle brackets]].
[10360050] |HTML can also describe, to some degree, the appearance and [[semantics]] of a document, and can include embedded [[scripting language]] code (such as JavaScript) which can affect the behavior of [[Web browser]]s and other HTML processors.
[10360060] |HTML is also often used to refer to content in specific languages, such as a [[MIME type]] text/html, or even more broadly as a generic term for HTML, whether in its [[XML]]-descended form (such as [[XHTML]] 1.0 and later) or its form descended directly from [[SGML]] (such as HTML 4.01 and earlier).
[10360070] |By convention, HTML format data files use a file extension .html or .htm.
[10360080] |==History of HTML== 
[10360090] |===Origins=== 
[10360100] |In 1980, physicist [[Tim Berners-Lee]], who was an independent contractor at [[CERN]], proposed and prototyped [[ENQUIRE]], a system for CERN researchers to use and share documents.
[10360110] |In 1989, Berners-Lee and CERN data systems engineer [[Robert Cailliau]] each submitted separate proposals for an [[Internet]]-based [[hypertext]] system providing similar functionality.
[10360120] |The following year, they collaborated on a joint proposal, the WorldWideWeb (W3) project, which was accepted by CERN.
[10360130] |===First specifications=== 
[10360140] |The first publicly available description of HTML was a document called ''HTML Tags'', first mentioned on the Internet by Berners-Lee in late 1991.
[10360150] |It describes 22 elements comprising the initial, relatively simple design of HTML.
[10360160] |Thirteen of these elements still exist in HTML 4.
[10360170] |Berners-Lee considered HTML to be, at the time, an application of [[SGML]], but it was not formally defined as such until the mid-1993 publication, by the [[Internet Engineering Task Force|IETF]], of the first proposal for an HTML specification: Berners-Lee and [[Dan Connolly]]'s "Hypertext Markup Language (HTML)" Internet-Draft, which included an SGML [[Document Type Definition]] to define the grammar.
[10360180] |The draft expired after six months, but was notable for its acknowledgment of the [[Mosaic (web browser)|NCSA Mosaic]] browser's custom tag for embedding in-line images, reflecting the IETF's philosophy of basing standards on successful prototypes.
[10360190] |Similarly, Dave Raggett's competing Internet-Draft, "HTML+ (Hypertext Markup Format)", from late 1993, suggested standardizing already-implemented features like tables and fill-out forms.
[10360200] |After the HTML and HTML+ drafts expired in early 1994, the IETF created an HTML Working Group, which in 1995 completed "HTML 2.0", the first HTML specification intended to be treated as a standard against which future implementations should be based.
[10360210] |Published as [[Request for Comments]] 1996, HTML 2.0 included ideas from the HTML and HTML+ drafts.
[10360220] |There was no "HTML 1.0"; the 2.0 designation was intended to distinguish the new edition from previous drafts.
[10360230] |Further development under the auspices of the IETF was stalled by competing interests.
[10360240] |Since 1996, the HTML specifications have been maintained, with input from commercial software vendors, by the [[World Wide Web Consortium]] (W3C).
[10360250] |However, in 2000, HTML also became an international standard ([[International Organization for Standardization|ISO]]/[[International Electrotechnical Commission|IEC]] 15445:2000).
[10360260] |The last HTML specification published by the W3C is the HTML 4.01 Recommendation, published in late 1999.
[10360270] |Its issues and errors were last acknowledged by errata published in 2001.
[10360280] |===Version history of the standard=== 
[10360290] |====HTML versions==== 
[10360300] |'''July, 1993:''' [http://www.w3.org/MarkUp/draft-ietf-iiir-html-01.txt Hypertext Markup Language], was published at [[Internet Engineering Task Force|IETF]] working draft (that is, not yet a standard).
[10360310] |'''November, 1995:''' [http://tools.ietf.org/html/rfc1866 HTML 2.0] published as IETF [[Request for Comments]]: 
[10360320] |* RFC 1866,
[10360330] |* supplemented by RFC 1867 (form-based file upload) that same month,
[10360340] |* RFC 1942 (tables) in ''May 1996'',
[10360350] |* RFC 1980 (client-side image maps) in ''August 1996'', and
[10360360] |* RFC 2070 ([[internationalization and localization|internationalization]]) in ''January 1997'';
[10360370] |Ultimately, all were declared obsolete/historic by RFC 2854 in ''June 2000''.
[10360380] |'''April 1995''': [http://www.w3.org/MarkUp/html3/ HTML 3.0], proposed as a standard to the IETF.
[10360390] |It included many of the capabilities that were in Raggett's HTML+ proposal, such as support for tables, text flow around figures, and the display of complex mathematical formulas.
[10360400] |A demonstration appeared in W3C's own [[Arena (web browser)|Arena browser]].
[10360410] |HTML 3.0 did not succeed for several reasons.
[10360420] |The pace of browser development, as well as the number of interested parties, had outstripped the resources of the IETF.
[10360430] |Netscape continued to introduce HTML elements that specified the visual appearance of documents, contrary to the goals of the newly-formed W3C, which sought to limit HTML to describing logical structure.
[10360440] |Microsoft, a newcomer at the time, played to all sides by creating its own tags, implementing Netscape's elements for compatibility, and supporting W3C features such as Cascading Style Sheets.
[10360450] |'''[[January 14]], [[1997]]:''' [http://www.w3.org/TR/REC-html32 HTML 3.2], published as a [[W3C Recommendation]].
[10360460] |It was the first version developed and standardized exclusively by the W3C, as the IETF had closed its HTML Working Group in September 1997.
[10360470] |The new version dropped math formulas entirely, reconciled overlap among various proprietary extensions, and adopted most of Netscape's visual markup tags.
[10360480] |Netscape's [[blink element]] and Microsoft's [[marquee element]] were omitted due to a mutual agreement between the two companies.
[10360490] |The ability to include mathematical formulas in HTML would not be standardized until years later in [[MathML]].
[10360500] |'''[[December 18]], [[1997]]:''' [http://www.w3.org/TR/REC-html40-971218/ HTML 4.0], published as a W3C Recommendation.
[10360510] |It offers three "flavors": 
[10360520] |* Strict, in which deprecated elements are forbidden,
[10360530] |* Transitional, in which deprecated elements are allowed,
[10360540] |* Frameset, in which mostly only [[Framing (World Wide Web)|frame]] related elements are allowed;
[10360550] |HTML 4.0 (initially code-named "Cougar") likewise adopted many browser-specific element types and attributes, but at the same time sought to phase out Netscape's visual markup features by marking them as [[deprecation|deprecated]] in favor of style sheets.
[10360560] |Minor editorial revisions to the HTML 4.0 specification were published in 1998 without incrementing the version number and further minor revisions as HTML 4.01.
[10360570] |'''[[April 24]], [[1998]]:''' [http://www.w3.org/TR/1998/REC-html40-19980424/ HTML 4.0] was reissued with minor edits without incrementing the version number.
[10360580] |'''[[December 24]], [[1999]]:''' [http://www.w3.org/TR/html401 HTML 4.01], published as a W3C Recommendation.
[10360590] |It offers the same three flavors as HTML 4.0, and its last [http://www.w3.org/MarkUp/html4-updates/errata errata] were published [[May 12]], [[2001]].
[10360600] |HTML 4.01 and ISO/IEC 15445:2000 are the most recent and final versions of HTML.
[10360610] |'''[[May 15]], [[2000]]:''' [https://www.cs.tcd.ie/15445/15445.HTML ISO/IEC 15445:2000] ("[[International Organization for Standardization|ISO]] HTML", based on HTML 4.01 Strict), published as an ISO/IEC international standard.
[10360620] |'''[[January 22]], [[2008]]:''' [http://www.w3.org/TR/html5/ HTML 5], published as a Working Draft by W3C.
[10360630] |====XHTML versions==== 
[10360640] |XHTML is a separate language that began as a reformulation of HTML 4.01 using XML 1.0.
[10360650] |It continues to be developed: 
[10360660] |* [http://www.w3.org/TR/xhtml1/ XHTML 1.0], published [[January 26]], [[2000]] as a W3C Recommendation, later revised and republished [[August 1]], [[2002]].
[10360670] |It offers the same three flavors as HTML 4.0 and 4.01, reformulated in XML, with minor restrictions.
[10360680] |* [http://www.w3.org/TR/xhtml11/ XHTML 1.1], published [[May 31]], [[2001]] as a W3C Recommendation.
[10360690] |It is based on XHTML 1.0 Strict, but includes minor changes, can be customized, and is reformulated using modules from [http://www.w3.org/TR/xhtml-modularization Modularization of XHTML], which was published [[April 10]], [[2001]] as a W3C Recommendation.
[10360700] |* [http://www.w3.org/TR/xhtml2/ XHTML 2.0] is still a W3C Working Draft.
[10360710] |XHTML 2.0 is incompatible with XHTML 1.x and, therefore, would be more accurate to characterize as an XHTML-inspired new language than an update to XHTML 1.x.
[10360720] |* XHTML 5, which is an update to XHTML 1.x, is being defined alongside [[HTML 5]] in the [http://www.w3.org/html/wg/html5/ HTML 5 draft].
[10360730] |==HTML markup== 
[10360740] |HTML markup consists of several key components, including ''elements'' (and their ''attributes''), character-based ''data types'', and ''character references'' and ''entity references''.
[10360750] |Another important component is the ''document type declaration''.
[10360760] |HTML [[Hello world program|Hello World]]: <source lang="html4strict"> <html> <head> <title>Hello HTML</title> </head> <body> <span>Hello World!</span> </body> </html> </source>
[10360770] |===Elements=== 
[10360780] |:''See [[HTML element]]s for more detailed descriptions.''
[10360790] |Elements are the basic structure for HTML markup.
[10360800] |Elements have two basic properties: attributes and content.
[10360810] |Each attribute and each element's content has certain restrictions that must be followed for an HTML document to be considered valid.
[10360820] |An element usually has a start tag (e.g. <code><element-name></code>) and an end tag (e.g. <code></element-name></code>).
[10360830] |The element's attributes are contained in the start tag and content is located between the tags (e.g. <code><element-name&nbsp;attribute="value">Content</element-name></code>).
[10360840] |Some elements, such as <code><nowiki></nowiki></code>, do not have any content and must not have a closing tag.
[10360850] |Listed below are several types of markup elements used in HTML.
[10360860] |'''Structural''' markup describes the purpose of text.
[10360870] |For example, <code><nowiki><h2>Golf</h2></nowiki></code> establishes "Golf" as a second-level [[heading]], which would be rendered in a browser in a manner similar to the "HTML markup" title at the start of this section.
[10360880] |Structural markup does not denote any specific rendering, but most Web browsers have standardized on how elements should be formatted.
[10360890] |Text may be further styled with [[Cascading Style Sheets]] (CSS).
[10360900] |'''Presentational''' markup describes the appearance of the text, regardless of its function.
[10360910] |For example <code><nowiki><b>boldface</b></nowiki></code> indicates that visual output devices should render "boldface" in bold text, but gives no indication what devices which are unable to do this (such as aural devices that read the text aloud) should do.
[10360920] |In the case of both <code><nowiki><b>bold</b></nowiki></code> and <code><nowiki><i>italic</i></nowiki></code>, there are elements which usually have an equivalent visual rendering but are more semantic in nature, namely <code><nowiki><strong>strong emphasis</strong></nowiki></code> and <code><nowiki><em>emphasis</em></nowiki></code> respectively.
[10360930] |It is easier to see how an aural user agent should interpret the latter two elements.
[10360940] |However, they are not equivalent to their presentational counterparts: it would be undesirable for a screen-reader to emphasize the name of a book, for instance, but on a screen such a name would be italicized.
[10360950] |Most presentational markup elements have become [[Deprecation|deprecated]] under the HTML 4.0 specification, in favor of [[Cascading Style Sheets|CSS]] based style design.
[10360960] |'''Hypertext''' markup links parts of the document to other documents.
[10360970] |HTML up through version [[XHTML]] 1.1 requires the use of an anchor element to create a hyperlink in the flow of text: <code><nowiki><a>Wikipedia</a></nowiki></code>.
[10360980] |However, the <code>href</code> attribute must also be set to a valid [[Uniform Resource Locator|URL]] so for example the HTML code, <code><nowiki><a&nbsp;href="http://en.wikipedia.org/">Wikipedia</a></nowiki></code>, will render the word "<span class="plainlinks">[http://en.wikipedia.org/ Wikipedia]</span>" as a [[hyperlink]].
[10360985] |To link on an image, the anchor tag use the following syntax: <a href="url"><img src="image.gif" /></a>
[10360990] |===Attributes=== 
[10361000] |Most of the attributes of an element are name-value pairs, separated by "=", and written within the start tag of an element, after the element's name.
[10361010] |The value may be enclosed in single or double quotes, although values consisting of certain characters can be left unquoted in HTML (but not XHTML).
[10361020] |Leaving attribute values unquoted is considered unsafe.
[10361030] |In contrast with name-value pair attributes, there are some attributes that affect the element simply by their presence in the start tag of the element (like the <code>ismap</code> attribute for the <code>img</code> element).
[10361040] |Most elements can take any of several common attributes:
[10361050] |* The <code>id</code> attribute provides a document-wide unique identifier for an element.
[10361060] |This can be used by stylesheets to provide presentational properties, by browsers to focus attention on the specific element, or by scripts to alter the contents or presentation of an element.
[10361070] |* The <code>class</code> attribute provides a way of classifying similar elements for presentation purposes.
[10361080] |For example, an HTML document might use the designation <code>class="notation"</code> to indicate that all elements with this class value are subordinate to the main text of the document.
[10361090] |Such elements might be gathered together and presented as footnotes on a page instead of appearing in the place where they occur in the HTML source.
[10361100] |* An author may use the <code>style</code> non-attributal codes presentational properties to a particular element.
[10361110] |It is considered better practice to use an element’s son- <code>id</code> page and select the element with a stylesheet, though sometimes this can be too cumbersome for a simple ad hoc application of styled properties.
[10361120] |* The <code>title</code> attribute is used to attach subtextual explanation to an element.
[10361130] |In most browsers this attribute is displayed as what is often referred to as a [[tooltip]].
[10361140] |The generic inline element <code>span</code> can be used to demonstrate these various attributes:
[10361150] |::<source lang="html4strict"><span id="anId" class="aClass" style="color:blue;" title="Hypertext Markup Language">HTML</span></source>
[10361160] |This example displays as <span id="anId" class="aClass" style="color:blue;" title="Hypertext Markup Language">HTML</span>; in most browsers, pointing the cursor at the abbreviation should display the title text "Hypertext Markup Language."
[10361170] |Most elements also take the language-related attributes <code>lang</code> and <code>dir</code>.
[10361180] |===Character and entity references=== 
[10361190] |As of version 4.0, HTML defines a set of [[List of XML and HTML character entity references|252]] [[character entity reference]]s and a set of 1,114,050 [[numeric character reference]]s, both of which allow individual characters to be written via simple markup, rather than literally.
[10361200] |A literal character and its markup counterpart are considered equivalent and are rendered identically.
[10361210] |The ability to "escape" characters in this way allows for the characters <code>&lt;</code> and <code>&amp;</code> (when written as <code>&amp;lt;</code> and <code>&amp;amp;</code>, respectively) to be interpreted as character data, rather than markup.
[10361220] |For example, a literal <code>&lt;</code> normally indicates the start of a tag, and <code>&amp;</code> normally indicates the start of a character entity reference or numeric character reference; writing it as <code>&amp;amp;</code> or <code>&amp;#x26;</code> or <code>&amp;#38;</code> allows <code>&amp;</code> to be included in the content of elements or the values of attributes.
[10361230] |The double-quote character (<code>"</code>), when used to quote an attribute value, must also be escaped as <code>&amp;quot;</code> or <code>&amp;#x22;</code> or <code>&amp;#34;</code> when it appears within the attribute value itself.
[10361240] |The single-quote character (<code>'</code>), when used to quote an attribute value, must also be escaped as <code>&amp;#x27;</code> or <code>&amp;#39;</code> (should NOT be escaped as <code>&amp;apos;</code> except in XHTML documents) when it appears within the attribute value itself.
[10361250] |However, since document authors often overlook the need to escape these characters, browsers tend to be very forgiving, treating them as markup only when subsequent text appears to confirm that intent.
[10361260] |Escaping also allows for characters that are not easily typed or that aren't even available in the document's [[character encoding]] to be represented within the element and attribute content.
[10361270] |For example, the acute-accented <code>e</code> (<code>é</code>), a character typically found only on Western European keyboards, can be written in any HTML document as the entity reference <code>&amp;eacute;</code> or as the numeric references <code>&amp;#233;</code> or <code>&amp;#xE9;</code>.
[10361280] |The characters comprising those references (that is, the <code>&amp;</code>, the <code>;</code>, the letters in <code>eacute</code>, and so on) are available on all keyboards and are supported in all character encodings, whereas the literal <code>é</code> is not.
[10361290] |===Data types=== 
[10361300] |HTML defines several [[data type]]s for element content, such as script data and stylesheet data, and a plethora of types for attribute values, including IDs, names, URIs, numbers, units of length, languages, media descriptors, colors, character encodings, dates and times, and so on.
[10361310] |All of these data types are specializations of character data.
[10361320] |===The Document Type Declaration=== 
[10361330] |In order to enable [[Document Type Definition]] (DTD)-based validation with SGML tools and in order to avoid the [[quirks mode]] in browsers, HTML documents can start with a [[Document Type Declaration]] (informally, a "DOCTYPE").
[10361340] |The DTD to which the DOCTYPE refers contains machine-readable grammar specifying the permitted and prohibited content for a document conforming to such a DTD.
[10361350] |Browsers do not necessarily read the DTD, however.
[10361360] |The most popular graphical browsers use DOCTYPE declarations (or the lack thereof) and other data at the beginning of sources to determine which rendering mode to use.
[10361370] |For example:
[10361380] |:<code><nowiki><!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"></nowiki></code>
[10361390] |This declaration references the Strict DTD of HTML 4.01, which does not have presentational elements like <code><nowiki><font></nowiki></code>, leaving formatting to Cascading Style Sheets and the <code>span</code> and <code>div</code> tags.
[10361400] |SGML-based validators read the DTD in order to properly parse the document and to perform validation.
[10361410] |In modern browsers, the HTML 4.01 Strict doctype activates standards layout mode for [[Cascading Style Sheets|CSS]] as opposed to [[quirks mode]].
[10361420] |In addition, HTML 4.01 provides Transitional and Frameset DTDs.
[10361430] |The Transitional DTD was intended to gradually phase in the changes made in the Strict DTD, while the Frameset DTD was intended for those documents which contained frames.
[10361440] |==Semantic HTML== 
[10361450] |There is no official specification called "Semantic HTML", though the strict flavors of HTML discussed [[#Current flavors of HTML|below]] are a push in that direction.
[10361460] |Rather, semantic HTML refers to an objective and a practice to create documents with HTML that contain only the author's intended meaning, without any reference to how this meaning is presented or conveyed.
[10361470] |A classic example is the distinction between the emphasis element (<code>&lt;em&gt;</code>) and the italics element (<code>&lt;i&gt;</code>).
[10361480] |Often the emphasis element is displayed in italics, so the presentation is typically the same.
[10361490] |However, emphasizing something is different from listing the title of a book, for example, which may also be displayed in italics.
[10361500] |In purely semantic HTML, a book title would use a different element than emphasized text uses (for example a <code>&lt;span&gt;</code>), because they are meaningfully different things.
[10361510] |The goal of semantic HTML requires two things of authors:
[10361520] |# To avoid the use of presentational markup (elements, attributes, and other entities).
[10361530] |# To use available markup to differentiate the meanings of phrases and structure in the document.
[10361540] |So for example, the book title from above would need to have its own element and class specified, such as <code>&lt;cite class="booktitle"&gt;The Grapes of Wrath&lt;/cite&gt;.</code>
[10361545] |Here, the <code>&lt;cite&gt;</code> element is used because it most closely matches the meaning of this phrase in the text.
[10361550] |However, the <code>&lt;cite&gt;</code> element is not specific enough to this task, since we mean to cite specifically a book title as opposed to a newspaper article or an academic journal.
[10361560] |Semantic HTML also requires complementary specifications and software compliance with these specifications.
[10361570] |Primarily, the development and proliferation of [[Cascading Style Sheets|CSS]] has led to increasing support for semantic HTML, because CSS provides designers with a rich language to alter the presentation of semantic-only documents.
[10361580] |With the development of CSS, the need to include presentational properties in a document has virtually disappeared.
[10361590] |With the advent and refinement of CSS and the increasing support for it in Web browsers, subsequent editions of HTML increasingly stress only using markup that suggests the semantic structure and phrasing of the document, like headings, paragraphs, quotes, and lists, instead of using markup which is written for visual purposes only, like <code>&lt;font&gt;</code>, <code>&lt;b&gt;</code> (bold), and <code>&lt;i&gt;</code> (italics).
[10361600] |Some of these elements are not permitted in certain varieties of HTML, like HTML 4.01 Strict.
[10361610] |CSS provides a way to separate document semantics from the content's presentation, by keeping everything relevant to presentation defined in a CSS file.
[10361620] |See [[separation of style and content]].
[10361630] |Semantic HTML offers many advantages.
[10361640] |First, it ensures consistency in style across elements that have the same meaning.
[10361650] |Every heading, every quotation, every similar element receives the same presentation properties.
[10361660] |Second, semantic HTML frees authors from the need to concern themselves with presentation details.
[10361670] |When writing the number two, for example, should it be written out in words ("two"), or should it be written as a numeral (2)?
[10361680] |A semantic markup might enter something like <number>2</number> and leave presentation details to the stylesheet designers.
[10361690] |Similarly, an author might wonder where to break out quotations into separate indented blocks of text: with purely semantic HTML, such details would be left up to stylesheet designers.
[10361700] |Authors would simply indicate quotations when they occur in the text, and not concern themselves with presentation.
[10361710] |A third advantage is device independence and repurposing of documents.
[10361720] |A semantic HTML document can be paired with any number of stylesheets to provide output to computer screens (through Web browsers), high-resolution printers, handheld devices, aural browsers or braille devices for those with visual impairments, and so on.
[10361730] |To accomplish this, nothing needs to be changed in a well-coded semantic HTML document.
[10361740] |Readily available stylesheets make this a simple matter of pairing a semantic HTML document with the appropriate stylesheets.
[10361750] |(Of course, the stylesheet's selectors need to match the appropriate properties in the HTML document.)
[10361760] |Some aspects of authoring documents make separating semantics from style (in other words, meaning from presentation) difficult.
[10361770] |Some elements are hybrids, using presentation in their very meaning.
[10361780] |For example, a table displays content in a tabular form.
[10361790] |Often such content conveys the meaning only when presented in this way.
[10361800] |Repurposing a table for an aural device typically involves somehow presenting the table as an inherently visual element in an audible form.
[10361810] |On the other hand, we frequently present lyrical songs&mdash;something inherently meant for audible presentation&mdash;and instead present them in textual form on a Web page.
[10361820] |For these types of elements, the meaning is not so easily separated from their presentation.
[10361830] |However, for a great many of the elements used and meanings conveyed in HTML, the translation is relatively smooth.
[10361840] |==Delivery of HTML== 
[10361850] |HTML documents can be delivered by the same means as any other computer file; however, they are most often delivered in one of two forms: over [[HTTP]] servers and through e-mail.
[10361860] |===Publishing HTML with HTTP=== 
[10361870] |The [[World Wide Web]] is composed primarily of HTML documents transmitted from a [[Web server]] to a Web browser using the [[Hypertext Transfer Protocol]] (HTTP).
[10361880] |However, HTTP can be used to serve images, sound, and other content in addition to HTML.
[10361890] |To allow the Web browser to know how to handle the document it received, an indication of the [[file format]] of the document must be transmitted along with the document.
[10361900] |This vital [[metadata]] includes the [[MIME]] type (<tt>text/html</tt> for HTML 4.01 and earlier, <tt>application/xhtml+xml</tt> for XHTML 1.0 and later) and the character encoding (see [[Character encodings in HTML]]).
[10361910] |In modern browsers, the MIME type that is sent with the HTML document affects how the document is interpreted.
[10361920] |A document sent with an XHTML MIME type, or ''served as application/xhtml+xml'', is expected to be [[XML#Well-formed documents|well-formed]] XML, and a syntax error causes the browser to fail to render the document.
[10361930] |The same document sent with an HTML MIME type, or ''served as text/html'', might be displayed successfully, since Web browsers are more lenient with HTML.
[10361940] |However, XHTML parsed in this way is not considered either proper XHTML or HTML, but so-called [[tag soup]].
[10361950] |If the MIME type is not recognized as HTML, the Web browser should not attempt to render the document as HTML, even if the document is prefaced with a correct Document Type Declaration.
[10361960] |Nevertheless, some Web browsers do examine the contents or URL of the document and attempt to infer the file type, despite this being forbidden by the HTTP 1.1 specification.
[10361970] |===HTML e-mail=== 
[10361980] |Most graphical [[e-mail]] clients allow the use of a subset of HTML (often ill-defined) to provide formatting and [[semantic web|semantic]] markup capabilities not available with [[plain text]], like emphasized text, block quotations for replies, and diagrams or mathematical formulas that could not easily be described otherwise.
[10361990] |Many of these clients include both a [[GUI]] editor for composing HTML e-mail messages and a rendering engine for displaying received HTML messages.
[10362000] |Use of HTML in e-mail is controversial because of compatibility issues, because it can be used in [[phishing]]/privacy attacks, because it can confuse [[E-Mail spam|spam]] filters, and because the message size is larger than plain text.
[10362010] |===Naming conventions=== 
[10362020] |The most common [[filename extension]] for [[computer file|files]] containing HTML is <tt>.html</tt>.
[10362030] |A common abbreviation of this is <tt>.htm</tt>; it originates from older operating systems and file systems, such as the [[DOS]] versions from the 80s and early 90s and [[File Allocation Table|FAT]], which limit file extensions to three letters.
[10362040] |Both forms are widely supported by browsers.
[10362050] |==Current flavors of HTML== 
[10362060] |Since its inception, HTML and its associated protocols gained acceptance relatively quickly.
[10362070] |However, no clear standards existed in the early years of the language.
[10362080] |Though its creators originally conceived of HTML as a semantic language devoid of presentation details, practical uses pushed many presentational elements and attributes into the language, driven largely by the various browser vendors.
[10362090] |The latest standards surrounding HTML reflect efforts to overcome the sometimes chaotic development of the language and to create a rational foundation for building both meaningful and well-presented documents.
[10362100] |To return HTML to its role as a semantic language, the [[World Wide Web Consortium|W3C]] has developed style languages such as [[Cascading Style Sheets|CSS]] and [[Extensible Stylesheet Language|XSL]] to shoulder the burden of presentation.
[10362110] |In conjunction, the HTML specification has slowly reined in the presentational elements.
[10362120] |There are two axes differentiating various flavors of HTML as currently specified: SGML-based HTML versus XML-based HTML (referred to as XHTML) on the one axis, and strict versus transitional (loose) versus frameset on the other axis.
[10362130] |===SGML-based versus XML-based HTML=== 
[10362140] |One difference in the latest HTML specifications lies in the distinction between the SGML-based specification and the XML-based specification.
[10362150] |The XML-based specification is usually called XHTML to distinguish it clearly from the more traditional definition; however, the root element name continues to be 'html' even in the XHTML-specified HTML.
[10362160] |The W3C intended XHTML 1.0 to be identical to HTML 4.01 except where limitations of XML over the more complex SGML require workarounds.
[10362170] |Because XHTML and HTML are closely related, they are sometimes documented in parallel.
[10362180] |In such circumstances, some authors conflate the two names as (X)HTML or X(HTML).
[10362190] |Like HTML 4.01, XHTML 1.0 has three sub-specifications: strict, loose, and frameset.
[10362200] |Aside from the different opening declarations for a document, the differences between an HTML 4.01 and XHTML 1.0 document&mdash;in each of the corresponding DTDs&mdash;are largely syntactic.
[10362210] |The underlying syntax of HTML allows many shortcuts that XHTML does not, such as elements with optional opening or closing tags, and even EMPTY elements which must not have an end tag.
[10362220] |By contrast, XHTML requires all elements to have an opening tag or a closing tag.
[10362230] |XHTML, however, also introduces a new shortcut: an XHTML tag may be opened and closed within the same tag, by including a slash before the end of the tag like this: <code>&lt;br/&gt;</code>.
[10362240] |The introduction of this shorthand, which is not used in the SGML declaration for HTML 4.01, may confuse earlier software unfamiliar with this new convention.
[10362250] |To understand the subtle differences between HTML and XHTML, consider the transformation of a valid and well-formed XHTML 1.0 document that adheres to Appendix C (see below) into a valid HTML 4.01 document.
[10362260] |To make this translation requires the following steps: 
[10362270] |# '''The language for an element should be specified with a <code>lang</code> attribute rather than the XHTML <code>xml:lang</code> attribute.'''
[10362280] |XHTML uses XML's built in language-defining functionality attribute.
[10362290] |# '''Remove the XML namespace (<code>xmlns=URI</code>).'''
[10362300] |HTML has no facilities for namespaces.
[10362310] |# '''Change the document type declaration''' from XHTML 1.0 to HTML 4.01. (see [[#The Document Type Definition|DTD section]] for further explanation).
[10362320] |# If present, '''remove the XML declaration.'''
[10362330] |(Typically this is: <code><?xml version="1.0" encoding="utf-8"?></code>).
[10362340] |# '''Ensure that the document’s MIME type is set to <code>text/html</code>.'''
[10362350] |For both HTML and XHTML, this comes from the HTTP <code>Content-Type</code> header sent by the server.
[10362360] |# '''Change the XML empty-element syntax to an HTML style empty element''' (<code>&lt;br/&gt;</code> to <code>&lt;br&gt;</code>).
[10362370] |Those are the main changes necessary to translate a document from XHTML 1.0 to HTML 4.01.
[10362380] |To translate from HTML to XHTML would also require the addition of any omitted opening or closing tags.
[10362390] |Whether coding in HTML or XHTML it may just be best to always include the optional tags within an HTML document rather than remembering which tags can be omitted.
[10362400] |A well-formed XHTML document adheres to all the syntax requirements of XML.
[10362410] |A valid document adheres to the content specification for XHTML, which describes the document structure.
[10362420] |The W3C recommends several conventions to ensure an easy migration between HTML and XHTML (see [http://www.w3.org/TR/xhtml1/#guidelines HTML Compatibility Guidelines]).
[10362430] |The following steps can be applied to XHTML 1.0 documents only: 
[10362440] |* Include both <code>xml:lang</code> and <code>lang</code> attributes on any elements assigning language.
[10362450] |* Use the empty-element syntax only for elements specified as empty in HTML.
[10362460] |* Include an extra space in empty-element tags: for example <code>&lt;br&nbsp;/&gt;</code> instead of <code>&lt;br/&gt;</code>.
[10362470] |* Include explicit close tags for elements that permit content but are left empty (for example, <code>&lt;div&gt;</code><code>&lt;/div&gt;</code>, not <code>&lt;div /&gt;</code>).
[10362480] |* Omit the XML declaration.
[10362490] |By carefully following the W3C’s compatibility guidelines, a user agent should be able to interpret the document equally as HTML or XHTML.
[10362500] |For documents that are XHTML 1.0 and have been made compatible in this way, the W3C permits them to be served either as HTML (with a <code>text/html</code> [[MIME type]]), or as XHTML (with an <code>application/xhtml+xml</code> or <code>application/xml</code> MIME type).
[10362510] |When delivered as XHTML, browsers should use an XML parser, which adheres strictly to the XML specifications for parsing the document's contents.
[10362520] |===Transitional versus Strict === 
[10362530] |The latest SGML-based specification HTML 4.01 and the earliest XHTML version include three sub-specifications: Strict, Transitional (once called Loose), and Frameset.
[10362540] |The Strict variant represents the standard proper, whereas the Transitional and Frameset variants were developed to assist in the transition from earlier versions of HTML (including HTML 3.2).
[10362550] |The Transitional and Frameset variants allow for [[presentational markup]] whereas the Strict variant encourages the use of style sheets through its omission of most presentational markup.
[10362560] |The primary differences which make the Transitional variant more permissive than the Strict variant (the differences as the same in HTML 4 and XHTML 1.0) are: 
[10362570] |* '''A looser content model'''
[10362580] |** Inline elements and plain text (#PCDATA) are allowed directly in: <code>body</code>, <code>blockquote</code>, <code>form</code>, <code>noscript</code> and <code>noframes</code>
[10362590] |* '''Presentation related elements'''
[10362600] |** underline (<code>u</code>)
[10362610] |** strike-through (<code>del</code>)
[10362620] |** <code>center</code>
[10362630] |** <code>font</code>
[10362640] |** <code>basefont</code>
[10362650] |* '''Presentation related attributes'''
[10362660] |** <code>background</code> and <code>bgcolor</code> attributes for <code>body</code> element.
[10362670] |** <code>align</code> attribute on <code>div</code>, <code>form</code>, <code>paragraph</code> (p), and heading (<code>h1</code>...<code>h6</code>) elements
[10362680] |** <code>align</code>, <code>noshade</code>, <code>size</code>, and <code>width</code> attributes on <code>hr</code> element
[10362690] |** <code>align</code>, <code>border</code>, <code>vspace</code>, and <code>hspace</code> attributes on <code>img</code> and <code>object</code> elements
[10362700] |** <code>align</code> attribute on <code>legend</code> and <code>caption</code> elements
[10362710] |** <code>align</code> and <code>bgcolor</code> on <code>table</code> element
[10362720] |** <code>nowrap</code>, <code>bgcolor</code>, <code>width</code>, <code>height</code> on <code>td</code> and <code>th</code> elements
[10362730] |** <code>bgcolor</code> attribute on <code>tr</code> element
[10362740] |** <code>clear</code> attribute on <code>br</code> element
[10362750] |** <code>compact</code> attribute on <code>dl</code>, <code>dir</code> and <code>menu</code> elements
[10362760] |** <code>type</code>, <code>compact</code>, and <code>start</code> attributes on <code>ol</code> and <code>ul</code> elements
[10362770] |** <code>type</code> and <code>value</code> attributes on <code>li</code> element
[10362780] |** <code>width</code> attribute on <code>pre</code> element
[10362790] |* '''Additional elements in Transitional specification'''
[10362800] |** <code>menu</code> list (no substitute, though unordered list is recommended; may return in XHTML 2.0 specification)
[10362810] |** <code>dir</code> list (no substitute, though unordered list is recommended)
[10362820] |** <code>isindex</code> (element requires server-side support and is typically added to documents server-side)
[10362830] |** <code>applet</code> (deprecated in favor of object element)
[10362840] |* '''The <code>language</code> attribute on script element''' (presumably redundant with <code>type</code> attribute, though this is maintained for legacy reasons).
[10362850] |* '''Frame related entities'''
[10362860] |** <code>frameset</code> element (used in place of body for frameset DTD)
[10362870] |** <code>frame</code> element
[10362880] |** <code>iframe</code>
[10362890] |** <code>noframes</code>
[10362900] |** <code>target</code> attribute on <code>anchor</code>, client-side image-map (<code>imagemap</code>), <code>link</code>, <code>form</code>, and <code>base</code> elements
[10362910] |===Frameset versus transitional=== 
[10362920] |In addition to the above transitional differences, the frameset specifications (whether XHTML 1.0 or HTML 4.01) specifies a different content model: <source lang="html4strict"> <html> <head> <title></title> </head><frameset><frame></frame> <noframes> <body></body> </noframes></frameset> </html> </source>
[10362930] |=== Summary of flavors === 
[10362940] |As this list demonstrates, the loose flavors of the specification are maintained for legacy support.
[10362950] |However, contrary to popular misconceptions, the move to XHTML does not imply a removal of this legacy support.
[10362960] |Rather the X in XML stands for extensible and the W3C is modularizing the entire specification and opening it up to independent extensions.
[10362970] |The primary achievement in the move from XHTML 1.0 to XHTML 1.1 is the modularization of the entire specification.
[10362980] |The strict version of HTML is deployed in XHTML 1.1 through a set of modular extensions to the base XHTML 1.1 specification.
[10362990] |Likewise someone looking for the loose (transitional) or frameset specifications will find similar extended XHTML 1.1 support (much of it is contained in the legacy or frame modules).
[10363000] |The modularization also allows for separate features to develop on their own timetable.
[10363010] |So for example XHTML 1.1 will allow quicker migration to emerging XML standards such as [[MathML]] (a presentational and semantic math language based on XML) and [[XForms]] &mdash; a new highly advanced web-form technology to replace the existing HTML forms.
[10363020] |In summary, the HTML 4.01 specification primarily reined in all the various HTML implementations into a single clear written specification based on SGML.
[10363030] |XHTML 1.0, ported this specification, as is, to the new XML defined specification.
[10363040] |Next, XHTML 1.1 takes advantage of the extensible nature of XML and modularizes the whole specification.
[10363050] |XHTML 2.0 will be the first step in adding new features to the specification in a standards-body-based approach.
[10363060] |== Hypertext features not in HTML == 
[10363070] |HTML lacks some of the features found in earlier hypertext systems, such as [[typed link]]s, [[transclusion]], [[source tracking]], [[fat link]]s, and more.
[10363080] |Even some hypertext features that were in early versions of HTML have been ignored by most popular web browsers until recently, such as the [[Hyperlink|link]] element and in-browser Web page editing.
[10363090] |Sometimes Web services or browser manufacturers remedy these shortcomings.
[10363100] |For instance, [[wiki]]s and [[content management system]]s allow surfers to edit the Web pages they visit.
[10370010] |<article>IBM</article>
[10370020] |'''International Business Machines Corporation,''' abbreviated '''IBM''' and nicknamed '''"Big Blue,"''' , is a [[multinational corporation|multinational]] [[computer]] [[technology]] and [[consulting]] [[corporation]] headquartered in [[Armonk, New York]], [[United States of America|USA]].
[10370030] |The company is one of the few [[information technology]] companies with a continuous history dating back to the 19th century.
[10370040] |IBM manufactures and sells computer [[computer hardware|hardware]] and [[computer software|software]], and offers infrastructure services, [[Internet hosting service|hosting services]], and [[consultant|consulting services]] in areas ranging from [[mainframe computer]]s to [[nanotechnology]].
[10370050] |IBM has been known through most of its recent history as the world's largest computer company; with over 388,000 employees worldwide, IBM is the largest [[information technology]] employer in the world.
[10370060] |Despite falling behind [[Hewlett-Packard]] in total revenue since 2006, it remains the most profitable.
[10370070] |IBM holds more [[patent]]s than any other U.S. based technology company.
[10370080] |It has engineers and consultants in over 170 countries and [[IBM Research]] has eight laboratories worldwide.
[10370090] |IBM employees have earned three [[Nobel Prize]]s, four [[Turing Award]]s, five [[National Medal of Technology|National Medals of Technology]], and five [[National Medal of Science|National Medals of Science]].
[10370100] |As a chip maker, IBM has been among the [[Worldwide Top 20 Semiconductor Sales Leaders]] in past years, and in 2007 IBM ranked second in the list of largest software companies in the world.
[10370110] |==History== 
[10370120] |The company which became IBM was founded in 1896 as the Tabulating Machine Company by [[Herman Hollerith]], in [[Broome County, New York]] ([[Endicott, New York]], Where it still maintains very limited operations).
[10370130] |It was incorporated as [[Computing Tabulating Recording Corporation (CTR)]] on [[June 16]], [[1911]], and was listed on the [[New York Stock Exchange]] in 1916.
[10370140] |IBM adopted its current name in 1924, when it became a [[Fortune 500]] company.
[10370150] |In the 1950s, IBM became the dominant vendor in the emerging [[computer]] industry with the release of the [[IBM 701]] and other models in the [[IBM 700/7000 series]] of [[mainframes]].
[10370160] |The company's dominance became even more pronounced in the 1960s and 1970s with the [[IBM System/360]] and [[IBM System/370]] mainframes, however antitrust actions by the [[United States Department of Justice]], the rise of [[minicomputer]] companies like [[Digital Equipment Corporation]] and [[Data General]], and the introduction of the [[microprocessor]] all contributed to dilution of IBM's position in the industry, eventually leading the company to diversify into other areas including personal computers, software, and services.
[10370170] |In 1981 IBM introduced the [[IBM Personal Computer]] which is the original version and progenitor of the [[IBM PC compatible]] hardware [[platform (computing)|platform]].
[10370180] |Descendants of the IBM PC compatibles make up the majority of [[microcomputer]]s on the market today.
[10370190] |IBM sold its PC division to the Chinese company [[Lenovo]] on [[May 1]], [[2005]] for $655 million in cash and $600 million in Lenovo stock.
[10370200] |On [[January 25]], [[2007]], [[Ricoh]] announced purchase of IBM Printing Systems Division for $725 million and investment in 3-year joint venture to form a new Ricoh subsidiary, [[InfoPrint Solutions Company]]; Ricoh will own a 51% share, and IBM will own a 49% share in ''InfoPrint''.
[10370210] |===Controversies=== 
[10370220] |The author [[Edwin Black]] has alleged that, during [[World War II]], IBM CEO [[Thomas J. Watson]] used overseas subsidiaries to provide the [[Third Reich]] with [[Unit record equipment|unit record]] [[data processing]] machines, supplies and services that helped the [[Nazis]] to efficiently track down European Jews, with sizable profits for the company.
[10370230] |IBM denies that they had control over these subsidiaries after the Nazis took power.
[10370240] |A lawsuit against IBM based on these allegations was dismissed.
[10370250] |In support of the Allied war effort in World War II, from 1943 to 1945 IBM produced approximately 346,500 M1 Carbine (Caliber .30 carbine) light rifles for the U.S. Military.
[10370260] |==Current projects== 
[10370270] |===Eclipse=== 
[10370280] |Eclipse is a platform-independent, [[Java (programming language)|Java]]-based [[software framework]].
[10370290] |Eclipse was originally a [[Proprietary software|proprietary]] product developed by IBM as a successor of the [[VisualAge]] family of tools.
[10370300] |Eclipse has subsequently been released as [[free software|free]]/[[open source]] software under the [[Eclipse Public License]].
[10370310] |===developerWorks=== 
[10370320] |developerWorks is a website run by [[IBM]] for [[software developer]]s and IT professionals.
[10370330] |It contains a large number of how-to articles and tutorials, as well as software downloads and code samples, discussion forums, podcasts, blogs, wikis, and other resources for developers and technical professionals.
[10370340] |Subjects range from open, industry-standard technologies like [[Java (programming language)|Java]], [[Linux]], [[Service-oriented architecture|SOA]] and [[web services]], [[web development]], [[Ajax (programming)|Ajax]], [[PHP]], and [[XML]] to IBM's products ([[WebSphere]], [[Rational Software|Rational]], [[Lotus Software|Lotus]], [[Tivoli Systems, Inc.|Tivoli]] and [[IBM DB2|DB2]]).
[10370350] |In 2007 developerWorks was inducted into the Jolt Hall of Fame.
[10370360] |===alphaWorks=== 
[10370370] |alphaWorks is IBM's source for emerging software technologies.
[10370380] |These technologies include: 
[10370390] |*'''Flexible Internet Evaluation Report Architecture''' - A highly flexible architecture for the design, display, and reporting of Internet surveys.
[10370400] |*'''[[IBM History Flow tool|IBM History Flow Visualization Application]]''' - A tool for visualizing dynamic, evolving documents and the interactions of multiple collaborating authors.
[10370410] |*'''IBM [[Linux]] on POWER Performance Simulator''' - A tool that provides users of Linux on Power a set of performance models for IBM's POWER processors.
[10370420] |*'''Database File Archive And Restoration Management''' - An application for archiving and restoring hard disk files using file references stored in a database.
[10370430] |*'''Policy Management for Autonomic Computing''' - A policy-based autonomic management infrastructure that simplifies the automation of IT and business processes.
[10370440] |*'''FairUCE''' - A spam filter that verifies sender identity instead of filtering content.
[10370450] |*'''Unstructured Information Management Architecture (UIMA) SDK''' - A Java SDK that supports the implementation, composition, and deployment of applications working with unstructured information.
[10370460] |*'''Accessibility Browser''' - A web-browser specifically designed to assist people with visual impairments, to be released as open-source software.
[10370470] |Also known as the "A-Browser," the technology will aim to eliminate the need for a mouse, relying instead completely on voice-controls, buttons and predefined shortcut keys.
[10370480] |===Semiconductor design and manufacturing=== 
[10370490] |Virtually all modern [[video game console|console gaming systems]] use [[IC design|microprocessors developed]] by IBM.
[10370500] |The [[Xbox 360]] contains the [[Xenon (processor)|Xenon]] tri-core processor, which was designed and produced by IBM in less than 24 months.
[10370510] |Sony's [[PlayStation 3]] features the [[Cell microprocessor| Cell BE microprocessor]] designed jointly by IBM, [[Toshiba]], and [[Sony]].
[10370520] |[[Nintendo]]'s [[History of video game consoles (seventh generation)|seventh-generation]] console, [[Wii]], features an IBM chip codenamed [[Broadway (microprocessor)|Broadway]].
[10370530] |The older [[Nintendo GameCube]] also utilizes the [[Gekko (microprocessor)|Gekko]] processor, designed by IBM.
[10370540] |In May 2002, IBM and Butterfly.net, Inc. announced the Butterfly Grid, a commercial [[grid computing|grid]] for the online video gaming market.
[10370550] |In March 2006, IBM announced separate agreements with Hoplon Infotainment, Online Game Services Incorporated (OGSI), and RenderRocket to provide on-demand content management and [[blade server]] computing resources.
[10370560] |===Open Client Offering=== 
[10370570] |IBM announced it will launch its new software, called "Open Client Offering" which is to run on [[Microsoft]]'s [[Microsoft Windows|Windows]], [[Linux]] and [[Apple Inc.|Apple]]'s [[Macintosh]].
[10370580] |The company states that its new product allows businesses to offer employees a choice of using the same software on Windows and its alternatives.
[10370590] |This means that "Open Client Offering" is to cut costs of managing whether Linux or Apple relative to Windows.
[10370600] |There will be no necessity for companies to pay Microsoft for its licenses for operations since the operations will no longer rely on software which is Windows-based.
[10370610] |One of Microsoft's office alternatives is the Open Document Format software, whose development IBM supports.
[10370620] |It is going to be used for several tasks like: word processing, presentations, along with collaboration with [[Lotus Notes]], instant messaging and blog tools as well as an [[Internet Explorer]] competitor – the [[Firefox]] web browser.
[10370630] |IBM plans to install Open Client on 5 percent of its desktop PCs.
[10370640] |===UC2: Unified Communications and Collaboration=== 
[10370650] |'''UC2''' (''Unified Communications and Collaboration'') is an IBM and [[Cisco]] joint project based on [[Eclipse (software)|Eclipse]] and [[OSGi]].
[10370660] |It will offer the numerous Eclipse application developers a unified platform for an easier work environment.
[10370670] |The software based on UC2 platform will provide major enterprises with easy-to-use communication solutions, such as the Lotus based [[Sametime]].
[10370680] |In the future the Sametime users will benefit from such additional functions as [[click-to-call]] and [[Voicemail|voice mailing]].
[10370690] |===Internal programs=== 
[10370700] |[[Extreme Blue]] is a company initiative that uses experienced IBM engineers, talented interns, and business managers to develop high-value technology.
[10370710] |The project is designed to analyze emerging business needs and the technologies that can solve them.
[10370720] |These projects mostly involve rapid-prototyping of high-profile software and hardware projects.
[10370730] |In May 2007, IBM unveiled [[Project Big Green]] -- a re-direction of $1 billion per year across its businesses to increase energy efficiency.
[10370740] |==IBM Software Group== 
[10370750] |This group is one of the major divisions of IBM.
[10370760] |The various brands include: 
[10370770] |* [[IBM Information Management Software|Information Management Software]] &mdash; database servers and tools, text analytics, content management, business process management and business intelligence.
[10370780] |* [[Lotus Software]] &mdash; Groupware, collaboration and business software.
[10370790] |Acquired in 1995.
[10370800] |* [[Rational Software]] &mdash; Software development and application lifecycle management.
[10370810] |Acquired in 2002.
[10370820] |* [[Tivoli Software]] &mdash; Systems management.
[10370830] |Acquired in 1996.
[10370840] |* [[IBM WebSphere|WebSphere]] &mdash; Integration and application infrastructure software.
[10370850] |==Environmental record== 
[10370860] |IBM has a long history of dealing with its environmental problems.
[10370870] |It established a corporate policy on environmental protection in 1971, with the support of a comprehensive global environmental management system.
[10370880] |According to IBM’s stats, its total hazardous waste decreased by 44 percent over the past five years, and has decreased by 94.6 percent since 1987.
[10370890] |IBM's total hazardous waste calculation consists of waste from both non-manufacturing and manufacturing operations.
[10370900] |Waste from manufacturing operations includes waste recycled in closed-loop systems where process chemicals are recovered and for subsequent reuse, rather than just disposing and using new chemical materials.
[10370910] |Over the years, IBM has redesigned processes to eliminate almost all closed loop recycling and now uses more environmental-friendly materials in their place.
[10370920] |IBM was recognized as one of the "Top 20 Best Workplaces for Commuters" by the U.S. Environmental Protection Agency ([[EPA]]) in 2005.
[10370930] |This was to recognize the Fortune 500 companies that provided their employees with excellent commuter benefits that helped reduce traffic and air pollution.
[10370940] |However, the birthplace of IBM, [[Endicott, New York|Endicott]], suffered IBM's pollution for decades.
[10370950] |IBM used liquid cleaning agents in its circuit board assembly operation for more than two decades, and six spills and leaks incidents were recorded, including one 1979 leak of 4,100 gallons from an underground tank.
[10370960] |These left behind volatile organic compounds in the town's soil and aquifer.
[10370970] |Trace elements of volatile organic compounds have been identified in the Endicott’s drinking water, but the levels are within regulatory limits.
[10370980] |Also, from 1980, IBM has pumped out 78,000 gallons of chemicals, including trichloroethane, Freon, benzene and perchloroethene to the air and allegedly caused several cancer cases among the villagers.
[10370990] |IBM Endicott has been identified by the Department of Environmental Conservation as the major source of pollution, though traces of contaminants from a local dry cleaner and other polluters were also found.
[10371000] |Despite the amount of pollutant, state health officials cannot say whether air or water pollution in Endicott has actually caused any health problems.
[10371010] |Village officials say tests show that the water is safe to drink.
[10371020] |=== Solar power === 
[10371030] |Tokyo Ohka Kogyo Co., Ltd. (TOK) and IBM are collaborating to establish new, low-cost methods for bringing the next generation of solar energy products to market,this is, [[CIGS]] (Copper-Indium-Gallium-Selenide) [[solar cell]] modules.
[10371040] |Use of [[thin film]] technology, such as CIGS, has great promise in reducing the overall cost of solar cells and further enabling their widespread adoption.
[10371050] |IBM is exploring four main areas of photovoltaic research: using current technologies to develop cheaper and more efficient [[silicon]] [[solar cell]]s, developing new solution processed [[thin film]] photovoltaic devices, [[concentrator photovoltaics]], and future generation photovoltaic architectures based upon [[nanostructures]] such as [[semiconductor quantum dot]]s and [[nanowire]]s.
[10371060] |Dr. Supratik Guha is the leading scientist in IBM photovoltaics.
[10371070] |==Corporate culture of IBM== 
[10371080] |'''Big Blue''' is a nickname for IBM; several theories exist regarding its origin.
[10371090] |One theory, substantiated by people who worked for IBM at the time, is that IBM field reps coined the term in the 1960s, referring to the color of the mainframes IBM installed in the 1960s and early 1970s.
[10371100] |"All blue" was a term used to describe a loyal IBM customer, and business writers later picked up the term.
[10371110] |Another theory suggests that Big Blue simply refers to the Company's [[logo]].
[10371120] |A third theory suggests that Big Blue refers to a former company dress code that required many IBM employees to wear only white shirts and many wore blue suits.
[10371130] |In any event, IBM keyboards, typewriters, and some other manufactured devices, have played on the "Big Blue" concept, using the color for enter keys and carriage returns.
[10371140] |===Sales=== 
[10371150] |IBM has often been described as having a sales-centric or a sales-oriented business culture.
[10371160] |Traditionally, many IBM executives and general managers are chosen from the sales force.
[10371170] |The current CEO, [[Sam Palmisano]], for example, joined the company as a salesman and, unusually for CEOs of major corporations, has no MBA or postgraduate qualification.
[10371180] |Middle and top management are often enlisted to give direct support to salesmen when pitching sales to important customers.
[10371190] |===The uniform=== 
[10371200] |A dark (or gray) suit, white shirt, and a "sincere" tie was the public uniform for IBM employees for most of the 20th Century.
[10371210] |During IBM's management transformation in the 1990s, CEO [[Lou Gerstner]] relaxed these codes, normalizing the dress and behavior of IBM employees to resemble their counterparts in other large technology companies.
[10371220] |===IBM company values and "Jam"=== 
[10371230] |In 2003, IBM embarked on an ambitious project to rewrite company values.
[10371240] |Using its ''Jam'' technology, the company hosted Intranet-based online discussions on key business issues with 50,000 employees over 3 days.
[10371250] |The discussions were analyzed by sophisticated text analysis software (eClassifier) to mine online comments for themes.
[10371260] |As a result of the 2003 Jam, the company values were updated to reflect three modern business, marketplace and employee views: "Dedication to every client's success", "Innovation that matters - for our company and for the world", "Trust and personal responsibility in all relationships".
[10371270] |In 2004, another Jam was conducted during which 52,000 employees exchanged best practices for 72 hours.
[10371280] |They focused on finding actionable ideas to support implementation of the values previously identified.
[10371290] |A new post-Jam Ratings event was developed to allow IBMers to select key ideas that support the values.
[10371300] |The board of directors cited this Jam when awarding Palmisano a pay rise in the spring of 2005.
[10371310] |In July and September 2006, Palmisano launched another jam called [https://www.globalinnovationjam.com/ InnovationJam].
[10371320] |InnovationJam was the largest online brainstorming session ever with more than 150,000 participants from 104 countries.
[10371330] |The participants were IBM employees, members of IBM employees' families, universities, partners, and customers.
[10371340] |InnovationJam was divided in two sessions (one in July and one in September) for 72 hours each and generated more than 46,000 ideas.
[10371350] |In November 2006, IBM declared that they will invest $US 100 million in the 10 best ideas from InnovationJam.
[10371360] |===Open source=== 
[10371370] |IBM has been influenced by the [[Open Source Initiative]], and began supporting [[Linux]] in 1998.
[10371380] |The company invests billions of dollars in services and software based on [[Linux]] through the IBM [[Linux Technology Center]], which includes over 300 [[Linux kernel]] developers.
[10371390] |IBM has also released code under different [[open-source license]]s, such as the platform-independent software framework [[Eclipse (software)|Eclipse]] (worth approximately US$40 million at the time of the donation) and the [[Java (programming language)|Java]]-based [[relational database management system]] (RDBMS) [[Apache Derby]].
[10371400] |IBM's open source involvement has not been trouble-free, however (see ''[[SCO v. IBM]]'').
[10371410] |== Corporate affairs == 
[10371420] |=== Diversity and workforce issues === 
[10371430] |IBM's efforts to promote workforce diversity and equal opportunity date back at least to [[World War I]], when the company hired disabled veterans.
[10371440] |IBM was the only technology company ranked in ''Working Mother'' magazine's Top 10 for 2004, and one of two technology companies in 2005 (the other company being Hewlett-Packard).
[10371450] |On [[September 21]], [[1953]], [[Thomas J. Watson]], the CEO at the time, sent out a very controversial letter to all IBM employees stating that IBM needed to hire the best people, regardless of their race, ethnic origin, or gender.
[10371460] |In 1984, IBM added sexual preference.
[10371470] |He stated that this would give IBM a competitive advantage because IBM would then be able to hire talented people its competitors would turn down.
[10371480] |The company has traditionally resisted [[trade union|labor union]] organizing, although unions represent some IBM workers outside the United States.
[10371490] |In the 1990s, two major [[pension]] program changes, including a conversion to a cash balance plan, resulted in an employee [[class action]] lawsuit alleging [[age discrimination]].
[10371500] |IBM employees won the lawsuit and arrived at a partial settlement, although appeals are still underway.
[10371510] |IBM also settled a major overtime class-action lawsuit in 2006.
[10371520] |Historically IBM has had a good reputation of long-term staff retention with few large scale layoffs.
[10371530] |In more recent years there have been a number of broad sweeping cuts to the workforce as IBM attempts to adapt to changing market conditions and a declining profit base.
[10371540] |After posting weaker than expected revenues in the first quarter of 2005, IBM eliminated 14,500 positions from its workforce, predominantly in Europe.
[10371550] |In May 2005, IBM Ireland said to staff that the MD(Micro-electronics Division) facility was closing down by the end of 2005 and offered a settlement to staff.
[10371560] |However, all staff that wished to stay with the Company were redeployed within IBM Ireland.
[10371570] |The production moved to a company called Amkor in Singapore who purchased IBM's Microelectronics business in Singapore and is widely agreed that IBM promised this Company a full load capacity in return for the purchase of the facility.
[10371580] |On [[June 8]] [[2005]], IBM Canada Ltd. eliminated approximately 700 positions.
[10371590] |IBM projects these as part of a strategy to "rebalance" its portfolio of professional skills & businesses.
[10371600] |[[IBM India]] and other IBM offices in [[China]], the [[Philippines]] and [[Costa Rica]] have been witnessing a recruitment boom and steady growth in number of employees due to lower wages.
[10371610] |On [[October 10]] [[2005]], IBM became the first major company in the world to formally commit to not using [[genetic testing|genetic information]] in its employment decisions.
[10371620] |This came just a few months after IBM announced its support of the [[National Geographic Society]]'s [[The Genographic Project|Genographic Project]].
[10371630] |==== Gay rights ==== 
[10371640] |IBM provides employees' same-sex partners with benefits and provides an anti-discrimination clause.
[10371650] |The [[Human Rights Campaign]] has consistently rated IBM 100% on its index of gay-friendliness since 2003 (in 2002, the year it began compiling its report on major companies, IBM scored 86%).
[10371660] |===Logos=== 
[10371670] |[[Logo]]s designed in the 1970s tended to be sensitive to the technical limitations of photocopiers, which were then being widely deployed.
[10371680] |A logo with large solid areas tended to be poorly copied by copiers in the 1970s, so companies preferred logos that avoided large solid areas.
[10371690] |The 1972 IBM logos are an example of this tendency.
[10371700] |With the advent of digital copiers in the mid-1980s this technical restriction had largely disappeared; at roughly the same time, the 13-bar logo was abandoned for almost the opposite reason it was difficult to render accurately on the low-resolution digital printers (240 dots per inch) of the time.
[10371710] |===Board of directors=== 
[10371720] |Current members of the [[board of directors]] of IBM are: 
[10371730] |*Cathleen Black President, [[Hearst Corporation|Hearst Magazines]]
[10371740] |*[[William Brody]] President, [[Johns Hopkins University]]
[10371750] |*[[Ken Chenault]] Chairman and CEO, [[American Express]] Company
[10371760] |*Juergen Dormann Chairman of the Board, ABB Ltd
[10371770] |*[[Michael Eskew]] Chairman and CEO, [[United Parcel Service]], Inc.
[10371780] |*[[Shirley Ann Jackson]] President, [[Rensselaer Polytechnic Institute]]
[10371790] |*Minoru Makihara Senior Corporate Advisor and former Chairman, [[Mitsubishi Corporation]]
[10371800] |*Lucio Noto Managing Partner, Midstream Partners LLC
[10371810] |*[[James W. Owens]] Chairman and CEO, [[Caterpillar Inc.]]
[10371820] |*[[Samuel J. Palmisano]] Chairman, President and CEO, IBM
[10371830] |*Joan Spero President, [[Doris Duke]] Charitable Foundation
[10371840] |*Sidney Taurell, Chairman and CEO, [[Eli Lilly and Company]]
[10371850] |*[[Lorenzo Zambrano]] Chairman and CEO, [[Cemex]] SAB de CV
[10380010] |<article>Information</article>
[10380020] |'''Information''' as a [[Conveyed concept|concept]] has a diversity of meanings, from everyday usage to technical settings.
[10380030] |Generally speaking, the concept of information is closely related to notions of [[constraint]], [[communication]], [[control system|control]], [[data]], [[form]], [[instruction]], [[knowledge]], [[Meaning (linguistics)|meaning]], [[stimulation|mental stimulus]], [[pattern]], [[perception]], and [[knowledge representation|representation]].
[10380040] |Many people speak about the [[Information Age]] as the advent of the Knowledge Age or [[knowledge society]], the [[information society]], the [[Information revolution]], and [[Information technology|information technologies]], and even though [[informatics]], [[information science]] and [[computer science]] are often in the spotlight, the word "information" is often used without careful consideration of the various meanings it has acquired.
[10380050] |== Etymology == 
[10380060] |According to the [[Oxford English Dictionary]], the earliest historical meaning of the word ''information'' in [[English language|English]] was the act of ''informing'', or giving form or shape to the mind, as in education, instruction, or training.
[10380070] |A quote from 1387: "Five books come down from heaven for information of mankind."
[10380080] |It was also used for an ''item'' of training, ''e.g.'' a particular instruction.
[10380090] |"Melibee had heard the great skills and reasons of Dame Prudence, and her wise information and techniques."
[10380100] |(1386)
[10380110] |The English word was apparently derived by adding the common "noun of action" ending "''-ation''" (descended through Francais from Latin "''-tio''") to the earlier verb ''to inform'', in the sense of to give form to the mind, to discipline, instruct, teach: "Men so wise should go and inform their kings."
[10380120] |(1330) ''Inform'' itself comes (via French) from the Latin verb ''informare'', to give form to, to form an idea of.
[10380125] |Furthermore, Latin itself already even contained the word ''informatio'' meaning concept or idea, but the extent to which this may have influenced the development of the word ''information'' in English is unclear.
[10380130] |As a final note, the ancient Greek word for ''form'' was [eidos], and this word was famously used in a technical philosophical sense by [Plato] (and later Aristotle) to denote the ideal identity or essence of something (see [Theory of forms]).
[10380140] |"Eidos" can also be associated with [thought], [proposition] or even [concept].
[10380150] |== Information as a message == 
[10380160] |'''Information''' is the state of a system of interest.
[10380170] |Message is the information materialized.
[10380180] |Information is a quality of a [[message]] from a [[sender]] to one or more receivers.
[10380190] |Information is always ''about'' something (size of a parameter, occurrence of an event, etc).
[10380200] |Viewed in this manner, information does not have to be accurate.
[10380210] |It may be a truth or a lie, or just the sound of a falling tree.
[10380220] |Even a disruptive noise used to inhibit the flow of communication and create misunderstanding would in this view be a form of information.
[10380230] |However, generally speaking, if the ''amount'' of information in the received message increases, the message is more accurate.
[10380240] |This model assumes there is a definite [[sender]] and at least one receiver.
[10380250] |Many refinements of the model assume the existence of a common language understood by the sender and at least one of the receivers.
[10380260] |An important variation identifies information as that which would be communicated by a message if it were sent from a sender to a receiver capable of understanding the message.
[10380270] |Notably, it is not required that the sender be capable of understanding the message, or even cognizant that there is a message.
[10380280] |Thus, information is something that can be extracted from an environment, e.g., through observation, reading or measurement.
[10380290] |Information is a term with many meanings depending on context, but is as a rule closely related to such concepts as meaning, knowledge, instruction, communication, representation, and mental stimulus.
[10380300] |Simply stated, information is a message received and understood.
[10380310] |In terms of data, it can be defined as a collection of facts from which conclusions may be drawn.
[10380320] |There are many other aspects of information since it is the knowledge acquired through study or experience or instruction.
[10380330] |But overall, information is the result of processing, manipulating and organizing data in a way that adds to the knowledge of the person receiving it.
[10380340] |[[Communication theory]] provides a numerical measure of the uncertainty of an outcome.
[10380350] |For example, we can say that "the signal contained thousands of bits of information".
[10380360] |Communication theory tends to use the concept of [[information entropy]], generally attributed to [[C.E. Shannon]] (see below).
[10380370] |Another form of information is [[Fisher information]], a concept of [[R.A. Fisher]].
[10380380] |This is used in application of statistics to [[estimation theory]] and to science in general.
[10380390] |Fisher information is thought of as the amount of information that a message carries about an unobservable parameter.
[10380400] |It can be computed from knowledge of the [[likelihood function]] defining the system.
[10380410] |For example, with a normal likelihood function, the Fisher information is the reciprocal of the variance of the law.
[10380420] |In the absence of knowledge of the likelihood law, the Fisher information may be computed from normally distributed score data as the reciprocal of their second moment.
[10380430] |Even though information and data are often used interchangeably, they are actually very different.
[10380440] |Data is a set of unrelated information, and as such is of no use until it is properly evaluated.
[10380450] |Upon evaluation, once there is some significant relation between data, and they show some relevance, then they are converted into information.
[10380460] |Now this same data can be used for different purposes.
[10380470] |Thus, till the data convey some information, they are not useful.
[10380480] |=== Measuring information entropy === 
[10380490] |The view of information as a message came into prominence with the publication in 1948 of an influential paper by [[Claude Shannon]], "[[A Mathematical Theory of Communication]]."
[10380500] |This paper provides the foundations of [[information theory]] and endows the word ''information'' not only with a technical meaning but also a measure.
[10380510] |If the sending device is equally likely to send any one of a set of <math>N</math> messages, then the preferred measure of "the information produced when one message is chosen from the set" is the base two [[logarithm]] of <math>N</math> (This measure is called ''[[self-information]]'').
[10380520] |In this paper, Shannon continues:
[10380530] |A complementary way of measuring information is provided by [[algorithmic information theory]].
[10380540] |In brief, this measures the information content of a list of symbols based on how predictable they are, or more specifically how easy it is to compute the list through a [[computer program|program]]: the information content of a sequence is the number of bits of the shortest program that computes it.
[10380550] |The sequence below would have a very low algorithmic information measurement since it is a very predictable pattern, and as the pattern continues the measurement would not change.
[10380560] |Shannon information would give the same information measurement for each symbol, since they are [[statistical randomness|statistically random]], and each new symbol would increase the measurement.
[10380570] |:123456789101112131415161718192021
[10380580] |It is important to recognize the limitations of traditional information theory and algorithmic information theory from the perspective of human meaning.
[10380590] |For example, when referring to the meaning content of a message Shannon noted “Frequently the messages have ''meaning…'' these semantic aspects of communication are irrelevant to the engineering problem.
[10380600] |The significant aspect is that the actual message is one selected ''from a set of possible messages''” (emphasis in original).
[10380610] |In information theory signals are part of a process, not a substance; they do something, they do not contain any specific meaning.
[10380620] |Combining algorithmic information theory and information theory we can conclude that the most random signal contains the most information as it can be interpreted in any way and cannot be compressed.
[10380630] |Michael Reddy noted that "'signals' of the [[mathematical theory]] are 'patterns that can be exchanged'.
[10380640] |There is no message contained in the signal, the signals convey the ability to select from a set of possible messages."
[10380650] |In information theory "the system must be designed to operate for each possible selection, not just the one which will actually be chosen since this is unknown at the time of design".
[10380660] |== Information as a pattern == 
[10380670] |Information is any represented [[pattern]].
[10380680] |This view assumes neither accuracy nor directly communicating parties, but instead assumes a separation between an object and its representation.
[10380690] |Consider the following example: [[economic statistics]] represent an [[Economics|economy]], however inaccurately.
[10380700] |What are commonly referred to as data in [[computing]], [[statistics]], and other fields, are forms of information in this sense.
[10380710] |The [[electromagnetism|electro-magnetic]] patterns in a [[computer network]] and connected [[peripheral device|device]]s are related to something other than the pattern itself, such as [[Character (computing)|text characters]] to be displayed and [[Computer keyboard|keyboard]] input.
[10380720] |[[Signal (information theory)|Signal]]s, [[Sign (linguistics)|sign]]s, and [[symbol]]s are also in this category.
[10380730] |On the other hand, according to [[semiotics]], data is symbols with certain syntax and information is data with a certain semantic.
[10380740] |[[Painting]] and [[drawing]] contain information to the extent that they represent something such as an assortment of objects on a table, a [[profile]], or a [[landscape]].
[10380750] |In other words, when a pattern of something is transposed to a pattern of something else, the latter is information.
[10380760] |This would be the case whether or not there was anyone to perceive it.
[10380770] |But if information can be defined merely as a pattern, does that mean that neither [[utility]] nor meaning are necessary components of information?
[10380780] |Arguably a distinction must be made between raw unprocessed data and information which possesses utility, [[value (economics)|value]] or some quantum of meaning.
[10380790] |On this view, information may indeed be characterized as a pattern; but this is a [[necessary]] condition, not a [[sufficient]] one.
[10380800] |An individual entry in a telephone book, which follows a specific pattern formed by name, address and telephone number, does not become "informative" in some sense unless and until it possesses some degree of utility, value or meaning.
[10380810] |For example, someone might look up a girlfriend's number, might order a take away etc.
[10380820] |The vast majority of numbers will never be construed as "information" in any meaningful sense.
[10380830] |The gap between data and information is only closed by a behavioral bridge whereby some value, utility or meaning is added to transform mere data or pattern into information.
[10380840] |When one constructs a representation of an object, one can selectively extract from the object ([[sampling (case studies)|sampling]]) or use a [[system]] of signs to replace ([[encode|encoding]]), or both.
[10380850] |The sampling and encoding result in representation.
[10380860] |An example of the former is a "sample" of a product; an example of the latter is "verbal description" of a product.
[10380870] |Both contain information of the product, however inaccurate.
[10380880] |When one interprets representation, one can predict a broader pattern from a limited number of observations (inference) or understand the relation between patterns of two different things ([[decode|decoding]]).
[10380890] |One example of the former is to sip a [[soup]] to know if it is spoiled; an example of the latter is examining footprints to determine the animal and its condition.
[10380900] |In both cases, information sources are not constructed or presented by some "sender" of information.
[10380910] |Regardless, information is dependent upon, but usually unrelated to and separate from, the medium or media used to express it.
[10380920] |In other words, the position of a theoretical series of bits, or even the output once interpreted by a [[computer]] or similar device, is unimportant, except when someone or something is present to interpret the information.
[10380930] |Therefore, a quantity of information is totally distinct from its medium.
[10380940] |== Information as sensory input == 
[10380950] |Often information is viewed as a type of [[input]] to an [[organism]] or designed device.
[10380960] |Inputs are of two kinds.
[10380970] |Some inputs are important to the function of the organism (for example, food) or device ([[energy]]) by themselves.
[10380980] |In his book ''Sensory Ecology,'' Dusenbery called these causal inputs.
[10380990] |Other inputs (information) are important only because they are associated with causal inputs and can be used to predict the occurrence of a causal input at a later time (and perhaps another place).
[10381000] |Some information is important because of association with other information but eventually there must be a connection to a causal input.
[10381010] |In practice, information is usually carried by weak stimuli that must be detected by specialized sensory systems and amplified by energy inputs before they can be functional to the organism or device.
[10381020] |For example, light is often a causal input to plants but provides information to animals.
[10381030] |The colored light reflected from a flower is too weak to do much photosynthetic work but the visual system of the bee detects it and the bee's nervous system uses the information to guide the bee to the flower, where the bee often finds nectar or pollen, which are causal inputs, serving a nutritional function.
[10381040] |Information is any type of sensory input.
[10381050] |When an organism with a [[nervous system]] receives an input, it transforms the input into an electrical signal.
[10381060] |This is regarded information by some.
[10381070] |The idea of representation is still relevant, but in a slightly different manner.
[10381080] |That is, while [[abstract painting]] does not represent anything concretely, when the viewer sees the painting, it is nevertheless transformed into electrical signals that create a representation of the painting.
[10381090] |Defined this way, information does not have to be related to truth, communication, or representation of an object.
[10381100] |[[Entertainment]] in general is not intended to be informative.
[10381110] |[[Music]], the [[performing arts]], [[amusement park]]s, works of [[fiction]] and so on are thus forms of information in this sense, but they are not necessarily forms of information according to some definitions given above.
[10381120] |Consider another example: food supplies both nutrition and taste for those who eat it.
[10381130] |If information is equated to sensory input, then nutrition is not information but taste is.
[10381140] |== Information as an influence which leads to a transformation == 
[10381150] |Information is any type of pattern that influences the formation or transformation of other patterns.
[10381160] |In this sense, there is no need for a conscious mind to perceive, much less appreciate, the pattern.
[10381170] |Consider, for example, [[DNA]].
[10381180] |The sequence of [[nucleotide]]s is a pattern that influences the formation and development of an organism without any need for a conscious mind.
[10381190] |[[Systems theory]] at times seems to refer to information in this sense, assuming information does not necessarily involve any conscious mind, and patterns circulating (due to [[feedback]]) in the system can be called information.
[10381200] |In other words, it can be said that information in this sense is something potentially perceived as representation, though not created or presented for that purpose.
[10381210] |When [[Marshall McLuhan]] speaks of [[media (communication)|media]] and their effects on human cultures, he refers to the structure of [[cultural artifact|artifacts]] that in turn shape our behaviors and mindsets.
[10381220] |Also, [[pheromone]]s are often said to be "information" in this sense.
[10381230] |(See also [[Gregory Bateson]].)
[10381240] |== Information as a property in physics == 
[10381250] |In 2003, J. D. Bekenstein claimed there is a growing trend in [[physics]] to define the physical world as being made of information itself (and thus information is defined in this way).
[10381260] |Information has a well defined meaning in physics.
[10381270] |Examples of this include the phenomenon of [[quantum entanglement]] where particles can interact without reference to their separation or the speed of light.
[10381280] |Information itself cannot travel faster than light even if the information is transmitted indirectly.
[10381290] |This could lead to the fact that all attempts at physically observing a particle with an "entangled" relationship to another are slowed down, even though the particles are not connected in any other way other than by the information they carry.
[10381300] |Another link is demonstrated by the [[Maxwell's demon]] thought experiment.
[10381310] |In this experiment, a direct relationship between information and another physical property, [[entropy]], is demonstrated.
[10381320] |A consequence is that it is impossible to destroy information without increasing the entropy of a system; in practical terms this often means generating heat.
[10381330] |Another, more philosophical, outcome is that information could be thought of as interchangeable with [[Energy#Transformations_of_energy|energy]].
[10381340] |Thus, in the study of [[logic gates]], the theoretical lower bound of thermal energy released by an ''AND gate'' is higher than for the ''NOT gate'' (because information is destroyed in an ''AND gate'' and simply converted in a ''NOT gate'').
[10381350] |Physical information is of particular importance in the theory of [[quantum computers]].
[10381360] |== Information as records == 
[10381370] |Records are a specialized form of information.
[10381380] |Essentially, records are information produced consciously or as by-products of business activities or transactions and retained because of their value.
[10381390] |Primarily their value is as evidence of the activities of the organization but they may also be retained for their informational value.
[10381400] |Sound [[records management]] ensures that the integrity of records is preserved for as long as they are required.
[10381410] |The international standard on records management, ISO 15489, defines records as "information created, received, and maintained as evidence and information by an organization or person, in pursuance of legal obligations or in the transaction of business".
[10381420] |The International Committee on Archives (ICA) Committee on electronic records defined a record as, "a specific piece of recorded information generated, collected or received in the initiation, conduct or completion of an activity and that comprises sufficient content, context and structure to provide proof or evidence of that activity".
[10381430] |Records may be retained because of their business value, as part of the [[corporate memory]] of the organization or to meet legal, fiscal or accountability requirements imposed on the organization.
[10381440] |Willis (2005) expressed the view that sound management of business records and information delivered "…six key requirements for good [[corporate governance]]…transparency; accountability; due process; compliance; meeting statutory and common law requirements; and security of personal and corporate information."
[10381450] |== Information and semiotics == 
[10381460] |Beynon-Davies explains the multi-faceted concept of information in terms of that of signs and sign-systems.
[10381470] |Signs themselves can be considered in terms of four inter-dependent levels, layers or branches of [[semiotics]]: pragmatics, semantics, syntactics and empirics.
[10381480] |These four layers serve to connect the social world on the one hand with the physical or technical world on the other.
[10381490] |[[Pragmatics]] is concerned with the purpose of communication.
[10381500] |Pragmatics links the issue of signs with that of intention.
[10381510] |The focus of pragmatics is on the intentions of human agents underlying communicative behaviour.
[10381520] |In other words, intentions link language to action.
[10381530] |[[Semantics]] is concerned with the meaning of a message conveyed in a communicative act.
[10381535] |Semantics considers the content of communication.
[10381540] |Semantics is the study of the meaning of signs - the association between signs and behaviour.
[10381550] |Semantics can be considered as the study of the link between symbols and their referents or concepts; particularly the way in which signs relate to human behaviour.
[10381560] |Syntactics is concerned with the formalism used to represent a message.
[10381570] |Syntactics as an area studies the form of communication in terms of the logic and grammar of sign systems.
[10381580] |Syntactics is devoted to the study of the form rather than the content of signs and sign-systems.
[10381590] |Empirics is the study of the signals used to carry a message; the physical characteristics of the medium of communication.
[10381600] |Empirics is devoted to the study of communication channels and their characteristics, e.g., sound, light, electronic transmission etc.
[10381610] |Communication normally exists within the context of some social situation.
[10381620] |The social situation sets the context for the intentions conveyed (pragmatics) and the form in which communication takes place.
[10381630] |In a communicative situation intentions are expressed through messages which comprise collections of inter-related signs taken from a language which is mutually understood by the agents involved in the communication.
[10381640] |Mutual understanding implies that agents involved understand the chosen language in terms of its agreed syntax (syntactics) and semantics.
[10381650] |The sender codes the message in the language and sends the message as signals along some communication channel (empirics).
[10381660] |The chosen communication channel will have inherent properties which determine outcomes such as the speed with which communication can take place and over what distance.
[10390010] |<article>Information extraction</article>
[10390020] |In [[natural language processing]], '''information extraction''' (IE) is a type of [[information retrieval]] whose goal is to automatically extract structured information, i.e. categorized and contextually and semantically well-defined data from a certain domain, from unstructured [[machine-readable]] documents.
[10390030] |An example of information extraction is the extraction of instances of corporate mergers, more formally <math>MergerBetween(company_1, company_2, date)</math>, from an online news sentence such as: "Yesterday, New-York based Foo Inc. announced their acquisition of Bar Corp."
[10390040] |A broad goal of IE is to allow computation to be done on the previously unstructured data.
[10390050] |A more specific goal is to allow logical reasoning to draw inferences based on the logical content of the input data.
[10390060] |The significance of IE is determined by the growing amount of information available in unstructured (i.e. without [[metadata]]) form, for instance on the Internet.
[10390070] |This knowledge can be made more accessible by means of transformation into [[relational database|relational form]], or by marking-up with [[XML]] tags.
[10390080] |An intelligent agent monitoring a news data feed requires IE to transform unstructured data into something that can be reasoned with.
[10390090] |A typical application of IE is to scan a set of documents written in a [[natural language]] and populate a database with the information extracted.
[10390100] |Current approaches to IE use [[natural language processing]] techniques that focus on very restricted domains.
[10390110] |For example, the ''[[Message Understanding Conference]]'' (MUC) is a competition-based conference that focused on the following domains in the past: 
[10390120] |*MUC-1 (1987), MUC-2 (1989): Naval operations messages.
[10390130] |*MUC-3 (1991), MUC-4 (1992): Terrorism in Latin American countries.
[10390140] |*MUC-5 (1993): Joint ventures and microelectronics domain.
[10390150] |*MUC-6 (1995): News articles on management changes.
[10390160] |*MUC-7 (1998): Satellite launch reports.
[10390170] |Natural Language texts may need to use some form of a [[Text simplification]] to create a more easily machine readable text to extract the sentences.
[10390180] |Typical subtasks of IE are: 
[10390190] |* [[Named Entity Recognition]]: recognition of entity names (for people and organizations), place names, temporal expressions, and certain types of numerical expressions.
[10390200] |* [[Coreference]]: identification chains of [[noun phrase]]s that refer to the same object.
[10390210] |For example, [[Anaphora (linguistics)|anaphora]] is a type of coreference.
[10390220] |* [[Terminology extraction]]: finding the relevant terms for a given [[text corpus|corpus]]
[10390230] |* Relation Extraction: identification of relations between entities, such as:
[10390240] |**PERSON works for ORGANIZATION (extracted from the sentence "Bill works for IBM.")
[10390250] |**PERSON located in LOCATION (extracted from the sentence "Bill is in France.")
[10400010] |<article>Information retrieval</article>
[10400020] |'''Information retrieval''' ('''IR''') is the science of searching for documents, for [[information]] within documents and for [[Metadata (computing)|metadata]] about documents, as well as that of searching [[relational database]]s and the [[World Wide Web]].
[10400030] |There is overlap in the usage of the terms data retrieval, [[document retrieval]], information retrieval, and [[text retrieval]], but each also has its own body of literature, theory, [[Praxis (process)|praxis]] and technologies.
[10400040] |IR is [[interdisciplinary]], based on [[computer science]], [[mathematics]], [[library science]], [[information science]], [[information architecture]], [[cognitive psychology]], [[linguistics]], [[statistics]] and [[physics]].
[10400050] |Automated information retrieval systems are used to reduce what has been called "[[information overload]]".
[10400060] |Many universities and [[public library|public libraries]] use IR systems to provide access to books, journals and other documents.
[10400070] |Web [[Web search engine|search engine]]s are the most visible [[Information retrieval applications|IR applications]].
[10400080] |== History == 
[10400090] |The idea of using computers to search for relevant pieces of information was popularized in an article ''[[As We May Think]]'' by [[Vannevar Bush]] in 1945.
[10400100] |First implementations of information retrieval systems were introduced in the 1950s and 1960s.
[10400110] |By 1990 several different techniques had been shown to perform well on small text corpora (several thousand documents).
[10400120] |In 1992 the US Department of Defense, along with the [[National Institute of Standards and Technology]] (NIST), cosponsored the [[Text Retrieval Conference]] (TREC) as part of the TIPSTER text program.
[10400130] |The aim of this was to look into the information retrieval community by supplying the infrastructure that was needed for evaluation of text retrieval methodologies on a very large text collection.
[10400140] |This catalyzed research on methods that [[scalability|scale]] to huge corpora.
[10400150] |The introduction of web [[Web search engine|search engine]]s has boosted the need for very large scale retrieval systems even further.
[10400160] |The use of digital methods for storing and retrieving information has led to the phenomenon of [[digital obsolescence]], where a digital resource ceases to be readable because the physical media, the reader required to read the media, the hardware, or the software that runs on it, is no longer available.
[10400170] |The information is initially easier to retrieve than if it were on paper, but is then effectively lost.
[10400180] |=== Timeline === 
[10400190] |* 1890: Hollerith tabulating machines were used to analyze the US census.
[10400200] |([[Herman Hollerith]]).
[10400210] |* 1945: [[Vannevar Bush]]'s ''[[As We May Think]]'' appeared in ''[[Atlantic Monthly]]'' 
[10400220] |* Late 1940s: The US military confronted problems of indexing and retrieval of wartime scientific research documents captured from Germans.
[10400230] |* 1947: [[Hans Peter Luhn]] (research engineer at IBM since 1941) began work on a mechanized, punch card based system for searching chemical compounds.
[10400240] |* 1950: The term "information retrieval" may have been coined by [[Calvin Mooers]].
[10400250] |* 1950s: Growing concern in the US for a "science gap" with the USSR motivated, encouraged funding, and provided a backdrop for mechanized literature searching systems ([[Allen Kent]] et al) and the invention of citation indexing ([[Eugene Garfield]]).
[10400260] |* 1955: Allen Kent joined [[Case Western Reserve University]], and eventually becomes associate director of the Center for Documentation and Communications Research.
[10400270] |That same year, Kent and colleagues publish a paper in American Documentation describing the precision and recall measures, as well as detailing a proposed "framework" for evaluating an IR system, which includes statistical sampling methods for determining the number of relevant documents not retrieved.
[10400280] |* 1958: International Conference on Scientific Information Washington DC included consideration of IR systems as a solution to problems identified.
[10400290] |See: Proceedings of the International Conference on Scientific Information, 1958 (National Academy of Sciences, Washington, DC, 1959)
[10400300] |* 1959: Hans Peter Luhn published "Auto-encoding of documents for information retrieval."
[10400310] |* 1960: Melvin Earl (Bill) Maron and J. L. Kuhns published "On relevance, probabilistic indexing, and information retrieval" in Journal of the ACM 7(3):216-244, July 1960.
[10400320] |* Early 1960s: [[Gerard Salton]] began work on IR at Harvard, later moved to Cornell.
[10400330] |* 1962: [[Cyril W. Cleverdon]] published early findings of the Cranfield studies, developing a model for IR system evaluation.
[10400340] |See: Cyril W. Cleverdon, "Report on the Testing and Analysis of an Investigation into the Comparative Efficiency of Indexing Systems".
[10400350] |Cranfield Coll. of Aeronautics, Cranfield, England, 1962.
[10400360] |* 1962: Kent published Information Analysis and Retrieval
[10400370] |* 1963: Weinberg report "Science, Government and Information" gave a full articulation of the idea of a "crisis of scientific information."
[10400380] |The report was named after Dr. [[Alvin Weinberg]].
[10400390] |* 1963: [[Joseph Becker]] and [[Robert M. Hayes]] published text on information retrieval.
[10400400] |Becker, Joseph; Hayes, Robert Mayo.
[10400410] |Information storage and retrieval: tools, elements, theories.
[10400420] |New York, Wiley (1963).
[10400430] |* 1964: [[Karen Sp&auml;rck Jones]] finished her thesis at Cambridge, ''Synonymy and Semantic Classification'', and continued work on [[computational linguistics]] as it applies to IR 
[10400440] |* 1964: The [[National Bureau of Standards]] sponsored a symposium titled "Statistical Association Methods for Mechanized Documentation."
[10400450] |Several highly significant papers, including G. Salton's first published reference (we believe) to the SMART system.
[10400460] |* Mid-1960s: National Library of Medicine developed [[MEDLARS]] Medical Literature Analysis and Retrieval System, the first major machine-readable database and batch retrieval system 
[10400470] |* Mid-1960s: Project Intrex at MIT 
[10400480] |* 1965: [[J. C. R. Licklider]] published ''Libraries of the Future'' 
[10400490] |* 1966: [[Don Swanson]] was involved in studies at University of Chicago on Requirements for Future Catalogs 
[10400500] |* 1968: Gerard Salton published ''Automatic Information Organization and Retrieval''.
[10400510] |* 1968: [[J. W. Sammon]]'s RADC Tech report "Some Mathematics of Information Storage and Retrieval..." outlined the vector model.
[10400520] |* 1969: Sammon's "A nonlinear mapping for data structure analysis" (IEEE Transactions on Computers) was the first proposal for visualization interface to an IR system.
[10400530] |* Late 1960s: [[F. W. Lancaster]] completed evaluation studies of the MEDLARS system and published the first edition of his text on information retrieval 
[10400540] |* Early 1970s: first online systems--NLM's AIM-TWX, MEDLINE; Lockheed's Dialog; SDC's ORBIT 
[10400550] |* Early 1970s: [[Theodor Nelson]] promoting concept of [[hypertext]], published Computer Lib/Dream Machines 
[10400560] |* 1971: [[N. Jardine]] and [[C. J. Van Rijsbergen]] published "The use of hierarchic clustering in information retrieval", which articulated the "cluster hypothesis."
[10400570] |(Information Storage and Retrieval, 7(5), pp. 217-240, Dec 1971)
[10400580] |*1975: Three highly influential publications by Salton fully articulated his vector processing framework and term discrimination model: 
[10400590] |** A Theory of Indexing (Society for Industrial and Applied Mathematics) 
[10400600] |** "A theory of term importance in automatic text analysis", (JASIS v. 26) 
[10400610] |** "A vector space model for automatic indexing", (CACM 18:11) 
[10400620] |* 1978: The First [[Association for Computing Machinery|ACM]] [[SIGIR]] conference.
[10400630] |* 1979: C. J. Van Rijsbergen published ''Information Retrieval'' (Butterworths).
[10400640] |Heavy emphasis on probabilistic models.
[10400650] |* 1980: First international ACM SIGIR conference, joint with British Computer Society IR group in Cambridge 
[10400660] |* 1982: [[Nicholas J. Belkin|Belkin]], Oddy, and Brooks proposed the ASK (Anomalous State of Knowledge) viewpoint for information retrieval.
[10400670] |This was an important concept, though their automated analysis tool proved ultimately disappointing.
[10400680] |* 1983: Salton (and M. McGill) published Introduction to Modern Information Retrieval (McGraw-Hill), with heavy emphasis on vector models.
[10400690] |* Mid-1980s: Efforts to develop end user versions of commercial IR systems.
[10400700] |* 1985-1993: Key papers on and experimental systems for visualization interfaces.
[10400710] |* Work by [[D. B. Crouch]], [[Robert R. Korfhage]], [[M. Chalmers]], [[A. Spoerri]] and others.
[10400720] |* 1989: First [[World Wide Web]] proposals by [[Tim Berners-Lee]] at [[CERN]].
[10400730] |* 1992: First TREC conference.
[10400740] |* 1997: Publication of [[Robert R. Korfhage|Korfhage]]'s ''Information Storage and Retrieval'' with emphasis on visualization and multi-reference point systems.
[10400750] |* Late 1990s: Web [[Web search engine|search engine]] implementation of many features formerly found only in experimental IR systems
[10400760] |== Overview == 
[10400770] |An information retrieval process begins when a user enters a query into the system.
[10400780] |Queries are formal statements of [[information need]]s, for example search strings in web search engines.
[10400790] |In information retrieval a query does not uniquely identify a single object in the collection.
[10400800] |Instead, several objects may match the query, perhaps with different degrees of [[relevance|relevancy]].
[10400810] |An object is an entity which keeps or stores information in a database.
[10400820] |User queries are matched to objects stored in the database.
[10400830] |Depending on the [[Information retrieval applications|application]] the data objects may be, for example, text documents, images or videos.
[10400840] |Often the documents themselves are not kept or stored directly in the IR system, but are instead represented in the system by document surrogates.
[10400850] |Most IR systems compute a numeric score on how well each object in the database match the query, and rank the objects according to this value.
[10400860] |The top ranking objects are then shown to the user.
[10400870] |The process may then be iterated if the user wishes to refine the query.
[10400880] |== Performance measures == 
[10400890] |Many different measures for evaluating the performance of information retrieval systems have been proposed.
[10400900] |The measures require a collection of documents and a query.
[10400910] |All common measures described here assume a ground truth notion of relevancy: every document is known to be either relevant or non-relevant to a particular query.
[10400920] |In practice queries may be [[ill-posed]] and there may be different shades of relevancy.
[10400930] |=== Precision === 
[10400940] |Precision is the fraction of the documents retrieved that are [[Relevance (information retrieval)|relevant]] to the user's information need.
[10400950] |:<math> \mbox{precision}=\frac{|\{\mbox{relevant documents}\}\cap\{\mbox{retrieved documents}\}|}{|\{\mbox{retrieved documents}\}|} </math>
[10400960] |In [[binary classification]], precision is analogous to [[positive predictive value]].
[10400970] |Precision takes all retrieved documents into account.
[10400980] |It can also be evaluated at a given cut-off rank, considering only the topmost results returned by the system.
[10400990] |This measure is called ''precision at n'' or ''P@n''.
[10401000] |Note that the meaning and usage of "precision" in the field of Information Retrieval differs from the definition of [[accuracy and precision]] within other branches of science and technology.
[10401010] |=== Recall === 
[10401020] |Recall is the fraction of the documents that are relevant to the query that are successfully retrieved.
[10401030] |:<math>\mbox{recall}=\frac{|\{\mbox{relevant documents}\}\cap\{\mbox{retrieved documents}\}|}{|\{\mbox{relevant documents}\}|} </math>
[10401040] |In binary classification, recall is called [[sensitivity (tests)|sensitivity]].
[10401050] |So it can be looked at as ''the probability that a relevant document is retrieved by the query''.
[10401060] |It is trivial to achieve recall of 100% by returning all documents in response to any query.
[10401070] |Therefore recall alone is not enough but one needs to measure the number of non-relevant documents also, for example by computing the precision.
[10401080] |=== Fall-Out === 
[10401090] |The proportion of non-relevant documents that are retrieved, out of all non-relevant documents available:
[10401100] |:<math> \mbox{fall-out}=\frac{|\{\mbox{non-relevant documents}\}\cap\{\mbox{retrieved documents}\}|}{|\{\mbox{non-relevant documents}\}|} </math>
[10401110] |In binary classification, fall-out is closely related to [[specificity (tests)|specificity]].
[10401120] |More precisely: <math>\mbox{fall-out}=1-\mbox{specificity}</math>.
[10401130] |It can be looked at as ''the probability that a non-relevant document is retrieved by the query''.
[10401140] |It is trivial to achieve fall-out of 0% by returning zero documents in response to any query.
[10401150] |=== F-measure === 
[10401160] |The weighted [[harmonic mean]] of precision and recall, the traditional F-measure or balanced F-score is:
[10401170] |:<math>F = 2 \cdot (\mathrm{precision} \cdot \mathrm{recall}) / (\mathrm{precision} + \mathrm{recall}).\,</math>
[10401180] |This is also known as the <math>F_1</math> measure, because recall and precision are evenly weighted.
[10401190] |The general formula for non-negative real ß is: 
[10401200] |:<math>F_\beta = (1 + \beta^2) \cdot (\mathrm{precision} \cdot \mathrm{recall}) / (\beta^2 \cdot \mathrm{precision} + \mathrm{recall}).\,</math>
[10401210] |Two other commonly used F measures are the <math>F_{2}</math> measure, which weights recall twice as much as precision, and the <math>F_{0.5}</math> measure, which weights precision twice as much as recall.
[10401220] |The F-measure was derived by van Rijsbergen (1979) so that <math>F_\beta</math> "measures the effectiveness of retrieval with respect to a user who attaches ß times as much importance to recall as precision".
[10401230] |It is based on van Rijsbergen's effectiveness measure <math>E = 1-(1/(\alpha/P + (1-\alpha)/R))</math>.
[10401240] |Their relationship is <math>F_\beta = 1 - E</math> where <math>\alpha=1/(\beta^2+1)</math>.
[10401250] |=== Average precision of precision and recall=== 
[10401260] |The precision and recall are based on the whole list of documents returned by the system.
[10401270] |Average precision emphasizes returning more relevant documents earlier.
[10401280] |It is average of precisions computed after truncating the list after each of the relevant documents in turn:
[10401290] |:<math> \operatorname{AveP} = \frac{\sum_{r=1}^N (P(r) \times \mathrm{rel}(r))}{\mbox{number of relevant documents}} \!</math> 
[10401300] |where ''r'' is the rank, ''N'' the number retrieved, ''rel()'' a binary function on the relevance of a given rank, and ''P()'' precision at a given cut-off rank.
[10401310] |== Model types == 
[10401320] |[[Image:Information-Retrieval-Models.png|thumb|500px|categorization of IR-models (translated from [http://de.wikipedia.org/wiki/Informationsrückgewinnung#Klassifikation_von_Modellen_zur_Repr.C3.A4sentation_nat.C3.BCrlichsprachlicher_Dokumente German entry], original source [http://www.logos-verlag.de/cgi-bin/engbuchmid?isbn=0514&lng=eng&id= Dominik Kuropka])]]
[10401325] |For the information retrieval to be efficient, the documents are typically transformed into a suitable representation.
[10401330] |There are several representations.
[10401340] |The picture on the right illustrates the relationship of some common models.
[10401350] |In the picture, the models are categorized according to two dimensions: the mathematical basis and the properties of the model.
[10401360] |=== First dimension: mathematical basis === 
[10401370] |* ''Set-theoretic models'' represent documents as sets of words or phrases.
[10401380] |Similarities are usually derived from set-theoretic operations on those sets.
[10401390] |Common models are:
[10401400] |** [[Standard Boolean model]]
[10401410] |** [[Extended Boolean model]]
[10401420] |** [[Fuzzy retrieval]]
[10401430] |* ''Algebraic models'' represent documents and queries usually as vectors, matrices or tuples.
[10401440] |The similarity of the query vector and document vector is represented as a scalar value.
[10401450] |** [[Vector space model]]
[10401460] |** [[Generalized vector space model]]
[10401470] |** Topic-based vector space model (literature: [http://www.kuropka.net/files/TVSM.pdf], [http://www.logos-verlag.de/cgi-bin/engbuchmid?isbn=0514&lng=eng&id=]) 
[10401480] |** [[Extended Boolean model]]
[10401490] |** Enhanced topic-based vector space model (literature: [http://kuropka.net/files/HPI_Evaluation_of_eTVSM.pdf], [http://www.logos-verlag.de/cgi-bin/engbuchmid?isbn=0514&lng=eng&id=])
[10401500] |** Latent semantic indexing aka [[latent semantic analysis]]
[10401510] |* ''Probabilistic models'' treat the process of document retrieval as a probabilistic inference.
[10401520] |Similarities are computed as probabilities that a document is relevant for a given query.
[10401530] |Probabilistic theorems like the [[Bayes' theorem]] are often used in these models.
[10401540] |** [[Binary independence retrieval]]
[10401550] |** [[Probabilistic relevance model (BM25)]]
[10401560] |** Uncertain inference
[10401570] |** [[Language model]]s
[10401580] |** [[Divergence-from-randomness model]]
[10401590] |** [[Latent Dirichlet allocation]]
[10401600] |=== Second dimension: properties of the model === 
[10401610] |* ''Models without term-interdependencies'' treat different terms/words as independent.
[10401620] |This fact is usually represented in vector space models by the [[orthogonality]] assumption of term vectors or in probabilistic models by an [[independency]] assumption for term variables.
[10401630] |* ''Models with immanent term interdependencies'' allow a representation of interdependencies between terms.
[10401640] |However the degree of the interdependency between two terms is defined by the model itself.
[10401650] |It is usually directly or indirectly derived (e.g. by [[dimension reduction|dimensional reduction]]) from the [[co-occurrence]] of those terms in the whole set of documents.
[10401660] |* ''Models with transcendent term interdependencies'' allow a representation of interdependencies between terms, but they do not allege how the interdependency between two terms is defined.
[10401670] |They relay an external source for the degree of interdependency between two terms.
[10401680] |(For example a human or sophisticated algorithms.)
[10401690] |== Major figures == 
[10401700] |* [[Gerard Salton]]
[10401710] |* [[Hans Peter Luhn]]
[10401720] |* [http://ciir.cs.umass.edu/personnel/croft.html W. Bruce Croft]
[10401730] |* [[Karen Spärck Jones]]
[10401740] |* [[C. J. van Rijsbergen]]
[10401750] |* [http://www.soi.city.ac.uk/~ser/homepage.html Stephen E. Robertson]
[10401760] |== Awards in the field == 
[10401770] |* [[Tony Kent Strix award]]
[10401780] |* [[Gerard Salton Award]]
[10410010] |<article>Information theory</article>
[10410020] |'''Information theory''' is a branch of [[applied mathematics]] and [[electrical engineering]] involving the quantification of [[information]].
[10410030] |Historically, information theory was developed to find fundamental limits on compressing and reliably [[communication|communicating]] data.
[10410040] |Since its inception it has broadened to find applications in many other areas, including [[statistical inference]], [[natural language processing]], [[cryptography]] generally, [[networks]] other than communication networks -- as in [[neurobiology]], the evolution and function of molecular codes, model selection in ecology, thermal physics, [[quantum computing]], plagiarism detection and other forms of [[data analysis]].
[10410050] |A key measure of information in the theory is known as [[information entropy]], which is usually expressed by the average number of bits needed for storage or communication.
[10410060] |Intuitively, entropy quantifies the uncertainty involved when encountering a [[random variable]].
[10410070] |For example, a fair coin flip (2 equally likely outcomes) will have less entropy than a roll of a die (6 equally likely outcomes).
[10410080] |Applications of fundamental topics of information theory include [[lossless data compression]] (e.g. [[ZIP (file format)|ZIP files]]), [[lossy data compression]] (e.g. [[MP3]]s), and [[channel capacity|channel coding]] (e.g. for [[DSL]] lines).
[10410110] |The field is at the intersection of [[mathematics]], [[statistics]], [[computer science]], [[physics]], [[neurobiology]], and [[electrical engineering]].
[10410120] |Its impact has been crucial to the success of the [[Voyager program|Voyager]] missions to deep space, the invention of the CD, the feasibility of mobile phones, the development of the [[Internet]], the study of [[linguistics]] and of human perception, the understanding of [[black hole]]s, and numerous other fields.
[10410130] |Important sub-fields of information theory are source coding, channel coding, algorithmic complexity theory, algorithmic information theory, and measures of information.
[10410140] |==Overview== 
[10410150] |The main concepts of information theory can be grasped by considering the most widespread means of human communication: language.
[10410160] |Two important aspects of a good language are as follows: First, the most common words (e.g., "a", "the", "I") should be shorter than less common words (e.g., "benefit", "generation", "mediocre"), so that sentences will not be too long.
[10410170] |Such a tradeoff in word length is analogous to [[data compression]] and is the essential aspect of [[source coding]].
[10410180] |Second, if part of a sentence is unheard or misheard due to noise -— e.g., a passing car -— the listener should still be able to glean the meaning of the underlying message.
[10410190] |Such robustness is as essential for an electronic communication system as it is for a language; properly building such robustness into communications is done by [[Channel capacity|channel coding]].
[10410200] |Source coding and channel coding are the fundamental concerns of information theory.
[10410210] |Note that these concerns have nothing to do with the ''importance'' of messages.
[10410220] |For example, a platitude such as "Thank you; come again" takes about as long to say or write as the urgent plea, "Call an ambulance!" while clearly the latter is more important and more meaningful.
[10410230] |Information theory, however, does not consider message importance or meaning, as these are matters of the quality of data rather than the quantity and readability of data, the latter of which is determined solely by probabilities.
[10410240] |Information theory is generally considered to have been founded in 1948 by [[Claude Elwood Shannon|Claude Shannon]] in his seminal work, "[[A Mathematical Theory of Communication]]."
[10410250] |The central paradigm of classical information theory is the engineering problem of the transmission of information over a noisy channel.
[10410260] |The most fundamental results of this theory are Shannon's [[source coding theorem]], which establishes that, on average, the number of ''bits'' needed to represent the result of an uncertain event is given by its [[information entropy|entropy]]; and Shannon's [[noisy-channel coding theorem]], which states that ''reliable'' communication is possible over ''noisy'' channels provided that the rate of communication is below a certain threshold called the channel capacity.
[10410270] |The channel capacity can be approached in practice by using appropriate encoding and decoding systems.
[10410280] |Information theory is closely associated with a collection of pure and applied disciplines that have been investigated and reduced to engineering practice under a variety of rubrics throughout the world over the past half century or more: [[adaptive system]]s, [[anticipatory system]]s, [[artificial intelligence]], [[complex system]]s, [[complexity science]], [[cybernetics]], [[informatics]], [[machine learning]], along with [[systems science]]s of many descriptions.
[10410290] |Information theory is a broad and deep mathematical theory, with equally broad and deep applications, amongst which is the vital field of [[coding theory]].
[10410300] |Coding theory is concerned with finding explicit methods, called ''codes'', of increasing the efficiency and reducing the net error rate of data communication over a noisy channel to near the limit that Shannon proved is the maximum possible for that channel.
[10410310] |These codes can be roughly subdivided into [[data compression]] (source coding) and [[error-correction]] (channel coding) techniques.
[10410320] |In the latter case, it took many years to find the methods Shannon's work proved were possible.
[10410330] |A third class of information theory codes are cryptographic algorithms (both [[code (cryptography)|code]]s and [[cipher]]s).
[10410340] |Concepts, methods and results from coding theory and information theory are widely used in [[cryptography]] and [[cryptanalysis]].
[10410350] |''See the article [[ban (information)]] for a historical application.''
[10410360] |Information theory is also used in [[information retrieval]], [[intelligence (information gathering)|intelligence gathering]], [[gambling]], [[statistics]], and even in [[musical composition]].
[10410370] |==Historical background== 
[10410380] |The landmark event that established the discipline of information theory, and brought it to immediate worldwide attention, was the publication of [[Claude E. Shannon]]'s classic paper "[[A Mathematical Theory of Communication]]" in the ''[[Bell System Technical Journal]]'' in July and October of 1948.
[10410390] |Prior to this paper, limited information theoretic ideas had been developed at Bell Labs, all implicitly assuming events of equal probability.
[10410400] |[[Harry Nyquist]]'s 1924 paper, ''Certain Factors Affecting Telegraph Speed,'' contains a theoretical section quantifying "intelligence" and the "line speed" at which it can be transmitted by a communication system, giving the relation <math>W = K \log m</math>, where ''W'' is the speed of transmission of intelligence, ''m'' is the number of different voltage levels to choose from at each time step, and ''K'' is a constant.
[10410410] |[[Ralph Hartley]]'s 1928 paper, ''Transmission of Information,'' uses the word ''information'' as a measurable quantity, reflecting the receiver's ability to distinguish that one sequence of symbols from any other, thus quantifying information as <math>H = \log S^n = n \log S</math>, where ''S'' was the number of possible symbols, and ''n'' the number of symbols in a transmission.
[10410420] |The natural unit of information was therefore the decimal digit, much later renamed the [[ban (information)|hartley]] in his honour as a unit or scale or measure of information.
[10410430] |[[Alan Turing]] in 1940 used similar ideas as part of the statistical analysis of the breaking of the German second world war [[Cryptanalysis of the Enigma|Enigma]] ciphers.
[10410440] |Much of the mathematics behind information theory with events of different probabilities was developed for the field of [[thermodynamics]] by [[Ludwig Boltzmann]] and [[J. Willard Gibbs]].
[10410450] |Connections between information-theoretic entropy and thermodynamic entropy, including the important contributions by [[Rolf Landauer]] in the 1960s, are explored in ''[[Entropy in thermodynamics and information theory]]''.
[10410460] |In Shannon's revolutionary and groundbreaking paper, the work for which had been substantially completed at Bell Labs by the end of 1944, Shannon for the first time introduced the qualitative and quantitative model of communication as a statistical process underlying information theory, opening with the assertion that 
[10410470] |:"The fundamental problem of communication is that of reproducing at one point, either exactly or approximately, a message selected at another point."
[10410480] |With it came the ideas of 
[10410490] |* the [[information entropy]] and [[redundancy (information theory)|redundancy]] of a source, and its relevance through the [[source coding theorem]];
[10410500] |* the [[mutual information]], and the [[channel capacity]] of a noisy channel, including the promise of perfect loss-free communication given by the [[noisy-channel coding theorem]];
[10410510] |* the practical result of the [[Shannon–Hartley law]] for the channel capacity of a Gaussian channel; and of course
[10410520] |* the [[bit]]—a new way of seeing the most fundamental unit of information
[10410530] |==Ways of measuring information== 
[10410540] |Information theory is based on [[probability theory]] and [[statistics]].
[10410550] |The most important quantities of information are [[Information entropy|entropy]], the information in a [[random variable]], and [[mutual information]], the amount of information in common between two random variables.
[10410560] |The former quantity indicates how easily message data can be [[data compression|compressed]] while the latter can be used to find the communication rate across a [[Channel (communications)|channel]].
[10410570] |The choice of logarithmic base in the following formulae determines the [[units of measurement|unit]] of [[information entropy]] that is used.
[10410580] |The most common unit of information is the [[bit]], based on the [[binary logarithm]].
[10410590] |Other units include the [[nat (information)|nat]], which is based on the [[natural logarithm]], and the [[deciban|hartley]], which is based on the [[common logarithm]].
[10410600] |In what follows, an expression of the form <math>p \log p \,</math> is considered by convention to be equal to zero whenever <math>p=0.</math>
[10410605] |This is justified because <math>\lim_{p \rightarrow 0+} p \log p = 0</math> for any logarithmic base.
[10410610] |===Entropy=== 
[10410620] |The '''[[information entropy|entropy]]''', <math>H</math>, of a discrete random variable <math>X</math> is a measure of the amount of ''uncertainty'' associated with the value of <math>X</math>.
[10410630] |Suppose one transmits 1000 bits (0s and 1s).
[10410640] |If these bits are known ahead of transmission (to be a certain value with absolute probability), logic dictates that no information has been transmitted.
[10410650] |If, however, each is equally and independently likely to be 0 or 1, 1000 bits (in the information theoretic sense) have been transmitted.
[10410660] |Between these two extremes, information can be quantified as follows.
[10410670] |If <math>\mathbb{X}\,</math> is the set of all messages <math>x</math> that <math>X</math> could be, and <math>p(x)</math> is the probability of <math>X</math> given <math>x</math>, then the entropy of <math>X</math> is defined:
[10410680] |:<math> H(X) = \mathbb{E}_{X} [I(x)] = -\sum_{x \in \mathbb{X}} p(x) \log p(x).</math>
[10410690] |(Here, <math>I(x)</math> is the [[self-information]], which is the entropy contribution of an individual message.)
[10410700] |An important property of entropy is that it is maximized when all the messages in the message space are equiprobable—i.e., most unpredictable—in which case <math>H(X) = \log |\mathbb{X}|.</math>
[10410710] |The special case of information entropy for a random variable with two outcomes is the '''[[binary entropy function]]''':
[10410720] |:<math>H_\mbox{b}(p) = - p \log p - (1-p)\log (1-p).\,</math>
[10410730] |===Joint entropy=== 
[10410740] |The '''[[joint entropy]]''' of two discrete random variables <math>X</math> and <math>Y</math> is merely the entropy of their pairing: <math>(X, Y)</math>.
[10410750] |This implies that if <math>X</math> and <math>Y</math> are [[statistical independence|independent]], then their joint entropy is the sum of their individual entropies.
[10410760] |For example, if <math>(X,Y)</math> represents the position of a [[chess]] piece &mdash; <math>X</math> the row and <math>Y</math> the column, then the joint entropy of the row of the piece and the column of the piece will be the entropy of the position of the piece.
[10410770] |:<math>H(X, Y) = \mathbb{E}_{X,Y} [-\log p(x,y)] = - \sum_{x, y} p(x, y) \log p(x, y) \,</math>
[10410780] |Despite similar notation, joint entropy should not be confused with '''[[cross entropy]]'''.
[10410790] |===Conditional entropy (equivocation)=== 
[10410800] |The '''[[conditional entropy]]''' or '''conditional uncertainty''' of <math>X</math> given random variable <math>Y</math> (also called the '''equivocation''' of <math>X</math> about <math>Y</math>) is the average conditional entropy over <math>Y</math>:
[10410810] |:<math> H(X|Y) = \mathbb E_Y [H(X|y)] = -\sum_{y \in Y} p(y) \sum_{x \in X} p(x|y) \log p(x|y) = -\sum_{x,y} p(x,y) \log \frac{p(x,y)}{p(y)}.</math>
[10410820] |Because entropy can be conditioned on a random variable or on that random variable being a certain value, care should be taken not to confuse these two definitions of conditional entropy, the former of which is in more common use.
[10410830] |A basic property of this form of conditional entropy is that:
[10410840] |: <math> H(X|Y) = H(X,Y) - H(Y) .\,</math>
[10410850] |===Mutual information (transinformation)=== 
[10410860] |'''[[Mutual information]]''' measures the amount of information that can be obtained about one random variable by observing another.
[10410870] |It is important in communication where it can be used to maximize the amount of information shared between sent and received signals.
[10410880] |The mutual information of <math>X</math> relative to <math>Y</math> is given by:
[10410890] |:<math>I(X;Y) = \mathbb{E}_{X,Y} [SI(x,y)] = \sum_{x,y} p(x,y) \log \frac{p(x,y)}{p(x)\, p(y)}</math>
[10410900] |where <math>SI</math> (''S''pecific mutual ''I''nformation) is the [[pointwise mutual information]].
[10410910] |A basic property of the mutual information is that 
[10410920] |: <math>I(X;Y) = H(X) - H(X|Y).\,</math>
[10410930] |That is, knowing ''Y'', we can save an average of <math>I(X; Y)</math> bits in encoding ''X'' compared to not knowing ''Y''.
[10410940] |Mutual information is [[symmetric function|symmetric]]: 
[10410950] |: <math>I(X;Y) = I(Y;X) = H(X) + H(Y) - H(X,Y).\,</math>
[10410960] |Mutual information can be expressed as the average [[Kullback–Leibler divergence]] (information gain) of the [[posterior probability|posterior probability distribution]] of ''X'' given the value of ''Y'' to the [[prior probability|prior distribution]] on ''X'': 
[10410970] |: <math>I(X;Y) = \mathbb E_{p(y)} [D_{\mathrm{KL}}( p(X|Y=y) \| p(X) )].</math>
[10410980] |In other words, this is a measure of how much, on the average, the probability distribution on ''X'' will change if we are given the value of ''Y''.
[10410990] |This is often recalculated as the divergence from the product of the marginal distributions to the actual joint distribution: 
[10411000] |: <math>I(X; Y) = D_{\mathrm{KL}}(p(X,Y) \| p(X)p(Y)).</math>
[10411010] |Mutual information is closely related to the [[likelihood-ratio test|log-likelihood ratio test]] in the context of contingency tables and the [[multinomial distribution]] and to [[Pearson's chi-square test|Pearson's χ<sup>2</sup> test]]: mutual information can be considered a statistic for assessing independence between a pair of variables, and has a well-specified asymptotic distribution.
[10411020] |===Kullback–Leibler divergence (information gain)=== 
[10411030] |The '''[[Kullback–Leibler divergence]]''' (or '''information divergence''', '''information gain''', or '''relative entropy''') is a way of comparing two distributions: a "true" [[probability distribution]] ''p(X)'', and an arbitrary probability distribution ''q(X)''.
[10411040] |If we compress data in a manner that assumes ''q(X)'' is the distribution underlying some data, when, in reality, ''p(X)'' is the correct distribution, the Kullback–Leibler divergence is the number of average additional bits per datum necessary for compression.
[10411050] |It is thus defined
[10411060] |:<math>D_{\mathrm{KL}}(p(X) \| q(X)) = \sum_{x \in X} -p(x) \log {q(x)} \, - \, \left( -p(x) \log {p(x)}\right) = \sum_{x \in X} p(x) \log \frac{p(x)}{q(x)}.</math>
[10411070] |Although it is sometimes used as a 'distance metric', it is not a true [[Metric (mathematics)|metric]] since it is not symmetric and does not satisfy the [[triangle inequality]] (making it a semi-quasimetric).
[10411080] |===Other quantities=== 
[10411090] |Other important information theoretic quantities include [[Rényi entropy]] (a generalization of entropy) and [[differential entropy]] (a generalization of quantities of information to continuous distributions.)
[10411100] |==Coding theory== 
[10411110] |[[Coding theory]] is one of the most important and direct applications of information theory.
[10411120] |It can be subdivided into [[data compression|source coding]] theory and [[error correction|channel coding]] theory.
[10411130] |Using a statistical description for data, information theory quantifies the number of bits needed to describe the data, which is the information entropy of the source.
[10411140] |* Data compression (source coding): There are two formulations for the compression problem:
[10411150] |#[[lossless data compression]]: the data must be reconstructed exactly;
[10411160] |#[[lossy data compression]]: allocates bits needed to reconstruct the data, within a specified fidelity level measured by a distortion function.
[10411170] |This subset of Information theory is called [[rate–distortion theory]].
[10411180] |* Error-correcting codes (channel coding): While data compression removes as much [[redundancy (information theory)|redundancy]] as possible, an error correcting code adds just the right kind of redundancy (i.e. [[error correction]]) needed to transmit the data efficiently and faithfully across a noisy channel.
[10411190] |This division of coding theory into compression and transmission is justified by the information transmission theorems, or source–channel separation theorems that justify the use of bits as the universal currency for information in many contexts.
[10411200] |However, these theorems only hold in the situation where one transmitting user wishes to communicate to one receiving user.
[10411210] |In scenarios with more than one transmitter (the multiple-access channel), more than one receiver (the [[broadcast channel]]) or intermediary "helpers" (the [[relay channel]]), or more general [[computer network|networks]], compression followed by transmission may no longer be optimal.
[10411220] |[[Network information theory]] refers to these multi-agent communication models.
[10411230] |===Source theory=== 
[10411240] |Any process that generates successive messages can be considered a '''[[Communication source|source]]''' of information.
[10411250] |A memoryless source is one in which each message is an [[Independent identically-distributed random variables|independent identically-distributed random variable]], whereas the properties of [[ergodic theory|ergodicity]] and [[stationary process|stationarity]] impose more general constraints.
[10411260] |All such sources are [[stochastic process|stochastic]].
[10411270] |These terms are well studied in their own right outside information theory.
[10411280] |====Rate==== 
[10411290] |Information [[Entropy rate|'''rate''']] is the average entropy per symbol.
[10411300] |For memoryless sources, this is merely the entropy of each symbol, while, in the case of a stationary stochastic process, it is
[10411310] |:<math>r = \lim_{n \to \infty} H(X_n|X_{n-1},X_{n-2},X_{n-3}, \ldots);</math>
[10411320] |that is, the conditional entropy of a symbol given all the previous symbols generated.
[10411330] |For the more general case of a process that is not necessarily stationary, the ''average rate'' is
[10411340] |:<math>r = \lim_{n \to \infty} \frac{1}{n} H(X_1, X_2, \dots X_n);</math>
[10411350] |that is, the limit of the joint entropy per symbol.
[10411360] |For stationary sources, these two expressions give the same result.
[10411370] |It is common in information theory to speak of the "rate" or "entropy" of a language.
[10411380] |This is appropriate, for example, when the source of information is English prose.
[10411390] |The rate of a source of information is related to its [[redundancy (information theory)|redundancy]] and how well it can be [[data compression|compressed]], the subject of '''source coding'''.
[10411400] |===Channel capacity=== 
[10411410] |Communications over a channel—such as an [[ethernet]] wire—is the primary motivation of information theory.
[10411420] |As anyone who's ever used a telephone (mobile or landline) knows, however, such channels often fail to produce exact reconstruction of a signal; noise, periods of silence, and other forms of signal corruption often degrade quality.
[10411430] |How much information can one hope to communicate over a noisy (or otherwise imperfect) channel?
[10411440] |Consider the communications process over a discrete channel.
[10411450] |A simple model of the process is shown below:
[10411460] |Here ''X'' represents the space of messages transmitted, and ''Y'' the space of messages received during a unit time over our channel.
[10411470] |Let <math>p(y|x)</math> be the [[conditional probability]] distribution function of ''Y'' given ''X''.
[10411480] |We will consider <math>p(y|x)</math> to be an inherent fixed property of our communications channel (representing the nature of the '''[[Signal noise|noise]]''' of our channel).
[10411490] |Then the joint distribution of ''X'' and ''Y'' is completely determined by our channel and by our choice of <math>f(x)</math>, the marginal distribution of messages we choose to send over the channel.
[10411500] |Under these constraints, we would like to maximize the rate of information, or the '''[[Signal (electrical engineering)|signal]]''', we can communicate over the channel.
[10411510] |The appropriate measure for this is the [[mutual information]], and this maximum mutual information is called the '''[[channel capacity]]''' and is given by: 
[10411520] |:<math> C = \max_{f} I(X;Y).\! </math>
[10411530] |This capacity has the following property related to communicating at information rate ''R'' (where ''R'' is usually bits per symbol).
[10411540] |For any information rate ''R < C'' and coding error ε > 0, for large enough ''N'', there exists a code of length ''N'' and rate ≥ R and a decoding algorithm, such that the maximal probability of block error is ≤ ε; that is, it is always possible to transmit with arbitrarily small block error.
[10411550] |In addition, for any rate ''R > C'', it is impossible to transmit with arbitrarily small block error.
[10411560] |'''[[Channel code|Channel coding]]''' is concerned with finding such nearly optimal [[error detection and correction|codes]] that can be used to transmit data over a noisy channel with a small coding error at a rate near the channel capacity.
[10411570] |====Channel capacity of particular model channels==== 
[10411580] |* A continuous-time analog communications channel subject to Gaussian noise — see [[Shannon–Hartley theorem]].
[10411590] |* A [[binary symmetric channel]] (BSC) with crossover probability ''p'' is a binary input, binary output channel that flips the input bit with probability '' p''.
[10411600] |The BSC has a capacity of <math>1 - H_\mbox{b}(p)</math> bits per channel use, where <math>H_\mbox{b}</math> is the [[binary entropy function]]:
[10411610] |::
[10411620] |* A binary erasure channel (BEC) with erasure probability '' p '' is a binary input, ternary output channel.
[10411630] |The possible channel outputs are ''0'', ''1'', and a third symbol 'e' called an erasure.
[10411640] |The erasure represents complete loss of information about an input bit.
[10411650] |The capacity of the BEC is ''1 - p'' bits per channel use.
[10411660] |::
[10411670] |==Applications to other fields== 
[10411680] |===Intelligence uses and secrecy applications=== 
[10411690] |Information theoretic concepts apply to [[cryptography]] and [[cryptanalysis]].
[10411700] |[[Turing]]'s information unit, the [[Ban (information)|ban]], was used in the [[Ultra]] project, breaking the German [[Enigma machine]] code and hastening the [[Victory in Europe Day|end of WWII in Europe]].
[10411710] |Shannon himself defined an important concept now called the [[unicity distance]].
[10411720] |Based on the [[redundancy (information theory)|redundancy]] of the [[plaintext]], it attempts to give a minimum amount of [[ciphertext]] necessary to ensure unique decipherability.
[10411730] |Information theory leads us to believe it is much more difficult to keep secrets than it might first appear.
[10411740] |A [[brute force attack]] can break systems based on [[public-key cryptography|asymmetric key algorithms]] or on most commonly used methods of [[symmetric-key algorithm|symmetric key algorithms]] (sometimes called secret key algorithms), such as [[block cipher]]s.
[10411750] |The security of all such methods currently comes from the assumption that no known attack can break them in a practical amount of time.
[10411760] |[[Information theoretic security]] refers to methods such as the [[one-time pad]] that are not vulnerable to such brute force attacks.
[10411770] |In such cases, the positive conditional [[mutual information]] between the [[plaintext]] and [[ciphertext]] (conditioned on the [[key (cryptography)| key]]) can ensure proper transmission, while the unconditional mutual information between the plaintext and ciphertext remains zero, resulting in absolutely secure communications.
[10411780] |In other words, an eavesdropper would not be able to improve his or her guess of the plaintext by gaining knowledge of the ciphertext but not of the key.
[10411790] |However, as in any other cryptographic system, care must be used to correctly apply even information-theoretically secure methods; the [[Venona project]] was able to crack the one-time pads of the [[Soviet Union]] due to their improper reuse of key material.
[10411800] |===Pseudorandom number generation=== 
[10411810] |[[Pseudorandom number generator]]s are widely available in computer language libraries and application programs.
[10411820] |They are, almost universally, unsuited to cryptographic use as they do not evade the deterministic nature of modern computer equipment and software.
[10411830] |A class of improved random number generators is termed [[Cryptographically secure pseudorandom number generator]]s, but even they require external to the software [[random seed]]s to work as intended.
[10411840] |These can be obtained via [[extractor]]s, if done carefully.
[10411850] |The measure of sufficient randomness in extractors is [[min-entropy]], a value related to Shannon entropy through [[Rényi entropy]]; Rényi entropy is also used in evaluating randomness in cryptographic systems.
[10411860] |Although related, the distinctions among these measures mean that a [[random variable]] with high Shannon entropy is not necessarily satisfactory for use in an extractor and so for cryptography uses.
[10411870] |===Miscellaneous applications=== 
[10411880] |Information theory also has applications in [[Gambling and information theory|gambling and investing]], [[black hole information paradox|black holes]], [[bioinformatics]], and [[music]].
[10420010] |<article>Italian language</article>
[10420020] |'''Italian''' (, or ''lingua italiana'') is a [[Romance languages|Romance language]] spoken as a [[first language]] by about 63 million people, primarily in [[Italy]].
[10420030] |In [[Switzerland]], Italian is one of four [[Linguistic geography of Switzerland|official language]]s.
[10420040] |It is also the official language of [[San Marino]].
[10420050] |It is the primary language of the [[Vatican City]].
[10420060] |Standard Italian, adopted by the state after the [[unification of Italy]], is based on [[Tuscan dialect|Tuscan]] and is somewhat intermediate between [[Italo-Western|Italo-Dalmatian languages]] of the [[Mezzogiorno|South]] and [[Northern Italian dialects]] of the [[Northern Italy|North]].
[10420070] |Unlike most other Romance languages, Italian has retained the contrast between short and [[consonant length|long consonants]] which existed in Latin.
[10420080] |As in most [[Romance languages]], [[stress (linguistics)|stress]] is distinctive.
[10420090] |Of the Romance languages, Italian is considered to be one of the closest resembling [[Latin]] in terms of [[vocabulary]].
[10420100] |According to Ethnologue, lexical similarity is 89% with [[French language|French]], 87% with [[Catalan language|Catalan]], 85% with [[Sardinian language|Sardinian]], 82% with [[Spanish language|Spanish]], 78% with Rheto-Romance, and 77% with Romanian.
[10420110] |It is affectionately called ''il parlar gentile'' (the gentle language) by its speakers.
[10420120] |==Writing system== 
[10420130] |Italian is written using the [[Latin alphabet]].
[10420140] |The letters ''J'', ''K'', ''W'', ''X'' and ''Y'' are not considered part of the standard [[Italian alphabet]], but appear in loanwords (such as ''jeans'', ''whisky'', ''taxi'').
[10420150] |''X'' has become a commonly used letter in genuine Italian words with the prefix ''extra-''.
[10420160] |''J'' in Italian is an old-fashioned orthographic variant of ''I'', appearing in the first name "Jacopo" as well as in some Italian place names, e.g., the towns of [[Bajardo]], [[Bojano]], [[Joppolo]], [[Jesolo]], [[Jesi]], among numerous others, and in the alternate spelling ''Mar Jonio'' (also spelled ''Mar Ionio'') for the [[Ionian Sea]].
[10420170] |''J'' may also appear in many words from different dialects, but its use is discouraged in contemporary Italian, and it is not part of the standard 21-letter contemporary Italian alphabet.
[10420180] |Each of these foreign letters had an Italian equivalent spelling: ''gi'' for ''j'', ''c'' or ''ch'' for ''k'', ''u'' or ''v'' for ''w'' (depending on what sound it makes), ''s'', ''ss'', or ''cs'' for ''x'', and ''i'' for ''y''.
[10420190] |* Italian uses the [[acute accent]] over the letter ''E'' (as in ''perché'', why/because) to indicate a front mid-close vowel, and the [[grave accent]] (as in ''tè'', tea) to indicate a front mid-open vowel.
[10420200] |The [[grave accent]] is also used on letters ''A'', ''I'', ''O'', and ''U'' to mark [[stress (linguistics)|stress]] when it falls on the final vowel of a word (for instance ''gioventù'', youth).
[10420210] |Typically, the penultimate syllable is stressed.
[10420220] |If syllables other than the last one are stressed, the accent is not mandatory, unlike in [[Spanish language|Spanish]], and, in virtually all cases, it is omitted.
[10420230] |In some cases, when the word is ambiguous (as ''principi''), the accent mark is sometimes used in order to disambiguate its meaning (in this case, ''prìncipi'', princes, or ''princìpi'', principles).
[10420240] |This is, however, not compulsory.
[10420250] |Rare words with three or more syllables can confuse Italians themselves, and the pronunciation of [[Istanbul]] is a common example of a word in which placement of stress is not clearly established.
[10420260] |Turkish, like French, tends to put the accent on ultimate syllable, but Italian doesn't.
[10420270] |So we can hear "Istànbul" or "Ìstanbul".
[10420280] |Another instance is the American State of [[Florida]]: the correct way to pronounce it in Italian is like in Spanish, "Florìda", but since there is an Italian word meaning the same ("flourishing"), "flòrida", and because of the influence of English, most Italians pronounce it that way.
[10420290] |Dictionaries give the latter as an alternative pronunciation.
[10420300] |* The letter ''H'' at the beginning of a word is used to distinguish ''ho'', ''hai'', ''ha'', ''hanno'' (present indicative of ''avere'', 'to have') from ''o'' ('or'), ''ai'' ('to the'), ''a'' ('to'), ''anno'' ('year').
[10420310] |In the spoken language this letter is always silent for the cases given above.
[10420320] |''H'' is also used in combinations with other letters (see below), but no [[phoneme]] {{IPA|[h]}} exists in Italian.
[10420330] |In foreign words entered in common use, like "hotel" or "hovercraft", the H is commonly silent, so they are pronounced as {{IPA|/oˈtɛl/}} and {{IPA|/ˈɔverkraft/}}
[10420340] |* The letter ''Z'' represents {{IPA|/ʣ/}}, for example: ''Zanzara'' {{IPA|/dzan'dzaɾa/}} (mosquito), or {{IPA|/ʦ/}}, for example: ''Nazione'' {{IPA|/naˈttsjone/}} (nation), depending on context, though there are few [[minimal pair]]s.
[10420350] |The same goes for ''S'', which can represent {{IPA|/s/}} or {{IPA|/z/}}.
[10420360] |However, these two phonemes are in [[complementary distribution]] everywhere except between two vowels in the same word, and even in such environment there are extremely few minimal pairs, so that this distinction is being lost in many varieties.
[10420370] |* The letters ''C'' and ''G'' represent [[affricate]]s: [[Voiceless postalveolar affricate|{{IPA|/ʧ/}}]] as in "chair" and [[Voiced postalveolar affricate|{{IPA|/ʤ/}}]] as in "gem", respectively, before the [[front vowel]]s ''I'' and ''E''.
[10420380] |They are pronounced as [[plosive]]s {{IPA|/k/}}, {{IPA|/g/}} (as in "call" and "gall") otherwise.
[10420390] |Front/back vowel rules for ''C'' and ''G'' are similar in [[French language|French]], [[Romanian language|Romanian]], [[Spanish language|Spanish]], and to some extent [[English language|English]] (including [[Old English]]).
[10420400] |[[swedish language|Swedish]] and [[Norwegian language|Norwegian]] have similar rules for ''K'' and ''G''.
[10420410] |(See also [[palatalization]].)
[10420420] |* However, an ''H'' can be added between ''C'' or ''G'' and ''E'' or ''I'' to represent a plosive, and an ''I'' can be added between ''C'' or ''G'' and ''A'', ''O'' or ''U'' to signal that the consonant is an affricate.
[10420430] |For example:
[10420440] |:Note that the ''H'' is [[silent letter|silent]] in the digraphs ''[[ch (digraph)|CH]]'' and ''[[gh (digraph)|GH]]'', as also the ''I'' in ''cia'', ''cio'', ''ciu'' and even ''cie'' is not pronounced as a separate vowel, unless it carries the primary stress.
[10420450] |For example, it is silent in ''[[ciao]]'' {{IPA|/ˈʧa.o/}} and cielo {{IPA|/ˈʧɛ.lo/}}, but it is pronounced in ''farmacia'' {{IPA|/ˌfaɾ.ma.ˈʧi.a/}} and ''farmacie'' {{IPA|/ˌfaɾ.ma.ˈʧi.e/}}.
[10420460] |* There are three other special [[digraph (orthography)|digraphs]] in Italian: ''[[gn (digraph)|GN]]'', ''GL'' and ''SC''.
[10420470] |''GN'' represents [[Palatal nasal|{{IPA|/ɲ/}}]].
[10420480] |''GL'' represents [[Palatal lateral approximant|{{IPA|/ʎ/}}]] only before ''i'', and never at the beginning of a word, except in the [[personal pronoun]] and [[definite article]] ''gli''.
[10420490] |(Compare with [[Spanish language|Spanish]] ''ñ'' and ''ll'', [[Portuguese language|Portuguese]] ''nh'' and ''lh''.)
[10420500] |''SC'' represents fricative [[Voiceless postalveolar fricative|{{IPA|/ʃ/}}]] before ''i'' or ''e''.
[10420510] |Except in the speech of some Northern Italians, all of these are normally [[geminate]] between vowels.
[10420520] |* In general, all letters or digraphs represent phonemes rather clearly, and, in standard varieties of Italian, there is little allophonic variation.
[10420530] |The most notable exceptions are assimilation of /n/ in point of articulation before consonants, assimilatory voicing of /s/ to following voiced consonants, and vowel length (vowels are long in stressed open syllables, and short elsewhere) &mdash; compare with the enormous number of [[allophone]]s of the English phoneme /t/.
[10420540] |Spelling is clearly phonemic and difficult to mistake given a clear pronunciation.
[10420550] |Exceptions are generally only found in foreign borrowings.
[10420560] |There are fewer cases of [[dyslexia]] than among speakers of languages such as English , and the concept of a spelling bee is strange to Italians.
[10420570] |==History== 
[10420580] |The history of the Italian language is long, but the modern standard of the language was largely shaped by relatively recent events.
[10420590] |The earliest surviving texts which can definitely be called Italian (or more accurately, vernacular, as opposed to its predecessor [[Vulgar Latin]]) are legal formulae from the region of [[province of Benevento|Benevento]] dating from 960-963.
[10420600] |What would come to be thought of as Italian was first formalized in the first years of the 14th century through the works of [[Dante Alighieri]], who mixed southern Italian languages, especially [[Sicilian language|Sicilian]], with his native Tuscan in his epic poems known collectively as the ''[[Divine Comedy|Commedia]],'' to which [[Giovanni Boccaccio]] later affixed the title ''Divina''.
[10420610] |Dante's much-loved works were read throughout Italy and his written dialect became the "canonical standard" that all educated Italians could understand.
[10420620] |Dante is still credited with standardizing the Italian language and, thus, the dialect of [[Tuscany]] became the basis for what would become the official language of Italy.
[10420630] |Italy has always had a distinctive dialect for each city since the cities were until recently thought of as [[city-state]]s.
[10420640] |The latter now has considerable [[variety (linguistics)|variety]], however.
[10420650] |As Tuscan-derived Italian came to be used throughout the nation, features of local speech were naturally adopted, producing various versions of Regional Italian.
[10420660] |The most characteristic differences, for instance, between [[Romanesco|Roman Italian]] and [[Milanese|Milanese Italian]] are the [[consonant length|gemination]] of initial consonants and the pronunciation of stressed "e", and of "s" in some cases (e.g. ''va bene'' "all right": is pronounced {{IPA|[va ˈbːɛne]}} by a Roman, {{IPA|[va ˈbene]}} by a Milanese; ''a casa'' "at home": Roman {{IPA|[a ˈkːasa]}}, Milanese {{IPA|[a ˈkaza]}}).
[10420670] |In contrast to the [[Northern Italian language|dialects of northern Italy]], [[southern Italian]] dialects were largely untouched by the Franco-[[Occitan language|Occitan]] influences introduced to Italy, mainly by [[bard]]s from [[France]], during the [[Middle Ages]].
[10420680] |Even in the case of Northern Italian dialects, however, scholars are careful not to overstate the effects of outsiders on the natural indigenous developments of the languages.
[10420690] |(See [[La Spezia-Rimini Line]].)
[10420700] |The economic might and relative advanced development of [[Tuscany]] at the time ([[Late Middle Ages]]), gave its dialect weight, though Venetian remained widespread in medieval Italian commercial life.
[10420710] |Also, the increasing cultural relevance of [[Florence, Italy|Florence]] during the periods of '[[Humanism|Umanesimo (Humanism)]]' and the [[Renaissance|Rinascimento (Renaissance)]] made its ''volgare'' (dialect), or rather a refined version of it, a standard in the arts.
[10420720] |The re-discovery of Dante's ''[[De vulgari eloquentia]]'' and a renewed interest in linguistics in the 16th century sparked a debate which raged throughout Italy concerning which criteria should be chosen to establish a modern Italian standard to be used as much as a literary as a spoken language.
[10420730] |Scholars were divided into three factions: the [[purism|purists]], headed by [[Pietro Bembo]] who in his ''[[Gli Asolani]]'' claimed that the language might only be based on the great literary classics (notably, [[Petrarch]], and Boccaccio but not Dante as Bembo believed that the Divine Comedy was not dignified enough as it used elements from other dialects), [[Niccolò Machiavelli]] and other [[Florence|Florentine]]s who preferred the version spoken by ordinary people in their own times, and the [[Courtesan]]s like [[Baldassarre Castiglione]] and [[Gian Giorgio Trissino]] who insisted that each local vernacular must contribute to the new standard.
[10420740] |Eventually Bembo's ideas prevailed, the result being the publication of the first Italian dictionary in 1612 and the foundation of the [[Accademia della Crusca]] in Florence (1582-3), the official legislative body of the Italian language.
[10420750] |Italian literature's first modern novel, [[The Betrothed|''I Promessi Sposi'']] (The Betrothed), by [[Alessandro Manzoni]] further defined the standard by "rinsing" his Milanese 'in the waters of the [[Arno River|Arno]]" ([[Florence]]'s river), as he states in the Preface to his 1840 edition.
[10420760] |After unification a huge number of civil servants and soldiers recruited from all over the country introduced many more words and idioms from their home dialects ("[[ciao]]" is [[Venetian language|Venetian]], "[[panettone]]" is [[Milanese]] etc.).
[10420770] |==Classification== 
[10420780] |Italian is most closely related to the other two Italo-Dalmatian languages, [[Sicilian language|Sicilian]] and the extinct [[Dalmatian language|Dalmatian]].
[10420790] |The three are part of the [[Italo-Western languages|Italo-Western]] grouping of the [[Romance languages]], which are a subgroup of the [[Italic languages|Italic]] branch of [[Indo-European language family|Indo-European]].
[10420800] |==Geographic distribution== 
[10420810] |The total speakers of Italian as maternal language are between 60 and 70 million.
[10420820] |The speakers who use Italian as second or cultural language are estimated around 110-120 million .
[10420830] |Italian is the official language of [[Italy]] and [[San Marino]], and one of the official languages of [[Switzerland]], spoken mainly in [[Canton Ticino|Ticino]] and [[Graubünden|Grigioni]] cantons, a region referred to as [[Italian Switzerland]].
[10420840] |It is also the second official language in some areas of [[Istria]], in [[Slovenia]] and [[Croatia]], where an Italian minority exists.
[10420850] |It is the primary language of the [[Vatican City]] and is widely used and taught in [[Monaco]] and [[Malta]].
[10420860] |It is also widely understood in France with over one million speakers (especially in [[Corsica]] and the [[County of Nice]], areas that historically spoke [[Italian dialects]] before annexation to [[France]]), and in [[Albania]].
[10420870] |Italian is also spoken by some in former Italian colonies in [[Africa]] ([[Libya]], [[Somalia]] and [[Eritrea]]).
[10420880] |However, its use has sharply dropped off since the colonial period.
[10420890] |In [[Eritrea]] [[Italian Language|Italian]] is widely understood .
[10420900] |In fact, for fifty years, during the colonial period, Italian was the language of instruction, but [[as of 1997]], there is only one Italian language school remaining, with 470 pupils.
[10420910] |In [[Somalia]] Italian used to be a major language but due to the civil war and lack of education only the older generation still uses it.
[10420920] |Italian and [[Italian dialects]] are widely used by Italian immigrants and many of their descendants (see ''[[Italians]]'') living throughout [[Western Europe]] (especially [[France]], [[Germany]], [[Belgium]], [[Switzerland]], the [[Britalian|United Kingdom]] and [[Luxembourg]]), the [[Italian Americans|United States]], [[Italian Canadians|Canada]], [[Italian Australians|Australia]], and [[Latin America]] (especially [[Uruguay]], [[Italian Brazilians|Brazil]], [[Argentina]], and [[Venezuela]]).
[10420930] |In the United States, Italian speakers are most commonly found in four cities: [[Boston]] (7,000), [[Chicago]] (12,000), [[New York City]] (140,000), and [[Philadelphia]] (15,000).
[10420940] |In Canada there are large Italian-speaking communities in [[Montreal]] (120,000) and [[Toronto]] (195,000).
[10420950] |Italian is the second most commonly-spoken language in Australia, where 353,605 [[Italian Australian]]s, or 1.9% of the population, reported speaking Italian at home in the 2001 [[Census in Australia|Census]].
[10420960] |In 2001 there were 130,000 Italian speakers in [[Melbourne]], and 90,000 in [[Sydney]].
[10420970] |===Italian language education=== 
[10420980] |Italian is widely taught in many schools around the world, but rarely as the first non-native language of pupils; in fact, Italian generally is the fourth or fifth most taught second-language in the world.
[10420990] |In [[anglophone]] parts of [[Canada]], Italian is, after [[French language|French]], the third most taught language.
[10421000] |In [[francophone]] Canada it is third after [[English language|English]].
[10421010] |In the [[United States]] and the [[United Kingdom]], Italian ranks fourth (after [[Spanish language|Spanish]]-French-[[German language|German]] and French-German-Spanish respectively).
[10421020] |Throughout the world, Italian is the fifth most taught non-native language, after [[English language|English]], French, Spanish, and German.
[10421030] |In the [[European Union]], Italian is spoken as a mother tongue by 13% of the population (64 million, mainly in Italy itself) and as a second language by 3% (14 million); among EU member states, it is most likely to be desired (and therefore learned) as a second language in [[Malta]] (61%), [[Croatia]] (14%), [[Slovenia]] (12%), [[Austria]] (11%), [[Romania]] (8%), [[France]] (6%), and [[Greece]] (6%).
[10421040] |It is also an important second language in [[Albania]] and [[Switzerland]], which are not EU members or candidates.
[10421050] |===Influence and derived languages=== 
[10421060] |From the late 19th to the mid 20th century, thousands of Italians settled in Argentina, Uruguay and southern Brazil, where they formed a very strong physical and cultural presence (see the [[Italian diaspora]]).
[10421070] |In some cases, colonies were established where variants of [[Italian dialects]] were used, and some continue to use a derived dialect.
[10421080] |An example is [[Rio Grande do Sul]], [[Brazil]], where [[Talian]] is used and in the town of [[Chipilo]] near Puebla, [[Mexico]] each continuing to use a derived form of [[Venetian language|Venetian]] dating back to the 19th century.
[10421090] |Another example is [[Cocoliche]], an Italian-Spanish [[pidgin]] once spoken in [[Argentina]] and especially in [[Buenos Aires]], and [[Lunfardo]].
[10421100] |[[Rioplatense Spanish]], and particularly the speech of the city of Buenos Aires, has intonation patterns that resemble those of Italian dialects, due to the fact that Argentina had a constant, large influx of Italian settlers since the second half of the nineteenth century; initially primarily from Northern Italy then, since the beginning of the twentieth century, mostly from Southern Italy.
[10421110] |===Lingua Franca=== 
[10421120] |Starting in late [[medieval]] times, Italian language variants replaced Latin to become the primary commercial language for much of Europe and Mediterranean Sea (especially the Tuscan and Venetian variants).
[10421130] |This became solidified during the [[Renaissance]] with the strength of Italian banking and the rise of [[Renaissance humanism|humanism]] in the arts.
[10421140] |During the period of the Renaissance, Italy held artistic sway over the rest of Europe.
[10421150] |All educated European gentlemen were expected to make the [[Grand Tour]], visiting Italy to see its great historical monuments and works of art.
[10421160] |It thus became expected that educated Europeans would learn at least some Italian; the English poet [[John Milton]], for instance, wrote some of his early poetry in Italian.
[10421170] |In England, Italian became the second most common modern language to be learned, after [[French language|French]] (though the classical languages, [[Latin]] and [[Greek language|Greek]], came first).
[10421180] |However, by the late eighteenth century, Italian tended to be replaced by [[German language|German]] as the second modern language on the curriculum.
[10421190] |Yet Italian [[loanword]]s continue to be used in most other [[European languages]] in matters of art and music.
[10421200] |Today, the Italian language continues to be used as a [[lingua franca]] in some environments.
[10421210] |Within the [[Catholic church]] Italian is known by a large part of the ecclesiastic hierarchy, and is used in substitution of [[Latin]] in some official documents.
[10421220] |The presence of Italian as the primary language in the [[Vatican City]] indicates not only use within the [[Holy See]], but also throughout the world where an episcopal seat is present.
[10421230] |It continues to be used in [[music]] and [[opera]].
[10421240] |Other examples where Italian is sometimes used as a means communication is in some sports (sometimes in [[Football (association)|football]] and [[motorsports]]) and in the [[design]] and [[fashion]] industries.
[10421250] |==Dialects== 
[10421260] |In Italy, all [[Romance languages]] spoken as the vernacular, other than standard Italian and other unrelated, non-Italian languages, are termed "Italian dialects".
[10421270] |Many Italian dialects are, in fact, historical languages in their own right.
[10421280] |These include recognized language groups such as [[Friulian language|Friulian]], [[Neapolitan language|Neapolitan]], [[Sardinian language|Sardinian]], [[Sicilian language|Sicilian]], [[Venetian language|Venetian]], and others, and regional variants of these languages such as [[Calabrian languages|Calabrian]].
[10421290] |The division between dialect and language has been used by scholars (such as by [[Francesco Bruni]]) to distinguish between the languages that made up the Italian [[koine]], and those which had very little or no part in it, such as [[Albanian language|Albanian]], [[Greek language|Greek]], [[German language|German]], [[Ladin language|Ladin]], and [[Occitan language|Occitan]], which are still spoken by minorities.
[10421300] |Dialects are generally not used for general mass communication and are usually limited to native speakers in informal contexts.
[10421310] |In the past, speaking in dialect was often deprecated as a sign of poor education.
[10421320] |Younger generations, especially those under 35 (though it may vary in different areas), speak almost exclusively standard Italian in all situations, usually with local accents and idioms.
[10421330] |Regional differences can be recognized by various factors: the openness of vowels, the length of the consonants, and influence of the local dialect (for example, ''annà'' replaces ''andare'' in the area of Rome for the infinitive "to go").
[10421340] |==Sounds== 
[10421350] |{{IPA notice|lang=it}} 
[10421360] |===Vowels=== 
[10421370] |Italian has seven [[vowel]] phonemes: {{IPA|/a/}}, {{IPA|/e/}}, {{IPA|/ɛ/}}, {{IPA|/i/}}, {{IPA|/o/}}, {{IPA|/ɔ/}}, {{IPA|/u/}}.
[10421380] |The pairs {{IPA|/e/}}-{{IPA|/ɛ/}} and {{IPA|/o/}}-{{IPA|/ɔ/}} are seldom distinguished in writing and often confused, even though most varieties of Italian employ both phonemes consistently.
[10421390] |Compare, for example: "perché" {{IPA|[perˈkɛ]}} (why, because) and "senti" {{IPA|[ˈsenti]}} (you listen, you are listening, listen!), employed by some northern speakers, with {{IPA|[perˈke]}} and {{IPA|[ˈsɛnti]}}, as pronounced by most central and southern speakers.
[10421400] |As a result, the usage is strongly indicative of a person's origin.
[10421410] |The standard (Tuscan) usage of these vowels is listed in vocabularies, and employed outside Tuscany mainly by specialists, especially actors and very few (television) journalists.
[10421420] |These are truly different [[phonemes]], however: compare {{IPA|/ˈpeska/}} (fishing) and {{IPA|/ˈpɛska/}} (peach), both spelled ''pesca'' .
[10421430] |Similarly {{IPA|/ˈbotte/}} ('barrel') and {{IPA|/ˈbɔtte/}} ('beatings'), both spelled ''botte'', discriminate {{IPA|/o/}} and {{IPA|/ɔ/}} .
[10421440] |In general, vowel combinations usually pronounce each vowel separately.
[10421450] |[[Diphthong]]s exist (e.g. ''uo'', ''iu'', ''ie'', ''ai''), but are limited to an unstressed ''u'' or ''i'' before or after a stressed vowel.
[10421460] |The unstressed ''u'' in a diphthong approximates the English semivowel ''w'', the unstressed ''i'' approximates the semivowel ''y''.
[10421470] |E.g.: ''buono'' {{IPA|[ˈbwɔno]}}, ''ieri'' {{IPA|[ˈjɛri]}}.
[10421480] |[[Triphthong]]s exist in Italian as well, like "contin''uia''mo" ("we continue").
[10421490] |Three vowel combinations exist only in the form semiconsonant ({{IPA|/j/}} or {{IPA|/w/}}), followed by a vowel, followed by a desinence vowel (usually {{IPA|/i/}}), as in ''miei'', ''suoi'', or two semiconsonants followed by a vowel, as the group ''-uia-'' exemplified above, or ''-iuo-'' in the word ''aiuola''.
[10421500] |===Mobile diphthongs=== 
[10421510] |Many Latin words with a short ''e'' or ''o'' have Italian counterparts with a mobile diphthong (''ie'' and ''uo'' respectively).
[10421520] |When the vowel sound is stressed, it is pronounced and written as a diphthong; when not stressed, it is pronounced and written as a single vowel.
[10421530] |So Latin ''focus'' gave rise to Italian ''fuoco'' (meaning both "fire" and "optical focus"): when unstressed, as in ''focale'' ("focal") the "o" remains alone.
[10421540] |Latin ''pes'' (more precisely its accusative form ''pedem'') is the source of Italian ''piede'' (foot): but unstressed "e" was left unchanged in ''pedone'' (pedestrian) and ''pedale'' (pedal).
[10421550] |From Latin ''iocus'' comes Italian ''giuoco'' ("play", "game"), though in this case ''gioco'' is more common: ''giocare'' means "to play (a game)".
[10421560] |From Latin ''homo'' comes Italian ''uomo'' (man), but also ''umano'' (human) and ''ominide'' (hominid).
[10421570] |From Latin ''ovum'' comes Italian ''uovo'' (egg) and ''ovaie'' (ovaries).
[10421580] |(The same phenomenon occurs in [[Spanish language|Spanish]]: ''juego'' (play, game) and ''jugar'' (to play), ''nieve'' (snow) and ''nevar'' (to snow)).
[10421590] |===Consonants=== 
[10421600] |Two symbols in a table cell denote the voiceless and voiced consonant, respectively.
[10421610] |Nasals undergo assimilation when followed by a consonant, e.g., when preceding a velar ({{IPA|/k/}} or {{IPA|/g/}}) only {{IPA|[ŋ]}} appears, etc.
[10421620] |Italian has geminate, or double, consonants, which are distinguished by [[Consonant length|length]].
[10421630] |Length is distinctive for all consonants except for {{IPA|/ʃ/}}, {{IPA|/ʦ/}}, {{IPA|/ʣ/}}, {{IPA|/ʎ/}} {{IPA|/ɲ/}}, which are always geminate, and {{IPA|/z/}} which is always single.
[10421640] |Geminate plosives and affricates are realised as lengthened closures.
[10421650] |Geminate fricatives, nasals, and {{IPA|/l/}} are realized as lengthened [[continuant]]s.
[10421660] |The flap consonant {{IPA|/ɾː/}} is typically dialectal, and it is called ''erre moscia''.
[10421670] |The correct standard pronunciation is {{IPA|[r]}}.
[10421680] |Of special interest to the linguistic study of Italian is the ''[[Tuscan gorgia|Gorgia Toscana]]'', or "Tuscan Throat", the weakening or [[lenition]] of certain [[:wiktionary:intervocalic|intervocalic]] consonants in [[Tuscan dialect]]s.
[10421690] |See also [[Syntactic doubling]].
[10421700] |===Assimilation=== 
[10421710] |Italian has few diphthongs, so most unfamiliar diphthongs that are heard in foreign words (in particular, those beginning with vowel "a", "e", or "o") will be assimilated as the corresponding [[diaeresis]] (i.e., the vowel sounds will be pronounced separately).
[10421720] |Italian [[phonotactics]] do not usually permit polysyllabic nouns and verbs to end with consonants, excepting poetry and song, so foreign words may receive extra terminal vowel sounds.
[10421730] |==Grammar== 
[10421740] |===Common variations in the writing systems=== 
[10421750] |Some variations in the usage of the writing system may be present in practical use.
[10421760] |These are scorned by educated people, but they are so common in certain contexts that knowledge of them may be useful.
[10421770] |* Usage of ''x'' instead of ''per'': this is very common among teenagers and in [[Text messaging|SMS]] abbreviations.
[10421780] |The multiplication operator is pronounced "per" in Italian, and so it is sometimes used to replace the word "per", which means "for"; thus, for example, "per te" ("for you") is shortened to "x te" (compare with English "4 U").
[10421790] |Words containing ''per'' can also have it replaced with ''x'': for example, ''perché'' (both "why" and "because") is often shortened as ''xché'' or ''xké'' or ''x' ''(see below).
[10421800] |This usage might be useful to jot down quick notes or to fit more text into the low character limit of an SMS, but it is considered unacceptable in formal writing.
[10421810] |* Usage of foreign letters such as ''k'', ''j'' and ''y'', especially in nicknames and SMS language: ''ke'' instead of ''che'', ''Giusy'' instead of ''Giuseppina'' (or sometimes ''Giuseppe'').
[10421820] |This is curiously mirrored in the usage of ''i'' in English names such as ''Staci'' instead of ''Stacey'', or in the usage of ''c'' in [[Northern Europe]] (''Jacob'' instead of ''Jakob'').
[10421830] |The use of "k" instead of "ch" or "c" to represent a plosive sound is documented in some historical texts from before the standardization of the Italian language; however, that usage is no longer standard in Italian.
[10421840] |Possibly because it is associated with the [[German language]], the letter "k" has sometimes also been used in satire to suggest that a political figure is an authoritarian or even a "pseudo-nazi": [[Francesco Cossiga]] was famously nicknamed ''Kossiga'' by rioting students during his tenure as minister of internal affairs.
[10421850] |[Cf. the [[alternative political spelling#"K" replacing "C"|politicized spelling ''Amerika'']] in the USA.]
[10421860] |* Usage of the following abbreviations is limited to the electronic communications media and is deprecated in all other cases: '''nn''' instead of ''non'' (not), '''cmq''' instead of ''comunque'' (anyway, however), '''cm''' instead of ''come'' (how, like, as), '''d''' instead of ''di'' (of), '''(io/loro) sn''' instead of ''(io/loro) sono'' (I am/they are), '''(io) dv''' instead of ''(io) devo'' (I must/I have to) or instead of ''dove'' (where), '''(tu) 6''' instead of ''(tu) sei'' (you are).
[10421870] |* Inexperienced typists often replace accents with apostrophes, such as in ''perche<nowiki>'</nowiki>'' instead of ''perché''.
[10421880] |Uppercase ''[[È]]'' is particularly rare, as it is absent from the [[Keyboard layout#Italian|Italian keyboard layout]], and is very often written as ''E''' (even though there are [[:it:Aiuto:Manuale di stile#Scrivere .C3.88|several ways]] of producing the uppercase È on a computer).
[10421890] |This never happens in books or other professionally typeset material.
[10421900] |==Samples==
[10421910] |==Examples== 
[10421920] |*Cheers: "Salute!"
[10421930] |*English: ''inglese'' {{IPA|/iŋˈglese/}}
[10421940] |*Good-bye: ''arrivederci'' {{IPA|/arriveˈdertʃi/}}
[10421950] |*Hello: ''[[ciao]]'' {{IPA|/ˈtʃao/}}
[10421960] |*Good day: ''buon giorno'' {{IPA|/bwɔnˈdʒorno/}}
[10421970] |*Good evening: ''buona sera'' {{IPA|/bwɔnaˈsera/}}
[10421980] |*Yes: ''sì'' {{IPA|/si/}} 
[10421990] |*No: ''no'' {{IPA|/nɔ/}}
[10422000] |*How are you? : Come stai {{IPA|/ˈkome ˈstai/}} (informal); Come sta {{IPA|/ˈkome 'sta/}} (formal)
[10422010] |*Sorry: ''mi dispiace'' {{IPA|/mi disˈpjatʃe/}}
[10422020] |*Excuse me: scusa {{IPA|/ˈskuza/}} (informal); scusi {{IPA|/ˈskuzi/}} (formal)
[10422030] |*Again: ''di nuovo'', /{{IPA|di ˈnwɔvo}}/; ''ancora'' /{{IPA|aŋˈkora}}/
[10422040] |*Always: ''sempre'' /{{IPA|ˈsɛmpre}}/
[10422050] |*When: ''quando'' {{IPA|/ˈkwando/}}
[10422060] |*Where: ''dove'' {{IPA|/'dove/}} 
[10422070] |*Why/Because: ''perché'' {{IPA|/perˈke/}} 
[10422080] |*How: ''come'' {{IPA|/'kome/}} 
[10422090] |*How much is it?: ''quanto costa?''
[10422100] |{{IPA|/ˈkwanto/}} 
[10422110] |*Thank you!: ''grazie!''
[10422120] |{{IPA|/ˈgrattsie/}}
[10422130] |*Bon appetit: ''buon appetito'' {{IPA|/ˌbwɔn appeˈtito/}}
[10422140] |*You're welcome!: ''prego!''
[10422150] |{{IPA|/ˈprɛgo/}}
[10422160] |*I love you: ''Ti amo'' {{IPA|/ti ˈamo/}}, ''Ti voglio bene'' {{IPA|/ti ˈvɔʎʎo ˈbɛne/}}.
[10422170] |The difference is that you use "Ti amo" when you are in a romantic relationship, "Ti voglio bene" in any other occasion (to parents, to relatives, to friends...)
[10422180] |Counting to twenty: 
[10422190] |*One: ''uno'' {{IPA|/ˈuno/}}
[10422200] |*Two: ''due'' {{IPA|/ˈdue/}}
[10422210] |*Three: ''tre'' {{IPA|/tre/}}
[10422220] |*Four: ''quattro'' {{IPA|/ˈkwattro/}}
[10422230] |*Five: ''cinque'' {{IPA|/ˈʧiŋkwe/}}
[10422240] |*Six: ''sei'' {{IPA|/ˈsɛi/}}
[10422250] |*Seven: ''sette'' {{IPA|/ˈsɛtte/}}
[10422260] |*Eight: ''otto'' {{IPA|/ˈɔtto/}}
[10422270] |*Nine: ''nove'' {{IPA|/ˈnɔve/}}
[10422280] |*Ten: ''dieci'' {{IPA|/ˈdjɛʧi/}}
[10422290] |*Eleven: ''undici'' {{IPA|/ˈundiʧi/}}
[10422300] |*Twelve: ''dodici'' {{IPA|/ˈdodiʧi/}}
[10422310] |*Thirteen: ''tredici'' {{IPA|/ˈtrediʧi/}}
[10422320] |*Fourteen: ''quattordici'' {{IPA|/kwat'tordiʧi/}}
[10422330] |*Fifteen: ''quindici'' {{IPA|/ˈkwindiʧi/}}
[10422340] |*Sixteen: ''sedici'' {{IPA|/ˈsediʧi/}}
[10422350] |*Seventeen: ''diciassette'' {{IPA|/diʧas'sɛtte/}}
[10422360] |*Eighteen: ''diciotto'' {{IPA|/di'ʧɔtto/}}
[10422370] |*Nineteen: ''diciannove'' {{IPA|/diʧan'nɔve/}}
[10422380] |*Twenty: ''venti'' {{IPA|/'venti/}}
[10422390] |The days of the week:
[10422400] |*Monday: ''lunedì'' {{IPA|/lune'di/}} 
[10422410] |*Tuesday: ''martedì'' {{IPA|/marte'di/}} 
[10422420] |*Wednesday: ''mercoledì'' {{IPA|/merkole'di/}} 
[10422430] |*Thursday: ''giovedì'' {{IPA|/dʒove'di/}} 
[10422440] |*Friday: ''venerdì'' {{IPA|/vener'di/}} 
[10422450] |*Saturday: ''sabato'' {{IPA|/ˈsabato/}} 
[10422460] |*Sunday: ''domenica'' {{IPA|/do'menika/}}
[10422470] |==Sample texts== 
[10422480] |There is a recording of [[Dante]]'s [[Divine Comedy]] read by [[Lino Pertile]] available at http://etcweb.princeton.edu/dante/pdp/
[10430010] |<article>Japanese language</article>
[10430020] |{{Nihongo|'''Japanese'''|日本語 / にほんご |3=}} is a language spoken by over 130 million people in [[Japan]] and in Japanese emigrant communities.
[10430030] |It is related to the [[Ryukyuan languages]], but whatever [[Classification of the Japanese language|relationships with other languages]] it may have remain undemonstrated.
[10430040] |It is an [[agglutinative language]] and is distinguished by a complex system of [[Honorific speech in Japanese|honorifics]] reflecting the hierarchical nature of Japanese society, with verb forms and particular vocabulary to indicate the relative status of speaker, listener and the third person mentioned in conversation whether he is there or not.
[10430050] |The sound inventory of Japanese is relatively small, and it has a lexically distinct [[Japanese pitch accent|pitch-accent]] system.
[10430060] |It is a [[mora (linguistics)|mora]]-timed language.
[10430070] |The Japanese language is written with a combination of three different types of scripts: [[Chinese characters]] called ''[[kanji]]'' (漢字 / かんじ), and two [[syllabary|syllabic]] scripts made up of modified [[Chinese characters]], ''[[hiragana]]'' (平仮名 / ひらがな) and ''[[katakana]]'' (片仮名 / カタカナ).
[10430080] |The [[Latin alphabet]], ''[[rōmaji]]'' (ローマ字), is also often used in modern Japanese, especially for company names and logos, advertising, and when entering Japanese text into a computer.
[10430090] |Western style [[Arabic numerals]] are generally used for numbers, but traditional [[Sino-Japanese vocabulary|Sino-Japanese]] numerals are also commonplace.
[10430100] |Japanese [[vocabulary]] has been heavily influenced by [[loanword]]s from other languages.
[10430110] |A vast number of words were borrowed from [[Chinese language|Chinese]], or created from Chinese models, over a period of at least 1,500 years.
[10430120] |Since the late 19th century, Japanese has borrowed a considerable number of words from [[Indo-European languages]], primarily [[English language|English]].
[10430130] |Because of the special trade relationship between Japan and first [[Portugal]] in the 16th century, and then mainly the [[Netherlands]] in the 17th century, [[Portuguese language|Portuguese]], [[German language|German]] and [[Dutch language|Dutch]] have also been influential.
[10430140] |== Geographic distribution == 
[10430150] |Although Japanese is spoken almost exclusively in Japan, it has been and sometimes still is spoken elsewhere.
[10430160] |When [[Imperial Japan|Japan]] occupied [[Korea]], [[Taiwan]], parts of the [[Chinese mainland]], and various Pacific islands before and during [[World War II]], locals in [[Greater East Asia Co-Prosperity Sphere|those countries]] were forced to learn Japanese in empire-building programs.
[10430170] |As a result, there are many people in these countries who can speak Japanese in addition to the local languages.
[10430180] |Japanese emigrant communities (the largest of which are to be found in [[Brazil]]) sometimes employ Japanese as their primary language.
[10430190] |Approximately 5% of Hawaii residents speak Japanese, with Japanese ancestry the largest single ancestry in the state (over 24% of the population).
[10430200] |Japanese emigrants can also be found in [[Peru]], [[Argentina]], [[Australia]] (especially [[Sydney]], [[Brisbane]], and [[Melbourne]]), the [[United States]] (notably [[California]], where 1.2% of the population has Japanese ancestry, and [[Hawaii]]), and the [[Philippines]] (particularly in [[Davao]] and [[Laguna (province)|Laguna]]).
[10430210] |Their descendants, who are known as {{transl|ja|''[[nikkei]]''}} ({{lang|ja|日系}}, literally Japanese descendants), however, rarely speak Japanese fluently after the second generation.
[10430220] |There are estimated to be several million non-Japanese studying the language as well.
[10430230] |=== Official status === 
[10430240] |Japanese is the de facto official language of Japan.
[10430250] |There is a form of the language considered standard: {{nihongo|''hyōjungo''|標準語|}} Standard Japanese, or {{nihongo|''kyōtsūgo''|共通語|}} the common language.
[10430260] |The meanings of the two terms are almost the same.
[10430270] |{{transl|ja|''Hyōjungo''}} or {{transl|ja|''kyōtsūgo''}} is a conception that forms the counterpart of dialect.
[10430280] |This normative language was born after the {{nihongo|[[Meiji Restoration]]|明治維新|meiji ishin|1868}} from the language spoken in uptown [[Tokyo]] for communicating necessity.
[10430290] |{{transl|ja|''Hyōjungo''}} is taught in schools and used on television and in official communications, and is the version of Japanese discussed in this article.
[10430300] |Formerly, standard {{nihongo|Japanese in writing|文語|[[Bungo (Japanese language)|bungo]]|"literary language"}} was different from {{nihongo|colloquial language|口語|[[Kogo (Japanese language)|kōgo]]}}.
[10430310] |The two systems have different rules of grammar and some variance in vocabulary.
[10430320] |{{transl|ja|''Bungo''}} was the main method of writing Japanese until about 1900; since then {{transl|ja|''kōgo''}} gradually extended its influence and the two methods were both used in writing until the 1940s.
[10430330] |{{transl|ja|''Bungo''}} still has some relevance for historians, literary scholars, and lawyers (many Japanese laws that survived [[World War II]] are still written in {{transl|ja|''bungo''}}, although there are ongoing efforts to modernize their language).
[10430340] |{{transl|ja|''Kōgo''}} is the predominant method of both speaking and writing Japanese today, although {{transl|ja|''bungo''}} grammar and vocabulary are occasionally used in modern Japanese for effect.
[10430350] |=== Dialects === 
[10430360] |Dozens of dialects are spoken in Japan.
[10430370] |The profusion is due to many factors, including the length of time the [[Japanese Archipelago|archipelago]] has been inhabited, its mountainous island terrain, and Japan's long history of both external and internal isolation.
[10430380] |Dialects typically differ in terms of [[Japanese pitch accent|pitch accent]], inflectional [[morphology (linguistics)|morphology]], [[vocabulary]], and particle usage.
[10430390] |Some even differ in [[vowel]] and [[consonant]] inventories, although this is uncommon.
[10430400] |The main distinction in Japanese accents is between {{nihongo|Tokyo-type|東京式|Tōkyō-shiki}} and {{nihongo|Kyoto-Osaka-type|京阪式|Keihan-shiki}}, though Kyūshū-type dialects form a third, smaller group.
[10430410] |Within each type are several subdivisions.
[10430420] |Kyoto-Osaka-type dialects are in the central region, with borders roughly formed by [[Toyama Prefecture|Toyama]], [[Kyoto Prefecture|Kyōto]], [[Hyōgo Prefecture|Hyōgo]], and [[Mie Prefecture|Mie]] Prefectures; most [[Shikoku]] dialects are also that type.
[10430430] |The final category of dialects are those that are descended from the Eastern dialect of [[Old Japanese]]; these dialects are spoken in [[Hachijōjima|Hachijō-jima island]] and few islands.
[10430440] |Dialects from peripheral regions, such as [[Tōhoku Region|Tōhoku]] or [[Tsushima Island|Tsushima]], may be unintelligible to speakers from other parts of the country.
[10430450] |The several dialects of [[Kagoshima Prefecture|Kagoshima]] in southern [[Kyūshū]] are famous for being unintelligible not only to speakers of standard Japanese but to speakers of nearby dialects elsewhere in Kyūshū as well.
[10430460] |This is probably due in part to the Kagoshima dialects' peculiarities of pronunciation, which include the existence of closed syllables (i.e., syllables that end in a consonant, such as {{IPA|/kob/}} or {{IPA|/koʔ/}} for Standard Japanese {{IPA|/kumo/}} "spider").
[10430470] |A dialects group of [[Kansai region|Kansai]] is spoken and known by many Japanese, and [[Osaka]] dialect in particular is associated with comedy (See [[Kansai dialect]]).
[10430480] |Dialects of Tōhoku and North [[Kantō region|Kantō]] are associated with typical farmers.
[10430490] |The [[Ryūkyūan languages]], spoken in [[Okinawa Prefecture|Okinawa]] and [[Amami Islands]] that are politically part of [[Kagoshima Prefecture|Kagoshima]], are distinct enough to be considered a separate branch of the [[Japonic languages|Japonic]] family.
[10430500] |But many Japanese common people tend to consider the Ryūkyūan languages as dialects of Japanese.
[10430510] |Not only is each language unintelligible to Japanese speakers, but most are unintelligible to those who speak other Ryūkyūan languages.
[10430520] |Recently, Standard Japanese has become prevalent nationwide (including the Ryūkyū islands) due to [[education]], [[mass media]], and increase of mobility networks within Japan, as well as economic integration.
[10430530] |== Sounds == 
[10430540] |{{IPA notice}}
[10430550] |Japanese vowels are "pure" sounds.
[10430560] |The only unusual vowel is the high back vowel {{IPA|/ɯ/}} , which is like {{IPA|/u/}}, but [[roundedness|compressed]] instead of rounded.
[10430570] |Japanese has five vowels, and [[vowel length]] is phonemic, so each one has both a short and a long version.
[10430580] |Some Japanese consonants have several [[allophone]]s, which may give the impression of a larger inventory of sounds.
[10430590] |However, some of these allophones have since become phonemic.
[10430600] |For example, in the Japanese language up to and including the first half of the twentieth century, the phonemic sequence {{IPA|/ti/}} was [[palatalization|palatalized]] and realized phonetically as {{IPA|[tɕi]}}, approximately ''chi'' ; however, now {{IPA|/ti/}} and {{IPA|/tɕi/}} are distinct, as evidenced by words like ''tī'' {{IPA|[tiː]}} "Western style tea" and ''chii'' {{IPA|[tɕii]}} "social status."
[10430610] |The 'r' of the Japanese language (technically a [[lateral consonant|lateral]] [[apical consonant|apical]] postalveolar flap), is of particular interest, sounding to most English speakers to be something between an 'l' and a [[retroflex consonant|retroflex]] 'r' depending on its position in a word.
[10430620] |The syllabic structure and the [[phonotactics]] are very simple: the only [[consonant cluster]]s allowed within a syllable consist of one of a subset of the consonants plus {{IPA|/j/}}.
[10430630] |These type of clusters only occur in onsets.
[10430640] |However, consonant clusters across syllables are allowed as long as the two consonants are a nasal followed by a [[homo-organic]] consonant.
[10430650] |[[Consonant length]] (gemination) is also phonemic.
[10430660] |== Grammar == 
[10430670] |=== Sentence structure === 
[10430680] |Japanese word order is classified as [[Subject Object Verb]].
[10430690] |However, unlike many [[Indo-European language]]s, Japanese sentences only require that verbs come last for intelligibility.
[10430700] |This is because the Japanese [[sentence element]]s are marked with [[Japanese particles|particles]] that identify their grammatical functions.
[10430710] |The basic sentence structure is [[topic-comment]].
[10430720] |For example, {{transl|ja|''Kochira-wa Tanaka-san desu''}} ({{lang|ja|こちらは田中さんです}}).
[10430730] |{{transl|ja|''Kochira''}} ("this") is the topic of the sentence, indicated by the particle ''-wa''.
[10430740] |The verb is {{transl|ja|''desu''}}, a [[copula]], commonly translated as "to be" or "it is" (though there are other verbs that can be translated as "to be").
[10430750] |As a phrase, {{transl|ja|''Tanaka-san desu''}} is the comment.
[10430760] |This sentence loosely translates to "As for this person, (it) is Mr./Mrs./Miss Tanaka."
[10430770] |Thus Japanese, like [[Chinese language|Chinese]], [[Korean language|Korean]], and many other Asian languages, is often called a [[topic-prominent language]], which means it has a strong tendency to indicate the topic separately from the subject, and the two do not always coincide.
[10430780] |The sentence {{transl|ja|''Zō-wa hana-ga nagai (desu)''}}　({{lang|ja|象は鼻が長いです}}) literally means, "As for elephants, (their) noses are long".
[10430790] |The topic is {{transl|ja|''zō''}} "elephant", and the subject is {{transl|ja|''hana''}} "nose".
[10430800] |Japanese is a [[pro-drop language]], meaning that the subject or object of a sentence need not be stated if it is obvious from context.
[10430810] |In addition, it is commonly felt, particularly in spoken Japanese, that the shorter a sentence is, the better.
[10430820] |As a result of this grammatical permissiveness and tendency towards brevity, Japanese speakers tend naturally to omit words from sentences, rather than refer to them with [[pronoun]]s.
[10430830] |In the context of the above example, {{transl|ja|''hana-ga nagai''}} would mean "[their] noses are long," while {{transl|ja|''nagai''}} by itself would mean "[they] are long."
[10430840] |A single verb can be a complete sentence: {{transl|ja|''Yatta!''}}
[10430850] |"[I / we / they / etc] did [it]!".
[10430860] |In addition, since adjectives can form the predicate in a Japanese sentence (below), a single adjective can be a complete sentence: {{transl|ja|''Urayamashii!''}}
[10430870] |"[I'm] jealous [of it]!".
[10430880] |While the language has some words that are typically translated as pronouns, these are not used as frequently as pronouns in some [[Indo-European language]]s, and function differently.
[10430890] |Instead, Japanese typically relies on special verb forms and auxiliary verbs to indicate the direction of benefit of an action: "down" to indicate the out-group gives a benefit to the in-group; and "up" to indicate the in-group gives a benefit to the out-group.
[10430900] |Here, the in-group includes the speaker and the out-group doesn't, and their boundary depends on context.
[10430910] |For example, {{transl|ja|''oshiete moratta''}} (literally, "explained" with a benefit from the out-group to the in-group) means "[he/she/they] explained it to [me/us]".
[10430920] |Similarly, {{transl|ja|''oshiete ageta''}} (literally, "explained" with a benefit from the in-group to the out-group) means "[I/we] explained [it] to [him/her/them]".
[10430930] |Such beneficiary auxiliary verbs thus serve a function comparable to that of pronouns and prepositions in Indo-European languages to indicate the actor and the recipient of an action.
[10430940] |Japanese "pronouns" also function differently from most modern Indo-European pronouns (and more like nouns) in that they can take modifiers as any other noun may.
[10430950] |For instance, one cannot say in English: 
[10430960] |: 
[10430970] |*The amazed he ran down the street. (grammatically incorrect)
[10430980] |But one ''can'' grammatically say essentially the same thing in Japanese:
[10430990] |: {{transl|ja|''Odoroita kare-wa michi-o hashitte itta.''}} (grammatically correct)
[10431000] |This is partly due to the fact that these words evolved from regular nouns, such as {{transl|ja|''kimi''}} "you" ({{lang|ja|君}} "lord"), {{transl|ja|''anata''}} "you" ({{lang|ja|あなた}} "that side, yonder"), and {{transl|ja|''boku''}} "I" ({{lang|ja|僕}} "servant").
[10431010] |This is why some linguists do not classify Japanese "pronouns" as pronouns, but rather as referential nouns.
[10431020] |Japanese personal pronouns are generally used only in situations requiring special emphasis as to who is doing what to whom.
[10431030] |The choice of words used as pronouns is correlated with the sex of the speaker and the social situation in which they are spoken: men and women alike in a formal situation generally refer to themselves as {{transl|ja|''watashi''}} ({{lang|ja|私}} "private") or {{transl|ja|''watakushi''}} (also {{lang|ja|私}}), while men in rougher or intimate conversation are much more likely to use the word {{transl|ja|''ore''}} ({{lang|ja|俺}} "oneself", "myself") or {{transl|ja|''boku''}}.
[10431040] |Similarly, different words such as {{transl|ja|''anata''}}, {{transl|ja|''kimi''}}, and {{transl|ja|''omae''}} ({{lang|ja|お前}}, more formally {{lang|ja|御前}} "the one before me") may be used to refer to a listener depending on the listener's relative social position and the degree of familiarity between the speaker and the listener.
[10431050] |When used in different social relationships, the same word may have positive (intimate or respectful) or negative (distant or disrespectful) connotations.
[10431060] |Japanese often use titles of the person referred to where pronouns would be used in English.
[10431070] |For example, when speaking to one's teacher, it is appropriate to use {{transl|ja|''sensei''}} ({{lang|ja|先生}}, teacher), but inappropriate to use {{transl|ja|''anata''}}.
[10431080] |This is because {{transl|ja|''anata''}} is used to refer to people of equal or lower status, and one's teacher has allegedly higher status.
[10431090] |For English speaking learners of Japanese, a frequent beginners mistake is to include {{transl|ja|''watashi-wa''}} or {{transl|ja|''anata-wa''}} at the beginning of sentences as one would with ''I'' or ''you'' in English.
[10431100] |Though these sentences are not grammatically incorrect, even in formal settings it would be considered unnatural and would equate in English to repeatedly using a noun where a [[pronoun]] would suffice.
[10431110] |=== Inflection and conjugation === 
[10431120] |Japanese nouns have no grammatical number, gender or article aspect.
[10431130] |The noun {{transl|ja|''hon''}} ({{lang|ja|本}}) may refer to a single book or several books; {{transl|ja|''hito''}} ({{lang|ja|人}}) can mean "person" or "people"; and {{transl|ja|''ki''}} ({{lang|ja|木}}) can be "tree" or "trees".
[10431140] |Where number is important, it can be indicated by providing a quantity (often with a [[Japanese counter word|counter word]]) or (rarely) by adding a suffix.
[10431150] |Words for people are usually understood as singular.
[10431160] |Thus {{transl|ja|''Tanaka-san''}} usually means ''Mr./Mrs./Miss. Tanaka''.
[10431170] |Words that refer to people and animals can be made to indicate a group of individuals through the addition of a collective suffix (a noun suffix that indicates a group), such as {{transl|ja|''-tachi''}}, but this is not a true plural: the meaning is closer to the English phrase "and company".
[10431180] |A group described as {{transl|ja|''Tanaka-san-tachi''}} may include people not named Tanaka.
[10431190] |Some Japanese nouns are effectively plural, such as {{transl|ja|''hitobito''}} "people" and {{transl|ja|''wareware''}} "we/us", while the word {{transl|ja|''tomodachi''}} "friend" is considered singular, although plural in form.
[10431200] |Verbs are [[Japanese verb conjugations|conjugated]] to show tenses, of which there are two: past and present, or non-past, which is used for the present and the future.
[10431210] |For verbs that represent an ongoing process, the ''-te iru'' form indicates a continuous (or progressive) tense.
[10431220] |For others that represent a change of state, the {{transl|ja|''-te iru''}} form indicates a perfect tense.
[10431230] |For example, {{transl|ja|''kite iru''}} means "He has come (and is still here)", but {{transl|ja|''tabete iru''}} means "He is eating".
[10431240] |Questions (both with an interrogative pronoun and yes/no questions) have the same structure as affirmative sentences, but with intonation rising at the end.
[10431250] |In the formal register, the question particle {{transl|ja|''-ka''}} is added.
[10431260] |For example, {{transl|ja|''Ii desu''}} ({{lang|ja|いいです。}}) "It is OK" becomes {{transl|ja|''Ii desu-ka''}} ({{lang|ja|いいですか？}}) "Is it OK?".
[10431270] |In a more informal tone sometimes the particle {{transl|ja|''-no''}} ({{lang|ja|の}}) is added instead to show a personal interest of the speaker: {{transl|ja|''Dōshite konai-no?''}}
[10431280] |"Why aren't (you) coming?".
[10431290] |Some simple queries are formed simply by mentioning the topic with an interrogative intonation to call for the hearer's attention: {{transl|ja|''Kore-wa?''}}
[10431300] |"(What about) this?"; {{transl|ja|''Namae-wa?''}} ({{lang|ja|名前は？}}) "(What's your) name?".
[10431310] |Negatives are formed by inflecting the verb.
[10431320] |For example, {{transl|ja|''Pan-o taberu''}} ({{lang|ja|パンを食べる。}}) "I will eat bread" or "I eat bread" becomes {{transl|ja|''Pan-o tabenai''}} ({{lang|ja|パンを食べない。}}) "I will not eat bread" or "I do not eat bread".
[10431330] |The so-called {{transl|ja|''-te''}} verb form is used for a variety of purposes: either progressive or perfect aspect (see above); combining verbs in a temporal sequence ({{transl|ja|''Asagohan-o tabete sugu dekakeru''}} "I'll eat breakfast and leave at once"), simple commands, conditional statements and permissions ({{transl|ja|''Dekakete-mo ii?''}} "May I go out?"), etc.
[10431340] |The word {{transl|ja|''da''}} (plain), {{transl|ja|''desu''}} (polite) is the [[copula]] verb.
[10431350] |It corresponds approximately to the English ''be'', but often takes on other roles, including a marker for tense, when the verb is conjugated into its past form {{transl|ja|''datta''}} (plain), {{transl|ja|''deshita''}} (polite).
[10431360] |This comes into use because only {{transl|ja|''keiyōshi''}} adjectives and verbs can carry tense in Japanese.
[10431370] |Two additional common verbs are used to indicate existence ("there is") or, in some contexts, property: {{transl|ja|''aru''}} (negative {{transl|ja|''nai''}}) and {{transl|ja|''iru''}} (negative {{transl|ja|''inai''}}), for inanimate and animate things, respectively.
[10431380] |For example, {{transl|ja|''Neko ga iru''}} "There's a cat", {{transl|ja|''Ii kangae-ga nai''}} "[I] haven't got a good idea".
[10431390] |Note that the negative forms of the verbs {{transl|ja|''iru''}} and {{transl|ja|''aru''}} are actually ''i''-adjectives and inflect as such, e.g. {{transl|ja|''Neko ga inakatta''}} "There was no cat".
[10431400] |The verb "to do" ({{transl|ja|''suru''}}, polite form {{transl|ja|''shimasu''}}) is often used to make verbs from nouns ({{transl|ja|''ryōri suru''}} "to cook", {{transl|ja|''benkyō suru''}} "to study", etc.) and has been productive in creating modern slang words.
[10431410] |Japanese also has a huge number of compound verbs to express concepts that are described in English using a verb and a preposition (e.g. {{transl|ja|''tobidasu''}} "to fly out, to flee," from {{transl|ja|''tobu''}} "to fly, to jump" + {{transl|ja|''dasu''}} "to put out, to emit").
[10431420] |There are three types of [[Japanese adjectives|adjective]] (see also [[Japanese adjectives]]): 
[10431430] |# {{lang|ja|形容詞}} {{transl|ja|''keiyōshi''}}, or {{transl|ja|''i''}} adjectives, which have a [[Japanese verb conjugations|conjugating]] ending {{transl|ja|''i''}} ({{lang|ja|い}}) (such as {{lang|ja|あつい}} {{transl|ja|''atsui''}} "to be hot") which can become past ({{lang|ja|あつかった}} {{transl|ja|''atsukatta''}} "it was hot"), or negative ({{lang|ja|あつくない}} {{transl|ja|''atsuku nai''}} "it is not hot").
[10431440] |Note that {{transl|ja|''nai''}} is also an {{transl|ja|''i''}} adjective, which can become past ({{lang|ja|あつくなかった}} {{transl|ja|''atsuku nakatta''}} "it was not hot").
[10431450] |#: {{lang|ja|暑い日}} {{transl|ja|''atsui hi''}} "a hot day".
[10431460] |# {{lang|ja|形容動詞}} {{transl|ja|''keiyōdōshi''}}, or {{transl|ja|''na''}} adjectives, which are followed by a form of the [[copula]], usually {{transl|ja|''na''}}.
[10431470] |For example {{transl|ja|''hen''}} (strange)									   
[10431480] |#: {{lang|ja|変なひと}} {{transl|ja|''hen na hito''}} "a strange person".					   
[10431490] |# {{lang|ja|連体詞}} {{transl|ja|''rentaishi''}}, also called true adjectives, such as {{transl|ja|''ano''}} "that" 
[10431500] |#: {{lang|ja|あの山}} {{transl|ja|''ano yama''}} "that mountain".						   
[10431510] |Both {{transl|ja|''keiyōshi''}} and {{transl|ja|''keiyōdōshi''}} may [[predicate (grammar)|predicate]] sentences.  
[10431520] |For example, 
[10431530] |: {{lang|ja|ご飯が熱い。}} {{transl|ja|''Gohan-ga atsui.''}}
[10431540] |"The rice is hot."
[10431550] |: {{lang|ja|彼は変だ。}} {{transl|ja|''Kare-wa hen da.''}}
[10431560] |"He's strange."
[10431570] |Both inflect, though they do not show the full range of conjugation found in true verbs.
[10431580] |The {{transl|ja|''rentaishi''}} in Modern Japanese are few in number, and unlike the other words, are limited to directly modifying nouns.
[10431590] |They never predicate sentences.
[10431600] |Examples include {{transl|ja|''ookina''}} "big", {{transl|ja|''kono''}} "this", {{transl|ja|''iwayuru''}} "so-called" and {{transl|ja|''taishita''}} "amazing".
[10431610] |Both {{transl|ja|''keiyōdōshi''}} and {{transl|ja|''keiyōshi''}} form [[adverb]]s, by following with {{transl|ja|''ni''}} in the case of {{transl|ja|''keiyōdōshi''}}: 
[10431620] |: {{lang|ja|変になる}} {{transl|ja|''hen ni naru''}} "become strange",
[10431630] |and by changing {{transl|ja|''i''}} to {{transl|ja|''ku''}} in the case of {{transl|ja|''keiyōshi''}}: 
[10431640] |: {{lang|ja|熱くなる}} {{transl|ja|''atsuku naru''}} "become hot".
[10431650] |The grammatical function of nouns is indicated by [[postposition]]s, also called [[Japanese particles|particles]].
[10431660] |These include for example: 
[10431670] |* '''{{lang|ja|が}} {{transl|ja|''ga''}}''' for the [[nominative case]].
[10431680] |Not necessarily a subject.
[10431690] |: {{lang|ja|''彼'''が'''やった。''}}{{transl|ja|''Kare '''ga''' yatta.''}}
[10431700] |"'''He''' did it."
[10431710] |* '''{{lang|ja|に}} {{transl|ja|''ni''}}''' for the [[dative case]].
[10431720] |: {{lang|ja|田中さん'''に'''あげて下さい。}} {{transl|ja|''Tanaka-san '''ni''' agete kudasai''}} "Please give it to '''Mr. Tanaka'''."
[10431730] |It is also used for the [[lative]] case, indicating a motion to a location.
[10431740] |: {{lang|ja|''日本'' '''に'''行きたい。}} {{transl|ja|'''''Nihon''' '''ni''' ikitai''}} "I want to go ''to'' '''Japan'''."
[10431750] |* '''{{lang|ja|の}} {{transl|ja|''no''}}''' for the [[genitive case]], or nominalizing phrases.
[10431760] |: {{lang|ja|私'''の'''カメラ。}} {{transl|ja|''watashi '''no''' kamera''}} "'''my''' camera" 
[10431770] |: {{lang|ja|スキーに行く'''の'''が好きです。}} {{transl|ja|''Sukī-ni iku '''no''' ga suki desu''}} "(I) like go'''ing''' skiing."
[10431780] |* '''{{lang|ja|を}} {{transl|ja|''o''}}''' for the [[accusative case]].
[10431790] |Not necessarily an object.
[10431800] |: {{lang|ja|何'''を'''食べますか。}} {{transl|ja|''Nani '''o''' tabemasu ka?''}}
[10431810] |"'''What''' will (you) eat?"
[10431820] |* '''{{lang|ja|は}} {{transl|ja|''wa''}}''' for the topic.
[10431830] |It can co-exist with case markers above except {{transl|ja|''no''}}, and it overrides {{transl|ja|''ga''}} and {{transl|ja|''o''}}.
[10431840] |: {{lang|ja|私'''は'''タイ料理がいいです。}} {{transl|ja|''Watashi '''wa''' tai-ryōri ga ii desu.''}}
[10431850] |"As for me, Thai food is good."
[10431860] |The nominative marker {{transl|ja|''ga''}} after {{transl|ja|''watashi''}} is hidden under {{transl|ja|''wa''}}.
[10431865] |(Note that English generally makes no distinction between sentence topic and subject.)
[10431867] |Note: The difference between {{transl|ja|'''''wa'''''}} and {{transl|ja|'''''ga'''''}} goes beyond the English distinction between sentence topic and subject.
[10431870] |While {{transl|ja|''wa''}} indicates the topic, which the rest of the sentence describes or acts upon, it carries the implication that the subject indicated by {{transl|ja|''wa''}} is not unique, or may be part of a larger group.
[10431880] |: {{transl|ja|''Ikeda-san '''wa''' yonjū-ni sai da.''}}
[10431890] |"As for Mr. Ikeda, he is forty-two years old."
[10431900] |Others in the group may also be of that age.
[10431910] |Absence of {{transl|ja|''wa''}} often means the subject is the [[focus (linguistics)|focus]] of the sentence.
[10431920] |: {{transl|ja|''Ikeda-san '''ga''' yonjū-ni sai da.''}}
[10431930] |"It is Mr. Ikeda who is forty-two years old."
[10431940] |This is a reply to an implicit or explicit question who in this group is forty-two years old.
[10431950] |=== Politeness === 
[10431960] |Unlike most western languages, Japanese has an extensive grammatical system to express politeness and formality.
[10431970] |Most relationships are not equal in Japanese [[society]].
[10431980] |The differences in social position are determined by a variety of factors including job, age, experience, or even psychological state (e.g., a person asking a favour tends to do so politely).
[10431990] |The person in the lower position is expected to use a polite form of speech, whereas the other might use a more plain form.
[10432000] |Strangers will also speak to each other politely.
[10432010] |Japanese children rarely use polite speech until they are teens, at which point they are expected to begin speaking in a more adult manner.
[10432020] |''See [[uchi-soto]]''.
[10432030] |Whereas {{transl|ja|''teineigo''}} ({{lang|ja|丁寧語}}) (polite language) is commonly an [[inflection]]al system, {{transl|ja|''sonkeigo''}} ({{lang|ja|尊敬語}}) (respectful language) and {{transl|ja|''kenjōgo''}} ({{lang|ja|謙譲語}}) (humble language) often employ many special honorific and humble alternate verbs: {{transl|ja|''iku''}} "go" becomes {{transl|ja|''ikimasu''}} in polite form, but is replaced by {{transl|ja|''irassharu''}} in honorific speech and {{transl|ja|''ukagau''}} or {{transl|ja|''mairu''}} in humble speech.
[10432040] |The difference between honorific and humble speech is particularly pronounced in the Japanese language.
[10432050] |Humble language is used to talk about oneself or one's own group (company, family) whilst honorific language is mostly used when describing the interlocutor and his/her group.
[10432060] |For example, the {{transl|ja|''-san''}} suffix ("Mr" "Mrs." or "Miss") is an example of honorific language.
[10432070] |It is not used to talk about oneself or when talking about someone from one's company to an external person, since the company is the speaker's "group".
[10432080] |When speaking directly to one's superior in one's company or when speaking with other employees within one's company about a superior, a Japanese person will use vocabulary and inflections of the honorific register to refer to the in-group superior and his or her speech and actions.
[10432090] |When speaking to a person from another company (i.e., a member of an out-group), however, a Japanese person will use the plain or the humble register to refer to the speech and actions of his or her own in-group superiors.
[10432100] |In short, the register used in Japanese to refer to the person, speech, or actions of any particular individual varies depending on the relationship (either in-group or out-group) between the speaker and listener, as well as depending on the relative status of the speaker, listener, and third-person referents.
[10432110] |For this reason, the Japanese system for explicit indication of social register is known as a system of "relative honorifics."
[10432120] |This stands in stark contrast to the [[Korean language|Korean]] system of "absolute honorifics," in which the same register is used to refer to a particular individual (e.g. one's father, one's company president, etc.) in any context regardless of the relationship between the speaker and interlocutor.
[10432130] |Thus, polite Korean speech can sound very presumptuous when translated verbatim into Japanese, as in Korean it is acceptable and normal to say things like "Our '''Mr.''' Company-President..." when communicating with a member of an out-group, which would be very inappropriate in a Japanese social context.
[10432140] |Most [[noun]]s in the Japanese language may be made polite by the addition of {{transl|ja|''o-''}} or {{transl|ja|''go-''}} as a prefix.
[10432145] |{{transl|ja|''o-''}} is generally used for words of native Japanese origin, whereas {{transl|ja|''go-''}} is affixed to words of Chinese derivation.
[10432150] |In some cases, the prefix has become a fixed part of the word, and is included even in regular speech, such as {{transl|ja|''gohan''}} 'cooked rice; meal.'
[10432160] |Such a construction often indicates deference to either the item's owner or to the object itself.
[10432170] |For example, the word {{transl|ja|''tomodachi''}} 'friend,' would become {{transl|ja|''o-tomodachi''}} when referring to the friend of someone of higher status (though mothers often use this form to refer to their children's friends).
[10432180] |On the other hand, a polite speaker may sometimes refer to {{transl|ja|''mizu''}} 'water' as {{transl|ja|''o-mizu''}} in order to show politeness.
[10432190] |Most Japanese people employ politeness to indicate a lack of familiarity.
[10432200] |That is, they use polite forms for new acquaintances, but if a relationship becomes more intimate, they no longer use them.
[10432210] |This occurs regardless of age, social class, or gender.
[10432220] |== Vocabulary == 
[10432230] |The original language of Japan, or at least the original language of a certain population that was ancestral to a significant portion of the historical and present Japanese nation, was the so-called {{transl|ja|''yamato kotoba''}} ({{lang|ja|大和言葉}} or infrequently {{lang|ja|大和詞}}, i.e. "[[Yamato people|Yamato]] words"), which in scholarly contexts is sometimes referred to as {{transl|ja|''wa-go''}} ({{lang|ja|和語}} or rarely {{lang|ja|倭語}}, i.e. the {{transl|ja|"[[Wa (Japan)|Wa]]}} words").
[10432240] |In addition to words from this original language, present-day Japanese includes a great number of words that were either borrowed from [[Chinese language|Chinese]] or constructed from Chinese roots following Chinese patterns.
[10432250] |These words, known as {{transl|ja|''[[Sino-Japanese vocabulary|kango]]''}} ({{lang|ja|漢語}}), entered the language from the fifth century onwards via contact with Chinese culture.
[10432260] |According to a [[Japanese dictionary]] ''Shinsen-kokugojiten'' (新選国語辞典), [[Sino-Japanese vocabulary|Chinese-based words]] comprise 49.1% of the total vocabulary, Wago is 33.8% and other foreign words are 8.8%.
[10432270] |Like Latin-derived words in English, {{transl|ja|''[[Sino-Japanese vocabulary|kango]]''}} words typically are perceived as somewhat formal or academic compared to equivalent Yamato words.
[10432280] |Indeed, it is generally fair to say that an English word derived from Latin/French roots typically corresponds to a Sino-Japanese word in Japanese, whereas a simpler Anglo-Saxon word would best be translated by a Yamato equivalent.
[10432290] |A much smaller number of words has been borrowed from [[Korean language|Korean]] and [[Ainu language|Ainu]].
[10432300] |Japan has also borrowed a number of words from other languages, particularly ones of European extraction, which are called {{transl|ja|''[[gairaigo]]''}}.
[10432310] |This began with [[Japanese words of Portuguese origin|borrowings from Portuguese]] in the 16th century, followed by borrowing from [[Dutch language|Dutch]] during Japan's [[sakoku|long isolation]] of the [[Edo period]].
[10432320] |With the [[Meiji Restoration]] and the reopening of Japan in the 19th century, borrowing occurred from [[German language|German]], [[French language|French]] and [[English language|English]].
[10432330] |Currently, words of English origin are the most commonly borrowed.
[10432340] |In the Meiji era, the Japanese also coined many neologisms using Chinese roots and morphology to translate Western concepts.
[10432350] |The Chinese and Koreans imported many of these pseudo-Chinese words into [[Chinese language|Chinese]], [[Korean language|Korean]], and [[Vietnamese language|Vietnamese]] via their [[kanji]] in the late 19th and early 20th centuries.
[10432360] |For example, {{lang|ja|政治}} {{transl|ja|''seiji''}} ("politics"), and {{lang|ja|化学}} {{transl|ja|''kagaku''}} ("chemistry") are words derived from Chinese roots that were first created and used by the Japanese, and only later borrowed into Chinese and other East Asian languages.
[10432370] |As a result, Japanese, Chinese, Korean, and Vietnamese share a large common corpus of vocabulary in the same way a large number of Greek- and Latin-derived words are shared among modern European languages, although many academic words formed from such roots were certainly coined by native speakers of other languages, such as English.
[10432380] |In the past few decades, {{transl|ja|''[[wasei-eigo]]''}} (made-in-Japan English) has become a prominent phenomenon.
[10432390] |Words such as {{transl|ja|''wanpatān''}} {{lang|ja|ワンパターン}} (< ''one'' + ''pattern'', "to be in a rut", "to have a one-track mind") and {{transl|ja|''sukinshippu''}}　{{lang|ja|スキンシップ}} (< ''skin'' + ''-ship'', "physical contact"), although coined by compounding English roots, are nonsensical in most non-Japanese contexts; exceptions exist in nearby languages such as Korean however, which often use words such as skinship and rimokon (remote control) in the same way as in Japanese.
[10432400] |Additionally, many native Japanese words have become commonplace in English, due to the popularity of many Japanese cultural exports.
[10432410] |Words such as [[futon]], [[haiku]], [[judo]], [[kamikaze]], [[karaoke]], [[karate]], [[ninja]], [[origami]], [[rickshaw]] (from {{lang|ja|人力車}} {{transl|ja|''jinrikisha''}}), [[samurai]], [[sayonara]], [[sumo]], [[sushi]], [[tsunami]], [[tycoon]] and many others have become part of the English language.
[10432420] |See [[list of English words of Japanese origin]] for more.
[10432430] |== Writing system == 
[10432440] |Literacy was introduced to Japan in the form of the [[Chinese writing system]], by way of [[Baekje]] before the 5th century.
[10432450] |Using this language, the Japanese emperor [[Emperor Yūryaku|Yūryaku]] sent a letter to a Chinese emperor [[Emperor Shun of Liu Song|Liu Song]] in 478 CE.
[10432460] |After the ruin of Baekje, Japan invited scholars from China to learn more of the Chinese writing system.
[10432470] |Japanese Emperors gave an official rank to Chinese scholars (続守言/薩弘格/袁晋卿) and spread the use of Chinese characters from the 7th century to the 8th century.
[10432480] |At first, the Japanese wrote in [[Classical Chinese]], with Japanese names represented by characters used for their meanings and not their sounds.
[10432490] |Later, during the seventh century CE, the Chinese-sounding phoneme principle was used to write pure Japanese poetry and prose (comparable to Akkadian's retention of Sumerian cuneiform), but some Japanese words were still written with characters for their meaning and not the original Chinese sound.
[10432500] |This is when the history of Japanese as a written language begins in its own right.
[10432510] |By this time, the Japanese language was already distinct from the [[Ryukyuan languages]].
[10432520] |The Korean settlers and their descendants used Kudara-on or Baekje pronunciation (百済音), which was also called Tsushima-pronunciation (対馬音) or [[Go-on]] (呉音).
[10432530] |An example of this mixed style is the [[Kojiki]], which was written in 712 AD.
[10432540] |They then started to use Chinese characters to write Japanese in a style known as {{transl|ja|''man'yōgana''}}, a syllabic script which used Chinese characters for their sounds in order to transcribe the words of Japanese speech syllable by syllable.
[10432550] |Over time, a writing system evolved.
[10432560] |[[Chinese characters]] ([[kanji]]) were used to write either words borrowed from Chinese, or Japanese words with the same or similar meanings.
[10432570] |Chinese characters were also used to write grammatical elements, were simplified, and eventually became two syllabic scripts: [[hiragana]] and [[katakana]].
[10432580] |Modern Japanese is written in a mixture of three main systems: [[kanji]], characters of Chinese origin used to represent both Chinese [[loanword]]s into Japanese and a number of native Japanese [[morpheme]]s; and two [[syllabary|syllabaries]]: [[hiragana]] and [[katakana]].
[10432590] |The [[Latin alphabet]] is also sometimes used.
[10432600] |Arabic numerals are much more common than the kanji when used in counting, but kanji numerals are still used in compounds, such as {{lang|ja|統一}} {{transl|ja|''tōitsu''}} ("unification").
[10432610] |''[[Hiragana]]'' are used for words without kanji representation, for words no longer written in kanji, and also following kanji to show conjugational endings.
[10432620] |Because of the way verbs (and adjectives) in Japanese are [[conjugated]], kanji alone cannot fully convey Japanese tense and mood, as kanji cannot be subject to variation when written without losing its meaning.
[10432630] |For this reason, hiragana are suffixed to the ends of kanji to show verb and adjective conjugations.
[10432640] |Hiragana used in this way are called [[okurigana]].
[10432650] |Hiragana are also written in a superscript called [[furigana]] above or beside a kanji to show the proper reading.
[10432660] |This is done to facilitate learning, as well as to clarify particularly old or obscure (or sometimes invented) readings.
[10432670] |''[[Katakana]]'', like hiragana, are a syllabary; katakana are primarily used to write foreign words, plant and animal names, and for emphasis.
[10432680] |For example "Australia" has been adapted as {{transl|ja|''Ōsutoraria''}} ({{lang|ja|オーストラリア}}), and "supermarket" has been adapted and shortened into {{transl|ja|''sūpā''}} ({{lang|ja|スーパー}}).
[10432690] |The [[Latin alphabet]] (in Japanese referred to as [[romaji|''Rōmaji'']] ({{lang|ja|ローマ字}}), literally "Roman letters") is used for some loan words like "CD" and "DVD", and also for some Japanese creations like "Sony".
[10432700] |Historically, attempts to limit the number of kanji in use commenced in the mid-19th century, but did not become a matter of government intervention until after Japan's defeat in the Second World War.
[10432710] |During the period of post-war occupation (and influenced by the views of some U.S. officials), various schemes including the complete abolition of kanji and exclusive use of rōmaji were considered.
[10432720] |The {{transl|ja|''[[jōyō kanji]]''}} ("common use kanji", originally called {{transl|ja|''[[tōyō kanji]]''}} [kanji for general use]) scheme arose as a compromise solution.
[10432730] |Japanese students begin to learn kanji from their first year at elementary school.
[10432740] |A guideline created by the Japanese Ministry of Education, the list of {{transl|ja|''[[kyōiku kanji]]''}} ("education kanji", a subset of {{transl|ja|''[[jōyō kanji]]''}}), specifies the 1,006 simple characters a child is to learn by the end of sixth grade.
[10432750] |Children continue to study another 939 characters in junior high school, covering in total 1,945 {{transl|ja|''[[jōyō kanji]]''}}.
[10432760] |The official list of {{transl|ja|''[[jōyō kanji]]''}} was revised several times, but the total number of officially sanctioned characters remained largely unchanged.
[10432770] |As for kanji for personal names, the circumstances are somewhat complicated.
[10432780] |{{transl|ja|''[[Jōyō kanji]]''}} and {{transl|ja|''[[jinmeiyō kanji]]''}} (an appendix of additional characters for names) are approved for registering personal names.
[10432790] |Names containing unapproved characters are denied registration.
[10432800] |However, as with the list of {{transl|ja|''[[jōyō kanji]]''}}, criteria for inclusion were often arbitrary and led to many common and popular characters being disapproved for use.
[10432810] |Under popular pressure and following a court decision holding the exclusion of common characters unlawful, the list of {{transl|ja|''[[jinmeiyō kanji]]''}} was substantially extended from 92 in 1951 (the year it was first decreed) to 983 in 2004.
[10432820] |Furthermore, families whose names are not on these lists were permitted to continue using the older forms.
[10432830] |Many writers rely on [[newspaper]] circulation to publish their work with officially sanctioned characters.
[10432840] |This distribution method is more efficient than traditional [[pen]] and [[paper]] publications.
[10432850] |==Study by non-native speakers== 
[10432860] |Many major universities throughout the world provide Japanese language courses, and a number of secondary and even primary schools worldwide offer courses in the language.
[10432870] |International interest in the Japanese language dates from the 1800s but has become more prevalent following Japan's economic bubble of the 1980s and the global popularity of [[Japanese pop culture]] (such as [[anime]] and [[video games]]) since the 1990s.
[10432880] |About 2.3 million people studied the language worldwide in 2003: 900,000 South [[Koreans]], 389,000 [[People's Republic of China|Chinese]], 381,000 [[Australians]], and 140,000 [[United States|Americans]] study Japanese in lower and higher educational institutions.
[10432890] |In Japan, more than 90,000 foreign students study at [[List of universities in Japan|Japanese universities]] and Japanese [[language school]]s, including 77,000 Chinese and 15,000 South Koreans in 2003.
[10432900] |In addition, local governments and some [[non-profit organisation|NPO]] groups provide free Japanese language classes for foreign residents, including [[Japanese Brazilians]] and foreigners married to Japanese nationals.
[10432910] |In the United Kingdom, studies are supported by the [[British Association for Japanese Studies]].
[10432920] |In Ireland, Japanese is offered as a language in the [[Leaving Certificate]] in some schools.
[10432930] |The Japanese government provides standardised tests to measure spoken and written comprehension of Japanese for second language learners; the most prominent is the [[Japanese Language Proficiency Test]] (JLPT).
[10432940] |The Japanese External Trade Organisation [[JETRO]] organises the ''Business Japanese Proficiency Test'' which tests the learner's ability to understand Japanese in a business setting.
[10432950] |When learning Japanese in a college setting, students are usually first taught how to pronounce [[romaji]].
[10432960] |From that point, they are taught the two main syllabaries, with [[kanji]] usually being introduced in the second semester.
[10432970] |Focus is usually first on polite (distal) speech, as students that might interact with native speakers would be expected to use.
[10432980] |Casual speech and formal speech usually follow polite speech, as well as the usage of honourifics.
[10440010] |<article>Java (programming language)</article>
[10440020] |'''Java''' is a [[programming language]] originally developed by [[Sun Microsystems]] and released in 1995 as a core component of Sun Microsystems' [[Java (Sun)|Java platform]].
[10440030] |The language derives much of its [[Syntax of programming languages|syntax]] from [[C (programming language)|C]] and [[C++]] but has a simpler [[object model]] and fewer low-level facilities.
[10440040] |Java applications are typically [[compiler|compiled]] to [[bytecode]] that can run on any [[Java virtual machine]] (JVM) regardless of [[computer architecture]].
[10440050] |The original and [[reference implementation]] Java [[compiler]]s, virtual machines, and [[library (computing)|class libraries]] were developed by Sun from 1995.
[10440060] |As of May 2007, in compliance with the specifications of the [[Java Community Process]], Sun made available most of their Java technologies as [[free software]] under the [[GNU General Public License]].
[10440070] |Others have also developed alternative implementations of these Sun technologies, such as the [[GNU Compiler for Java]] and [[GNU Classpath]].
[10440080] |== History == 
[10440090] |The Java language was created by [[James Gosling]] in June 1991 for use in one of his many [[set-top box]] projects.
[10440100] |The language was initially called ''Oak'', after an [[oak tree]] that stood outside Gosling's office—and also went by the name ''Green''—and ended up later being renamed to ''Java'', from a list of random words.
[10440110] |Gosling's goals were to implement a [[virtual machine]] and a language that had a familiar C/C++ style of notation.
[10440120] |The first public implementation was Java 1.0 in 1995.
[10440130] |It promised "[[Write once, run anywhere|Write Once, Run Anywhere]]" (WORA), providing no-cost runtimes on popular platforms.
[10440140] |It was fairly secure and its security was configurable, allowing network and file access to be restricted.
[10440150] |Major web browsers soon incorporated the ability to run secure Java ''[[applet]]s'' within web pages.
[10440160] |Java quickly became popular.
[10440170] |With the advent of ''Java 2'', new versions had multiple configurations built for different types of platforms.
[10440180] |For example, ''[[J2EE]]'' was for enterprise applications and the greatly stripped down version ''[[J2ME]]'' was for mobile applications.
[10440190] |''[[J2SE]]'' was the designation for the Standard Edition.
[10440200] |In 2006, for marketing purposes, new ''J2'' versions were renamed ''Java EE'', ''Java ME'', and ''Java SE'', respectively.
[10440210] |In 1997, Sun Microsystems approached the [[International Organization for Standardization#JTC1|ISO/IEC JTC1 standards body]] and later the [[Ecma International]] to formalize Java, but it soon withdrew from the process.
[10440220] |Java remains a [[de facto]] standard that is controlled through the [[Java Community Process]].
[10440230] |At one time, Sun made most of its Java implementations available without charge although they were [[proprietary software]].
[10440240] |Sun's revenue from Java was generated by the selling of licenses for specialized products such as the Java Enterprise System.
[10440250] |Sun distinguishes between its [[Software Development Kit|Software Development Kit (SDK)]] and [[HotSpot|Runtime Environment (JRE)]] that is a subset of the SDK, the primary distinction being that in the JRE, the compiler, utility programs, and many necessary header files are not present.
[10440260] |On [[13 November]] [[2006]], Sun released much of Java as [[free software|free]] and [[open-source software|open-source]] software under the terms of the [[GNU General Public License]] (GPL).
[10440270] |On [[8 May]] [[2007]] Sun finished the process, making all of Java's core code free and open-source, aside from a small portion of code to which Sun did not hold the copyright.
[10440280] |== Philosophy == 
[10440290] |=== Primary goals === 
[10440300] |There were five primary goals in the creation of the Java language:
[10440310] |# It should use the [[object-oriented programming]] methodology.
[10440320] |# It should allow the same program to be [[execution (computers)|executed]] on multiple [[operating system]]s.
[10440330] |# It should contain built-in support for using [[computer network]]s.
[10440340] |# It should be designed to execute code from [[remote procedure call|remote source]]s securely.
[10440350] |# It should be easy to use by selecting what were considered the good parts of other object-oriented languages.
[10440360] |=== Platform independence === 
[10440370] |One characteristic, [[Cross-platform|platform independence]], means that [[computer program|program]]s written in the Java language must run similarly on any supported hardware/operating-system platform.
[10440380] |One should be able to write a program once, compile it once, and run it anywhere.
[10440390] |This is achieved by most Java [[compiler]]s by compiling the Java language code ''halfway'' (to [[Java bytecode]]) – simplified machine instructions specific to the Java platform.
[10440400] |The code is then run on a [[virtual machine]] (VM), a program written in native code on the host hardware that [[Interpreter (computing)|interprets]] and executes generic Java bytecode.
[10440410] |(In some JVM versions, bytecode can also be compiled to native code, either before or during program execution, resulting in faster execution.)
[10440420] |Further, standardized libraries are provided to allow access to features of the host machines (such as graphics, [[thread (computer science)|threading]] and [[Computer network|networking]]) in unified ways.
[10440430] |Note that, although there is an explicit compiling stage, at some point, the Java bytecode is interpreted or converted to native [[machine code]] by the [[Just-in-time compilation|JIT compiler]].
[10440440] |The first implementations of the language used an interpreted virtual machine to achieve [[Porting|portability]].
[10440450] |These implementations produced programs that ran slower than programs compiled to native executables, for instance written in C or C++, so the language suffered a reputation for poor performance.
[10440460] |More recent JVM implementations produce programs that run significantly faster than before, using multiple techniques.
[10440470] |One technique, known as ''just-in-time compilation'' (JIT), translates the Java bytecode into native code at the time that the program is run, which results in a program that executes faster than interpreted code but also incurs compilation overhead during execution.
[10440480] |More sophisticated VMs use ''[[dynamic recompilation]]'', in which the VM can analyze the behavior of the running program and selectively recompile and optimize critical parts of the program.
[10440490] |Dynamic recompilation can achieve optimizations superior to static compilation because the dynamic compiler can base optimizations on knowledge about the runtime environment and the set of loaded classes, and can identify the ''hot spots'' (parts of the program, often inner loops, that take up the most execution time).
[10440500] |JIT compilation and dynamic recompilation allow Java programs to take advantage of the speed of native code without losing portability.
[10440510] |Another technique, commonly known as ''static compilation'', is to compile directly into native code like a more traditional compiler.
[10440520] |Static Java compilers, such as [[GCJ]], translate the Java language code to native [[object code]], removing the intermediate bytecode stage.
[10440530] |This achieves good performance compared to interpretation, but at the expense of portability; the output of these compilers can only be run on a single [[Computer architecture|architecture]].
[10440540] |Some see avoiding the VM in this manner as defeating the point of developing in Java; however it can be useful to provide both a generic [[bytecode]] version, as well as an optimised native code version of an application.
[10440550] |=== Implementations === 
[10440560] |Sun Microsystems officially licenses the Java Standard Edition platform for [[Microsoft Windows]], [[Linux]], and [[Solaris (operating system)|Solaris]].
[10440570] |Through a network of third-party vendors and licensees, alternative Java environments are available for these and other platforms.
[10440580] |To qualify as a certified Java licensee, an implementation on any particular platform must pass a rigorous suite of validation and compatibility tests.
[10440590] |This method enables a guaranteed level of compliance and platform through a trusted set of commercial and non-commercial partners.
[10440600] |Sun's trademark license for usage of the Java brand insists that all implementations be "compatible".
[10440610] |This resulted in a legal dispute with [[Microsoft]] after Sun claimed that the Microsoft implementation did not support the [[Java remote method invocation|RMI]] and [[Java Native Interface|JNI]] interfaces and had added platform-specific features of their own.
[10440620] |Sun sued in 1997, and in 2001 won a settlement of $20 million as well as a court order enforcing the terms of the license from Sun.
[10440630] |As a result, Microsoft no longer ships Java with [[Microsoft Windows|Windows]], and in recent versions of Windows, [[Internet Explorer]] cannot support Java applets without a third-party plugin.
[10440640] |However, Sun and others have made available Java run-time systems at no cost for those and other versions of Windows.
[10440650] |Platform-independent Java is essential to the [[Java Enterprise Edition]] strategy, and an even more rigorous validation is required to certify an implementation.
[10440660] |This environment enables portable server-side applications, such as [[Web service]]s, [[servlet]]s, and [[Enterprise JavaBean]]s, as well as with [[Embedded system]]s based on [[OSGi]], using [[Embedded Java]] environments.
[10440670] |Through the new [[GlassFish]] project, Sun is working to create a fully functional, unified [[open-source]] implementation of the Java EE technologies.
[10440680] |=== Automatic memory management === 
[10440690] |One of the ideas behind Java's automatic memory management model is that programmers be spared the burden of having to perform manual memory management.
[10440700] |In some languages the programmer allocates memory for the creation of objects stored on the [[heap]] and the responsibility of later deallocating that memory also resides with the programmer.
[10440710] |If the programmer forgets to deallocate memory or writes code that fails to do so, a [[memory leak]] occurs and the program can consume an arbitrarily large amount of memory.
[10440720] |Additionally, if the program attempts to deallocate the region of memory more than once, the result is undefined and the program may become unstable and may crash.
[10440730] |Finally, in non garbage collected environments, there is a certain degree of overhead and complexity of user-code to track and finalize allocations.
[10440740] |Often developers may box themselves into certain designs to provide reasonable assurances that memory leaks will not occur.
[10440750] |In Java, this potential problem is avoided by [[automatic garbage collection]].
[10440760] |The programmer determines when objects are created, and the Java runtime is responsible for managing the [[object lifetime|object's lifecycle]].
[10440770] |The program or other objects can reference an object by holding a reference to it (which, from a low-level point of view, is its address on the heap).
[10440780] |When no references to an object remain, the [[unreachable object]] is eligible for release by the Java garbage collector - it may be freed automatically by the garbage collector at any time.
[10440790] |Memory leaks may still occur if a programmer's code holds a reference to an object that is no longer needed—in other words, they can still occur but at higher conceptual levels.
[10440800] |The use of garbage collection in a language can also affect programming paradigms.
[10440810] |If, for example, the developer assumes that the cost of memory allocation/recollection is low, they may choose to more freely construct objects instead of pre-initializing, holding and reusing them.
[10440820] |With the small cost of potential performance penalties (inner-loop construction of large/complex objects), this facilitates thread-isolation (no need to synchronize as different threads work on different object instances) and data-hiding.
[10440830] |The use of transient immutable value-objects minimizes side-effect programming.
[10440840] |Comparing Java and [[C++]], it is possible in C++ to implement similar functionality (for example, a memory management model for specific classes can be designed in C++ to improve speed and lower memory fragmentation considerably), with the possible cost of adding comparable runtime overhead to that of Java's garbage collector, and of added development time and application complexity if one favors manual implementation over using an existing third-party library.
[10440850] |In Java, garbage collection is built-in and virtually invisible to the developer.
[10440860] |That is, developers may have no notion of when garbage collection will take place as it may not necessarily correlate with any actions being explicitly performed by the code they write.
[10440870] |Depending on intended application, this can be beneficial or disadvantageous: the programmer is freed from performing low-level tasks, but at the same time loses the option of writing lower level code.
[10440880] |Additionally, the garbage collection capability demands some attention to tuning the JVM, as large heaps will cause apparently random stalls in performance.
[10440890] |Java does not support [[pointer (computing)|pointer arithmetic]] as is supported in, for example, C++.
[10440900] |This is because the garbage collector may relocate referenced objects, invalidating such pointers.
[10440910] |Another reason that Java forbids this is that type safety and security can no longer be guaranteed if arbitrary manipulation of pointers is allowed.
[10440920] |== Syntax == 
[10440930] |The syntax of Java is largely derived from [[C++]].
[10440940] |Unlike C++, which combines the syntax for structured, generic, and object-oriented programming, Java was built exclusively as an object oriented language.
[10440950] |As a result, almost everything is an object and all code is written inside a class.
[10440960] |The exceptions are the intrinsic data types (ordinal and real numbers, boolean values, and characters), which are not classes for performance reasons.
[10440970] |=== Hello, world program === 
[10440980] |This is a minimal [[Hello world program]] in Java with [[syntax highlighting]]:
[10440990] |<source lang="java"> // Hello.java public class Hello { public static void main(String[] args) { System.out.println("Hello, world!"); } } </source>
[10441000] |To execute a Java program, the code is saved as a file named <code>Hello.java</code>.
[10441010] |It must first be compiled into bytecode using a [[Java compiler]], which produces a file named <code>Hello.class</code>.
[10441020] |This class is then ''launched''.
[10441030] |The above example merits a bit of explanation.
[10441040] |* All executable statements in Java are written inside a class, including stand-alone programs.
[10441050] |* Source files are by convention named the same as the class they contain, appending the mandatory suffix ''.java''.
[10441060] |A <code>'''class'''</code> that is declared <code>'''public'''</code> is required to follow this convention.
[10441070] |(In this case, the class <code>'''Hello'''</code> is public, therefore the source must be stored in a file called ''Hello.java'').
[10441080] |* The compiler will generate a class file for each class defined in the source file.
[10441090] |The name of the class file is the name of the class, with ''.class'' appended.
[10441100] |For class file generation, anonymous classes are treated as if their name was the concatenation of the name of their enclosing class, a ''$'', and an integer.
[10441110] |* The [[Java keywords|keyword]] <code>'''public'''</code> denotes that a method can be called from code in other classes, or that a class may be used by classes outside the class hierarchy.
[10441120] |* The keyword <code>'''static'''</code> indicates that the method is a [[class method|static method]], associated with the class rather than object instances.
[10441130] |* The keyword <code>'''void'''</code> indicates that the main method does not return any value to the caller.
[10441140] |* The method name "<code>main</code>" is not a keyword in the Java language.
[10441150] |It is simply the name of the method the Java launcher calls to pass control to the program.
[10441160] |Java classes that run in managed environments such as applets and [[Enterprise Java Beans]] do not use or need a <code>main()</code> method.
[10441170] |* The main method must accept an [[array]] of '''{{Javadoc:SE|java/lang|String}}''' objects.
[10441180] |By convention, it is referenced as <code>'''args'''</code> although any other legal identifier name can be used.
[10441190] |Since Java 5, the main method can also use [[varargs|variable arguments]], in the form of <code>public static void main(String... args)</code>, allowing the main method to be invoked with an arbitrary number of <code>String</code> arguments.
[10441200] |The effect of this alternate declaration is semantically identical (the <code>args</code> parameter is still an array of <code>String</code> objects), but allows an alternate syntax for creating and passing the array.
[10441210] |* The Java launcher launches Java by loading a given class (specified on the command line) and starting its <code>public static void main(String[])</code> method.
[10441220] |Stand-alone programs must declare this method explicitly.
[10441230] |The <code>String[] args</code> parameter is an [[array]] of {{Javadoc:SE|java/lang|String}} objects containing any arguments passed to the class.
[10441240] |The parameters to <code>main</code> are often passed by means of a [[command line]].
[10441250] |* The printing facility is part of the Java standard library: The '''{{Javadoc:SE|java/lang|System}}''' class defines a public static field called '''{{Javadoc:SE|name=out|java/lang|System|out}}'''.
[10441260] |The <code>out</code> object is an instance of the {{Javadoc:SE|java/io|PrintStream}} class and provides the method '''{{Javadoc:SE|name=println(String)|java/io|PrintStream|println(java.lang.String)}}''' for displaying data to the screen while creating a new line ([[standard streams|standard out]]).
[10441270] |=== A more comprehensive example === 
[10441280] |<source lang="java"> // OddEven.java import javax.swing.JOptionPane;public class OddEven { public static void main(String[] args) { // This is the main method.It gets called when this class is run through a Java interpreter.OddEven number = new OddEven(); /* This line of code creates a new instance of this class called "number" and * initializes it, and the next line of code calls the "showDialog()" method, * which brings up a prompt to ask you for a number */ number.showDialog(); } private int input; // A whole number("int" means integer) // "input" is the number that the user gives to the computer public OddEven() { /* This is the constructor method.It gets called when an object of the OddEven type * is created. */ } public void showDialog() { try /* This makes sure nothing goes wrong.If something does, * the interpreter skips to "catch" to see what it should do. */ { input = Integer.parseInt(JOptionPane.showInputDialog("Please Enter A Number")); calculate(); /* * The code above brings up a JOptionPane, which is a dialog box * The String returned by the "showInputDialog()" method is converted into * an integer, making the program treat it as a number instead of a word. * After that, this method calls a second method, calculate() that will * display either "Even" or "Odd." */ } catch (NumberFormatException e) /* This means that there was a problem with the format of the number * (Like if someone were to type in 'Hello world' instead of a number). */ { System.err.println("ERROR: Invalid input.Please type in a numerical value."); } } private void calculate() { if (input % 2 == 0) System.out.println("Even"); /* When this gets called, it sends a message to the interpreter. * The interpreter usually shows it on the command prompt (For Windows users) * or the terminal (For Linux users).(Assuming it's open) */ else System.out.println("Odd"); } } </source>
[10441290] |* The '''[[Java keywords#import|import]]''' statement imports the '''{{Javadoc:SE|javax/swing|JOptionPane}}''' class from the '''{{Javadoc:SE|package=javax.swing|javax/swing}}''' package.
[10441300] |* The <code>'''OddEven'''</code> class declares a single <code>'''[[Java keywords#private|private]]'''</code> [[field (computer science)|field]] of type <code>'''int'''</code> named <code>'''input'''</code>.
[10441310] |Every instance of the <code>OddEven</code> class has its own copy of the <code>input</code> field.
[10441320] |The private declaration means that no other class can access (read or write) the <code>input</code> field.
[10441330] |* <code>'''OddEven()'''</code> is a <code>'''public'''</code> [[constructor (computer science)|constructor]].
[10441340] |Constructors have the same name as the enclosing class they are declared in, and unlike a method, have no [[return type]].
[10441350] |A constructor is used to initialize an [[object (computer science)|object]] that is a newly created instance of the class.
[10441360] |The dialog returns a <code>String</code> that is converted to an <code>int</code> by the '''{{Javadoc:SE|java/lang|Integer|parseInt(String)}}''' method.
[10441370] |* The <code>'''calculate()'''</code> method is declared without the <code>static</code> keyword.
[10441380] |This means that the method is invoked using a specific instance of the <code>OddEven</code> class.
[10441390] |(The [[reference (computer science)|reference]] used to invoke the method is passed as an undeclared parameter of type <code>OddEven</code> named <code>'''[[Java keywords#this|this]]'''</code>.)
[10441400] |The method tests the expression <code>input % 2 == 0</code> using the <code>'''[[Java keywords#if|if]]'''</code> keyword to see if the remainder of dividing the <code>input</code> field belonging to the instance of the class by two is zero.
[10441410] |If this expression is true, then it prints '''Even'''; if this expression is false it prints '''Odd'''.
[10441420] |(The <code>input</code> field can be equivalently accessed as <code>this.input</code>, which explicitly uses the undeclared <code>this</code> parameter.)
[10441430] |* <code>'''OddEven number = new OddEven();'''</code> declares a local object [[reference (computer science)|reference]] variable in the <code>main</code> method named <code>number</code>.
[10441440] |This variable can hold a reference to an object of type <code>OddEven</code>.
[10441450] |The declaration initializes <code>number</code> by first creating an instance of the <code>OddEven</code> class, using the <code>'''[[Java keywords#new|new]]'''</code> keyword and the <code>OddEven()</code> constructor, and then assigning this instance to the variable.
[10441460] |* The statement <code>'''number.showDialog();'''</code> calls the calculate method.
[10441470] |The instance of <code>OddEven</code> object referenced by the <code>number</code> [[local variable]] is used to invoke the method and passed as the undeclared <code>this</code> parameter to the <code>calculate</code> method.
[10441480] |* For simplicity, [[error handling]] has been ignored in this example.
[10441490] |Entering a value that is not a number will cause the program to crash.
[10441500] |This can be avoided by catching and handling the {{Javadoc:SE|java/lang|NumberFormatException}} thrown by <code>Integer.parseInt(String)</code>.
[10441510] |=== Applet === 
[10441520] |Java applets are programs that are embedded in other applications, typically in a Web page displayed in a [[Web browser]].
[10441530] |<source lang="java"> // Hello.java import java.applet.Applet; import java.awt.Graphics;public class Hello extends Applet { public void paint(Graphics gc) { gc.drawString("Hello, world!", 65, 95); } } </source>
[10441540] |The <code>'''import'''</code> statements direct the [[Java compiler]] to include the '''{{Javadoc:SE|package=java.applet|java/applet|Applet}}''' and '''{{Javadoc:SE|package=java.awt|java/awt|Graphics}}''' classes in the compilation.
[10441550] |The import statement allows these classes to be referenced in the [[source code]] using the ''simple class name'' (i.e. <code>Applet</code>) instead of the ''fully qualified class name'' (i.e. <code>java.applet.Applet</code>).
[10441560] |The <code>Hello</code> class <code>'''extends'''</code> ([[subclass (computer science)|subclasses]]) the <code>'''Applet'''</code> class; the <code>Applet</code> class provides the framework for the host application to display and control the [[Object lifetime|lifecycle]] of the applet.
[10441570] |The <code>Applet</code> class is an [[Abstract Windowing Toolkit]] (AWT) {{Javadoc:SE|java/awt|Component}}, which provides the applet with the capability to display a [[graphical user interface]] (GUI) and respond to user [[event-driven programming|events]].
[10441580] |The <code>Hello</code> class [[method overriding (programming)|overrides]] the '''{{Javadoc:SE|name=paint(Graphics)|java/awt|Container|paint(java.awt.Graphics)}}''' method inherited from the {{Javadoc:SE|java/awt|Container}} [[superclass (computer science)|superclass]] to provide the code to display the applet.
[10441590] |The <code>paint()</code> method is passed a <code>'''Graphics'''</code> object that contains the graphic context used to display the applet.
[10441600] |The <code>paint()</code> method calls the graphic context '''{{Javadoc:SE|name=drawString(String, int, int)|java/awt|Graphics|drawString(java.lang.String,%20int,%20int)}}''' method to display the '''"Hello, world!"''' string at a [[pixel]] offset of (<code>'''65, 95'''</code>) from the upper-left corner in the applet's display.
[10441610] |<source lang="html4strict"><html> <head> <title>Hello World Applet</title> </head> <body> <applet code="Hello" width="200" height="200"> </applet> </body> </html> </source>
[10441620] |An applet is placed in an [[HTML]] document using the '''<code><applet></code>''' [[HTML element]].
[10441630] |The <code>applet</code> tag has three attributes set: '''<code>code="Hello"</code>''' specifies the name of the <code>Applet</code> class and '''<code>width="200" height="200"</code>''' sets the pixel width and height of the applet.
[10441640] |Applets may also be embedded in HTML using either the <code>object</code> or <code>embed</code> element, although support for these elements by Web browsers is inconsistent.
[10441650] |However, the <code>applet</code> tag is deprecated, so the <code>object</code> tag is preferred where supported.
[10441660] |The host application, typically a Web browser, instantiates the '''<code>Hello</code>''' applet and creates an {{Javadoc:SE|java/applet|AppletContext}} for the applet.
[10441670] |Once the applet has initialized itself, it is added to the AWT display hierarchy.
[10441680] |The <code>paint</code> method is called by the AWT [[event dispatching thread]] whenever the display needs the applet to draw itself.
[10441690] |=== '''Servlet''' === 
[10441700] |Java Servlet technology provides Web developers with a simple, consistent mechanism for extending the functionality of a Web server and for accessing existing business systems.
[10441710] |Servlets are [[server-side]] Java EE components that generate responses (typically [[HTML]] pages) to requests (typically [[HTTP]] requests) from [[client (computing)|client]]s.
[10441720] |A servlet can almost be thought of as an applet that runs on the server side—without a face.
[10441730] |<source lang="java"> // Hello.java import java.io.*; import javax.servlet.*;public class Hello extends GenericServlet { public void service(ServletRequest request, ServletResponse response) throws ServletException, IOException { response.setContentType("text/html"); final PrintWriter pw = response.getWriter(); pw.println("Hello, world!"); pw.close(); } } </source>
[10441740] |The '''<code>import</code>''' statements direct the Java compiler to include all of the public classes and [[interface (Java)|interfaces]] from the '''{{Javadoc:SE|package=java.io|java/io}}''' and '''{{Javadoc:EE|package=javax.servlet|javax/servlet}}''' [[Java package|packages]] in the compilation.
[10441750] |The <code>'''Hello'''</code> class <code>'''extends'''</code> the '''{{Javadoc:EE|javax/servlet|GenericServlet}}''' class; the <code>GenericServlet</code> class provides the interface for the [[server (computing)|server]] to forward requests to the servlet and control the servlet's lifecycle.
[10441760] |The <code>Hello</code> class overrides the '''{{Javadoc:EE|name=service(ServletRequest, ServletResponse)|javax/servlet|Servlet|service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)}}''' method defined by the {{Javadoc:EE|javax/servlet|Servlet}} [[Interface (Java)|interface]] to provide the code for the service request handler.
[10441770] |The <code>service()</code> method is passed a '''{{Javadoc:EE|javax/servlet|ServletRequest}}''' object that contains the request from the client and a '''{{Javadoc:EE|javax/servlet|ServletResponse}}''' object used to create the response returned to the client.
[10441780] |The <code>service()</code> method declares that it <code>'''throws'''</code> the [[exception handling|exceptions]] {{Javadoc:EE|javax/servlet|ServletException}} and {{Javadoc:SE|java/io|IOException}} if a problem prevents it from responding to the request.
[10441790] |The '''{{Javadoc:EE|name=setContentType(String)|javax/servlet|ServletResponse|setContentType(java.lang.String)}}''' method in the response object is called to set the [[MIME]] content type of the returned data to '''"text/html"'''.
[10441800] |The '''{{Javadoc:EE|name=getWriter()|javax/servlet|ServletResponse|getWriter()}}''' method in the response returns a '''{{Javadoc:SE|java/io|PrintWriter}}''' object that is used to write the data that is sent to the client.
[10441810] |The '''{{Javadoc:SE|name=println(String)|java/io|PrintWriter|println(java.lang.String)}}''' method is called to write the '''"Hello, world!"''' string to the response and then the '''{{Javadoc:SE|name=close()|java/io|PrintWriter|close()}}''' method is called to close the print writer, which causes the data that has been written to the stream to be returned to the client.
[10441820] |=== JavaServer Page === 
[10441830] |JavaServer Pages (JSPs) are [[server-side]] Java EE components that generate responses, typically [[HTML]] pages, to [[HTTP]] requests from [[client (computing)|client]]s.
[10441840] |JSPs embed Java code in an HTML page by using the special [[delimiter]]s <code lang-java"><%</code> and <code lang-java">%></code>.
[10441850] |A JSP is compiled to a Java ''servlet'', a Java application in its own right, the first time it is accessed.
[10441860] |After that, the generated servlet creates the response.
[10441870] |=== Swing application === 
[10441880] |Swing is a graphical user interface [[library (computer science)|library]] for the Java SE platform.
[10441890] |This example Swing application creates a single window with "Hello, world!" inside: 
[10441900] |<source lang="java"> // Hello.java (Java SE 5) import java.awt.BorderLayout; import javax.swing.*;public class Hello extends JFrame { public Hello() { super("hello"); setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE); setLayout(new BorderLayout()); add(new JLabel("Hello, world!")); pack(); }public static void main(String[] args) { new Hello().setVisible(true); } } </source>
[10441910] |The first '''<code>import</code>''' statement directs the Java compiler to include the {{Javadoc:SE|java/awt|BorderLayout}} class from the {{Javadoc:SE|package=java.awt|java/awt}} package in the compilation; the second '''<code>import</code>''' includes all of the public classes and interfaces from the '''{{Javadoc:SE|package=javax.swing|javax/swing}}''' package.
[10441920] |The <code>'''Hello'''</code> class <code>'''extends'''</code> the '''{{Javadoc:SE|javax/swing|JFrame}}''' class; the <code>JFrame</code> class implements a [[window (computing)|window]] with a [[title bar]] and a close [[Widget (computing)|control]].
[10441930] |The <code>'''Hello()'''</code> [[constructor (computer science)|constructor]] initializes the frame by first calling the superclass constructor, passing the parameter <code>"hello"</code>, which is used as the window's title.
[10441940] |It then calls the '''{{Javadoc:SE|name=setDefaultCloseOperation(int)|javax/swing|JFrame|setDefaultCloseOperation(int)}}''' method inherited from <code>JFrame</code> to set the default operation when the close control on the title bar is selected to '''{{Javadoc:SE|javax/swing|WindowConstants|EXIT_ON_CLOSE}}''' — this causes the <code>JFrame</code> to be disposed of when the frame is closed (as opposed to merely hidden), which allows the JVM to exit and the program to terminate.
[10441950] |Next, the [[Layout manager|layout]] of the frame is set to a <code>BorderLayout</code>; this tells Swing how to arrange the components that will be added to the frame.
[10441960] |A '''{{Javadoc:SE|javax/swing|JLabel}}''' is created for the string '''"Hello, world!"''' and the '''{{Javadoc:SE|name=add(Component)|java/awt|Container|add(java.awt.Component)}}''' method inherited from the {{Javadoc:SE|java/awt|Container}} superclass is called to add the label to the frame.
[10441970] |The '''{{Javadoc:SE|name=pack()|java/awt|Window|pack()}}''' method inherited from the {{Javadoc:SE|java/awt|Window}} superclass is called to size the window and lay out its contents, in the manner indicated by the <code>BorderLayout</code>.
[10441980] |The <code>'''main()'''</code> method is called by the JVM when the program starts.
[10441990] |It [[Instance (programming)|instantiates]] a new '''<code>Hello</code>''' frame and causes it to be displayed by calling the '''{{Javadoc:SE|name=setVisible(boolean)|java/awt|Component|setVisible(boolean)}}''' method inherited from the {{Javadoc:SE|java/awt|Component}} superclass with the boolean parameter <code>'''true'''</code>.
[10442000] |Note that once the frame is displayed, exiting the <code>main</code> method does not cause the program to terminate because the AWT [[event dispatching thread]] remains active until all of the Swing top-level windows have been disposed.
[10442010] |== Criticism == 
[10442020] |[[Java performance|Java's performance]] has improved substantially since the early versions, and performance of [[JIT compiler]]s relative to native compilers has in some tests been shown to be quite similar.
[10442030] |The performance of the compilers does not necessarily indicate the performance of the compiled code; only careful testing can reveal the true performance issues in any system.
[10442040] |The default [[look and feel]] of [[Graphical User Interface|GUI]] applications written in Java using the [[Swing (Java)|Swing]] toolkit is very different from native applications.
[10442050] |It is possible to specify a different look and feel through the [[pluggable look and feel]] system of Swing.
[10442060] |Clones of [[Microsoft Windows|Windows]], [[GTK]] and [[Motif (widget toolkit)|Motif]] are supplied by Sun.
[10442070] |[[Apple Computer|Apple]] also provides an [[Aqua (theme)|Aqua]] look and feel for [[Mac OS X]].
[10442080] |Though prior implementations of these looks and feels have been considered lacking, Swing in Java SE 6 addresses this problem by using more native [[Widget (computing)|widget]] drawing routines of the underlying platforms.
[10442090] |Alternatively, third party toolkits such as [[wx4j]], [[Qt (toolkit)|Qt Jambi]] or [[Standard Widget Toolkit|SWT]] may be used for increased integration with the native windowing system.
[10442100] |As in C++ and some other object-oriented languages, variables of Java's [[primitive type]]s were not originally objects.
[10442110] |Values of primitive types are either stored directly in fields (for objects) or on the [[Stack-based memory allocation|stack]] (for methods) rather than on the heap, as is the common case for objects (but see [[Escape analysis]]).
[10442120] |This was a conscious decision by Java's designers for performance reasons.
[10442130] |Because of this, Java was not considered to be a pure object-oriented programming language.
[10442140] |However, as of Java 5.0, [[Object type|autoboxing]] enables programmers to write as if primitive types are their wrapper classes, with their object-oriented counterparts representing classes of their own, and freely interchange between them for improved flexibility.
[10442150] |Java suppresses several features (such as [[operator overloading]] and [[multiple inheritance]]) for ''classes'' in order to simplify the language, to "save the programmers from themselves", and to prevent possible errors and anti-pattern design.
[10442160] |This has been a source of criticism, relating to a lack of low-level features, but some of these limitations may be worked around.
[10442170] |Java ''interfaces'' have always had multiple inheritance.
[10442180] |== Resources == 
[10442190] |=== Java Runtime Environment === 
[10442200] |The Java Runtime Environment, or ''JRE'', is the software required to run any [[Application software|application]] deployed on the Java Platform.
[10442210] |[[End-user]]s commonly use a JRE in [[Software package (programming)|software package]]s and Web browser [[plugin]]s.
[10442220] |Sun also distributes a superset of the JRE called the Java 2 [[SDK]] (more commonly known as the JDK), which includes development tools such as the [[Java compiler]], [[Javadoc]], [[JAR (file format)|Jar]] and [[debugger]].
[10442230] |One of the unique advantages of the concept of a runtime engine is that errors (exceptions) should not 'crash' the system.
[10442240] |Moreover, in runtime engine environments such as Java there exist tools that attach to the runtime engine and every time that an exception of interest occurs they record debugging information that existed in memory at the time the exception was thrown (stack and heap values).
[10442250] |These [[Automated Exception Handling]] tools provide 'root-cause' information for exceptions in Java programs that run in production, testing or development environments.
[10442260] |==== Components ==== 
[10442270] |* Java [[Library (computer science)|libraries]] are the compiled [[byte code]]s of [[source code]] developed by the JRE implementor to support application development in Java.
[10442280] |Examples of these libraries are:
[10442290] |** The core libraries, which include:
[10442300] |*** Collection libraries that implement [[data structure]]s such as [[List (computing)|lists]], [[associative array|dictionaries]], [[tree structure|trees]] and [[Set (computer science)|sets]]
[10442310] |*** [[XML]] Processing (Parsing, Transforming, Validating) libraries
[10442320] |*** Security
[10442330] |*** [[i18n|Internationalization and localization]] libraries
[10442340] |** The integration libraries, which allow the application writer to communicate with external systems.
[10442350] |These libraries include:
[10442360] |*** The [[Java Database Connectivity]] (JDBC) [[Application Programming Interface|API]] for database access
[10442370] |*** [[Java Naming and Directory Interface]] (JNDI) for lookup and discovery
[10442380] |*** [[Java remote method invocation|RMI]] and [[CORBA]] for distributed application development
[10442390] |** [[User Interface]] libraries, which include:
[10442400] |*** The (heavyweight, or [[native mode|native]]) [[Abstract Windowing Toolkit]] (AWT), which provides [[graphical user interface|GUI]] components, the means for laying out those components and the means for handling events from those components
[10442410] |*** The (lightweight) [[Swing (Java)|Swing]] libraries, which are built on AWT but provide (non-native) implementations of the AWT widgetry
[10442420] |*** APIs for audio capture, processing, and playback
[10442430] |* A platform dependent implementation of [[Java virtual machine]] (JVM) that is the means by which the byte codes of the Java libraries and third party applications are executed
[10442440] |* Plugins, which enable [[Java applet|applet]]s to be run in [[Web browser]]s
[10442450] |* [[Java Web Start]], which allows Java applications to be efficiently distributed to [[end user]]s across the [[Internet]]
[10442460] |* Licensing and documentation
[10442470] |=== APIs === 
[10442480] |Sun has defined three platforms targeting different application environments and segmented many of its [[application programming interface|API]]s so that they belong to one of the platforms.
[10442490] |The platforms are:
[10442500] |* [[Java Platform, Micro Edition]] (Java ME) — targeting environments with limited resources,
[10442510] |* [[Java Platform, Standard Edition]] (Java SE) — targeting workstation environments, and
[10442520] |* [[Java Platform, Enterprise Edition]] (Java EE) — targeting large distributed enterprise or Internet environments.
[10442530] |The [[Class (computer science)|classes]] in the Java APIs are organized into separate groups called [[Java package|packages]].
[10442540] |Each package contains a set of related [[Interface (Java)|interface]]s, classes and [[exception handling|exceptions]].
[10442550] |Refer to the separate platforms for a description of the packages available.
[10442560] |The set of APIs is controlled by Sun Microsystems in cooperation with others through the [[Java Community Process]] program.
[10442570] |Companies or individuals participating in this process can influence the design and development of the APIs.
[10442580] |This process has been a subject of controversy.
[10450010] |<article>Language</article>
[10450020] |A '''language''' is a dynamic set of visual, auditory, or tactile [[symbol]]s of [[communication]] and the elements used to manipulate them.
[10450030] |''Language'' can also refer to the use of such systems as a general [[phenomenon]].
[10450040] |Language is considered to be an exclusively human mode of communication; although other animals make use of quite sophisticated communicative systems, none of these are known to make use of all of the properties that linguists use to define language.
[10450050] |== Properties of language == 
[10450060] |A set of agreed-upon symbols is only one feature of language; all languages must define the structural relationships between these symbols in a system of [[grammar]].
[10450070] |Rules of grammar are what distinguish language from other forms of communication.
[10450080] |They allow a finite set of symbols to be manipulated to create a potentially infinite number of grammatical utterances.
[10450090] |Another property of language is that its symbols are [[arbitrary]].
[10450100] |Any concept or grammatical rule can be mapped onto a symbol.
[10450110] |Most languages make use of sound, but the combinations of sounds used do not have any ''inherent'' meaning – they are merely an agreed-upon convention to represent a certain thing by users of that language.
[10450120] |For instance, there is nothing about the [[Spanish language|Spanish]] [[word]] ''{{lang|es|nada}}'' itself that forces Spanish speakers to convey the idea of "nothing".
[10450130] |Another set of sounds (for example, the English word ''nothing'') could equally be used to represent the same concept, but all Spanish speakers have acquired or learned to correlate this meaning for this particular sound pattern.
[10450140] |For [[Slovene language|Slovenian]], [[Croatian language|Croatian]], [[Serbian language|Serbian/Kosovan]] or [[Bosnian language|Bosnian]] speakers on the other hand, ''{{lang|hr|nada}}'' means something else; it means "hope".
[10450150] |==The study of language== 
[10450160] |===Linguistics=== 
[10450170] |[[Linguistics]] is the [[science|scientific]] and [[philosophy|philosophical]] study of language, encompassing a number of sub-fields.
[10450180] |At the core of [[theoretical linguistics]] are the study of language structure ([[grammar]]) and the study of meaning ([[semantics]]).
[10450190] |The first of these encompasses [[morphology (linguistics)|morphology]] (the formation and composition of [[word]]s), [[syntax]] (the rules that determine how words combine into [[phrase]]s and [[Sentence (linguistics)|sentences]]) and [[phonology]] (the study of sound systems and abstract sound units).
[10450200] |[[Phonetics]] is a related branch of linguistics concerned with the actual properties of speech sounds ([[phone]]s), non-speech sounds, and how they are produced and [[speech perception|perceived]].
[10450210] |[[Theoretical linguistics]] is mostly concerned with developing models of linguistic knowledge.
[10450220] |The fields that are generally considered as the core of theoretical linguistics are [[syntax]], [[phonology]], [[Morphology (linguistics)|morphology]], and [[semantics]].
[10450230] |[[Applied linguistics]] attempts to put linguistic theories into practice through areas like [[translation]], [[Stylistics (linguistics)|stylistics]], [[literary criticism]] and [[Literary theory|theory]], [[discourse analysis]], [[speech therapy]], speech pathology and [[Second language acquisition|foreign language teaching]].
[10450240] |===History=== 
[10450250] |The historical record of [[linguistics]] begins in [[India]] with [[Pāṇini]], the [[5th century BCE]] grammarian who formulated 3,959 rules of [[Sanskrit language|Sanskrit]] [[morphology (linguistics)|morphology]], known as the ''{{IAST|[[Aṣṭādhyāyī]]}}'' (अष्टाध्यायी) and with [[Tolkāppiyar]], the [[3rd century BCE]] grammarian of the [[Tamil language|Tamil]] work [[Tolkāppiyam]]. grammar is highly systematized and technical.
[10450260] |Inherent in its analytic approach are the concepts of the [[phoneme]], the [[morpheme]], and the [[Root (linguistics)|root]]; Western linguists only recognized the phoneme some two millennia later.
[10450270] |Tolkāppiyar's work is perhaps the first to describe [[articulatory phonetics]] for a language.
[10450280] |Its classification of the alphabet into [[consonant]]s and [[vowel]]s, and elements like nouns, verbs, vowels, and consonants, which he put into classes, were also breakthroughs at the time.
[10450290] |In the [[Middle East]], the [[Persian Empire|Persian]] linguist [[Sibawayh]] (سیبویه) made a detailed and professional description of [[Arabic language|Arabic]] in 760 CE in his monumental work, ''Al-kitab fi al-nahw'' (الكتاب في النحو, ''The Book on Grammar''), bringing many [[Linguistics|linguistic]] aspects of language to light.
[10450300] |In his book, he distinguished [[phonetics]] from [[phonology]].
[10450310] |Later in the West, the success of [[science]], [[mathematics]], and other [[formal system]]s in the 20th century led many to attempt a formalization of the study of language as a "semantic code".
[10450320] |This resulted in the [[academic discipline]] of [[linguistics]], the founding of which is attributed to [[Ferdinand de Saussure]].
[10450330] |In the 20th century, substantial contributions to the understanding of language came from [[Ferdinand de Saussure]], [[Hjelmslev]], [[Émile Benveniste]] and [[Roman Jakobson]], which are characterized as being highly [[systematic]].
[10450340] |== Human languages == 
[10450350] |Human languages are usually referred to as natural languages, and the science of studying them falls under the purview of [[linguistics]].
[10450360] |A common progression for natural languages is that they are considered to be first spoken, then written, and then an understanding and explanation of their grammar is attempted.
[10450370] |Languages live, die, move from place to place, and change with time.
[10450380] |Any language that ceases to change or develop is categorized as a [[dead language]].
[10450390] |Conversely, any language that is a ''living language,'' that is, it is in a continuous state of change, is known as a [[modern language]].
[10450400] |Making a principled distinction between one language and another is usually impossible.
[10450410] |For instance, there are a few [[dialect]]s of [[German language|German]] similar to some dialects of [[Dutch language|Dutch]].
[10450420] |The transition between languages within the same [[language family]] is sometimes gradual (see [[dialect continuum]]).
[10450430] |Some like to make parallels with [[biology]], where it is not possible to make a well-defined distinction between one species and the next.
[10450440] |In either case, the ultimate difficulty may stem from the [[interaction]]s between languages and [[population]]s.
[10450450] |(See [[Dialect]] or [[August Schleicher]] for a longer discussion.)
[10450460] |The concepts of [[Ausbausprache - Abstandsprache - Dachsprache|Ausbausprache, Abstandsprache and Dachsprache]] are used to make finer distinctions about the degrees of difference between languages or dialects.
[10450470] |==Artificial languages== 
[10450480] |=== Constructed languages === 
[10450490] |Some individuals and groups have constructed their own artificial languages, for practical, experimental, personal, or ideological reasons.
[10450500] |International auxiliary languages are generally constructed languages that strive to be easier to learn than natural languages; other constructed languages strive to be more logical ("loglangs") than natural languages; a prominent example of this is [[Lojban]].
[10450510] |Some writers, such as [[J. R. R. Tolkien]], have created fantasy languages, for literary, [[Artistic language|artistic]] or personal reasons.
[10450520] |The fantasy language of the [[Klingon]] race has in recent years been developed by fans of the Star Trek series, including a vocabulary and grammar.
[10450530] |Constructed languages are not necessarily restricted to the properties shared by natural languages.
[10450540] |This part of ISO 639 also includes identifiers that denote constructed (or artificial) languages.
[10450550] |In order to qualify for inclusion the language must have a literature and it must be designed for the purpose of human communication.
[10450560] |Specifically excluded are reconstructed languages and computer programming languages.
[10450570] |===International auxiliary languages=== 
[10450580] |Some languages, most constructed, are meant specifically for communication between people of different nationalities or language groups as an easy-to-learn second language.
[10450590] |Several of these languages have been constructed by individuals or groups.
[10450600] |Natural, pre-existing languages may also be used in this way - their developers merely catalogued and standardized their vocabulary and identified their grammatical rules.
[10450610] |These languages are called ''naturalistic.''
[10450620] |One such language, [[Latino Sine Flexione]], is a simplified form of Latin.
[10450630] |Two others, [[Occidental language|Occidental]] and [[Novial]], were drawn from several Western languages.
[10450640] |To date, the most successful auxiliary language is [[Esperanto]], invented by Polish ophthalmologist [[L. L. Zamenhof|Zamenhof]].
[10450650] |It has a relatively large community roughly estimated at about 2 million speakers worldwide, with a large body of literature, songs, and is the only known constructed language to have [[Native Esperanto speakers|native speakers]], such as the Hungarian-born American businessman [[George Soros]].
[10450660] |Other auxiliary languages with a relatively large number of speakers and literature are [[Interlingua]] and [[Ido]].
[10450670] |===Controlled languages=== 
[10450680] |Controlled natural languages are subsets of natural languages whose grammars and dictionaries have been restricted in order to reduce or eliminate both ambiguity and complexity.
[10450690] |The purpose behind the development and implementation of a controlled natural language typically is to aid non-native speakers of a natural language in understanding it, or to ease computer processing of a natural language.
[10450700] |An example of a widely used controlled natural language is [[Simplified English]], which was originally developed for [[aerospace]] industry maintenance manuals.
[10450710] |== Formal languages == 
[10450720] |[[Mathematics]] and [[computer science]] use artificial entities called formal languages (including [[programming language]]s and [[markup language]]s, and some that are more theoretical in nature).
[10450730] |These often take the form of [[character string]]s, produced by a combination of [[formal grammar]] and semantics of arbitrary complexity.
[10450740] |=== Programming languages === 
[10450750] |A programming language is an extreme case of a formal language that can be used to control the behavior of a machine, particularly a computer, to perform specific tasks.
[10450760] |Programming languages are defined using syntactic and semantic rules, to determine structure and meaning respectively.
[10450770] |Programming languages are used to facilitate communication about the task of organizing and manipulating information, and to express algorithms precisely.
[10450780] |Some authors restrict the term "programming language" to those languages that can express all possible algorithms; sometimes the term "computer language" is used for artificial languages that are more limited.
[10450790] |== Animal communication == 
[10450800] |The term "[[animal language]]s" is often used for non-human languages.
[10450810] |Linguists do not consider these to be "language", but describe them as [[animal communication]], because the interaction between animals in such communication is fundamentally different in its underlying principles from human language.
[10450820] |Nevertheless, some scholars have tried to disprove this mainstream premise through experiments on training chimpanzees to talk.
[10450830] |[[Karl von Frisch]] received the Nobel Prize in 1973 for his proof of the language and dialects of the bees.
[10450840] |In several publicized instances, non-human animals have been taught to understand certain features of human language.
[10450850] |[[Chimpanzee]]s, [[gorilla]]s, and [[orangutan]]s have been taught hand signs based on [[American Sign Language]].
[10450860] |The [[African Grey Parrot]], which possesses the ability to mimic human speech with a high degree of accuracy, is suspected of having sufficient intelligence to comprehend some of the speech it mimics.
[10450870] |Most species of [[parrot]], despite expert mimicry, are believed to have no linguistic comprehension at all.
[10450880] |While proponents of animal communication systems have debated levels of [[semantics]], these systems have not been found to have anything approaching human language [[syntax]].
[10460010] |<article>Language model</article>
[10460020] |A statistical '''language model''' assigns a [[probability]] to a sequence of ''m'' words <math>P(w_1,\ldots,w_m)</math> by means of a [[probability distribution]].
[10460030] |Language modeling is used in many [[natural language processing]] applications such as [[speech recognition]], [[machine translation]], [[part-of-speech tagging]], [[parsing]] and [[information retrieval]].
[10460040] |In [[speech recognition]] and in [[data compression]], such a model tries to capture the properties of a language, and to predict the next word in a speech sequence.
[10460050] |When used in information retrieval, a language model is associated with a [[document]] in a collection.
[10460060] |With query ''Q'' as input, retrieved documents are ranked based on the probability that the document's language model would generate the terms of the query, ''P(Q|M<sub>d</sub>)''.
[10460070] |Estimating the probability of sequences can become difficult in [[corpora]], in which [[phrase]]s or [[Sentence (linguistics)|sentence]]s can be arbitrarily long and hence some sequences are not observed during [[training]] of the language model ([[data sparseness problem]] of [[overfitting]]).
[10460080] |For that reason these models are often approximated using smoothed [[N-gram]] models.
[10460090] |== N-gram models == 
[10460100] |In an n-gram model, the probability <math>P(w_1,\ldots,w_m)</math> of observing the sentence w<sub>1</sub>,...,w<sub>m</sub> is approximated as
[10460110] |<math> P(w_1,\ldots,w_m) = \prod^m_{i=1} P(w_i|w_1,\ldots,w_{i-1}) \approx \prod^m_{i=1} P(w_i|w_{i-(n-1)},\ldots,w_{i-1}) </math>
[10460120] |Here, it is assumed that the probability of observing the ''i<sup>th</sup>'' word ''w<sub>i</sub>'' in the context history of the preceding ''i-1'' words can be approximated by the probability of observing it in the shortened context history of the preceding ''n-1'' words (''n<sup>th</sup> order [[Markov property]]).
[10460130] |The conditional probability can be calculated from n-gram frequency counts: <math> P(w_i|w_{i-(n-1)},\ldots,w_{i-1}) = \frac{count(w_{i-(n-1)},\ldots,w_{i-1})}{count(w_{i-(n-1)},w_{i-1},\ldots,w_i)} </math>
[10460140] |The words '''bigram''' and '''trigram''' language model denote n-gram language models with ''n=2'' and ''n=3'', respectively.
[10460150] |=== Example === 
[10460160] |In a bigram (n=2) language model, the probability of the sentence ''I saw the red house'' is approximated as <math> P(I,saw,the,red,house) \approx P(I) P(saw|I) P(the|saw) P(red|the) P(house|red) </math>
[10460170] |whereas in a trigram (n=3) language model, the approximation is <math> P(I,saw,the,red,house) \approx P(I) P(saw|I) P(the|I,saw) P(red|saw,the) P(house|the,red) </math>
[10470010] |<article>Latent semantic analysis</article>
[10470020] |'''Latent semantic analysis (LSA)''' is a technique in [[natural language processing]], in particular in [[vectorial semantics]], of analyzing relationships between a set of documents and the terms they contain by producing a set of concepts related to the documents and terms.
[10470030] |LSA was patented in [[1988]] ([http://patft.uspto.gov/netacgi/nph-Parser?patentnumber=4839853 US Patent 4,839,853]) by [[Scott Deerwester]], [[Susan Dumais]], [[George Furnas]], [[Richard Harshman]], [[Thomas Landauer]], [[Karen Lochbaum]] and [[Lynn Streeter]].
[10470040] |In the context of its application to [[information retrieval]], it is sometimes called '''latent semantic indexing (LSI)'''.
[10470050] |== Occurrence matrix == 
[10470060] |LSA can use a [[term-document matrix]] which describes the occurrences of terms in documents; it is a [[sparse matrix]] whose rows correspond to [[terminology|terms]] and whose columns correspond to documents, typically [[stemming|stemmed]] words that appear in the documents.
[10470070] |A typical example of the weighting of the elements of the matrix is [[tf-idf]] (term frequency–inverse document frequency): the element of the matrix is proportional to the number of times the terms appear in each document, where rare terms are upweighted to reflect their relative importance.
[10470080] |This matrix is also common to standard semantic models, though it is not necessarily explicitly expressed as a matrix, since the mathematical properties of matrices are not always used.
[10470090] |LSA transforms the occurrence matrix into a relation between the terms and some ''concepts'', and a relation between those concepts and the documents.
[10470100] |Thus the terms and documents are now indirectly related through the concepts.
[10470110] |== Applications == 
[10470120] |The new concept space typically can be used to: 
[10470130] |* Compare the documents in the concept space ([[data clustering]], [[document classification]])......
[10470140] |* Find similar documents across languages, after analyzing a base set of translated documents ([[cross language retrieval]]).
[10470150] |* Find relations between terms ([[synonymy]] and [[polysemy]]).
[10470160] |* Given a query of terms, translate it into the concept space, and find matching documents ([[information retrieval]]).
[10470170] |Synonymy and polysemy are fundamental problems in [[natural language processing]]: 
[10470180] |* Synonymy is the phenomenon where different words describe the same idea.
[10470190] |Thus, a query in a search engine may fail to retrieve a relevant document that does not contain the words which appeared in the query.
[10470200] |For example, a search for "doctors" may not return a document containing the word "physicians", even though the words have the same meaning.
[10470210] |* Polysemy is the phenomenon where the same word has multiple meanings.
[10470220] |So a search may retrieve irrelevant documents containing the desired words in the wrong meaning.
[10470230] |For example, a botanist and a computer scientist looking for the word "tree" probably desire different sets of documents.
[10470240] |== Rank lowering == 
[10470250] |After the construction of the occurrence matrix, LSA finds a low-[[rank (matrix theory)|rank]] approximation to the [[term-document matrix]].
[10470260] |There could be various reasons for these approximations:
[10470270] |* The original term-document matrix is presumed too large for the computing resources; in this case, the approximated low rank matrix is interpreted as an ''approximation'' (a "least and necessary evil").
[10470280] |* The original term-document matrix is presumed ''noisy'': for example, anecdotal instances of terms are to be eliminated.
[10470290] |From this point of view, the approximated matrix is interpreted as a ''de-noisified matrix'' (a better matrix than the original).
[10470300] |* The original term-document matrix is presumed overly [[Sparse matrix|sparse]] relative to the "true" term-document matrix.
[10470310] |That is, the original matrix lists only the words actually ''in'' each document, whereas we might be interested in all words ''related to'' each document--generally a much larger set due to [[synonymy]].
[10470320] |The consequence of the rank lowering is that some dimensions are combined and depend on more than one term:
[10470330] |:: {(car), (truck), (flower)} --> {(1.3452 * car + 0.2828 * truck), (flower)}
[10470340] |This mitigates synonymy, as the rank lowering is expected to merge the dimensions associated with terms that have similar meanings.
[10470350] |It also mitigates polysemy, since components of polysemous words that point in the "right" direction are added to the components of words that share a similar meaning.
[10470360] |Conversely, components that point in other directions tend to either simply cancel out, or, at worst, to be smaller than components in the directions corresponding to the intended sense.
[10470370] |== Derivation == 
[10470380] |Let <math>X</math> be a matrix where element <math>(i,j)</math> describes the occurrence of term <math>i</math> in document <math>j</math> (this can be, for example, the frequency).
[10470385] |<math>X</math> will look like this:
[10470390] |:<math> \begin{matrix} & \textbf{d}_j \\ & \downarrow \\ \textbf{t}_i^T \rightarrow & \begin{bmatrix} x_{1,1} & \dots & x_{1,n} \\ \vdots & \ddots & \vdots \\ x_{m,1} & \dots & x_{m,n} \\ \end{bmatrix} \end{matrix} </math>
[10470400] |Now a row in this matrix will be a vector corresponding to a term, giving its relation to each document: 
[10470410] |:<math>\textbf{t}_i^T = \begin{bmatrix} x_{i,1} & \dots & x_{i,n} \end{bmatrix}</math>
[10470420] |Likewise, a column in this matrix will be a vector corresponding to a document, giving its relation to each term:
[10470430] |:<math>\textbf{d}_j = \begin{bmatrix} x_{1,j} \\ \vdots \\ x_{m,j} \end{bmatrix}</math>
[10470440] |Now the [[dot product]] <math>\textbf{t}_i^T \textbf{t}_p</math> between two term vectors gives the [[correlation]] between the terms over the documents.
[10470450] |The [[matrix product]] <math>X X^T</math> contains all these dot products.
[10470460] |Element <math>(i,p)</math> (which is equal to element <math>(p,i)</math>) contains the dot product <math>\textbf{t}_i^T \textbf{t}_p</math> (<math> = \textbf{t}_p^T \textbf{t}_i</math>).
[10470470] |Likewise, the matrix <math>X^T X</math> contains the dot products between all the document vectors, giving their correlation over the terms: <math>\textbf{d}_j^T \textbf{d}_q = \textbf{d}_q^T \textbf{d}_j</math>.
[10470480] |Now assume that there exists a decomposition of <math>X</math> such that <math>U</math> and <math>V</math> are [[orthonormal matrix|orthonormal matrices]] and <math>\Sigma</math> is a [[diagonal matrix]].
[10470490] |This is called a [[singular value decomposition]] (SVD):
[10470500] |:<math> X = U \Sigma V^T </math>
[10470510] |The matrix products giving us the term and document correlations then become
[10470520] |:<math> \begin{matrix} X X^T &=& (U \Sigma V^T) (U \Sigma V^T)^T = (U \Sigma V^T) (V^{T^T} \Sigma^T U^T) = U \Sigma V^T V \Sigma^T U^T = U \Sigma \Sigma^T U^T \\ X^T X &=& (U \Sigma V^T)^T (U \Sigma V^T) = (V^{T^T} \Sigma^T U^T) (U \Sigma V^T) = V \Sigma U^T U \Sigma V^T = V \Sigma^T \Sigma V^T \end{matrix} </math>
[10470530] |Since <math>\Sigma \Sigma^T</math> and <math>\Sigma^T \Sigma</math> are diagonal we see that <math>U</math> must contain the [[eigenvector]]s of <math>X X^T</math>, while <math>V</math> must be the eigenvectors of <math>X^T X</math>.
[10470540] |Both products have the same non-zero eigenvalues, given by the non-zero entries of <math>\Sigma \Sigma^T</math>, or equally, by the non-zero entries of <math>\Sigma^T\Sigma</math>.
[10470550] |Now the decomposition looks like this:
[10470560] |:<math> \begin{matrix} & X & & & U & & \Sigma & & V^T \\ & (\textbf{d}_j) & & & & & & & (\hat \textbf{d}_j) \\ & \downarrow & & & & & & & \downarrow \\ (\textbf{t}_i^T) \rightarrow & \begin{bmatrix} x_{1,1} & \dots & x_{1,n} \\ \\ \vdots & \ddots & \vdots \\ \\ x_{m,1} & \dots & x_{m,n} \\ \end{bmatrix} & = & (\hat \textbf{t}_i^T) \rightarrow & \begin{bmatrix} \begin{bmatrix} \, \\ \, \\ \textbf{u}_1 \\ \, \\ \,\end{bmatrix} \dots \begin{bmatrix} \, \\ \, \\ \textbf{u}_l \\ \, \\ \, \end{bmatrix} \end{bmatrix} & \cdot & \begin{bmatrix} \sigma_1 & \dots & 0 \\ \vdots & \ddots & \vdots \\ 0 & \dots & \sigma_l \\ \end{bmatrix} & \cdot & \begin{bmatrix} \begin{bmatrix} & & \textbf{v}_1 & & \end{bmatrix} \\ \vdots \\ \begin{bmatrix} & & \textbf{v}_l & & \end{bmatrix} \end{bmatrix} \end{matrix} </math>
[10470570] |The values <math>\sigma_1, \dots, \sigma_l</math> are called the singular values, and <math>u_1, \dots, u_l</math> and <math>v_1, \dots, v_l</math> the left and right singular vectors.
[10470580] |Notice how the only part of <math>U</math> that contributes to <math>\textbf{t}_i</math> is the <math>i\textrm{'th}</math> row.
[10470590] |Let this row vector be called <math>\hat \textrm{t}_i</math>.
[10470600] |Likewise, the only part of <math>V^T</math> that contributes to <math>\textbf{d}_j</math> is the <math>j\textrm{'th}</math> column, <math>\hat \textrm{d}_j</math>.
[10470610] |These are ''not'' the eigenvectors, but ''depend'' on ''all'' the eigenvectors.
[10470620] |It turns out that when you select the <math>k</math> largest singular values, and their corresponding singular vectors from <math>U</math> and <math>V</math>, you get the rank <math>k</math> approximation to X with the smallest error ([[Frobenius norm]]).
[10470630] |The amazing thing about this approximation is that not only does it have a minimal error, but it translates the term and document vectors into a concept space.
[10470640] |The vector <math>\hat \textbf{t}_i</math> then has <math>k</math> entries, each giving the occurrence of term <math>i</math> in one of the <math>k</math> concepts.
[10470650] |Likewise, the vector <math>\hat \textbf{d}_j</math> gives the relation between document <math>j</math> and each concept.
[10470660] |We write this approximation as 
[10470670] |:<math>X_k = U_k \Sigma_k V_k^T</math>
[10470680] |You can now do the following: 
[10470690] |* See how related documents <math>j</math> and <math>q</math> are in the concept space by comparing the vectors <math>\hat \textbf{d}_j</math> and <math>\hat \textbf{d}_q</math> (typically by [[vector space model|cosine similarity]]).
[10470700] |This gives you a clustering of the documents.
[10470710] |* Comparing terms <math>i</math> and <math>p</math> by comparing the vectors <math>\hat \textbf{t}_i</math> and <math>\hat \textbf{t}_p</math>, giving you a clustering of the terms in the concept space.
[10470720] |* Given a query, view this as a mini document, and compare it to your documents in the concept space.
[10470730] |To do the latter, you must first translate your query into the concept space.
[10470740] |It is then intuitive that you must use the same transformation that you use on your documents:
[10470750] |:<math>\textbf{d}_j = U_k \Sigma_k \hat \textbf{d}_j</math>
[10470760] |:<math>\hat \textbf{d}_j = \Sigma_k^{-1} U_k^T \textbf{d}_j</math>
[10470770] |This means that if you have a query vector <math>q</math>, you must do the translation <math>\hat \textbf{q} = \Sigma_k^{-1} U_k^T \textbf{q}</math> before you compare it with the document vectors in the concept space.
[10470780] |You can do the same for pseudo term vectors:
[10470790] |:<math>\textbf{t}_i^T = \hat \textbf{t}_i^T \Sigma_k V_k^T</math>
[10470800] |:<math>\hat \textbf{t}_i^T = \textbf{t}_i^T V_k^{-T} \Sigma_k^{-1} = \textbf{t}_i^T V_k \Sigma_k^{-1}</math>
[10470810] |:<math>\hat \textbf{t}_i = \Sigma_k^{-1} V_k^T \textbf{t}_i</math>
[10470820] |== Implementation == 
[10470830] |The [[Singular Value Decomposition|SVD]] is typically computed using large matrix methods (for example, [[Lanczos method]]s) but may also be computed incrementally and with greatly reduced resources via a [[neural network]]-like approach, which does not require the large, full-rank matrix to be held in memory ([http://www.dcs.shef.ac.uk/~genevieve/gorrell_webb.pdf Gorrell and Webb, 2005]).
[10470840] |A fast, incremental, low-memory, large-matrix SVD algorithm has recently been developed ([http://www.merl.com/publications/TR2006-059/ Brand, 2006]).
[10470850] |Unlike Gorrell and Webb's (2005) stochastic approximation, Brand's (2006) algorithm provides an exact solution.
[10470860] |== Limitations == 
[10470870] |LSA has two drawbacks:
[10470880] |* The resulting dimensions might be difficult to interpret.
[10470890] |For instance, in 
[10470900] |:: {(car), (truck), (flower)} --> {(1.3452 * car + 0.2828 * truck), (flower)} 
[10470910] |:the (1.3452 * car + 0.2828 * truck) component could be interpreted as "vehicle".
[10470920] |However, it is very likely that cases close to 
[10470930] |:: {(car), (bottle), (flower)} --> {(1.3452 * car + 0.2828 * bottle), (flower)}
[10470940] |:will occur.
[10470950] |This leads to results which can be justified on the mathematical level, but have no interpretable meaning in natural language.
[10470960] |* The [[probabilistic model]] of LSA does not match observed data: LSA assumes that words and documents form a joint [[normal distribution|Gaussian]] model ([[ergodic hypothesis]]), while a [[Poisson distribution]] has been observed.
[10470970] |Thus, a newer alternative is [[probabilistic latent semantic analysis]], based on a [[multinomial distribution|multinomial]] model, which is reported to give better results than standard LSA .
[10480010] |<article>Linguistics</article>
[10480020] |'''Linguistics''' is the [[science|scientific]] study of [[language]], encompassing a number of sub-fields.
[10480030] |An important topical division is between the study of language structure ([[grammar]]) and the study of [[Meaning (linguistics)|meaning]] ([[semantics]]).
[10480040] |Grammar encompasses [[morphology (linguistics)|morphology]] (the formation and composition of [[word]]s), [[syntax]] (the rules that determine how words combine into [[phrase]]s and [[Sentence (linguistics)|sentences]]) and [[phonology]] (the study of sound systems and abstract sound units).
[10480050] |[[Phonetics]] is a related branch of linguistics concerned with the actual properties of speech sounds ([[phone]]s), non-speech sounds, and how they are produced and [[speech perception|perceived]].
[10480060] |Over the twentieth century, following the work of [[Noam Chomsky]], linguistics came to be dominated by the [[Generative grammar|Generativist school]], which is chiefly concerned with explaining how human beings [[language acquisition|acquire language]] and the biological constraints on this acquisition; generative theory is [[Language module|modularist]] in character.
[10480070] |While this remains the dominant paradigm, other linguistic theories have increasingly gained in popularity &mdash; [[cognitive linguistics]] being a prominent example.
[10480080] |There are many sub-fields in linguistics, which may or may not be dominated by a particular theoretical approach: [[evolutionary linguistics]], for example, attempts to account for the origins of language; [[historical linguistics]] explores language change; and [[sociolinguistics]] looks at the relation between linguistic variation and social structures.
[10480090] |A variety of intellectual disciplines are relevant to the study of language.
[10480100] |Although certain linguists have downplayed the relevance of some other fields, linguistics &mdash; like other sciences &mdash; is highly interdisciplinary and draws on work from such fields as [[psychology]], [[informatics]], [[computer science]], [[philosophy]], [[biology]], [[human anatomy]], [[neuroscience]], [[sociology]], [[anthropology]], and [[acoustics]].
[10480110] |==Names for the discipline== 
[10480120] |Before the twentieth century (the word is first attested 1716), the term "[[philology]]" was commonly used to refer to the science of language, which was then predominately historical in focus.
[10480130] |Since [[Ferdinand de Saussure]]'s insistence on the importance of [[Synchronic analysis (linguistics)|synchronic analysis]], however, this focus has shifted and the term "philology" is now generally used for the "study of a language's grammar, history and literary tradition", especially in the [[USA]]., where it was never as popular as elsewhere in the sense "science of language".
[10480140] |The term "linguistics" dates from 1847, although "linguist" in the sense a student of language" dates from 1641.
[10480150] |It is now the usual academic term in English for the scientific study of language.
[10480160] |==Fundamental concerns and divisions== 
[10480170] |Linguistics concerns itself with describing and explaining the nature of human language.
[10480180] |Relevant to this are the questions of what is universal to language, how language can vary, and how human beings come to know languages.
[10480190] |All humans (setting aside extremely pathological cases) achieve competence in whatever language is spoken (or signed, in the case of [[sign language|signed languages]]) around them when growing up, with apparently little need for explicit conscious instruction.
[10480200] |While non-humans acquire their own communication systems, they do not acquire human language in this way (although many non-human animals can learn to respond to language, or can even be trained to use it to a degree).
[10480210] |Therefore, linguists assume, the ability to acquire and use language is an innate, biologically-based potential of modern human beings, similar to the ability to walk.
[10480220] |There is no consensus, however, as to the extent of this innate potential, or its domain-specificity (the degree to which such innate abilities are specific to language), with some theorists claiming that there is a very large set of highly abstract and specific binary settings coded into the human brain, while others claim that the ability to learn language is a product of general human cognition.
[10480230] |It is, however, generally agreed that there are no strong ''genetic'' differences underlying the differences between languages: an individual will acquire whatever language(s) they are exposed to as a child, regardless of parentage or ethnic origin.
[10480240] |Linguistic structures are pairings of meaning and form (which may consist of sound patterns, movements of the hand, written symbols, and so on); such pairings are known as [[Ferdinand de Saussure|Saussurean]] [[linguistic sign|signs]].
[10480250] |Linguists may specialize in some sub-area of linguistic structure, which can be arranged in the following terms, from form to meaning:
[10480260] |* '''[[Phonetics]]''', the study of the physical properties of speech (or signed) production and perception
[10480270] |* '''[[Phonology]]''', the study of sounds (adjusted appropriately for signed languages) as discrete, abstract elements in the speaker's mind that distinguish meaning 
[10480280] |* '''[[Morphology (linguistics)|Morphology]]''', the study of internal structures of [[word]]s and how they can be modified
[10480290] |* '''[[Syntax]]''', the study of how words combine to form grammatical [[sentence]]s
[10480300] |* '''[[Semantics]]''', the study of the meaning of words ([[lexical semantics]]) and fixed word combinations ([[phraseology]]), and how these combine to form the [[meaning]]s of sentences
[10480310] |* '''[[Pragmatics]]''', the study of how [[utterance]]s are used (literally, figuratively, or otherwise) in [[speech acts|communicative acts]]
[10480320] |* '''[[Discourse analysis]]''', the analysis of language use in [[texts]] (spoken, written, or signed)
[10480330] |Many linguists would agree that these divisions overlap considerably, and the independent significance of each of these areas is not universally acknowledged.
[10480340] |Regardless of any particular linguist's position, each area has core concepts that foster significant scholarly inquiry and research.
[10480350] |Intersecting with these domains are fields arranged around the kind of external factors that are considered.
[10480360] |For example
[10480370] |* [[Linguistic typology]], the study of the common properties of diverse unrelated languages, properties that may, given sufficient attestation, be assumed to be innate to human language capacity.
[10480380] |* [[Stylistics (linguistics)|Stylistics]], the study of linguistic factors that place a discourse in context.
[10480390] |* [[Developmental linguistics]], the study of the development of linguistic ability in an individual, particularly [[Language acquisition|the acquisition of language]] in childhood.
[10480400] |* [[Historical linguistics]] or Diachronic linguistics, the study of language change.
[10480410] |* [[Language geography]], the study of the spatial patterns of languages.
[10480420] |* [[Evolutionary linguistics]], the study of the origin and subsequent development of language.
[10480430] |* [[Psycholinguistics]], the study of the cognitive processes and representations underlying language use.
[10480440] |* [[Sociolinguistics]], the study of social patterns and norms of linguistic variability.
[10480450] |* [[Clinical linguistics]], the application of linguistic theory to the area of [[Speech-Language Pathology]].
[10480460] |* [[Neurolinguistics]], the study of the brain networks that underlie grammar and communication.
[10480470] |* [[Biolinguistics]], the study of natural as well as human-taught communication systems in animals compared to human language.
[10480480] |* [[Computational linguistics]], the study of computational implementations of linguistic structures.
[10480490] |* [[Applied linguistics]], the study of language related issues applied in everyday life, notably language. policies, planning, and education.
[10480500] |[[Constructed language]] fits under Applied linguistics.
[10480510] |The related discipline of [[semiotics]] investigates the relationship between signs and what they signify.
[10480520] |From the perspective of semiotics, language can be seen as a sign or symbol, with the world as its representation.
[10480530] |==Variation and universality== 
[10480540] |Much modern linguistic research, particularly within the [[paradigm]] of [[generative grammar]], has concerned itself with trying to account for differences between languages of the world.
[10480550] |This has worked on the assumption that if human linguistic ability is narrowly constrained by human biology, then all languages must share certain fundamental properties.
[10480560] |In [[generative grammar|generativist theory]], the collection of fundamental properties all languages share are referred to as [[universal grammar]] (UG).
[10480570] |The specific characteristics of this universal grammar are a much debated topic.
[10480580] |[[Linguistic typology|Typologists]] and non-generativist linguists usually refer simply to [[linguistic universal|language universals]], or ''universals of language''.
[10480590] |Similarities between languages can have a number of different origins.
[10480600] |In the simplest case, universal properties may be due to universal aspects of human experience.
[10480610] |For example, all humans experience water, and all human languages have a word for water.
[10480620] |Other similarities may be due to common descent: the [[Latin language]] spoken by the [[Ancient Rome|Ancient Romans]] developed into Spanish in Spain and Italian in Italy; similarities between Spanish and Italian are thus in many cases due to both being descended from Latin.
[10480630] |In other cases, [[Language contact|contact between languages]] &mdash; particularly where many speakers are bilingual &mdash; can lead to much borrowing of structures, as well as words.
[10480640] |Similarity may also, of course, be due to coincidence.
[10480650] |English ''much'' and Spanish ''mucho'' are not descended from the same form or borrowed from one language to the other; nor is the similarity due to innate linguistic knowledge (see [[False cognate]]).
[10480660] |Arguments in favor of language universals have also come from documented cases of [[sign language]]s (such as [[Al-Sayyid Bedouin Sign Language]]) developing in communities of congenitally deaf people, independently of spoken language.
[10480670] |The properties of these sign languages conform generally to many of the properties of spoken languages.
[10480680] |Other known and suspected sign language [[language isolate|isolates]] include [[Kata Kolok]], [[Nicaraguan Sign Language]], and [[Providence Island Sign Language]].
[10480690] |== Structures == 
[10480700] |It has been perceived that languages tend to be organized around [[grammatical categories]] such as noun and verb, [[nominative case|nominative]] and [[accusative case|accusative]], or present and past, though, importantly, not exclusively so.
[10480710] |The grammar of a language is organized around such fundamental categories, though many languages express the relationships between words and syntax in other discrete ways (cf. some Bantu languages for noun/verb relations, ergative/absolutive systems for case relations, several Native American languages for tense/aspect relations).
[10480720] |In addition to making substantial use of discrete categories, language has the important property that it organizes elements into recursive structures; this allows, for example, a noun phrase to contain another noun phrase (as in “the chimpanzee’s lips”) or a clause to contain a clause (as in “I think that it’s raining”).
[10480730] |Though recursion in grammar was implicitly recognized much earlier (for example by [[Otto Jespersen|Jespersen]]), the importance of this aspect of language became more popular after the 1957 publication of [[Noam Chomsky]]’s book “[[Syntactic Structures]]”, - that presented a formal grammar of a fragment of English.
[10480740] |Prior to this, the most detailed descriptions of linguistic systems were of phonological or morphological systems.
[10480750] |Chomsky used a [[context-free grammar]] augmented with transformations.
[10480760] |Since then, following the trend of Chomskyan linguistics, context-free grammars have been written for substantial fragments of various languages (for example [[Generalised phrase structure grammar|GPSG]], for English), but it has been demonstrated that human languages include cross-serial dependencies, which cannot be handled adequately by context-free grammars.
[10480770] |==Some selected sub-fields == 
[10480780] |'''Diachronic linguistics'''
[10480790] |Studying languages at a particular point in time (usually the present) is "synchronic", while diachronic linguistics examines how language changes through time, sometimes over centuries.
[10480800] |It enjoys both a rich history and a strong theoretical foundation for the study of [[language change]].
[10480810] |In universities in the United States, the non-historic perspective is often out of fashion.
[10480820] |The shift in focus to a non-historic perspective started with [[Ferdinand de Saussure|Saussure]] and became pre-dominant with [[Noam Chomsky]].
[10480830] |Explicitly historical perspectives include [[historical-comparative linguistics]] and [[etymology]].
[10480840] |'''Contextual linguistics'''
[10480850] |Contextual linguistics may include the study of linguistics in interaction with other academic disciplines.
[10480860] |The interdisciplinary areas of linguistics consider how language interacts with the rest of the world.
[10480870] |[[Sociolinguistics]], [[anthropological linguistics]], and [[linguistic anthropology]] are seen as areas that bridge the gap between linguistics and society as a whole.
[10480880] |[[Psycholinguistics]] and [[neurolinguistics]] relate linguistics to the [[medical science]]s.
[10480890] |Other cross-disciplinary areas of linguistics include [[evolutionary linguistics]], [[computational linguistics]] and [[cognitive science]].
[10480900] |'''Applied linguistics'''
[10480910] |Linguists are largely concerned with finding and [[descriptive linguistics|describing]] the generalities and varieties both within particular languages and among all language.
[10480920] |[[Applied linguistics]] takes the result of those findings and “applies” them to other areas.
[10480930] |Often “applied linguistics” refers to the use of linguistic research in language teaching, but results of linguistic research are used in many other areas, as well.
[10480940] |Today in the age of information technology, many areas of applied linguistics attempt to involve the use of computers.
[10480950] |[[Speech synthesis]] and [[speech recognition]] use phonetic and phonemic knowledge to provide voice interfaces to computers.
[10480960] |Applications of [[computational linguistics]] in [[machine translation]], [[computer-assisted translation]], and [[natural language processing]] are areas of applied linguistics which have come to the forefront.
[10480970] |Their influence has had an effect on theories of syntax and semantics, as modeling syntactic and semantic theories on computers constraints.
[10480980] |==Description and prescription== 
[10480990] |''Main articles: [[Descriptive linguistics]], [[Linguistic prescription]]''
[10481000] |Linguistics is '''descriptive'''; linguists describe and explain features of language without making subjective judgments on whether a particular feature is "right" or "wrong".
[10481010] |This is analogous to practice in other sciences: a [[zoologist]] studies the animal kingdom without making subjective judgments on whether a particular animal is better or worse than another.
[10481020] |'''Prescription''', on the other hand, is an attempt to promote particular linguistic usages over others, often favouring a particular dialect or "[[acrolect]]".
[10481030] |This may have the aim of establishing a [[Standard language|linguistic standard]], which can aid communication over large geographical areas.
[10481040] |It may also, however, be an attempt by speakers of one language or dialect to exert influence over speakers of other languages or dialects (see [[Linguistic imperialism]]).
[10481050] |An extreme version of prescriptivism can be found among [[censorship|censors]], who attempt to eradicate words and structures which they consider to be destructive to society.
[10481060] |== Speech and writing == 
[10481070] |Most contemporary linguists work under the assumption that [[spoken language|spoken]] (or signed) language is more fundamental than [[written language]].
[10481080] |This is because:
[10481090] |* Speech appears to be a human "universal", whereas there have been many [[culture]]s and speech communities that lack written communication;
[10481100] |* Speech evolved before human beings discovered writing;
[10481110] |* People learn to speak and process spoken languages more easily and much earlier than writing; 
[10481120] |Linguists nonetheless agree that the study of written language can be worthwhile and valuable.
[10481130] |For research that relies on [[corpus linguistics]] and [[computational linguistics]], written language is often much more convenient for processing large amounts of linguistic data.
[10481140] |Large corpora of spoken language are difficult to create and hard to find, and are typically [[transcription (linguistics)|transcribed]] and written.
[10481150] |Additionally, linguists have turned to text-based discourse occurring in various formats of [[computer-mediated communication]] as a viable site for linguistic inquiry.
[10481160] |The study of [[writing systems]] themselves is in any case considered a branch of linguistics.
[10481170] |== History == 
[10481180] |Some of the earliest linguistic activities can be recalled from [[Iron Age India]] with the analysis of [[Sanskrit]].
[10481190] |The [[Pratishakhya]]s (from ca. the 8th century BC) constitute as it were a proto-linguistic ''ad hoc'' collection of observations about mutations to a given [[corpus linguistics|corpus]] particular to a given [[Shakha|Vedic school]].
[10481200] |Systematic study of these texts gives rise to the [[Vedanga]] discipline of [[Vyakarana]], the earliest surviving account of which is the work of {{IAST|[[Pānini]]}} (c. 520 – 460 BC), who, however, looks back on what are probably several generations of grammarians, whose opinions he occasionally refers to.
[10481210] |{{IAST|Pānini}} formulates close to 4,000 rules which together form a compact [[generative grammar]] of Sanskrit.
[10481220] |Inherent in his analytic approach are the concepts of the [[phoneme]], the [[morpheme]] and the [[root]].
[10481230] |Due to its focus on brevity, his grammar has a highly unintuitive structure, reminiscent of contemporary "machine language" (as opposed to "human readable" programming languages).
[10481240] |Indian linguistics maintained a high level for several centuries; [[Mahābhāṣya|Patanjali]] in the 2nd century BC still actively criticizes Panini.
[10481250] |In the later centuries BC, however, Panini's grammar came to be seen as prescriptive, and commentators came to be fully dependent on it.
[10481260] |[[Bhartrihari]] (c. 450 – 510) theorized the act of speech as being made up of four stages: first, conceptualization of an idea, second, its verbalization and sequencing (articulation) and third, delivery of speech into atmospheric air, the interpretation of speech by the listener, the interpreter.
[10481270] |In the [[Middle East]], the [[Persian language|Persian]] linguist [[Sibawayh]] made a detailed and professional description of [[Arabic language|Arabic]] in 760, in his monumental work, ''Al-kitab fi al-nahw'' (الكتاب في النحو, ''The Book on Grammar''), bringing many linguistic aspects of language to light.
[10481280] |In his book he distinguished [[phonetics]] from [[phonology]].
[10481290] |Western linguistics begins in Classical Antiquity with grammatical speculation such as [[Plato]]'s ''[[Cratylus]]''.
[10481300] |[[William Jones (philologist)|Sir William Jones]] noted that [[Sanskrit]] shared many common features with classical [[Latin]] and [[Ancient Greek|Greek]], notably verb roots and grammatical structures, such as the [[case system]].
[10481310] |This led to the theory that all languages sprung from a common source and to the discovery of the [[Indo-European]] [[language family]].
[10481320] |He began the study of [[comparative linguistics]], which would uncover more language families and branches.
[10481330] |Some early-19th-century linguists were [[Jakob Grimm]], who devised a principle of consonantal shifts in pronunciation &ndash; known as [[Grimm's Law]] &ndash; in 1822; [[Karl Verner]], who formulated [[Verner's Law]]; [[August Schleicher]], who created the "Stammbaumtheorie" ("family tree"); and [[Johannes Schmidt (linguist)|Johannes Schmidt]], who developed the "Wellentheorie" ("wave model") in 1872.
[10481340] |[[Ferdinand de Saussure]] was the founder of modern structural linguistics.
[10481350] |[[Edward Sapir]], a leader in American structural linguistics, was one of the first who explored the relations between language studies and anthropology.
[10481360] |His methodology had strong influence on all his successors.
[10481370] |[[Noam Chomsky|Noam Chomsky's]] formal model of language, [[transformational-generative grammar]], developed under the influence of his teacher [[Zellig Harris]], who was in turn strongly influenced by [[Leonard Bloomfield]], has been the dominant model since the 1960s.
[10481380] |[[Noam Chomsky]] remains a pop-linguistic figure.
[10481390] |Linguists (working in frameworks such as [[Head-Driven Phrase Structure Grammar]] (HPSG) or [[Lexical Functional Grammar]] (LFG)) are increasingly seen to stress the importance of formalization and formal rigor in linguistic description, and may distance themselves somewhat from Chomsky's more recent work (the "Minimalist" program for [[Transformational grammar]]), connecting more closely to his earlier works.
[10481400] |Other linguists working in [[Optimality Theory]] state generalizations in terms of violable constraints that interact with each other, and abandon the traditional rule-based formalism first pioneered by early work in generativist linguistics.
[10481410] |Functionalist linguists working in [[functional grammar]] and [[Cognitive Linguistics]] tend to stress the non-autonomy of linguistic knowledge and the non-universality of linguistic structures, thus differing significantly from the Chomskyan school.
[10481420] |They reject Chomskyan intuitive introspection as a scientific method, relying instead on typological evidence.
[10490010] |<article>Linux</article>
[10490020] |'''Linux''' (commonly pronounced {{IPAEng|ˈlɪnəks}} in English; variants exist) is a [[Unix-like]] computer [[operating system]].
[10490030] |Linux is one of the most prominent examples of [[free software]] and [[open source]] development: typically all underlying [[source code]] can be freely modified, used, and redistributed by anyone.
[10490040] |The name "Linux" comes from the [[Linux kernel]], originally written in 1991 by [[Linus Torvalds]].
[10490050] |The system's [[system utility|utilities]] and [[library (computer science)|libraries]] usually come from the [[GNU operating system]], announced in 1983 by [[Richard Stallman]].
[10490060] |The GNU contribution is the basis for the alternative name '''GNU/Linux'''.
[10490070] |Predominantly known for its use in [[server (computing)|server]]s, Linux is supported by corporations such as [[Dell]], [[Hewlett-Packard]], [[IBM]], [[Novell]], [[Oracle Corporation]], [[Red Hat]], and [[Sun Microsystems]].
[10490080] |It is used as an operating system for a wide variety of computer [[hardware]], including [[desktop computer]]s, [[supercomputers]], video game systems, such as the [[PlayStation 2]] and [[PlayStation 3]], several [[arcade games]], and [[embedded devices]] such as [[mobile phone]]s, [[routers]], and [[stage lighting]] systems.
[10490090] |== History == 
[10490100] |The [[Unix]] operating system was conceived and implemented in the 1960s and first released in 1970.
[10490110] |Its wide availability and [[Porting|portability]] meant that it was widely adopted, copied and modified by academic institutions and businesses, with its design being influential on authors of other systems.
[10490120] |The [[GNU Project]], started in 1984, had the goal of creating a "''complete Unix-compatible software system''" made entirely of [[free software]].
[10490130] |In 1985, [[Richard Stallman]] created the [[Free Software Foundation]] and developed the [[GNU General Public License]] (GNU GPL).
[10490140] |Many of the programs required in an OS (such as libraries, [[compiler]]s, [[text editor]]s, a [[Unix shell]], and a windowing system) were completed by the early 1990s, although low level elements such as [[device driver]]s, [[daemon (computer software)|daemon]]s, and the [[Kernel (computer science)|kernel]] were stalled and incomplete.
[10490150] |Linus Torvalds has said that if the GNU kernel had been available at the time (1991), he would not have decided to write his own.
[10490160] |=== MINIX === 
[10490170] |[[MINIX]], a Unix-like system intended for academic use, was released by [[Andrew S. Tanenbaum]] in 1987.
[10490180] |While source code for the system was available, modification and redistribution were restricted (that is not the case today).
[10490190] |In addition, MINIX's [[16-bit]] design was not well adapted to the [[32-bit]] design of the increasingly cheap and popular [[Intel 386]] architecture for personal computers.
[10490200] |In 1991, Torvalds began to work on a non-commercial replacement for MINIX while he was attending the [[University of Helsinki]].
[10490210] |This eventually became the [[Linux kernel]].
[10490220] |In 1992, Tanenbaum posted an article on [[Usenet]] claiming Linux was obsolete.
[10490230] |In the article, he criticized the operating system as being [[Monolithic kernel|monolithic]] in design and being tied closely to the x86 architecture and thus not portable, as he described "a fundamental error."
[10490240] |Tanenbaum suggested that those who wanted a modern operating system should look into one based on the [[microkernel]] model.
[10490250] |The posting elicited the response of Torvalds and [[Ken Thompson]], one of the founders of [[Unix]], which resulted in a well known debate over the microkernel and monolithic kernel designs.
[10490260] |Linux was dependent on the MINIX [[user space]] at first.
[10490270] |With code from the GNU system freely available, it was advantageous if this could be used with the fledgling OS.
[10490275] |Code licensed under the GNU GPL can be used in other projects, so long as they also are released under the same or a compatible license.
[10490280] |In order to make the Linux kernel compatible with the components from the GNU Project, Torvalds initiated a switch from his original license (which prohibited commercial redistribution) to the GNU GPL.
[10490290] |Linux and GNU developers worked to integrate GNU components with Linux to make a fully functional and free operating system.
[10490300] |=== Commercial and popular uptake === 
[10490310] |Today Linux is used in numerous domains, from [[embedded system]]s to [[supercomputer]]s, and has secured a place in [[server (computing)|server]] installations with the popular [[LAMP (software bundle)|LAMP]] application stack.
[10490320] |Torvalds continues to direct the development of the kernel.
[10490330] |Stallman heads the Free Software Foundation, which in turn supports the GNU components.
[10490340] |Finally, individuals and corporations develop third-party non-GNU components.
[10490350] |These third-party components comprise a vast body of work and may include both kernel modules and user applications and libraries.
[10490360] |Linux vendors and communities combine and distribute the kernel, GNU components, and non-GNU components, with additional package management software in the form of [[Linux distribution]]s.
[10490370] |== Design == 
[10490380] |Linux is a modular [[Unix-like]] operating system.
[10490390] |It derives much of its basic design from principles established in Unix during the 1970s and 1980s.
[10490400] |Linux uses a [[monolithic kernel]], the [[Linux kernel]], which handles process control, networking, and [[peripheral]] and [[file system]] access.
[10490410] |[[Device drivers]] are integrated directly with the kernel.
[10490420] |Much of Linux's higher-level functionality is provided by separate projects which interface with the kernel.
[10490430] |The GNU [[Userland (computing)|userland]] is an important part of most Linux systems, providing the [[shell (computing)|shell]] and [[Unix tool]]s which carry out many basic operating system tasks.
[10490440] |On top these tools form a Linux system with a [[graphical user interface]] that can be used, usually running in the [[X Window System]].
[10490450] |=== User interface === 
[10490460] |Linux can be controlled by one or more of a text-based [[command line interface]] (CLI), [[graphical user interface]] (GUI) (usually the default for desktop), or through controls on the device itself (common on embedded machines).
[10490470] |On desktop machines, [[KDE]], [[GNOME]] and [[Xfce]] are the most popular user interfaces, though a variety of other user interfaces exist.
[10490480] |Most popular user interfaces run on top of the [[X Window System]] (X), which provides [[network transparency]], enabling a graphical application running on one machine to be displayed and controlled from another.
[10490490] |Other GUIs include [[X window manager]]s such as [[FVWM]], [[Enlightenment (window manager)|Enlightenment]] and [[Window Maker]].
[10490500] |The window manager provides a means to control the placement and appearance of individual application windows, and interacts with the X window system.
[10490510] |A Linux system usually provides a [[CLI]] of some sort through a [[Shell (computing)|shell]], which is the traditional way of interacting with a Unix system.
[10490520] |A Linux distribution specialized for servers may use the CLI as its only interface.
[10490530] |A “headless system” run without even a monitor can be controlled by the command line via a protocol such as [[Secure Shell|SSH]] or [[telnet]].
[10490540] |Most low-level Linux components, including the GNU [[Userland (computing)|Userland]], use the CLI exclusively.
[10490550] |The CLI is particularly suited for automation of repetitive or delayed tasks, and provides very simple [[inter-process communication]].
[10490560] |A graphical [[terminal emulator]] program is often used to access the CLI from a Linux desktop.
[10490570] |== Development == 
[10490580] |The primary difference between Linux and many other popular contemporary operating systems is that the [[Linux kernel]] and other components are [[free software|free]] and [[open source software]].
[10490590] |Linux is not the only such operating system, although it is the best-known and most widely used.
[10490600] |Some [[free software license|free]] and [[open source license|open source]] software licences are based on the principle of [[copyleft]], a kind of reciprocity: any work derived from a copyleft piece of software must also be copyleft itself.
[10490610] |The most common free software license, the [[GNU GPL]], is a form of copyleft, and is used for the Linux kernel and many of the components from the [[GNU project]].
[10490620] |As an operating system [[underdog (competition)|underdog]] competing with mainstream operating systems, Linux cannot rely on a [[monopoly]] advantage; in order for Linux to be convenient for users, Linux aims for [[interoperability]] with other operating systems and established computing standards.
[10490630] |Linux systems adhere to [[POSIX]], [[Single UNIX Specification|SUS]], [[International Organization for Standardization|ISO]] and [[American National Standards Institute|ANSI]] standards where possible, although to date only one Linux distribution has been POSIX.1 certified, Linux-FT.
[10490640] |Free software projects, although developed in a [[Collaboration|collaborative]] fashion, are often produced independently of each other.
[10490650] |However, given that the software licenses explicitly permit redistribution, this provides a basis for larger scale projects that collect the software produced by stand-alone projects and make it available all at once in the form of a [[Linux distribution]].
[10490660] |A [[Linux distribution]], commonly called a “distro”, is a project that manages a remote collection of Linux-based software, and facilitates installation of a Linux operating system.
[10490670] |Distributions are maintained by individuals, loose-knit teams, volunteer organizations, and commercial entities.
[10490680] |They include system software and [[application software]] in the form of ''packages'', and distribution-specific software for initial system installation and configuration as well as later package upgrades and installs.
[10490690] |A distribution is responsible for the default configuration of installed Linux systems, system security, and more generally integration of the different software packages into a coherent whole.
[10490700] |=== Community === 
[10490710] |Linux is largely driven by its developer and user communities.
[10490720] |Some vendors develop and fund their distributions on a volunteer basis, [[Debian]] being a well-known example.
[10490730] |Others maintain a community version of their commercial distributions, as [[Red Hat]] does with [[Fedora (Linux distribution)|Fedora]].
[10490740] |In many cities and regions, local associations known as [[Linux Users Group]]s (LUGs) seek to promote Linux and by extension free software.
[10490750] |They hold meetings and provide free demonstrations, training, technical support, and operating system installation to new users.
[10490760] |There are also many [[Internet]] communities that seek to provide support to Linux users and developers.
[10490770] |Most distributions and open source projects have [[IRC]] chatrooms or [[newsgroup]]s.
[10490780] |[[Online forum]]s are another means for support, with notable examples being [[LinuxQuestions.org]] and the [[Gentoo Linux|Gentoo]] forums.
[10490790] |Linux distributions host [[mailing list]]s; commonly there will be a specific topic such as usage or development for a given list.
[10490800] |There are several technology websites with a Linux focus.
[10490810] |[[Linux Weekly News]] is a weekly digest of Linux-related news; the [[Linux Journal]] is an online magazine of Linux articles published monthly; [[Slashdot]] is a technology-related news website with many stories on Linux and open source software; [[Groklaw]] has written in depth about Linux-related legal proceedings and there are many articles relevant to the Linux kernel and its relationship with [[GNU]] on the [[GNU Project|GNU project's]] website.
[10490820] |Print [[magazine]]s on Linux often include [[cover disk]]s including software or even complete Linux distributions.
[10490830] |Although Linux is generally available free of charge, several large corporations have established business models that involve selling, supporting, and contributing to Linux and free software.
[10490840] |These include [[Dell]], [[IBM]], [[Hewlett-Packard|HP]], [[Sun Microsystems]], [[Novell]], and [[Red Hat]].
[10490850] |The free software licenses on which Linux is based explicitly accommodate and encourage commercialization; the relationship between Linux as a whole and individual vendors may be seen as [[symbiosis|symbiotic]].
[10490860] |One common business model of commercial suppliers is charging for support, especially for business users.
[10490870] |A number of companies also offer a specialized business version of their distribution, which adds proprietary support packages and tools to administer higher numbers of installations or to simplify administrative tasks.
[10490880] |Another business model is to give away the software in order to sell hardware.
[10490890] |=== Programming on Linux === 
[10490900] |Most Linux distributions support dozens of [[programming language]]s.
[10490910] |The most common collection of utilities for building both Linux applications and operating system programs is found within the [[GNU toolchain]], which includes the [[GNU Compiler Collection]] (GCC) and the [[GNU build system]].
[10490920] |Amongst others, GCC provides compilers for [[Ada (programming language)|Ada]], [[C (programming language)|C]], [[C++]], [[Java (programming language)|Java]], and [[Fortran]].
[10490930] |The Linux kernel itself is written to be compiled with GCC.
[10490940] |[[Proprietary software|Proprietary]] compilers for Linux include the [[Intel C++ Compiler]] and IBM XL C/C++ Compiler.
[10490950] |Most distributions also include support for [[Perl]], [[Ruby programming language|Ruby]], [[Python programming language|Python]] and other [[Dynamic programming language|dynamic languages]].
[10490960] |Examples of languages that are less common, but still well-supported, are [[C Sharp (programming language)|C#]] via the [[Mono (software)|Mono]] project, sponsored by [[Novell]], and [[Scheme programming language|Scheme]].
[10490970] |A number of [[Java Virtual Machine]]s and development kits run on Linux, including the original Sun Microsystems JVM ([[HotSpot]]), and IBM's J2SE RE, as well as many open-source projects like [[Kaffe]].
[10490980] |The two main frameworks for developing graphical applications are those of [[GNOME]] and [[KDE]].
[10490990] |These projects are based on the [[GTK+]] and [[Qt (toolkit)|Qt]] [[widget toolkit]]s, respectively, which can also be used independently of the larger framework.
[10491000] |Both support a wide variety of languages.
[10491010] |There are a number of [[Integrated development environment]]s available including [[Anjuta]], [[Code::Blocks]], [[Eclipse (computing)|Eclipse]], [[KDevelop]], [[Lazarus (software)|Lazarus]], [[MonoDevelop]], [[NetBeans]], and [[Omnis Studio]] while the long-established editors [[Vim (text editor)|Vim]] and [[Emacs]] remain popular.
[10491020] |== Uses == 
[10491030] |As well as those designed for general purpose use on desktops and servers, distributions may be specialized for different purposes including: [[computer architecture]] support, [[Embedded Linux|embedded systems]], stability, security, localization to a specific region or language, targeting of specific user groups, support for [[real-time computing|real-time]] applications, or commitment to a given desktop environment.
[10491040] |Furthermore, some distributions deliberately include only [[free software]].
[10491050] |Currently, over three hundred distributions are actively developed, with about a dozen distributions being most popular for general-purpose use.
[10491060] |Linux is a widely [[porting|ported]] operating system.
[10491070] |While the Linux kernel was originally designed only for [[Intel 80386]] [[microprocessor]]s, it now runs on a more diverse range of [[computer architecture]]s than any other operating system: in the hand-held [[ARM architecture|ARM]]-based [[iPAQ]] and the [[mainframe computer|mainframe]] [[IBM]] [[System z9]], in devices ranging from [[mobile phone]]s to [[supercomputer]]s.
[10491080] |Specialized distributions exist for less mainstream architectures.
[10491090] |The [[ELKS]] kernel [[fork (software development)|fork]] can run on [[Intel 8086]] or [[Intel 80286]] [[16-bit]] microprocessors, while the [[µClinux]] kernel fork may run on systems without a [[memory management unit]].
[10491100] |The kernel also runs on architectures that were only ever intended to use a manufacturer-created operating system, such as [[Macintosh]] computers, [[Personal digital assistant|PDA]]s, [[video game console]]s, [[Digital audio player|portable music players]], and [[mobile phone]]s.
[10491110] |=== Desktop === 
[10491120] |Although there is a lack of Linux ports for some [[Mac OS X]] and [[Microsoft Windows]] programs in domains such as [[desktop publishing]] and [[professional audio]], applications equivalent to those available for Mac and Windows are available for Linux.
[10491130] |Most Linux distributions provide a program for browsing a list of thousands of [[free software]] applications that have already been tested and configured for a specific distribution.
[10491140] |These free programs can be downloaded and installed with one mouse click and a digital signature guarantees that no one has added a virus or a spyware to these programs.
[10491150] |Many [[free software]] titles that are popular on Windows, such as [[Pidgin (software)|Pidgin]], [[Mozilla Firefox]], [[Openoffice.org]], and [[GIMP]], are available for Linux.
[10491160] |A growing amount of proprietary desktop software is also supported under Linux, examples being [[Adobe Flash Player]], [[Adobe Acrobat|Acrobat Reader]], [[Matlab]], [[Nero Burning ROM]], [[Opera (Internet suite)|Opera]], [[RealPlayer]], and [[Skype]].
[10491170] |In the field of animation and visual effects, most high end software, such as AutoDesk Maya, Softimage XSI and Apple Shake, is available for Linux, Windows and/or Mac OS X.
[10491180] |[[CrossOver]] is a proprietary solution based on the open source [[Wine (software)|Wine]] project that supports running older Windows versions of [[Microsoft Office]] and [[Adobe Photoshop]] versions through CS2.
[10491190] |[[Microsoft Office 2007]] and Adobe Photoshop CS3 are known not to work.
[10491200] |Besides the free Windows compatibility layer [[Wine (software)|Wine]], most distributions offer [[Dual boot]] and [[X86 virtualization]] for running both Linux and Windows on the same computer.
[10491210] |Linux's open nature allows distributed teams to [[L10n|localize]] Linux distributions for use in locales where localizing proprietary systems would not be cost-effective.
[10491220] |For example the [[Sinhalese language]] version of the [[Knoppix]] distribution was available for a long time before [[Microsoft Windows XP]] was translated to Sinhalese.
[10491230] |In this case the Lanka Linux User Group played a major part in developing the localized system by combining the knowledge of university professors, [[linguist]]s, and local developers.
[10491240] |The performance of Linux on the desktop has been a controversial topic, with at least one key Linux kernel developer, Con Kolivas, accusing the Linux community of favouring performance on servers.
[10491250] |He quit Linux development because he was frustrated with this lack of focus on the desktop, and then gave a 'tell all' interview on the topic.
[10491260] |=== Servers and supercomputers === 
[10491270] |Historically, Linux has mainly been used as a [[Server (computing)|server]] operating system, and has risen to prominence in that area; [[Netcraft]] reported in September 2006 that eight of the ten most reliable internet hosting companies run Linux on their [[web server]]s.
[10491280] |This is due to its relative stability and long uptime, and the fact that desktop software with a graphical user interface for servers is often unneeded.
[10491290] |Enterprise and non-enterprise Linux distributions may be found running on servers.
[10491300] |Linux is the cornerstone of the [[LAMP (software bundle)|LAMP]] server-software combination (Linux, [[Apache HTTP Server|Apache]], [[MySQL]], [[Perl]]/[[PHP]]/[[Python (programming language)|Python]]) which has achieved popularity among developers, and which is one of the more common platforms for website hosting.
[10491310] |Linux is commonly used as an operating system for [[supercomputer]]s.
[10491320] |As of [[November 2007]], out of the top 500 systems, 426 (85.2%) run Linux.
[10491330] |=== Embedded devices === 
[10491340] |Due to its low cost and ability to be easily modified, an [[embedded Linux]] is often used in [[embedded systems]].
[10491350] |Linux has become a major competitor to the proprietary [[Symbian OS]] found in the majority of smartphones — 16.7% of [[smartphone]]s sold worldwide during 2006 were using Linux — and it is an alternative to the proprietary [[Windows CE]] and [[Palm OS]] operating systems on [[mobile device]]s.
[10491360] |Cell phones or PDAs running on Linux and built on open source platform became a trend from 2007, like [[Nokia N810]], [[Openmoko]]'s [[Neo1973]] and the on-going [[Google Android]].
[10491370] |The popular [[TiVo]] digital video recorder uses a customized version of Linux.
[10491380] |Several network [[firewall]] and [[router]] standalone products, including several from [[Linksys]], use Linux internally, using its advanced firewall and routing capabilities.
[10491390] |The [[Korg OASYS]] and the [[Yamaha Motif|Yamaha Motif XS]] [[music workstation]]s also run Linux.
[10491400] |Further more Linux is used in the leading [[stage lighting]] control system, FlyingPig/HighEnd WholeHogIII Console .
[10491410] |=== Market share and uptake === 
[10491420] |Many quantitative studies of open source software focus on topics including market share and reliability, with numerous studies specifically examining Linux.
[10491430] |The Linux market is growing rapidly, and the revenue of servers, desktops, and packaged software running Linux is expected to exceed $35.7 billion by 2008.
[10491440] |[[International Data Corporation|IDC]]'s report for Q1 2007 says that Linux now holds 12.7% of the overall server market.
[10491450] |This estimate was based on the number of Linux servers sold by various companies.
[10491460] |Desktop adoption of Linux is approximately 1%.
[10491470] |In comparison, [[List of Microsoft operating systems|Microsoft operating systems]] hold more than 90%.
[10491480] |The frictional cost of switching operating systems and lack of support for certain hardware and application programs designed for [[Microsoft Windows]] have been two factors that have inhibited adoption.
[10491490] |Proponents and analysts attribute the relative success of Linux to its security, reliability, low cost, and freedom from [[vendor lock-in]].
[10491500] |Also most recently Google has begun to fund [[Wine (software)|Wine]], which acts as a compatibility layer, allowing users to run some Windows programs under Linux.
[10491510] |The [[OLPC XO-1|XO laptop]] project of One Laptop Per Child is creating a new and potentially much larger Linux community, planned to reach [http://www.laptop.org/en/vision/mission/index.shtml several hundred million schoolchildren] and their families and communities in developing countries.
[10491515] |[http://wiki.laptop.org/go/countries Six countries] have ordered a million or more units each for delivery in 2007 to distribute to schoolchildren at no charge.
[10491520] |[[Google]], [[Red Hat]], and [[eBay]] are major supporters of the project.
[10491530] |== Copyright and naming == 
[10491540] |The Linux kernel and most GNU software are [[software license|license]]d under the [[GNU General Public License]] (GPL).
[10491550] |The GPL requires that anyone who distributes the Linux kernel must make the source code (and any modifications) available to the recipient under the same terms.
[10491560] |In 1997, Linus Torvalds stated, “Making Linux GPL'd was definitely the best thing I ever did.”
[10491570] |Other key components of a Linux system may use other licenses; many libraries use the [[GNU Lesser General Public License]] (LGPL), a more permissive variant of the GPL, and the [[X Window System]] uses the [[MIT License]].
[10491580] |Torvalds has publicly stated that he would not move the Linux kernel (currently licensed under GPL version 2) to version 3 of the GPL, released in mid-2007, specifically citing some provisions in the new license which prohibit the use of the software in [[digital rights management]].
[10491590] |A 2001 study of [[Red Hat Linux]] 7.1 found that this distribution contained 30 million [[source lines of code]].
[10491600] |Using the [[COCOMO|Constructive Cost Model]], the study estimated that this distribution required about eight thousand man-years of development time.
[10491610] |According to the study, if all this software had been developed by conventional [[proprietary software|proprietary]] means, it would have cost about 1.08 billion dollars (year 2000 U.S. dollars) to develop in the United States.
[10491620] |Most of the code (71%) was written in the [[C (programming language)|C]] [[computer programming|programming]] [[programming language|language]], but many other languages were used, including [[C++]], [[assembly language]], [[Perl]], [[Python (programming language)|Python]], [[Fortran]], and various [[shell script]]ing languages.
[10491630] |Slightly over half of all lines of code were licensed under the GPL.
[10491640] |The Linux kernel itself was 2.4 million lines of code, or 8% of the total.
[10491650] |In a later study, the same analysis was performed for Debian GNU/Linux version 4.0.
[10491660] |This distribution contained over 283 million source lines of code, and the study estimated that it would have cost 5.4 billion Euros to develop by conventional means.
[10491670] |In the United States, the name ''Linux'' is a [[trademark]] registered to Linus Torvalds.
[10491680] |Initially, nobody registered it, but on [[August 15]] [[1994]], William R. Della Croce, Jr. filed for the trademark ''Linux'', and then demanded royalties from Linux distributors.
[10491690] |In 1996, Torvalds and some affected organizations sued him to have the trademark assigned to Torvalds, and in 1997 the case was settled.
[10491700] |The licensing of the trademark has since been handled by the [[Linux Mark Institute]].
[10491710] |Torvalds has stated that he only trademarked the name to prevent someone else from using it, but was bound in 2005 by [[United States trademark law]] to take active measures to enforce the trademark.
[10491720] |As a result, the LMI sent out a number of letters to distribution vendors requesting that a fee be paid for the use of the name, and a number of companies have complied.
[10491730] |=== GNU/Linux === 
[10491740] |The [[Free Software Foundation]] views Linux distributions which use GNU software as [[GNU variants]] and they ask that such operating systems be referred to as ''GNU/Linux'' or ''a Linux-based GNU system''.
[10491750] |However, the media and population at large refers to this family of operating systems simply as ''Linux''.
[10491760] |While some distributors make a point of using the aggregate form, most notably [[Debian]] with the ''[[Debian GNU/Linux]]'' distribution, the term's use outside of the enthusiast community is limited.
[10491770] |The distinction between the Linux kernel and distributions based on it plus the GNU system is a source of confusion to many newcomers, and the naming remains controversial, as many large Linux distributions (e.g. [[Ubuntu]] and [[SuSE]] Linux) are simply using the ''Linux'' name, rather than ''GNU/Linux''.
[10500010] |<article>List of chatterbots</article>
[10500020] |==Chatterbot Directories== 
[10500030] |*
[10500040] |*[http://www.simonlaven.com Chatterbot Central] at [http://www.simonlaven.com The Simon Laven Page]
[10500050] |*[http://www.aidreams.co.uk/chatterbotcollection/index.htm The Chatterbot Collection]
[10500060] |*[http://www.aihub.org AI Hub] - A directory of news, programs, and links all related to chatterbots and Artificial Intelligence
[10500070] |*[http://www.chatterboxchallenge.com/bots_dir.php The Chatterbox Challenge Bots Directory] at [http://www.chatterboxchallenge.com The Chatterbox Challenge]
[10500080] |==Classic Chatterbots== 
[10500090] |*[[Dr. Sbaitso]]
[10500100] |*[[ELIZA]]
[10500110] |*[[PARRY]]
[10500120] |*[[Racter]]
[10500130] |==General Chatterbots== 
[10500140] |*[[Artificial Linguistic Internet Computer Entity|A.L.I.C.E.]] and other [[Alicebot]]/pandorabot-based ([http://www.titane.ca/concordia/dfar251/igod/main.html iGod], [http://www.mousebreaker.com/games/chatbot/play.php Mitsuku], [http://www.friendbot.co.uk FriendBot], etc.)
[10500150] |*[[Albert One]]
[10500160] |*[[ALIMbot]]
[10500170] |*[[CHAT and TIPS]]
[10500180] |*[http://www.chat-bot.com Chat-bot] 
[10500190] |*[[Claude Chatterbot|Claude]]
[10500200] |*[http://www.dadorac.com Dadorac] 
[10500210] |*[http://www.dai2.co.uk/ DAI2] - A dynamic artificial intelligence which learns from its surrounding community
[10500220] |*[http://www.elbot.com/ Elbot]
[10500230] |*[[Ella Chatterbot|Ella]]
[10500240] |*[[Fred Chatterbot|Fred]]
[10500250] |*[[Jabberwacky]]
[10500260] |*[http://www.abenteuermedien.de/jabberwock Jabberwock]
[10500270] |*[http://www.jeeney.com/ Jeeney AI]
[10500280] |*[http://www.jixperts.com?lang=en JIxperts] – collection of wiki chatterbots.
[10500290] |*[http://www.iaindustrie.fr.nf KAR Intelligent Computer]
[10500300] |*[http://www.leeds-city-guide.com/kyle Kyle] – A unique learning Artificial Intelligence chatbot, which employs contextual learning algorithms.
[10500310] |*[[MegaHal]]
[10500320] |*[[Mr Know-It-All]]
[10500330] |*Oliverbot
[10500340] |*[http://uk.geocities.com/mattbrown1101/ Poseidon]
[10500350] |*[http://www.infradrive.com/robomatic.php RoboMatic X1] - A chatbot which controls the user's PC through chatting by their voice or by typing.
[10500360] |*[http://www.cooldictionary.com/splotchy.mpl Splotchy]
[10500370] |*[[Starship Titanic#Spookitalk|Spookitalk]] - A chatterbot used for [[Non-player character|NPC]]s in [[Douglas Adams]]' ''Starship Titanic'' video game.
[10500380] |*[http://www.onebigspace.com/ Thomas]
[10500390] |*[[Ultra Hal Assistant]]
[10500400] |*[[Verbot]]
[10500410] |*[http://www.yhaken.com/ Yhaken]
[10500420] |*[http://www.scientiobot.com ScientioBot] - A new technology chatterbot using concept mining techniques accessible via a free web service.
[10500430] |*[http://nicole.jetaylor.net NICOLE] A simple chatterbot with the ability to learn new phrases.
[10500440] |==[[Instant messenger|IM]] Chatterbots== 
[10500450] |*DAI2 is also available on the MSN / Windows Live network as dai2@dai2.co.uk
[10500460] |*[http://www.dnreg.org/bot/ MSN Quickbot]
[10500470] |*[http://www.smarterchild.com SmarterChild]
[10500480] |*[http://www.spleak.com Spleak]
[10500490] |*[http://www.mrmovie.com MrMovie] - searching actors/movies/dvd's in IM (Skype, AOL/AIM or MSN/Live)
[10500500] |*[[Inside Messenger Bot|InsideMessenger]]
[10500510] |*[http://www.inocu.jt-online.co.uk Inocu] - (MSN/Live)
[10500520] |*[http://www.friendbot.co.uk FriendBot-An AIM Chatterbot]
[10500530] |*[http://www.amsn-project.net/plugins.php amsnEliza plugin for aMSN]
[10500540] |*[[Inside Messenger Bot|TrixieMouse]]
[10500550] |*[http://www.infobot.pl/ Infobot] - Polish informational bot for Gadu-gadu, Skype and Jabber
[10500560] |==AIML Chatterbots== 
[10500570] |*[http://www.taik.fi/turingenigma Alan] - In ''Turing Enigma'' Alan Turing's spirit has infiltrated the World War II encrypting device Enigma.
[10500580] |*[http://www.dustyant.com/projects/deebot/ Deeb0t]
[10500590] |*[http://www.pandorabots.com/pandora/talk?botid=b0dafd24ee35a477 Chomsky] A chatbot that uses a smiley face to convey emotions.
[10500600] |It uses the information in Wikipedia to build its conversations and has links to Wikipedia articles.
[10500610] |*[[John Lennon Artificial Intelligence Project]]
[10500620] |*[[SitePal]]
[10500630] |==JFred Chatterbots== 
[10500640] |*[[The Turing Hub]]
[10500650] |==Educational Chatterbots== 
[10500660] |*[http://www.philocomp.net/?pageref=ai&page=elizabeth Elizabeth] Aims to teach AI techniques and concepts, starting from chatterbot design.
[10500670] |Accompanied by self-teaching materials, as used at the University of Leeds.
[10500680] |==Non-English Chatterbots== 
[10500690] |*[http://www.geocities.com/brizglace/amanda.htm Amanda] - (French) with source code for Windows.
[10500700] |*[[Proteus]]
[10500710] |*[msnim:chat?contact=senhorbot@hotmail.com Senhor Bot] (Brazillian bot for MSN)
[10500720] |[[Category:Chatterbots|*]]
[10500730] |[[bn:চ্যাটারবটসমূহের তালিকা]]
[10510010] |<article>Loebner prize</article>
[10510020] |The '''Loebner Prize''' is an annual competition that awards prizes to the [[Chatterbot]] considered by the judges to be the most [[Artificial intelligence|humanlike]] of those entered.
[10510030] |The format of the competition is that of a standard [[Turing test]].
[10510040] |In the Loebner Prize, as in a Turing test, a human judge is faced with two computer screens.
[10510050] |One is under the control of a computer, the other is under the control of a human.
[10510060] |The judge poses questions to the two screens and receives answers.
[10510070] |Based upon the answers, the judge must decide which screen is controlled by the human and which is controlled by the computer program.
[10510080] |The contest was begun in 1990 by [[Hugh Loebner]] in conjunction with the [[Cambridge Center for Behavioral Studies]] of [[Massachusetts]], [[United States]].
[10510090] |It has since been associated with [[Flinders University]], [[Dartmouth College]], the [[Science Museum (London)|Science Museum]] in [[London]], and most recently the [[University of Reading]].
[10510100] |Within the field of artificial intelligence, the Loebner Prize is somewhat controversial; the most prominent critic, [[Marvin Minsky]], has called it a publicity stunt that does not help the field along.
[10510110] |==Prizes== 
[10510120] |The prizes for each year include: 
[10510130] |* $2,000 for the most human-seeming of all chatterbots for that year - awarded every year.
[10510140] |In 2005, the prize was increased to $3,000, and the prize was $2,250 in 2006.
[10510150] |In 2008 the prize will be $3000.00
[10510160] |* $25,000 for the first chatterbot that judges cannot distinguish from a real human in a text-only Turing test, and that can convince judges that the other (human) entity they are talking to simultaneously is a computer.
[10510165] |''(to be awarded once only)''
[10510170] |* $100,000 to the first chatterbot that judges cannot distinguish from a real human in a Turing test that includes deciphering and understanding text, visual, and auditory input.
[10510175] |''(to be awarded once only)''
[10510180] |The Loebner Prize dissolves once the $100,000 prize is won.
[10510190] |==2008 Loebner Prize== 
[10510200] |The 2008 Competition is to be held on Sunday [[12 October]] in University of Reading, [[United Kingdom|UK]].
[10510210] |The event, which is being co-directed by [[Kevin Warwick]], will include a direct challenge on the [[Turing test]] as originally proposed by [[Alan Turing]].
[10510220] |The first place winner will receive $3000.00 and a bronze medal.
[10510230] |==2007 Loebner Prize== 
[10510240] |The 2007 Competition was held on Sunday, [[21 October]] in [[New York City]].
[10510250] |The participants in the contest were: 
[10510260] |* [[Rollo Carpenter]] from Icogno, creator of [[Jabberwacky]]
[10510270] |* Noah Duncan, private entry, creator of Cletus
[10510280] |* Robert Medeksza from Zabaware, creator of [[Ultra Hal Assistant]]
[10510290] |No bot passed the Turing test but the judges ranked the bots as "most human".
[10510300] |The results of the contest were: 
[10510310] |* 1st place: Robert Medeksza
[10510320] |* 2nd place: Noah Duncan
[10510330] |* 3rd place: Rollo Carpenter
[10510340] |The winner received $2250 and the Annual Medal.
[10510350] |The runners up received $250 each.
[10510360] |==2006 Loebner Prize== 
[10510370] |On Wednesday, [[August 30]], the finalists for the 2006 Loebner Prize were announced.
[10510380] |The finalists were: 
[10510390] |* Rollo Carpenter
[10510400] |* Richard Churchill and Marie-Claire Jenkins
[10510410] |* Noah Duncan
[10510420] |* Robert Medeksza
[10510430] |The contest was held on Sunday, [[17 September]] at the Torrington Theatre, [[University College London]].
[10510440] |==Winners==
[10520010] |<article>Machine learning</article>
[10520020] |As a broad subfield of [[artificial intelligence]], '''machine learning''' is concerned with the design and development of [[algorithm]]s and techniques that allow computers to "learn".
[10520030] |At a general level, there are two types of learning: [[Inductive reasoning|inductive]], and [[Deductive reasoning|deductive]].
[10520040] |Inductive machine learning methods extract rules and patterns out of massive data sets.
[10520050] |The major focus of machine learning research is to extract information from data automatically, by computational and statistical methods.
[10520060] |Hence, machine learning is closely related not only to [[data mining]] and [[statistics]], but also [[theoretical computer science]].
[10520070] |==Applications== 
[10520080] |Machine learning has a wide spectrum of applications including [[natural language processing]], [[syntactic pattern recognition]], [[search engines]], [[diagnosis|medical diagnosis]], [[bioinformatics]], [[brain-machine interfaces]] and [[cheminformatics]], detecting [[credit card fraud]], [[stock market]] analysis, classifying [[DNA sequence]]s, [[speech recognition|speech]] and [[handwriting recognition]], [[object recognition]] in [[computer vision]], [[strategy game|game playing]] and [[robot locomotion]].
[10520090] |== Human interaction == 
[10520100] |Some machine learning systems attempt to eliminate the need for human intuition in the analysis of the data, while others adopt a collaborative approach between human and machine.
[10520110] |Human intuition cannot be entirely eliminated since the designer of the system must specify how the data is to be represented and what mechanisms will be used to search for a characterization of the data.
[10520120] |Machine learning can be viewed as an attempt to automate parts of the [[scientific method]].
[10520130] |Some statistical machine learning researchers create methods within the framework of [[Bayesian statistics]].
[10520140] |== Algorithm types == 
[10520150] |Machine learning [[algorithm]]s are organized into a [[taxonomy]], based on the desired outcome of the algorithm.
[10520160] |Common algorithm types include:
[10520170] |* [[Supervised learning]] &mdash; in which the algorithm generates a function that maps inputs to desired outputs.
[10520180] |One standard formulation of the supervised learning task is the [[statistical classification|classification]] problem: the learner is required to learn (to approximate) the behavior of a function which maps a vector <math>[X_1, X_2, \ldots X_N]\,</math> into one of several classes by looking at several input-output examples of the function.
[10520190] |* [[Unsupervised learning]] &mdash; An agent which models a set of inputs: labeled examples are not available.
[10520200] |* [[Semi-supervised learning]] &mdash; which combines both labeled and unlabeled examples to generate an appropriate function or classifier.
[10520210] |* [[Reinforcement learning]] &mdash; in which the algorithm learns a policy of how to act given an observation of the world.
[10520220] |Every action has some impact in the environment, and the environment provides feedback that guides the learning algorithm.
[10520230] |* [[Transduction (machine learning)|Transduction]] &mdash; similar to supervised learning, but does not explicitly construct a function: instead, tries to predict new outputs based on training inputs, training outputs, and test inputs which are available while training.
[10520240] |* [[Leaning to learn]] &mdash; in which the algorithm learns its own [[inductive bias]] based on previous experience.
[10520250] |The computational analysis of machine learning algorithms and their performance is a branch of [[theoretical computer science]] known as [[computational learning theory]].
[10520260] |== Machine learning topics == 
[10520270] |:''This list represents the topics covered on a typical machine learning course.''
[10520280] |;Prerequisites
[10520290] |*[[Bayesian theory]]
[10520300] |;Modeling [[conditional probability|conditional probability density functions]]<nowiki>: </nowiki> [[Regression analysis|regression]] and [[Statistical classification|classification]]
[10520310] |*[[Artificial neural network]]s
[10520320] |*[[Decision tree]]s
[10520330] |*[[Gene expression programming]]
[10520340] |*[[Genetic algorithms]]
[10520350] |*[[Genetic programming]]
[10520360] |*[[Holographic associative memory]]
[10520370] |*[[Inductive Logic Programming]]
[10520380] |*[[Kriging|Gaussian process regression]]
[10520390] |*[[Linear discriminant analysis]]
[10520400] |*[[Nearest neighbor (pattern recognition)|K-nearest neighbor]]
[10520410] |*[[Minimum message length]]
[10520420] |*[[Perceptron]]
[10520430] |*[[Quadratic classifier]]
[10520440] |*[[Radial basis function network]]s
[10520450] |*[[Support vector machine]]s
[10520460] |;Algorithms for estimating model parameters:
[10520470] |*[[Dynamic programming]]
[10520480] |*[[Expectation-maximization algorithm]]
[10520490] |;Modeling [[probability density function]]s through [[generative model]]s:
[10520500] |*[[Graphical model]]s including [[Bayesian network]]s and [[Markov network|Markov random fields]]
[10520510] |*[[Generative topographic map]]
[10520520] |;Approximate inference techniques
[10520530] |*[[Monte Carlo method]]s
[10520540] |*[[Variational Bayes]]
[10520550] |*[[Variable-order Markov model]]s
[10520560] |*[[Variable-order Bayesian network]]s
[10520570] |*[[Loopy belief propagation]]
[10520580] |;Optimization
[10520590] |*Most of methods listed above either use [[Optimization (mathematics)|optimization]] or are instances of optimization algorithms
[10520600] |;Meta-learning (ensemble methods)
[10520610] |*[[Boosting]]
[10520620] |*[[Bootstrap aggregating]]
[10520630] |*[[Random forest]]
[10520640] |*[[Weighted majority algorithm]]
[10520650] |;Inductive transfer and learning to learn
[10520660] |*[[Inductive transfer]]
[10520670] |*[[Reinforcement learning]]
[10520680] |*[[Temporal difference learning]]
[10520690] |*[[Monte-Carlo method]]
[10530010] |<article>Machine translation</article>
[10530020] |Machine translation''', sometimes referred to by the abbreviation '''MT''', is a sub-field of [[computational linguistics]] that investigates the use of [[computer software]] to [[translation|translate]] text or speech from one [[natural language]] to another.
[10530030] |At its basic level, MT performs simple [[substitution]] of words in one natural language for words in another.
[10530040] |Using [[corpus linguistics|corpus]] techniques, more complex translations may be attempted, allowing for better handling of differences in [[linguistic typology]], phrase [[recognition]], and translation of [[idiom]]s, as well as the isolation of anomalies.
[10530050] |Current machine translation software often allows for customisation by domain or [[profession]] (such as [[meteorology|weather reports]]) &mdash; improving output by limiting the scope of allowable substitutions.
[10530060] |This technique is particularly effective in domains where formal or formulaic language is used.
[10530070] |It follows then that machine translation of government and legal documents more readily produces usable output than conversation or less standardised text.
[10530080] |Improved output quality can also be achieved by human intervention: for example, some systems are able to translate more accurately if the user has [[word sense disambiguation|unambiguously identified]] which words in the text are names.
[10530090] |With the assistance of these techniques, MT has proven useful as a tool to assist human translators, and in some cases can even produce output that can be used "as is".
[10530100] |However, current systems are unable to produce output of the same quality as a human translator, particularly where the text to be translated uses casual language.
[10530110] |==History== 
[10530120] |The history of machine translation begins in the 1950s, after [[World War II]].
[10530130] |The [[Georgetown-IBM experiment|Georgetown experiment]] (1954) involved fully-automatic translation of over sixty [[Russian language|Russian]] sentences into [[English language|English]].
[10530140] |The experiment was a great success and ushered in an era of substantial funding for machine-translation research.
[10530150] |The authors claimed that within three to five years, machine translation would be a solved problem.
[10530160] |Real progress was much slower, however, and after the [[ALPAC|ALPAC report]] (1966), which found that the ten-year-long research had failed to fulfill expectations, funding was greatly reduced.
[10530170] |Beginning in the late 1980s, as [[computation]]al power increased and became less expensive, more interest was shown in [[statistical machine translation|statistical models for machine translation]].
[10530180] |The idea of using digital computers for translation of natural languages was proposed as early as 1946 by A.D.Booth and possibly others.
[10530190] |The Georgetown experiment was by no means the first such application, and a demonstration was made in 1954 on the APEXC machine at Birkbeck College (London Univ.) of a rudimentary translation of English into French.
[10530200] |Several papers on the topic were published at the time, and even articles in popular journals (see for example Wireless World, Sept. 1955, Cleave and Zacharov).
[10530210] |A similar application, also pioneered at Birkbeck College at the time, was reading and composing Braille texts by computer.
[10530220] |Recently, Internet has emerged as global information infrastructure, revolutionizing access to any information, as well as fast information transfer and exchange.
[10530230] |Using Internet and e-mail technology, people need to communicate rapidly over long distances across continent boundaries.
[10530240] |Not all of these Internet users, however, can use their own language for global communication to different people with different languages.
[10530250] |Therefore, using machine translation software, people can possibly communicate and contact one to another around the world in their own mother tongue, in the near future.
[10530260] |==Translation process== 
[10530270] |The [[translation process]] may be stated as: 
[10530280] |# [[Decoding]] the [[meaning (linguistic)|meaning]] of the [[source text]]; and
[10530290] |# Re-[[encoding]] this [[meaning (linguistic)|meaning]] in the [[target language]].
[10530300] |Behind this ostensibly simple procedure lies a complex [[cognitive]] operation.
[10530310] |To decode the meaning of the [[source text]] in its entirety, the translator must interpret and analyse all the features of the text, a process that requires in-depth knowledge of the [[grammar]], [[semantics]], [[syntax]], [[idiom]]s, etc., of the [[source language]], as well as the [[culture]] of its speakers.
[10530320] |The translator needs the same in-depth knowledge to re-encode the meaning in the [[target language]].
[10530330] |Therein lies the challenge in machine translation: how to program a computer that will "understand" a text as a person does, and that will "create" a new text in the [[target language]] that "sounds" as if it has been written by a person.
[10530340] |This problem may be approached in a number of ways.
[10530350] |==Approaches== 
[10530360] |Machine translation can use a method based on [[Expert System|linguistic rules]], which means that words will be translated in a linguistic way &mdash; the most suitable (orally speaking) words of the target language will replace the ones in the source language.
[10530370] |It is often argued that the success of machine translation requires the problem of [[natural language processing|natural language understanding]] to be solved first.
[10530380] |Generally, rule-based methods parse a text, usually creating an intermediary, symbolic representation, from which the text in the target language is generated.
[10530390] |According to the nature of the intermediary representation, an approach is described as [[interlingual machine translation]] or [[transfer-based machine translation]].
[10530400] |These methods require extensive [[lexicon]]s with [[morphology (linguistics)|morphological]], [[syntax|syntactic]], and [[semantics|semantic]] information, and large sets of rules.
[10530410] |Given enough data, machine translation programs often work well enough for a [[native speaker]] of one language to get the approximate meaning of what is written by the other native speaker.
[10530420] |The difficulty is getting enough data of the right kind to support the particular method.
[10530430] |For example, the large multilingual [[Text corpus|corpus]] of data needed for statistical methods to work is not necessary for the grammar-based methods.
[10530440] |But then, the grammar methods need a skilled linguist to carefully design the grammar that they use.
[10530450] |To translate between closely related languages, a technique referred to as [[shallow-transfer machine translation]] may be used.
[10530460] |===Rule-based=== 
[10530470] |The rule-based machine translation paradigm includes transfer-based machine translation, interlingual machine translation and dictionary-based machine translation paradigms.
[10530480] |'''''Transfer-based machine translation'''''
[10530490] |'''''Interlingual'''''
[10530500] |Interlingual machine translation is one instance of rule-based machine-translation approaches.
[10530510] |In this approach, the source language, i.e. the text to be translated, is transformed into an interlingual, i.e. source-/target-language-independent representation.
[10530520] |The target language is then generated out of the [[interlinguistics|interlingua]].
[10530530] |'''''Dictionary-based'''''
[10530540] |Machine translation can use a method based on [[dictionary]] entries, which means that the words will be translated as they are by a dictionary.
[10530550] |===Statistical=== 
[10530560] |Statistical machine translation tries to generate translations using [[statistical methods]] based on bilingual text corpora, such as the [[Hansard#Canadian hansard and machine translation|Canadian Hansard]] corpus, the English-French record of the Canadian parliament and [[EUROPARL]], the record of the [[European Parliament]].
[10530570] |Where such corpora are available, impressive results can be achieved translating texts of a similar kind, but such corpora are still very rare.
[10530580] |The first statistical machine translation software was [[CANDIDE]] from [[IBM]].
[10530590] |Google used [[SYSTRAN]] for several years, but has switched to a statistical translation method in October 2007.
[10530600] |Recently, they improved their translation capabilities by inputting approximately 200 billion words from [[United Nations]] materials to train their system.
[10530610] |Accuracy of the translation has improved.
[10530620] |===Example-based=== 
[10530630] |Example-based machine translation (EBMT) approach is often characterised by its use of a bilingual [[corpus]] as its main knowledge base, at run-time.
[10530640] |It is essentially a translation by [[analogy]] and can be viewed as an implementation of [[case-based reasoning]] approach of [[machine learning]].
[10530650] |==Major issues== 
[10530660] |===Disambiguation=== 
[10530670] |Word sense disambiguation concerns finding a suitable translation when a word can have more than one meaning.
[10530680] |The problem was first raised in the 1950s by [[Yehoshua Bar-Hillel]].
[10530690] |He pointed out that without a "universal encyclopedia", a machine would never be able to distinguish between the two meanings of a word.
[10530700] |Today there are numerous approaches designed to overcome this problem.
[10530710] |They can be approximately divided into "shallow" approaches and "deep" approaches.
[10530720] |Shallow approaches assume no knowledge of the text.
[10530730] |They simply apply statistical methods to the words surrounding the ambiguous word.
[10530740] |Deep approaches presume a comprehensive knowledge of the word.
[10530750] |So far, shallow approaches have been more successful.
[10530760] |===Named entities=== 
[10530770] |Related to [[named entity recognition]] in [[information extraction]].
[10530780] |==Applications== 
[10530790] |There are now many [[software]] programs for translating natural language, several of them [[online]], such as the [[SYSTRAN]] system which powers both [[Google]] translate and [[AltaVista]]'s [[Babel Fish (website)|Babel Fish]] as well as [[Promt]] that powers online translation services at Voila.fr and Orange.fr.
[10530800] |Although no system provides the holy grail of "fully automatic high quality machine translation" (FAHQMT), many systems produce reasonable output.
[10530810] |Despite their inherent limitations, MT programs are used around the world.
[10530820] |Probably the largest institutional user is the [[European Commission]].
[10530830] |[[Toggletext]] uses a transfer-based system (known as Kataku) to translate between [[English language|English]] and [[Indonesian language|Indonesian]].
[10530840] |[[Google]] has claimed that promising results were obtained using a proprietary statistical machine translation engine.
[10530850] |The statistical translation engine used in the [[Google tools#anchor_language_tools|Google language tools]] for Arabic <-> English and Chinese <-> English has an overall score of 0.4281 over the runner-up IBM's BLEU-4 score of 0.3954 (Summer 2006) in tests conducted by the National Institute for Standards and Technology.
[10530860] |[[Uwe Muegge]] has implemented a demo website that uses a [[controlled language]] in combination with the [[Google tools#anchor_language_tools|Google tool]] to produce fully automatic, high-quality machine translations of his English, German, and French web sites.
[10530870] |With the recent focus on terrorism, the military sources in the United States have been investing significant amounts of money in natural language engineering.
[10530880] |''In-Q-Tel'' (a [[venture capital]] fund, largely funded by the US Intelligence Community, to stimulate new technologies through private sector entrepreneurs) brought up companies like [[Language Weaver]].
[10530890] |Currently the military community is interested in translation and processing of languages like [[Arabic language|Arabic]], [[Pashto language|Pashto]], and [[Dari language|Dari]].
[10530900] |Information Processing Technology Office in [[DARPA]] hosts programs like [[DARPA TIDES program|TIDES]] and [[Babylon translator|Babylon Translator]].
[10530910] |US Air Force has awarded a $1 million contract to develop a language translation technology.
[10530920] |== Evaluation == 
[10530930] |There are various means for evaluating the performance of machine-translation systems.
[10530940] |The oldest is the use of human judges to assess a translation's quality.
[10530950] |Even though human evaluation is time-consuming, it is still the most reliable way to compare different systems such as rule-based and statistical systems.
[10530960] |[[Automate]]d means of evaluation include [[Bilingual evaluation understudy|BLEU]], [[NIST (metric)|NIST]] and [[METEOR]].
[10530970] |Relying exclusively on machine translation ignores that communication in [[natural language|human language]] is [[wiktionary:context|context]]-embedded, and that it takes a human to adequately comprehend the context of the original text.
[10530980] |Even purely human-generated translations are prone to error.
[10530990] |Therefore, to ensure that a machine-generated translation will be of publishable quality and useful to a human, it must be reviewed and edited by a human.
[10531000] |It has, however, been asserted that in certain applications, e.g. product descriptions written in a [[controlled language]], a [[dictionary-based machine translation|dictionary-based machine-translation]] system has produced satisfactory translations that require no human intervention.
[10540010] |<article>Metadata</article>
[10540020] |'''Metadata''' ('''meta data''', or sometimes '''metainformation''') is "data about data", of any sort in any media.
[10540030] |An item of metadata may describe an individual [[datum]], or content item, or a collection of data including multiple content items and hierarchical levels, for example a [[database schema]].
[10540040] |== Purpose == 
[10540050] |Metadata provides context for data.
[10540060] |Metadata is used to facilitate the understanding, characteristics, and management usage of data.
[10540070] |The metadata required for effective data management varies with the type of data and context of use.
[10540080] |In a [[library]], where the data is the content of the titles stocked, metadata about a title would typically include a description of the content, the [[author]], the publication date and the physical location.
[10540090] |== Examples of Metadata == 
[10540100] |=== Camera === 
[10540110] |In the context of a [[camera]], where the data is the photographic image, metadata would typically include the date the [[photograph]] was taken and details of the camera settings (lens, focal length, aperture, shutter timing, white balance, etc.).
[10540120] |=== Digital Music Player === 
[10540130] |On a digital portable music player, the album names, song titles and album art embedded in the music files are used to generate the artist and song listings, and are considered the metadata.
[10540140] |=== Information system === 
[10540150] |In the context of an [[information system]], where the data is the content of the [[computer]] files, metadata about an individual data item would typically include the name of the field and its length.
[10540160] |Metadata about a collection of data items, a computer file, might typically include the name of the file, the type of file and the name of the data administrator.
[10540170] |''Italic text''
[10540180] |=== Real world location === 
[10540190] |If we consider a particular place in the real world, this may be described by data, for example: 
[10540200] |* 1 "E83BJ" .
[10540210] |* 2 "17"
[10540220] |* 3 "Sunny"
[10540230] |To make sense of and use this data, context is important, and can be provided by metadata.
[10540240] |The metadata for the above three items of data might include:
[10540250] |* 1.1 "Post Code" – This is a brief description (or name) of the data item "E83BJ"
[10540260] |* 1.2 "The unique identifier of a postal district" – This is another description (a definition) of "E83BJ"
[10540270] |* 1.3 "27 June 2006" – This could also help describe "E83BJ", for example by giving the date it was last updated
[10540280] |* 2 "Average temperature in degrees Celsius" – This is a possible description of "17"
[10540290] |* 3 "Yesterday's weather" – This is a description of "sunny"
[10540300] |An item of metadata is itself data and therefore may have its own metadata.
[10540310] |For example, "Post Code" might have the following metadata:
[10540320] |* 1.1.1 "data item name" 
[10540330] |* 1.1.2 "5 characters, starting with A – Z"
[10540340] |"27 June 2006" might have the following metadata:
[10540350] |* 1.3.1 "date last changed" 
[10540360] |* 1.3.2 "dd MMM yyyy"
[10540370] |== Levels == 
[10540380] |The hierarchy of metadata descriptions can go on forever, but usually context or semantic understanding makes extensively detailed explanations unnecessary.
[10540390] |The role played by any particular [[datum]] depends on the context.
[10540400] |For example, when considering the geography of London, "E83BJ" would be a datum and "Post Code" would be metadatum.
[10540410] |But, when considering the data management of an automated system that manages geographical data, "Post Code" might be a datum and then "data item name" and "5 characters, starting with A – Z" would be metadata.
[10540420] |In any particular context, metadata characterizes the data it describes, not the entity described by that data.
[10540430] |So, in relation to "E83BJ", the datum "is in London" is a further description of the place in the real world which has the post code "E83BJ", not of the code itself.
[10540440] |Therefore, although it is providing information connected to "E83BJ" (telling us that this is the post code of a place in London), this would not normally be considered metadata, as it is describing "E83BJ" ''qua'' place in the real world and not ''qua'' data.
[10540450] |== Definitions == 
[10540460] |=== Etymology === 
[10540470] |[[Meta]] is a classical Greek preposition (μετ’ αλλων εταιρων) and prefix (μεταβασις) conveying the following senses in English, depending upon the case of the associated noun: among; along with; with; by means of; in the midst of; after; behind.
[10540480] |In [[epistemology]], the word means "about (its own category)"; thus metadata is "data about the data".
[10540490] |=== Varying definitions === 
[10540500] |The term was introduced intuitively, without a formal definition.
[10540510] |Because of that, today there are various definitions.
[10540520] |The most common one is the literal translation: 
[10540530] |* "Data about data are referred to as metadata."
[10540540] |Example: "12345" is data, and with no additional context is meaningless.
[10540550] |When "12345" is given a meaningful name (metadata) of "[[ZIP code]]", one can understand (at least in the [[United States]], and further placing "ZIP code" within the context of a [[postal address]]) that "12345" refers to the [[General Electric]] plant in [[Schenectady, New York]].
[10540560] |As for most people the difference between data and [[information]] is merely a [[philosophical]] one of no relevance in practical use, other definitions are: 
[10540570] |* Metadata is information about data.
[10540580] |* Metadata is information about information.
[10540590] |* Metadata contains information about that data or other data
[10540600] |There are more sophisticated definitions, such as: 
[10540610] |*"Metadata is structured, encoded data that describe characteristics of information-bearing entities to aid in the identification, discovery, assessment, and management of the described entities."
[10540620] |* "[Metadata is a set of] optional structured descriptions that are publicly available to explicitly assist in locating objects."
[10540630] |These are used more rarely because they tend to concentrate on one purpose of metadata — to find "objects", "entities" or "resources" — and ignore others, such as using metadata to optimize [[data compression|compression algorithms]], or to perform additional computations using the data.
[10540640] |The metadata concept has been extended into the world of systems to include any "data about data": the names of tables, columns, programs, and the like.
[10540650] |Different views of this "system metadata" are detailed below, but beyond that is the recognition that metadata can describe all aspects of systems: data, activities, people and organizations involved, locations of data and processes, access methods, limitations, timing and events, as well as motivation and rules.
[10540660] |Fundamentally, then, metadata is "the data that describe the structure and workings of an organization's use of information, and which describe the systems it uses to manage that information".
[10540670] |To do a model of metadata is to do an "[[Enterprise modeling|Enterprise model]]" of the information technology industry itself.
[10540680] |=== Metadata and Markup === 
[10540690] |In the context of the web and the work of the [[W3C]] in providing markup technologies of [[HTML]], [[XML]] and [[SGML]] the concept of metadata has specific context that is perhaps clearer than in other information domains.
[10540700] |With markup technologies there is metadata, markup and data content.
[10540710] |The metadata describes characteristics about the data, while the markup identifies the specific type of data content and acts as a container for that document instance.
[10540720] |This page in Wikipedia is itself an example of such usage, where the textual information is data, how it is packaged, linked, referenced, styled and displayed is markup and aspects and characteristics of that markup are metadata set globally across Wikipedia.
[10540730] |In the context of markup the metadata is architected to allow optimization of document instances to contain only a minimum amount of metadata, while the metadata itself is likely referenced externally such as in a [[schema]] definition ([[XSD]]) instance.
[10540740] |Also it should be noted that markup provides specialised mechanisms that handle referential data, again avoiding confusion over what is metadata or data, and allowing optimizations.
[10540750] |The reference and ID mechanisms in markup allowing reference links between related data items, and links to data items that can then be repeated about a data item, such as an address or product details.
[10540760] |These are then all themselves simply more data items and markup instances rather than metadata.
[10540770] |Similarly there are concepts such as classifications, ontologies and associations for which markup mechanisms are provided.
[10540780] |A data item can then be linked to such categories via markup and hence providing a clean delineation between what is metadata, and actual data instances.
[10540790] |Therefore the concepts and descriptions in a classification would be metadata, but the actual classification entry for a data item is simply another data instance.
[10540800] |Some examples can illustrate the points here.
[10540810] |Items in bold are data content, in italic are metadata, normal text items are all markup.
[10540820] |The two examples show in-line use of metadata within markup relating to a data instance (XML) compared to simple markup (HTML).
[10540830] |A simple [[HTML]] instance example:
[10540840] |&lt;span style="normalText"&gt;'''Example'''&lt;/span&gt;
[10540850] |And then a [[XML]] instance example with metadata:
[10540860] |<PersonMiddleName ''nillable="true"''>'''John'''</PersonMiddleName>
[10540870] |Where the inline assertion that a person's middle name may be an empty data item is metadata about the data item.
[10540880] |Such definitions however are usually not placed inline in XML.
[10540890] |Instead these definitions are moved away into the [[schema]] definition that contains the metadata for the entire document instance.
[10540900] |This again illustrates another important aspect of metadata in the context of markup.
[10540910] |The metadata is optimally defined only once for a collection of data instances.
[10540920] |Hence repeated items of markup are rarely metadata, but rather more markup data instances themselves.
[10540930] |=== Hierarchies of metadata === 
[10540940] |When structured into a hierarchical arrangement, metadata is more properly called an [[Ontology (computer science)|ontology]] or [[schema]].
[10540950] |Both terms describe "what exists" for some purpose or to enable some action.
[10540960] |For instance, the arrangement of subject headings in a library catalog serves not only as a guide to finding books on a particular subject in the stacks, but also as a guide to what subjects "exist" in the library's own ontology and how more specialized topics are related to or derived from the more general subject headings.
[10540970] |Metadata is frequently stored in a central location and used to help organizations standardize their data.
[10540980] |This information is typically stored in a [[metadata registry]].
[10540990] |=== Difference between data and metadata === 
[10541000] |Usually it is not possible to distinguish between (plain) data and metadata because:
[10541010] |*Something can be data and metadata at the same time.
[10541020] |The headline of an article is both its title (metadata) and part of its text (data).
[10541030] |* Data and metadata can change their roles.
[10541040] |A poem, as such, would be regarded as data, but if there were a song that used it as lyrics, the whole poem could be attached to an audio file of the song as metadata.
[10541050] |Thus, the labeling depends on the point of view.
[10541060] |These considerations apply no matter which of the above definitions is considered, except where explicit markup is used to denote what is data and what is metadata.
[10541070] |== Use == 
[10541080] |Metadata has many different applications; this section lists some of the most common.
[10541090] |Metadata is used to speed up and enrich searching for resources.
[10541100] |In general, search queries using metadata can save users from performing more complex filter operations manually.
[10541110] |It is now common for web browsers (with the notable exception of Mozilla Firefox), P2P applications and media management software to automatically download and locally cache metadata, to improve the speed at which files can be accessed and searched.
[10541120] |Metadata may also be associated to files manually.
[10541130] |This is often the case with documents which are scanned into a document storage repository such as FileNet or Documentum.
[10541140] |Once the documents have been converted into an electronic format a user brings the image up in a viewer application, manually reads the document and keys values into an online application to be stored in a metadata repository.
[10541150] |Metadata provide additional information to users of the data it describes.
[10541160] |This information may be descriptive ("These pictures were taken by children in the school's third grade class.") or algorithmic ("Checksum=139F").
[10541170] |Metadata helps to bridge the [[semantic gap]].
[10541180] |By telling a computer how data items are related and how these relations can be evaluated automatically, it becomes possible to process even more complex filter and search operations.
[10541190] |For example, if a search engine understands that "Van Gogh" was a "Dutch painter", it can answer a search query on "Dutch painters" with a link to a web page about Vincent Van Gogh, although the exact words "Dutch painters" never occur on that page.
[10541200] |This approach, called knowledge representation, is of special interest to the [[semantic web]] and [[artificial intelligence]].
[10541210] |Certain metadata is designed to optimize [[lossy compression]].
[10541220] |For example, if a video has metadata that allows a computer to tell foreground from background, the latter can be compressed more aggressively to achieve a higher compression rate.
[10541230] |Some metadata is intended to enable variable content presentation.
[10541240] |For example, if a picture has metadata that indicates the most important region — the one where there is a person — an image viewer on a small screen, such as on a mobile phone's, can narrow the picture to that region and thus show the user the most interesting details.
[10541250] |A similar kind of metadata is intended to allow blind people to access diagrams and pictures, by converting them for special output devices or reading their description using [[speech synthesis|text-to-speech]] software.
[10541260] |Other descriptive metadata can be used to automate workflows.
[10541270] |For example, if a "smart" software tool knows content and structure of data, it can convert it automatically and pass it to another "smart" tool as input.
[10541280] |As a result, users save the many [[cut, copy and paste|copy-and-paste]] operations required when analyzing data with "dumb" tools.
[10541290] |Metadata is becoming an increasingly important part of [[electronic discovery]].
[10541295] |[http://www.lexbe.com/hp/indepth-e-discovery-rule-metadata.htm] Application and file system metadata derived from [[electronic document]]s and files can be important evidence.
[10541300] |Recent changes to the [[Federal Rules of Civil Procedure]] make metadata routinely discoverable as part of [[Civil law (common law)|civil litigation]].
[10541310] |Parties to litigation are required to maintain and produce metadata as part of [[discovery (law)|discovery]], and [[spoliation of evidence|spoliation]] of metadata can lead to sanctions.
[10541320] |Metadata has become important on the [[World Wide Web]] because of the need to find useful information from the mass of information available.
[10541330] |Manually-created metadata adds value because it ensures consistency.
[10541340] |If a web page about a certain topic contains a word or phrase, then all web pages about that topic should contain that same word or phrase.
[10541350] |Metadata also ensures variety, so that if a topic goes by two names each will be used.
[10541360] |For example, an article about "[[sport utility vehicle]]s" would also be [[tag (metadata)|tagged]] "4 wheel drives", "4WDs" and "four wheel drives", as this is how SUVs are known in some countries.
[10541370] |Examples of metadata for an [[Compact Disc|audio CD]] include the [[MusicBrainz]] project and [[All Media Guide]]'s [[Allmusic]].
[10541380] |Similarly, [[MP3]] files have metadata tags in a format called [[ID3]].
[10541390] |== Types of metadata == 
[10541400] |Metadata can be classified by: 
[10541410] |* Content.
[10541420] |Metadata can either describe the ''resource'' itself (for example, name and size of a file) or the ''content'' of the resource (for example, "This video shows a boy playing football").
[10541430] |* Mutability.
[10541440] |With respect to the whole resource, metadata can be either ''immutable'' (for example, the "Title" of a video does not change as the video itself is being played) or ''mutable'' (the "Scene description" does change).
[10541450] |* Logical function.
[10541460] |There are three layers of logical function: at the bottom the ''subsymbolic'' layer that contains the raw data itself, then the ''symbolic'' layer with metadata describing the raw data, and on the top the ''logical'' layer containing metadata that allows logical reasoning using the symbolic layer
[10541470] |== Important issues == 
[10541480] |To successfully develop and use metadata, several important issues should be treated with care:
[10541490] |=== Metadata risks === 
[10541500] |[[Microsoft Office]] files include metadata beyond their printable content, such as the original author's name, the creation date of the document, and the amount of time spent editing it.
[10541510] |Unintentional disclosure can be awkward or even, in professional practices requiring confidentiality, raise malpractice concerns.
[10541520] |Some of Microsoft Office document's metadata can be seen by clicking ''File'' then ''Properties'' from the program's menu.
[10541530] |Other metadata is not visible except through external analysis of a file, such as is done in forensics.
[10541540] |The author of the Microsoft Word-based [[Melissa (computer worm)|Melissa]] computer virus in 1999 was caught due to Word metadata that uniquely identified the computer used to create the original infected document.
[10541550] |=== Metadata lifecycle === 
[10541560] |Even in the early phases of planning and designing it is necessary to keep track of all metadata created.
[10541570] |It is not economical to start attaching metadata only after the production process has been completed.
[10541580] |For example, if metadata created by a digital camera at recording time is not stored immediately, it may have to be restored afterwards manually with great effort.
[10541590] |Therefore, it is necessary for different groups of resource producers to cooperate using compatible methods and standards.
[10541600] |* Manipulation.
[10541610] |Metadata must adapt if the resource it describes changes.
[10541620] |It should be merged when two resources are merged.
[10541630] |These operations are seldom performed by today's software; for example, image editing programs usually do not keep track of the [[Exchangeable image file format|Exif]] metadata created by digital cameras.
[10541640] |* Destruction.
[10541650] |It can be useful to keep metadata even after the resource it describes has been destroyed, for example in change histories within a text document or to archive file deletions due to digital rights management.
[10541660] |None of today's metadata standards consider this phase.
[10541670] |=== Storage === 
[10541680] |Metadata can be stored either ''internally'', in the same file as the data, or ''externally'', in a separate file.
[10541690] |Metadata that are embedded with content is called ''embedded metadata''.
[10541700] |A data repository typically stores the metadata ''detached'' from the data.
[10541710] |Both ways have advantages and disadvantages:
[10541720] |*Internal storage allows transferring metadata together with the data it describes; thus, metadata is always at hand and can be manipulated easily.
[10541730] |This method creates high redundancy and does not allow holding metadata together.
[10541740] |* External storage allows bundling metadata, for example in a database, for more efficient searching.
[10541750] |There is no redundancy and metadata can be transferred simultaneously when using [[streaming media|streaming]].
[10541760] |However, as most formats use [[Uniform Resource Identifier|URI]]s for that purpose, the method of how the metadata is linked to its data should be treated with care.
[10541770] |What if a resource does not have a URI (resources on a local hard disk or web pages that are created on-the-fly using a content management system)?
[10541780] |What if metadata can only be evaluated if there is a connection to the Web, especially when using [[Resource Description Framework|RDF]]?
[10541790] |How to realize that a resource is replaced by another with the same name but different content?
[10541800] |Moreover, there is the question of data format: storing metadata in a human-readable format such as XML can be useful because users can understand and edit it without specialized tools.
[10541810] |On the other hand, these formats are not optimized for storage capacity; it may be useful to store metadata in a binary, non-human-readable format instead to speed up transfer and save memory.
[10541820] |== Criticisms == 
[10541830] |Although the majority of computer scientists see metadata as a chance for better interoperability, some critics argue:
[10541840] |*Metadata is too expensive and time-consuming.
[10541850] |The argument is that companies will not produce metadata without need because it costs extra money, and private users also will not produce complex metadata because its creation is very time-consuming.
[10541860] |* Metadata is too complicated.
[10541870] |Private users will not create metadata because existing formats, especially [[MPEG-7]], are too complicated.
[10541880] |As long as there are no automatic tools for creating metadata, it will not be created.
[10541890] |* Metadata is subjective and depends on context.
[10541900] |Most probably, two persons will attach different metadata to the same resource due to their different points of view.
[10541910] |Moreover, metadata can be misinterpreted due to its dependency on context.
[10541920] |For example searching for "post-modern art" may miss a certain item because the expression was not in use at the time when that work of art was created, or searching for "pictures taken at 1:00" may produce confusing results due to local time differences.
[10541930] |* There is no end to metadata.
[10541940] |For example, when annotating a match of soccer with metadata, one can describe all the players and their actions in time and stop there.
[10541950] |One can also describe the advertisements in the background and the clothes the players wear.
[10541960] |One can also describe each fan on the tribune and the clothes they wear.
[10541970] |All of this metadata can be interesting to one party or another — such as the spectators, sponsors or a counter-terrorist unit of the police — and even for a simple resource the amount of possible metadata can be gigantic.
[10541980] |* Metadata is useless.
[10541990] |Many of today's search engines are very efficient at finding text.
[10542000] |Other techniques for finding pictures, videos and music (namely query-by-example) will become more and more powerful in the future.
[10542010] |Thus, there is no real need for metadata.
[10542020] |The opposers of metadata sometimes use the term [[metacrap]] to refer to the unsolved problems of metadata in some scenarios.
[10542030] |These people are also referred to as "Meta Haters."
[10542040] |== Types == 
[10542050] |In general, there are two distinct classes of metadata: structural or control metadata and guide metadata.
[10542060] |Structural metadata is used to describe the structure of computer systems such as tables, columns and indexes.
[10542070] |Guide metadata is used to help humans find specific items and is usually expressed as a set of keywords in a natural language.
[10542080] |Metatadata can be divided into 3 distinct categories:
[10542090] |* Descriptive
[10542100] |* Administrative
[10542110] |* Structural
[10542120] |=== Relational database metadata === 
[10542130] |Each [[relational database]] system has its own mechanisms for storing metadata.
[10542140] |Examples of relational-database metadata include:
[10542150] |*Tables of all tables in database, their names, sizes and number of rows in each table.
[10542160] |* Tables of columns in each database, what tables they are used in, and the type of data stored in each column.
[10542170] |In database terminology, this set of metadata is referred to as the [[database catalog|catalog]].
[10542180] |The [[SQL]] standard specifies a uniform means to access the catalog, called the <code>INFORMATION_SCHEMA</code>, but not all databases implement it, even if they implement other aspects of the SQL standard.
[10542190] |For an example of database-specific metadata access methods, see [[Oracle metadata]].
[10542200] |=== Data warehouse metadata === 
[10542210] |[[Data warehouse]] metadata systems are sometimes separated into two sections: 
[10542220] |# '''back room''' metadata that are used for [[Extract, transform, load]] functions to get [[OLTP]] data into a data warehouse
[10542230] |# '''front room''' metadata that are used to label screens and create reports
[10542240] |Kimball lists the following types of metadata in a data warehouse (See also [http://www.fortunecity.com/skyscraper/oracle/699/orahtml/dbmsmag/9803d05.html]): 
[10542250] |* [[source system]] metadata
[10542260] |** source specifications, such as [[repository|repositories]], and source [[logical schema]]s
[10542270] |** source descriptive information, such as ownership descriptions, update frequencies, legal limitations, and [[access method]]s
[10542280] |** process information, such as job schedules and extraction code
[10542290] |* [[data staging]] metadata
[10542300] |** [[data acquisition]] information, such as [[data transmission]] scheduling and results, and file usage
[10542310] |** [[dimension table]] management, such as definitions of dimensions, and [[surrogate key]] assignments
[10542320] |** [[Program transformation|transformation]] and [[aggregation]], such as [[data enhancement]] and mapping, [[DBMS]] load scripts, and aggregate definitions
[10542330] |** audit, job logs and documentation, such as [[data lineage]] records, [[data transform]] logs
[10542340] |* DBMS metadata, such as:
[10542350] |** DBMS system table contents
[10542360] |** processing hints
[10542370] |Michael Bracket defines metadata (what he calls "Data resource data") as "any data about the organization's data resource".
[10542380] |Adrienne Tannenbaum defines metadata as "the detailed description of instance data.
[10542390] |The format and characteristics of populated instance data: instances and values, dependent on the role of the metadata recipient".
[10542400] |These definitions are characteristic of the "data about data" definition.
[10542410] |=== Business Intelligence metadata === 
[10542420] |[[Business Intelligence]] is the process of analyzing large amounts of corporate data, usually stored in large databases such as the [[Data Warehouse]], tracking business performance, detecting patterns and trends, and helping enterprise business users make better decisions.
[10542430] |Business Intelligence metadata describes how data is queried, filtered, analyzed, and displayed in Business Intelligence software tools, such as Reporting tools, OLAP tools, Data Mining tools.
[10542440] |Examples: 
[10542450] |* [[Online analytical processing|OLAP]] metadata: The descriptions and structures of Dimensions, Cubes, Measures (Metrics), Hierarchies, Levels, Drill Paths
[10542460] |* Reporting metadata: The descriptions and structures of Reports, Charts, Queries, DataSets, Filters, Variables, Expressions
[10542470] |* [[Data Mining]] metadata: The descriptions and structures of DataSets, Algorithms, Queries
[10542480] |Business Intelligence metadata can be used to understand how corporate financial reports reported to [[Wall Street]] are calculated, how the revenue, expense and profit are aggregated from individual sales transactions stored in the data warehouse.
[10542490] |A good understanding of Business Intelligence metadata is required to solve complex problems such as compliance with corporate governance standards, such as [[Sarbanes Oxley]] (SOX) or Basel II.
[10542500] |=== General IT metadata === 
[10542510] |In contrast, David Marco, another metadata theorist, defines metadata as "all physical data and knowledge from inside and outside an organization, including information about the physical data, technical and business processes, rules and constraints of the data, and structures of the data used by a corporation."
[10542520] |Others have included web services, systems and interfaces.
[10542530] |In fact, the entire [[Zachman framework]] (see [[Enterprise Architecture]]) can be represented as metadata.
[10542540] |Notice that such definitions expand metadata's scope considerably, to encompass most or all of the data required by the [[Management Information System]]s capability.
[10542550] |In this sense, the concept of metadata has significant overlaps with the [[ITIL]] concept of a Configuration Management Database ([[CMDB]]), and also with disciplines such as [[Enterprise Architecture]] and [[IT portfolio management]].
[10542560] |This broader definition of metadata has precedent.
[10542570] |Third generation corporate repository products (such as those eventually merged into the CA Advantage line) not only store information about data definitions (COBOL copybooks, DBMS schema), but also about the programs accessing those data structures, and the [[Job Control Language]] and batch job infrastructure dependencies as well.
[10542580] |These products (some of which are still in production) can provide a very complete picture of a mainframe computing environment, supporting exactly the kinds of impact analysis required for ITIL-based processes such as [[ITIL#Incident Management|Incident]] and [[Change Management (ITIL)|Change Management]].
[10542590] |The [[ITIL]] [http://www.tso.co.uk/itil/ Back Catalogue] includes the ''Data Management'' volume which recognizes the role of these metadata products on the mainframe, posing the [[CMDB]] as the distributed computing equivalent.
[10542600] |CMDB vendors however have generally not expanded their scope to include data definitions, and metadata solutions are also available in the distributed world.
[10542610] |Determining the appropriate role and scope for each is thus a challenge for large IT organizations requiring the services of both.
[10542620] |Since metadata is pervasive, centralized attempts at tracking it need to focus on the most highly leveraged assets.
[10542630] |Enterprise Assets may only constitute a small percentage of the entire IT portfolio.
[10542640] |Some practitioners have successfully managed IT metadata using the [[Dublin Core]] metamodel.
[10542650] |==== IT metadata management products ==== 
[10542660] |First generation data dictionary/metadata repository tools would be those only supporting a specific [[DBMS]], such as [[IDMS]]'s IDD (integrated data dictionary), the [[Information Management System|IMS]] Data Dictionary, and [[ADABAS]]'s Predict.
[10542670] |Second generation would be ASG's DATAMANAGER product which could support many different file and DBMS types.
[10542680] |Third generation repository products became briefly popular in the early 1990s along with the rise of widespread use of [[RDBMS]] engines such as IBM's [[IBM DB2|DB2]].
[10542690] |Fourth generation products link the repository with more [[Extract, transform, load]] tools and can be connected with architectural modeling tools.
[10542700] |Examples include [http://www.adaptive.com/products/mm.html Adaptive Metadata Manager] from Adaptive, [http://www.asg.com/products/product_details.asp?code=ROC&id=50 Rochade] from ASG,[http://www.infolibcorp.com/productsOverview.html InfoLibrarian Metadata Integration Framework] and [[Troux Technologies]] Metis Server product.
[10542710] |=== File system metadata === 
[10542720] |Nearly all [[file system]]s keep metadata about files [[out-of-band]].
[10542730] |Some systems keep metadata in [[directory (file systems)|directory]] entries; others in specialized structure like [[inode]]s or even in the name of a file.
[10542740] |Metadata can range from simple [[timestamp]]s, [[mode bit]]s, and other special-purpose information used by the implementation itself, to [[icon (computing)|icon]]s and free-text comments, to arbitrary [[attribute-value pair]]s.
[10542750] |With more complex and open-ended metadata, it becomes useful to search for files based on the metadata contents.
[10542760] |The [[Unix]] [[find]] utility was an early example, although inefficient when scanning hundreds of thousands of files on a modern computer system.
[10542770] |[[Apple Computer]]'s [[Mac OS X]] operating system supports cataloguing and searching for file metadata through a feature known as [[Spotlight (software)|Spotlight]], as of [[Mac OS X v10.4|version 10.4]].
[10542780] |[[Microsoft]] worked in the development of similar functionality with the [[Instant Search]] system in [[Windows Vista]], as well as being present in [[SharePoint Server]].
[10542790] |[[Linux]] implements file metadata using [[extended file attributes]].
[10542800] |=== Image metadata === 
[10542810] |Examples of image files containing metadata include [[Exchangeable image file format]] (EXIF) and [[Tagged Image File Format]] (TIFF).
[10542820] |Having metadata about images embedded in TIFF or EXIF files is one way of acquiring additional data about an image.
[10542830] |[[Tag (metadata)|Tagging]] pictures with subjects, related emotions, and other descriptive phrases helps Internet users find pictures easily rather than having to search through entire image collections.
[10542840] |A prime example of an image tagging service is [[Flickr]], where users upload images and then describe the contents.
[10542850] |Other patrons of the site can then search for those tags.
[10542860] |Flickr uses a [[folksonomy]]: a free-text keyword system in which the community defines the vocabulary through use rather than through a [[controlled vocabulary]].
[10542870] |Users can also tag photos for organization purposes using Adobe's [[Extensible Metadata Platform]] (XMP) language, for example.
[10542880] |Digital photography is increasingly making use of technical metadata tags describing the conditions of exposure.
[10542890] |Photographers shooting [[RAW image format|Camera RAW]] file formats can use applications such as [[Adobe Bridge]] or Apple Computer's [[Aperture (photography software)|Aperture]] to work with camera metadata for post-processing.
[10542900] |=== Audio Metadata === 
[10542910] |Audio metadata generally relates to the how the data should be written in order for a processor to efficiently process it.
[10542920] |These technologies are usually seen in Audio Engine Programming such as Microsoft [[Resource Interchange File Format|RIFF (Resource Interchange File Format)]] technologies for .wave file.
[10542930] |Codes generally develop their own metadata standards for compression purpose.
[10542940] |=== Program metadata === 
[10542950] |Metadata is casually used to describe the controlling data used in software architectures that are more abstract or configurable.
[10542960] |Most '''[[executable|executable file]]''' formats include what may be termed "metadata" that specifies certain, usually configurable, behavioral [[runtime]] characteristics.
[10542970] |However, it is difficult if not impossible to precisely distinguish program "metadata" from general aspects of [[Von Neumann architecture|stored-program computing architecture]]; if the machine reads it and acts upon it, it is a computational [[Instruction (computer science)|instruction]], and the prefix "meta" has little significance.
[10542980] |In [[Java (programming language)|Java]], the [[Class (file format)|class file format]] contains metadata used by the [[Java compiler]] and the [[Java virtual machine]] to [[dynamic linking|dynamically link]] [[class (computer science)|classes]] and to support [[reflection (computer science)|reflection]].
[10542990] |The [[J2SE]] 5.0 version of Java included a [[metadata facility for Java|metadata facility]] to allow additional annotations that are used by [[development tool]]s.
[10543000] |In [[MS-DOS]], the [[COM file]] format does ''not'' include metadata, while the [[EXE]] file and Windows [[Portable Executable|PE]] formats do.
[10543010] |These metadata can include the company that published the program, the date the program was created, the version number and more.
[10543020] |In the [[.NET Framework|Microsoft .NET]] executable format, extra metadata is included to allow [[Reflection (computer science)|reflection]] at runtime.
[10543030] |=== Existing software metadata === 
[10543040] |[[Object Management Group]] (OMG) has defined metadata format for representing entire existing applications for the purposes of [[software mining]], [[software modernization]] and software assurance.
[10543050] |This specification, called the OMG [[Knowledge Discovery Metamodel]] (KDM) is the OMG's foundation for "modeling in reverse".
[10543060] |KDM is a common language-independent intermediate representation that provides an integrated view of an entire enterprise application, including its behavior (program flow), data, and structure.
[10543070] |One of the applications of KDM is Business Rules Mining.
[10543080] |[[Knowledge Discovery Metamodel]] includes a fine grained low-level representation (called "micro KDM"), suitable for performing static analysis of programs.
[10543090] |=== Document metadata === 
[10543100] |Most programs that create documents, including Microsoft [[SharePoint]], [[Microsoft Office Word|Microsoft Word]] and other [[Microsoft Office]] products, save metadata with the document files.
[10543110] |These metadata can contain the name of the person who created the file (obtained from the operating system), the name of the person who last edited the file, how many times the file has been printed, and even how many revisions have been made on the file.
[10543120] |Other saved material, such as deleted text (saved in case of an undelete command), document comments and the like, is also commonly referred to as "metadata", and the inadvertent inclusion of this material in distributed files has sometimes led to undesirable disclosures.
[10543130] |Document Metadata is particularly important in legal environments where litigation can request this sensitive information (metadata) which can include many elements of private detrimental data.
[10543140] |This data has been linked to multiple lawsuits that have got corporations into legal complications.
[10543150] |Many legal firms today use "Metadata Management Software", also known as "Metadata Removal Tools".
[10543160] |This software can be used to clean documents before they are sent outside of their firm.
[10543170] |This process, known as metadata management, protects lawfirms from potentially unsafe leaking of sensitive data through [[Electronic Discovery]].
[10543180] |For a list of executable formats, see [[object file]].
[10543190] |=== Metamodels === 
[10543200] |Metadata on Models are called [[Metamodel]]s.
[10543210] |In [[Model Driven Engineering]], a [[Model (abstract)|Model]] has to conform to a given [[Metamodel]].
[10543220] |According to the [[model-driven architecture|MDA]] guide, a metamodel is a model and each model conforms to a given metamodel.
[10543230] |[[Meta-modeling]] allows strict and agile automatic processing of models and metamodels.
[10543240] |The [[Object Management Group]] (OMG) defines 4 layers of meta-modeling.
[10543250] |Each level of modeling is defined, validated by the next layer:
[10543260] |*M0: instance object, data row, record -> "John Smith" 
[10543270] |* M1: model, schema -> "Customer" UML Class or database Table
[10543280] |* M2: metamodel -> [[Unified Modeling Language]] (UML), [[Common Warehouse Metamodel]] (CWM), [[Knowledge Discovery Metamodel]] (KDM)
[10543290] |* M3: meta-metamodel -> [[Meta-Object Facility]] (MOF)
[10543300] |=== Meta-metadata === 
[10543310] |Since metadata are also data, it is possible to have metadata of metadata&ndash;"meta-metadata."
[10543320] |Machine-generated meta-metadata, such as the reversed index created by a free-text search engine, is generally not considered metadata, though.
[10543330] |=== Digital library metadata === 
[10543340] |There are three categories of metadata that are frequently used to describe objects in a digital library:
[10543350] |# '''descriptive''' - Information describing the intellectual content of the object, such as [[MARC]] cataloguing records, finding aids or similar schemes.
[10543360] |It is typically used for bibliographic purposes and for search and retrieval.
[10543370] |# '''structural''' - Information that ties each object to others to make up logical units (e.g., information that relates individual images of pages from a book to the others that make up the book).
[10543380] |# '''administrative''' - Information used to manage the object or control access to it.
[10543390] |This may include information on how it was scanned, its storage format, [[copyright]] and licensing information, and information necessary for the [[digital preservation|long-term preservation]] of the digital objects.
[10543400] |=== Geospatial metadata === 
[10543410] |Metadata that describe geographic objects (such as datasets, maps, features, or simply documents with a geospatial component) have a history going back to at least 1994 (refer [http://libraries.mit.edu/guides/subjects/metadata/standards/fgdc.html MIT Library page on FGDC Metadata]).
[10543420] |This class of metadata is described more fully on the [[Geospatial metadata]] page.
[10550010] |<article>Microsoft Windows</article>
[10550020] |'''Microsoft Windows''' is a series of [[software]] [[operating system]]s produced by [[Microsoft]].
[10550030] |Microsoft first introduced an operating environment named ''Windows'' in November 1985 as an add-on to [[MS-DOS]] in response to the growing interest in [[graphical user interface]]s (GUIs).
[10550040] |Microsoft Windows came to [[Market dominance|dominate]] the world's [[personal computer]] market, overtaking [[Mac OS]], which had been introduced previously.
[10550050] |At the 2004 [[International Data Corporation|IDC]] Directions conference, it was stated that Windows had approximately 90% of the [[Client (computing)|client]] operating system market.
[10550060] |The most recent client version of Windows is [[Windows Vista]]; the current [[Server (computing)|server]] version is [[Windows Server 2008]].
[10550070] |==Versions== 
[10550080] |The term ''Windows'' collectively describes any or all of several generations of Microsoft (MS) operating system (OS) products.
[10550090] |These products are generally categorized as follows:
[10550100] |===16-bit operating environments=== 
[10550110] |The early versions of Windows were often thought of as just graphical user interfaces, mostly because they ran on top of [[MS-DOS]] and used it for [[file system]] services.
[10550120] |However, even the earliest 16-bit Windows versions already assumed many typical operating system functions, notably, having their own [[executable file format]] and providing their own [[device driver]]s (timer, graphics, printer, mouse, keyboard and sound) for applications.
[10550130] |Unlike [[MS-DOS]], Windows allowed users to execute multiple graphical applications at the same time, through [[computer multitasking|cooperative multitasking]].
[10550140] |Finally, Windows implemented an elaborate, segment-based, software virtual memory scheme, which allowed it to run applications larger than available memory: code segments and [[resource (Windows)|resource]]s were swapped in and thrown away when memory became scarce, and data segments moved in memory when a given application had relinquished processor control, typically waiting for user input.
[10550150] |16-bit Windows versions include [[Windows 1.0]] (1985), [[Windows 2.0]] (1987) and its close relatives, ''[[Windows 2.1x|Windows/286-Windows/386]]''.
[10550160] |===Hybrid 16/32-bit operating environments=== 
[10550170] |[[Windows 2.1x|Windows/386]] introduced a 32-bit [[protected mode]] [[kernel (computer science)|kernel]] and [[virtual machine]] monitor.
[10550180] |For the duration of a Windows session, it created one or more [[virtual 8086 mode|virtual 8086 environments]] and provided device virtualization for the video card, keyboard, mouse, timer and [[interrupt]] controller inside each of them.
[10550190] |The user-visible consequence was that it became possible to preemptively multitask multiple MS-DOS environments in separate windows, although graphical MS-DOS applications required full screen mode.
[10550200] |Also, Windows applications were multi-tasked cooperatively inside one such virtual 8086 environment.
[10550210] |[[Windows 3.0]] (1990) and [[Windows 3.1x|Windows 3.1]] (1992) improved the design, mostly because of [[virtual memory]] and loadable virtual device drivers ([[VxD]]s) which allowed them to share arbitrary devices between multitasked DOS windows.
[10550220] |Also, Windows applications could now run in protected mode (when Windows was running in Standard or 386 Enhanced Mode), which gave them access to several megabytes of memory and removed the obligation to participate in the software virtual memory scheme.
[10550230] |They still ran inside the same address space, where the segmented memory provided a degree of protection, and multi-tasked cooperatively.
[10550240] |For Windows 3.0, Microsoft also rewrote critical operations from [[C (programming language)|C]] into [[Assembly language|assembly]], making this release faster and less memory-hungry than its predecessors.
[10550250] |===Hybrid 16/32-bit operating systems=== 
[10550260] |With the introduction of the [[32-bit]] [[Windows 3.1x|Windows for Workgroups 3.11]], Windows was able to stop relying on DOS for file management.
[10550270] |Leveraging this, [[Windows 95]] introduced [[Long filename|Long File Names]], reducing the [[8.3 filename]] DOS environment to the role of a [[boot loader]].
[10550280] |MS-DOS was now bundled with Windows; this notably made it (partially) aware of long file names when its utilities were run from within Windows.
[10550290] |The most important novelty was the possibility of running 32-bit multi-threaded preemptively multitasked graphical programs.
[10550300] |However, the necessity of keeping compatibility with 16-bit programs meant the GUI components were still 16-bit only and not fully reentrant, which resulted in reduced performance and stability.
[10550310] |There were three releases of Windows 95 (the first in 1995, then subsequent bug-fix versions in 1996 and 1997, only released to OEMs, which added extra features such as [[File Allocation Table|FAT32]] and primitive USB support).
[10550320] |Microsoft's next OS was [[Windows 98]]; there were two versions of this (the first in 1998 and the second, named "Windows 98 Second Edition", in 1999).
[10550330] |In 2000, Microsoft released [[Windows Me]] (''Me'' standing for ''Millennium Edition''), which used the same core as Windows 98 but adopted some aspects of Windows 2000 and removed the option boot into DOS mode.
[10550340] |It also added a new feature called System Restore, allowing the user to set the computer's settings back to an earlier date.
[10550350] |===32-bit operating systems=== 
[10550360] |The NT family of Windows systems was fashioned and marketed for higher reliability business use, and was unencumbered by any Microsoft DOS patrimony.
[10550370] |The first release was [[Windows NT 3.1]] (1993, numbered "3.1" to match the Windows version and to one-up [[OS/2]] 2.1, IBM's flagship OS co-developed by Microsoft and was Windows NT's main competitor at the time), which was followed by [[Windows NT 3.5|NT 3.5]] (1994), [[Windows NT 3.51|NT 3.51]] (1995), [[Windows NT 4.0|NT 4.0]] (1996), and [[Windows 2000]] (essentially NT 5.0).
[10550380] |NT 4.0 was the first in this line to implement the "Windows 95" user interface (and the first to include Windows 95's built-in 32-bit runtimes).
[10550390] |Microsoft then moved to combine their consumer and business operating systems.
[10550400] |[[Windows XP]], coming in both home and professional versions (and later niche market versions for [[tablet PC]]s and [[media center]]s) improved stability, user experience and backwards compatibility.
[10550410] |Then, [[Windows Server 2003]] brought [[Windows Server]] up to date with Windows XP.
[10550420] |Since then, a new version, [[Windows Vista]] was released and [[Windows Server 2008]], released on [[February 27]], [[2008]], brings [[Windows Server]] up to date with [[Windows Vista]].
[10550430] |[[Windows CE]], Microsoft's offering in the mobile and embedded markets, is also a true 32-bit operating system that offers various services for all sub-operating workstations.
[10550440] |===64-bit operating systems=== 
[10550450] |[[Windows NT]] included support for several different platforms before the [[X86 architecture|x86]]-based [[personal computer]] became dominant in the professional world.
[10550460] |Versions of NT from 3.1 to 4.0 variously supported [[PowerPC]], [[DEC Alpha]] and [[MIPS Technologies|MIPS]] R4000, some of which were 64-bit processors, although the operating system treated them as 32-bit processors.
[10550470] |With the introduction of the [[Intel]] [[Itanium]] architecture, which is referred to as [[IA-64]], Microsoft released new versions of Windows to support it.
[10550480] |Itanium versions of [[Windows XP]] and [[Windows Server 2003]] were released at the same time as their mainstream x86 (32-bit) counterparts.
[10550490] |On [[April 25]] [[2005]], Microsoft released [[Windows XP Professional x64 Edition]] and x64 versions of Windows Server 2003 to support the [[x86-64|AMD64/Intel64]] (or ''x64'' in Microsoft terminology) architecture.
[10550500] |Microsoft dropped support for the Itanium version of Windows XP in 2005.
[10550510] |[[Windows Vista]] is the first end-user version of Windows that Microsoft has released simultaneously in 32-bit and x64 editions.
[10550520] |Windows Vista does not support the Itanium architecture.
[10550530] |The modern 64-bit Windows family comprises AMD64/Intel64 versions of [[Windows Vista]], and [[Windows Server 2003]] and [[Windows Server 2008]], in both Itanium and x64 editions.
[10550540] |==History== 
[10550550] |Microsoft has taken two parallel routes in its operating systems.
[10550560] |One route has been for the home user and the other has been for the professional IT user.
[10550570] |The dual routes have generally led to home versions having greater [[multimedia]] support and less functionality in networking and security, and professional versions having inferior multimedia support and better networking and security.
[10550580] |The first version of Microsoft Windows, [[Windows 1.0|version 1.0]], released in November 1985, lacked a degree of functionality and achieved little popularity, and was to compete with Apple's own operating system.
[10550590] |Windows 1.0 is not a complete operating system; rather, it extends MS-DOS.
[10550600] |Microsoft Windows version 2.0 was released in November, 1987 and was slightly more popular than its predecessor.
[10550610] |Windows 2.03 (release date January 1988) had changed the OS from tiled windows to overlapping windows.
[10550620] |The result of this change led to Apple Computer filing a suit against Microsoft alleging infringement on Apple's copyrights.
[10550630] |Microsoft Windows version 3.0, released in 1990, was the first Microsoft Windows version to achieve broad commercial success, selling 2 million copies in the first six months.[http://www.islandnet.com/~kpolsson/compsoft/soft1991.htm][http://www.thocp.net/companies/microsoft/microsoft_company.htm]
[10550635] |It featured improvements to the user interface and to multitasking capabilities.
[10550640] |It received a facelift in Windows 3.1, made generally available on [[March 1]], [[1992]].
[10550650] |Windows 3.1 support ended on [[December 31]], [[2001]].
[10550660] |In July 1993, Microsoft released [[Windows NT]] based on a new kernel.
[10550670] |NT was considered to be the professional OS and was the first Windows version to utilize [[preemptive multitasking]]..
[10550680] |Windows NT would later be retooled to also function as a home operating system, with Windows XP.
[10550690] |On August 24th 1995, Microsoft released [[Windows 95]], a new, and major, consumer version that made further changes to the user interface, and also used [[preemptive multitasking]].
[10550700] |Windows 95 was designed to replace not only Windows 3.1, but also Windows for Workgroups, and MS-DOS.
[10550710] |It was also the first Windows operating system to use Plug and Play capabilities.
[10550720] |The changes Windows 95 brought to the desktop were revolutionary, as opposed to evolutionary, such as those in Windows 98 and Windows Me.
[10550730] |Mainstream support for [[Windows 95]] ended on [[December 31]], [[2000]] and extended support for [[Windows 95]] ended on [[December 31]], [[2001]].
[10550740] |The next in the consumer line was Microsoft [[Windows 98]] released on June 25th, 1998.
[10550750] |It was substantially criticized for its slowness and for its unreliability compared with [[Windows 95]], but many of its basic problems were later rectified with the release of [[Windows 98]] Second Edition in 1999.
[10550760] |Mainstream support for [[Windows 98]] ended on [[June 30]], [[2002]] and extended support for [[Windows 98]] ended on [[July 11]], [[2006]].
[10550770] |As part of its "professional" line, Microsoft released [[Windows 2000]] in February 2000.
[10550780] |The consumer version following Windows 98 was [[Windows Me]] (Windows Millennium Edition).
[10550790] |Released in September 2000, [[Windows Me]] implemented a number of new technologies for Microsoft: most notably publicized was "[[Universal Plug and Play]]."
[10550800] |In October 2001, Microsoft released [[Windows XP]], a version built on the Windows NT [[Kernel (computer science)|kernel]] that also retained the consumer-oriented usability of Windows 95 and its successors.
[10550810] |This new version was widely praised in computer magazines.
[10550820] |It shipped in two distinct editions, "Home" and "Professional", the former lacking many of the superior security and networking features of the Professional edition.
[10550830] |Additionally, the first "Media Center" edition was released in 2002, with an emphasis on support for DVD and TV functionality including program recording and a remote control.
[10550840] |Mainstream support for [[Windows XP]] will continue until [[April 14]], [[2009]] and extended support will continue until [[April 8]], [[2014]].
[10550850] |In April 2003, [[Windows Server 2003]] was introduced, replacing the [[Windows 2000]] line of server products with a number of new features and a strong focus on security; this was followed in December 2005 by Windows Server 2003 R2.
[10550860] |On [[January 30]], [[2007]] Microsoft released [[Windows Vista]].
[10550870] |It contains a number of [[Features new to Windows Vista|new features]], from a redesigned shell and user interface to significant [[Technical features new to Windows Vista|technical changes]], with a particular focus on [[Security and safety features new to Windows Vista|security features]].
[10550880] |It is available in a number of [[Windows Vista editions and pricing|different editions]], and has been subject to [[Criticism of Windows Vista|some criticism]].
[10550890] |==Timeline of releases== 
[10550900] |==Security== 
[10550910] |[[Computer security|Security]] has been a hot topic with Windows for many years, and even Microsoft itself has been the victim of security breaches.
[10550920] |Consumer versions of Windows were originally designed for ease-of-use on a single-user PC without a network connection, and did not have security features built in from the outset.
[10550930] |[[Windows NT]] and its successors are designed for security (including on a network) and multi-user PCs, but are not designed with Internet security in mind as much since, when it was first developed in the early 1990s, Internet use was less prevalent.
[10550940] |These design issues combined with flawed code (such as [[buffer overflow]]s) and the popularity of Windows means that it is a frequent target of [[computer worm|worm]] and [[computer virus|virus]] writers.
[10550950] |In June 2005, [[Bruce Schneier]]'s ''Counterpane Internet Security'' reported that it had seen over 1,000 new viruses and worms in the previous six months.
[10550960] |Microsoft releases security patches through its [[Windows Update]] service approximately once a month (usually the second Tuesday of the month), although critical updates are made available at shorter intervals when necessary.
[10550970] |In Windows 2000 (SP3 and later), Windows XP and Windows Server 2003, updates can be automatically downloaded and installed if the user selects to do so.
[10550980] |As a result, Service Pack 2 for Windows XP, as well as Service Pack 1 for Windows Server 2003, were installed by users more quickly than it otherwise might have been.
[10550990] |===Windows Defender=== 
[10551000] |On [[6 January]] [[2005]], Microsoft released a beta version of Microsoft AntiSpyware, based upon the previously released [[GIANT Company Software|Giant]] AntiSpyware.
[10551010] |On [[14 February]], [[2006]], Microsoft AntiSpyware became [[Windows Defender]] with the release of beta 2.
[10551020] |Windows Defender is a freeware program designed to protect against spyware and other unwanted software.
[10551030] |[[Windows XP]] and [[Windows Server 2003]] users who have [[Windows Genuine Advantage|genuine]] copies of Microsoft Windows can freely download the program from Microsoft's web site, and Windows Defender ships as part of [[Windows Vista]].
[10551040] |===Third-party analysis=== 
[10551050] |In an article based on a report by Symantec, internetnews.com has described Microsoft Windows as having the "fewest number of patches and the shortest average patch development time of the five operating systems it monitored in the last six months of 2006."
[10551060] |And the number of vulnerabilities found in Windows has significantly increased— Windows: 12+, Red Hat + Fedora: 2, Mac OS X: 1, HP-UX: 2, Solaris: 1.
[10551070] |A study conducted by [[Kevin Mitnick]] and marketing communications firm Avantgarde in 2004 found that an unprotected and unpatched Windows XP system with Service Pack 1 lasted only 4 minutes on the Internet before it was compromised, and an unprotected and also unpatched [[Windows Server 2003]] system was compromised after being connected to the internet for 8 hours.
[10551080] |However, it is important to note that this study does not apply to Windows XP systems running the Service Pack 2 update (released in late 2004), which vastly improved the security of Windows XP.
[10551090] |The computer that was running Windows XP Service Pack 2 was not compromised.
[10551100] |The [[AOL]] National Cyber Security Alliance Online Safety Study of October 2004 determined that 80% of Windows users were infected by at least one [[spyware]]/[[adware]] product.
[10551110] |Much documentation is available describing how to increase the security of Microsoft Windows products.
[10551120] |Typical suggestions include deploying Microsoft Windows behind a hardware or software [[firewall]], running [[anti-virus]] and [[anti-spyware]] software, and installing patches as they become available through [[Windows Update]].
[10551130] |==Windows Lifecycle Policy== 
[10551140] |Microsoft has stopped releasing updates and hotfixes for many old Windows operating systems, including all versions of Windows 9x and earlier versions of Windows NT.
[10551150] |Windows versions prior to [[Windows XP|XP]] are no longer supported, with the exception of [[Windows 2000]], which is currently in the Extended Support Period, that will end on [[July 13]], [[2010]].
[10551160] |Windows XP versions prior to SP2 are no longer supported either.
[10551170] |Also, support for [[Windows XP 64-bit Edition]] ended after the release of the more recent [[Windows XP Professional x64 Edition]].
[10551180] |No new updates are created for unsupported versions of Windows.
[10551190] |==Emulation software== 
[10551200] |Emulation allows the use of some Windows applications without using Microsoft Windows.
[10551210] |These include:
[10551220] |* [[Wine (software)|Wine]] - a [[free and open source software]] implementation of the [[Windows API]], allowing one to run many Windows applications on x86-based platforms, including [[Linux]].
[10551230] |Wine is technically not an emulator but a "compatibility layer"; while an emulator effectively 'pretends' to be a different CPU, Wine instead makes use of Windows-style APIs to 'simulate' the Windows environment directly.
[10551240] |** [[CrossOver]] - A Wine package with licensed fonts.
[10551250] |Its developers are regular contributors to Wine, and focus on Wine running officially supported applications.
[10551260] |** [[Cedega]] - [[TransGaming Technologies]]' proprietary [[Fork (software development)|fork]] of Wine, designed specifically for running games written for Microsoft Windows under Linux.
[10551270] |** [[Darwine]] - This project intends to port and develop Wine as well as other supporting tools that will allow [[Darwin (operating system)|Darwin]] and [[Mac OS X]] users to run Microsoft Windows applications, and to provide [[Win32]] [[Application Programming Interface|API]] compatibility at application source code level.
[10551280] |* [[ReactOS]] - An open-source OS that is intended to run the same software as Windows, originally designed to imitate Windows NT 4.0, now aiming at Windows XP compatibility.
[10551290] |It has been in the [[development stage]] since 1996.
[10560010] |<article>Morphology (linguistics)</article>
[10560020] |'''Morphology''' is the field of [[linguistics]] that studies the internal structure of words.
[10560030] |(Words as units in the lexicon are the subject matter of [[lexicology]].)
[10560040] |While words are generally accepted as being (with [[clitic]]s) the smallest units of [[syntax]], it is clear that in most (if not all) languages, words can be related to other words by rules.
[10560050] |For example, [[English language|English]] speakers recognize that the words ''dog'', ''dogs'', and ''dog-catcher'' are closely related.
[10560060] |English speakers recognize these relations from their tacit knowledge of the rules of word-formation in English.
[10560070] |They intuit that ''dog'' is to ''dogs'' as ''cat'' is to ''cats''; similarly, ''dog'' is to ''dog-catcher'' as ''dish'' is to ''dishwasher''.
[10560080] |The rules understood by the speaker reflect specific patterns (or regularities) in the way words are formed from smaller units and how those smaller units interact in speech.
[10560090] |In this way, morphology is the branch of linguistics that studies patterns of word-formation within and across languages, and attempts to formulate rules that model the knowledge of the speakers of those languages.
[10560100] |==History == 
[10560110] |The history of morphological analysis dates back to the [[ancient India]]n linguist , who formulated the 3,959 rules of [[Sanskrit]] morphology in the text by using a Constituency Grammar.
[10560120] |The Graeco-Roman grammatical tradition also engaged in morphological analysis.
[10560130] |The term ''morphology'' was coined by [[August Schleicher]] in [[1859]]
[10560140] |== Fundamental concepts == 
[10560150] |=== Lexemes and word forms === 
[10560160] |The distinction between these two senses of "word" is arguably the most important one in morphology.
[10560170] |The first sense of "word," the one in which ''dog'' and ''dogs'' are "the same word," is called '''[[lexeme]]'''.
[10560180] |The second sense is called '''word-form'''.
[10560190] |We thus say that ''dog'' and ''dogs'' are different forms of the same lexeme.
[10560200] |''Dog'' and ''dog-catcher'', on the other hand, are different lexemes; for example, they refer to two different kinds of entities.
[10560210] |The form of a word that is chosen conventionally to represent the canonical form of a word is called a [[lemma (linguistics)|lemma]], or '''citation form'''.
[10560220] |==== Prosodic word vs. morphological word ==== 
[10560230] |Here are examples from other languages of the failure of a single phonological word to coincide with a single morphological word-form.
[10560240] |In Latin, one way to express the concept of '<span style="font-variant:small-caps;text-transform:lowercase">NOUN-PHRASE</span><sub>1</sub> and <span style="font-variant:small-caps;text-transform:lowercase">NOUN-PHRASE</span><sub>2</sub>' (as in "apples and oranges") is to suffix '-que' to the second noun phrase: "apples oranges-and", as it were.
[10560250] |An extreme level of this theoretical quandary posed by some phonological words is provided by the Kwak'wala language.
[10560260] |In Kwak'wala, as in a great many other languages, meaning relations between nouns, including possession and "semantic case", are formulated by affixes instead of by independent "words".
[10560270] |The three word English phrase, "with his club", where 'with' identifies its dependent noun phrase as an instrument and 'his' denotes a possession relation, would consist of two words or even just one word in many languages.
[10560280] |But affixation for semantic relations in Kwak'wala differs dramatically (from the viewpoint of those whose language is not Kwak'wala) from such affixation in other languages for this reason: the affixes phonologically attach not to the lexeme they pertain to semantically, but to the ''preceding'' lexeme.
[10560290] |Consider the following example (in Kwakw'ala, sentences begin with what corresponds to an English verb):
[10560300] |kwixʔid-i-da bəgwanəma<sub>i</sub>-χ-a q'asa-s-is<sub>i</sub> t'alwagwayu
[10560310] |Morpheme by morpheme translation:
[10560320] |kwixʔid-i-da = clubbed-<span style="font-variant:small-caps;text-transform:lowercase">PIVOT-DETERMINER</span>
[10560330] |bəgwanəma-χ-a = man-<span style="font-variant:small-caps;text-transform:lowercase">ACCUSATIVE-DETERMINER</span>
[10560340] |q'asa-s-is = otter-<span style="font-variant:small-caps;text-transform:lowercase">INSTRUMENTAL-3.PERSON.SINGULAR-POSSESSIVE</span>
[10560350] |t'alwagwayu = club.
[10560360] |"the man clubbed the otter with his club"
[10560370] |(Notation notes:
[10560380] |1. accusative case marks an entity that something is done to.
[10560390] |2. determiners are words such as "the", "this", "that".
[10560400] |3. the concept of "pivot" is a theoretical construct that is not relevant to this discussion.)
[10560410] |That is, to the speaker of Kwak'wala, the sentence does not contain the "words" 'him-the-otter' or 'with-his-club' Instead, the markers -''i-da'' (<span style="font-variant:small-caps;text-transform:lowercase">PIVOT</span>-'the'), referring to ''man'', attaches not to ''bəgwanəma'' ('man'), but instead to the "verb"; the markers -''χ-a'' (<span style="font-variant:small-caps;text-transform:lowercase">ACCUSATIVE</span>-'the'), referring to ''otter'', attach to ''bəgwanəma'' instead of to ''q'asa'' ('otter'), etc.
[10560420] |To summarize differently: a speaker of Kwak'wala does ''not'' perceive the sentence to consist of these phonological words: 
[10560430] |kwixʔid i-da-bəgwanəma χ-a-q'asa s-is<sub>i</sub>-t'alwagwayu
[10560440] |"clubbed PIVOT-the-man<sub>i</sub> hit-the-otter with-his<sub>i</sub>-club
[10560450] |A central publication on this topic is the recent volume edited by Dixon and Aikhenvald (2007), examining the mismatch between prosodic-phonological and grammatical definitions of "word" in various Amazonian, Australian Aboriginal, Caucasian, Eskimo, Indo-European, Native North American, and West African languages, and in sign languages.
[10560460] |Apparently, a wide variety of languages make use of the hybrid linguistic unit clitic, possessing the grammatical features of independent words but the prosodic-phonological lack of freedom of bound morphemes.
[10560470] |The intermediate status of clitics poses a considerable challenge to linguistic theory.
[10560480] |=== Inflection vs. word-formation === 
[10560490] |Given the notion of a lexeme, it is possible to distinguish two kinds of morphological rules.
[10560500] |Some morphological rules relate to different forms of the same lexeme; while other rules relate to different lexemes.
[10560510] |Rules of the first kind are called '''[[Inflection|inflectional rules]]''', while those of the second kind are called '''[[word formation|word-formation]]'''.
[10560520] |The English plural, as illustrated by ''dog'' and ''dogs'', is an inflectional rule; compounds like ''dog-catcher'' or ''dishwasher'' provide an example of a word-formation rule.
[10560530] |Informally, word-formation rules form "new words" (that is, new lexemes), while inflection rules yield variant forms of the "same" word (lexeme).
[10560540] |There is a further distinction between two kinds of word-formation: [[Derivation (linguistics)|derivation]] and [[Compound (linguistics)|compounding]].
[10560550] |Compounding is a process of word-formation that involves combining complete word-forms into a single '''compound''' form; ''dog-catcher'' is therefore a compound, because both ''dog'' and ''catcher'' are complete word-forms in their own right before the compounding process has been applied, and are subsequently treated as one form.
[10560560] |Derivation involves [[affix]]ing [[bound morpheme|bound]] (non-independent) forms to existing lexemes, whereby the addition of the affix '''derives''' a new lexeme.
[10560570] |One example of derivation is clear in this case: the word ''independent'' is derived from the word ''dependent'' by prefixing it with the derivational prefix ''in-'', while ''dependent'' itself is derived from the verb ''depend''.
[10560580] |The distinction between inflection and word-formation is not at all clear-cut.
[10560590] |There are many examples where linguists fail to agree whether a given rule is inflection or word-formation.
[10560600] |The next section will attempt to clarify this distinction.
[10560610] |=== Paradigms and morphosyntax === 
[10560620] |A '''paradigm''' is the complete set of related word-forms associated with a given lexeme.
[10560630] |The familiar examples of paradigms are the [[Grammatical conjugation|conjugations]] of verbs, and the [[declension]]s of nouns.
[10560640] |Accordingly, the word-forms of a lexeme may be arranged conveniently into tables, by classifying them according to shared inflectional categories such as [[grammatical tense|tense]], [[grammatical aspect|aspect]], [[grammatical mood|mood]], [[grammatical number|number]], [[grammatical gender|gender]] or [[grammatical case|case]].
[10560650] |For example, the personal pronouns in English can be organized into tables, using the categories of person (1st., 2nd., 3rd.), number (singular vs. plural), gender (masculine, feminine, neuter), and [[grammatical case|case]] (subjective, objective, and possessive).
[10560660] |See [[English personal pronouns]] for the details.
[10560670] |The inflectional categories used to group word-forms into paradigms cannot be chosen arbitrarily; they must be categories that are relevant to stating the [[syntax|syntactic rules]] of the language.
[10560680] |For example, person and number are categories that can be used to define paradigms in English, because English has [[Agreement (linguistics)|grammatical agreement]] rules that require the verb in a sentence to appear in an inflectional form that matches the person and number of the subject.
[10560690] |In other words, the syntactic rules of English care about the difference between ''dog'' and ''dogs'', because the choice between these two forms determines which form of the verb is to be used.
[10560700] |In contrast, however, no syntactic rule of English cares about the difference between ''dog'' and ''dog-catcher'', or ''dependent'' and ''independent''.
[10560710] |The first two are just nouns, and the second two just adjectives, and they generally behave like any other noun or adjective behaves.
[10560720] |An important difference between inflection and word-formation is that inflected word-forms of lexemes are organized into paradigms, which are defined by the requirements of syntactic rules, whereas the rules of word-formation are not restricted by any corresponding requirements of syntax.
[10560730] |Inflection is therefore said to be relevant to syntax, and word-formation is not.
[10560740] |The part of morphology that covers the relationship between [[syntax]] and morphology is called morphosyntax, and it concerns itself with inflection and paradigms, but not with word-formation or compounding.
[10560750] |=== Allomorphy === 
[10560760] |In the exposition above, morphological rules are described as analogies between word-forms: ''dog'' is to ''dogs'' as ''cat'' is to ''cats'', and as ''dish'' is to ''dishes''.
[10560770] |In this case, the analogy applies both to the form of the words and to their meaning: in each pair, the first word means "one of X", while the second "two or more of X", and the difference is always the plural form ''-s'' affixed to the second word, signaling the key distinction between singular and plural entities.
[10560780] |One of the largest sources of complexity in morphology is that this one-to-one correspondence between meaning and form scarcely applies to every case in the language.
[10560790] |In English, we have word form pairs like ''ox/oxen'', ''goose/geese'', and ''sheep/sheep'', where the difference between the singular and the plural is signaled in a way that departs from the regular pattern, or is not signaled at all.
[10560800] |Even cases considered "regular", with the final ''-s'', are not so simple; the ''-s'' in ''dogs'' is not pronounced the same way as the ''-s'' in ''cats'', and in a plural like ''dishes'', an "extra" vowel appears before the ''-s''.
[10560810] |These cases, where the same distinction is effected by alternative forms of a "word", are called '''[[allomorph]]y'''.
[10560820] |Phonological rules constrain which sounds can appear next to each other in a language, and morphological rules, when applied blindly, would often violate phonological rules, by resulting in sound sequences that are prohibited in the language in question.
[10560830] |For example, to form the plural of ''dish'' by simply appending an ''-s'' to the end of the word would result in the form *{{IPA|[dɪʃs]}}, which is not permitted by the [[phonotactics]] of English.
[10560840] |In order to "rescue" the word, a vowel sound is inserted between the root and the plural marker, and {{IPA|[dɪʃəz]}} results.
[10560850] |Similar rules apply to the pronunciation of the ''-s'' in ''dogs'' and ''cats'': it depends on the quality (voiced vs. unvoiced) of the final preceding [[phoneme]].
[10560860] |=== Lexical morphology === 
[10560870] |[[Lexical morphology]] is the branch of morphology that deals with the [[lexicon]], which, morphologically conceived, is the collection of [[lexeme]]s in a language.
[10560880] |As such, it concerns itself primarily with word-formation: derivation and compounding.
[10560890] |== Models of morphology == 
[10560900] |There are three principal approaches to morphology, which each try to capture the distinctions above in different ways.
[10560910] |These are, 
[10560920] |* [[Morpheme-based morphology]], which makes use of an [[Item-and-Arrangment (Morphology)|Item-and-Arrangement]] approach.
[10560930] |* [[Lexeme-based morphology]], which normally makes use of an [[Item-and-Process (Morphology)|Item-and-Process]] approach.
[10560940] |* [[Word-based morphology]], which normally makes use of a [[Word-and-paradigm morphology|Word-and-Paradigm]] approach.
[10560950] |Note that while the associations indicated between the concepts in each item in that list is very strong, it is not absolute.
[10560960] |=== Morpheme-based morphology === 
[10560970] |In [[morpheme-based morphology]], word-forms are analyzed as arrangements of [[morpheme]]s.
[10560980] |A '''morpheme''' is defined as the minimal meaningful unit of a language.
[10560990] |In a word like ''independently'', we say that the morphemes are ''in-'', ''depend'', ''-ent'', and ''ly''; ''depend'' is the [[root (linguistics)|root]] and the other morphemes are, in this case, derivational affixes.
[10561000] |In a word like ''dogs'', we say that ''dog'' is the root, and that ''-s'' is an inflectional morpheme.
[10561010] |This way of analyzing word-forms as if they were made of morphemes put after each other like beads on a string, is called [[Item-and-Arrangment (Morphology)|Item-and-Arrangement]].
[10561020] |The morpheme-based approach is the first one that beginners to morphology usually think of, and which laymen tend to find the most obvious.
[10561030] |This is so to such an extent that very often beginners think that morphemes are an inevitable, fundamental notion of morphology, and many five-minute explanations of morphology are, in fact, five-minute explanations of morpheme-based morphology.
[10561040] |This is, however, not so.
[10561050] |The fundamental idea of morphology is that the words of a language are related to each other by different kinds of rules.
[10561060] |Analyzing words as sequences of morphemes is a way of describing these relations, but is not the only way.
[10561070] |In actual academic linguistics, morpheme-based morphology certainly has many adherents, but is by no means the dominant approach.
[10561080] |=== Lexeme-based morphology === 
[10561090] |[[Lexeme-based morphology]] is (usually) an [[Item-and-Process (Morphology)|Item-and-Process]] approach.
[10561100] |Instead of analyzing a word-form as a set of morphemes arranged in sequence, a word-form is said to be the result of applying rules that ''alter'' a word-form or stem in order to produce a new one.
[10561110] |An inflectional rule takes a stem, changes it as is required by the rule, and outputs a word-form; a derivational rule takes a stem, changes it as per its own requirements, and outputs a derived stem; a compounding rule takes word-forms, and similarly outputs a compound stem.
[10561120] |=== Word-based morphology === 
[10561130] |[[Word-based morphology]] is a (usually) [[Word-and-paradigm morphology|Word-and-paradigm]] approach.
[10561140] |This theory takes paradigms as a central notion.
[10561150] |Instead of stating rules to combine morphemes into word-forms, or to generate word-forms from stems, word-based morphology states generalizations that hold between the forms of inflectional paradigms.
[10561160] |The major point behind this approach is that many such generalizations are hard to state with either of the other approaches.
[10561170] |The examples are usually drawn from [[fusional language]]s, where a given "piece" of a word, which a morpheme-based theory would call an inflectional morpheme, corresponds to a combination of grammatical categories, for example, "third person plural."
[10561180] |Morpheme-based theories usually have no problems with this situation, since one just says that a given morpheme has two categories.
[10561190] |Item-and-Process theories, on the other hand, often break down in cases like these, because they all too often assume that there will be two separate rules here, one for third person, and the other for plural, but the distinction between them turns out to be artificial.
[10561200] |Word-and-Paradigm approaches treat these as whole words that are related to each other by [[analogy|analogical]] rules.
[10561210] |Words can be categorized based on the pattern they fit into.
[10561220] |This applies both to existing words and to new ones.
[10561230] |Application of a pattern different than the one that has been used historically can give rise to a new word, such as ''older'' replacing ''elder'' (where ''older'' follows the normal pattern of [[adjective|adjectival]] [[superlative]]s) and ''cows'' replacing ''kine'' (where ''cows'' fits the regular pattern of plural formation).
[10561240] |While a Word-and-Paradigm approach can explain this easily, other approaches have difficulty with phenomena such as this.
[10561250] |== Morphological typology == 
[10561260] |In the 19th century, philologists devised a now classic classification of languages according to their morphology.
[10561270] |According to this typology, some languages are [[isolating language|isolating]], and have little to no morphology; others are [[agglutinating language|agglutinative]], and their words tend to have lots of easily-separable morphemes; while others yet are inflectional or [[fusional language|fusional]], because their inflectional morphemes are said to be "fused" together.
[10561280] |This leads to one bound morpheme conveying multiple pieces of information.
[10561290] |The classic example of an isolating language is [[Chinese language|Chinese]]; the classic example of an agglutinative language is [[Turkish language|Turkish]]; both [[Latin language|Latin]] and [[Greek language|Greek]] are classic examples of fusional languages.
[10561300] |Considering the variability of the world's languages, it becomes clear that this classification is not at all clear-cut, and many languages do not neatly fit any one of these types, and some fit in more than one.
[10561310] |A continuum of complex morphology of language may be adapted when considering languages.
[10561320] |The three models of morphology stem from attempts to analyze languages that more or less match different categories in this typology.
[10561330] |The Item-and-Arrangement approach fits very naturally with agglutinative languages; while the Item-and-Process and Word-and-Paradigm approaches usually address fusional languages.
[10561340] |The reader should also note that the classical typology also mostly applies to inflectional morphology.
[10561350] |There is very little fusion going on with word-formation.
[10561360] |Languages may be classified as synthetic or analytic in their word formation, depending on the preferred way of expressing notions that are not inflectional: either by using word-formation (synthetic), or by using syntactic phrases (analytic).
[10570010] |<article>Named entity recognition</article>
[10570020] |'''Named entity recognition''' (NER) (also known as '''entity identification (EI)''' and '''entity extraction''') is a subtask of [[information extraction]] that seeks to locate and classify atomic elements in text into predefined categories such as the names of persons, organizations, locations, expressions of times, quantities, monetary values, percentages, etc.
[10570030] |For example, a NER system producing [[Message Understanding Conference|MUC]]-style output might [[Metadata|tag]] the sentence, 
[10570040] |:''Jim bought 300 shares of Acme Corp. in 2006.''
[10570050] |:'''''<ENAMEX TYPE="PERSON">'''Jim'''</ENAMEX>''' bought '''<NUMEX TYPE="QUANTITY">'''300'''</NUMEX>''' shares of '''<ENAMEX TYPE="ORGANIZATION">'''Acme Corp.'''</ENAMEX>''' in '''<TIMEX TYPE="DATE">'''2006'''</TIMEX>'''''.
[10570060] |NER systems have been created that use linguistic [[formal grammar|grammar]]-based techniques as well as [[statistical model]]s.
[10570070] |Hand-crafted grammar-based systems typically obtain better results, but at the cost of months of work by experienced [[Linguistics|linguists]].
[10570080] |Statistical NER systems typically require a large amount of manually [[annotation|annotated]] training data.
[10570090] |Since about 1998, there has been a great deal of interest in entity identification in the [[molecular biology]], [[bioinformatics]], and medical [[natural language processing]] communities.
[10570100] |The most common entity of interest in that domain has been names of genes and gene products.
[10570110] |==Named entity types== 
[10570120] |In the expression ''named entity'', the word ''named'' restricts the task to those entities for which one or many [[rigid designator]]s, as defined by [[Saul Kripke|Kripke]], stands for the referent.
[10570130] |For instance, the ''automotive company created by Henry Ford in 1903'' is referred to as ''Ford'' or ''Ford Motor Company''.
[10570140] |Rigid designators include proper names as well as certain natural kind terms like biological species and substances.
[10570150] |There is a general agreement to include [[temporal expressions]] and some numerical expressions such as money and measures in named entities.
[10570160] |While some instances of these types are good examples of rigid designators (e.g., the year 2001) there are also many invalid ones (e.g., I take my vacations in “June”).
[10570170] |In the first case, the year ''2001'' refers to the ''2001st year of the Gregorian calendar''.
[10570180] |In the second case, the month ''June'' may refer to the month of an undefined year (''past June'', ''next June'', ''June 2020'', etc.).
[10570190] |It is arguable that the named entity definition is loosened in such cases for practical reasons.
[10570200] |At least two [[Hierarchy|hierarchies]] of named entity types have been proposed in the literature.
[10570210] |[[BBN Technologies|BBN]] categories [http://www.ldc.upenn.edu/Catalog/docs/LDC2005T33/BBN-Types-Subtypes.html], proposed in 2002, is used for [[Question Answering]] and consists of 29 types and 64 subtypes.
[10570220] |Sekine's extended hierarchy [http://nlp.cs.nyu.edu/ene/], proposed in 2002, is made of 200 subtypes.
[10570230] |==Evaluation== 
[10570240] |Benchmarking and evaluations have been performed in the ''[[Message Understanding Conference]]s'' (MUC) organized by [[DARPA]], ''International Conference on Language Resources and Evaluation (LREC)'', ''Computational Natural Language Learning ([[CoNLL]])'' workshops, ''Automatic Content Extraction'' (ACE) organized by [[NIST]], the ''[[Multilingual Entity Task Conference]]'' (MET), ''Information Retrieval and Extraction Exercise'' (IREX) and in ''HAREM'' (Portuguese language only).
[10570250] |[http://aclweb.org/aclwiki/index.php?title=Named_Entity_Recognition_%28State_of_the_art%29 State-of-the-art systems] produce near-human performance.
[10570260] |For instance, the best system entering [http://www.itl.nist.gov/iad/894.02/related_projects/muc/proceedings/muc_7_toc.html MUC-7] scored 93.39% of [[Information_retrieval#F-measure|f-measure]] while human annotators scored 97.60% and 96.95%.
[10580010] |<article>Natural language</article>
[10580020] |In the [[philosophy of language]], a '''natural language''' (or '''ordinary language''') is a [[language]] that is spoken, [[writing|written]], or [[Sign language|signed]] by [[animal]]s for general-purpose communication, as distinguished from [[formal language]]s (such as [[Programming language|computer-programming languages]] or the "languages" used in the study of formal [[logic]], especially [[mathematical logic]]) and from [[constructed language]]s.
[10580030] |== Defining natural language == 
[10580040] |Though the exact definition is debatable, natural language is often contrasted with artificial or [[constructed languages]] such as [[Esperanto]], [[Latino Sexione]], and [[Occidental language|Occidental]].
[10580050] |Linguists have an incomplete understanding of all aspects of the rules underlying natural languages, and these rules are therefore objects of study.
[10580060] |The understanding of natural languages reveals much about not only how language works (in terms of [[syntax]], [[semantics]], [[phonetics]], [[phonology]], etc), but also about how the human [[mind]] and the human [[brain]] process language.
[10580070] |In linguistic terms, 'natural language' only applies to a language that has evolved naturally, and the study of natural language primarily involves native (first language) speakers.
[10580080] |The theory of [[universal grammar]] proposes that all natural languages have certain underlying rules which constrain the structure of the specific grammar for any given language.
[10580090] |While [[grammarians]], writers of dictionaries, and language policy-makers all have a certain influence on the evolution of language, their ability to influence what people think they 'ought' to say is distinct from what people actually say.
[10580100] |Natural language applies to the latter, and is thus a 'descriptive' rather than a 'prescriptive' term.
[10580110] |Thus non-standard language varieties (such as [[African American Vernacular English]]) are considered to be natural while standard language varieties (such as [[Standard American English]]) which are more 'prescripted' can be considered to be at least somewhat artificial or constructed.
[10580120] |== Native language learning == 
[10580130] |The [[learning]] of one's own [[native language]], typically that of one's [[parent]]s, normally occurs spontaneously in early human [[childhood]] and is [[Biology|biologically]] driven.
[10580140] |A crucial role of this process is performed by the [[Nervous system|neural]] activity of a portion of the human [[brain]] known as [[Broca's area]].
[10580150] |There are approximately 7,000 current human languages, and many, if not most seem to share certain properties, leading to the belief in the existence of [[Universal Grammar]], as shown by [[generative grammar]] studies pioneered by the work of [[Noam Chomsky]].
[10580160] |Recently, it has been demonstrated that a dedicated network in the human brain (crucially involving [[Broca's area]], a portion of the left inferior frontal gyrus), is selectively activated by complex verbal structures (but not simple ones) of those languages that meet the Universal Grammar requirements.
[10580170] |== Origins of natural language == 
[10580180] |There is disagreement among anthropologists on when language was first used by humans (or their ancestors).
[10580190] |Estimates range from about two million (2,000,000) years ago, during the time of ''[[Homo habilis]]'', to as recently as forty thousand (40,000) years ago, during the time of [[Cro-Magnon]] man.
[10580200] |However recent evidence suggests modern human language was invented or evolved in Africa prior to the dispersal of humans from Africa around 50,000 years ago.
[10580210] |Since all people including the most isolated indigenous groups such as the [[Andamanese]] or the [[Tasmanian aboriginals]] possess language, then it must have been present in the ancestral populations in Africa before the human population split into various groups to colonize the rest of the world.
[10580220] |Some claim that all nautural languages came out of one single language, known as [[Adamic]].
[10580230] |== Linguistic diversity == 
[10580240] |As of early 2007, there are 6,912 known living human languages.
[10580250] |A "living language" is simply one which is in wide use by a specific group of living people.
[10580260] |The exact number of known living languages will vary from 5,000 to 10,000, depending generally on the precision of one's definition of "language", and in particular on how one classifies [[dialects]].
[10580270] |There are also many dead or [[extinct language]]s.
[10580280] |There is no [[dialect#.22Dialect.22 or .22language.22|clear distinction]] between a language and a [[dialect]], notwithstanding linguist [[Max Weinreich]]'s famous [[aphorism]] that "[[a language is a dialect with an army and navy]]."
[10580290] |In other words, the distinction may hinge on political considerations as much as on cultural differences, distinctive [[writing system]]s, or degree of [[mutual intelligibility]].
[10580300] |It is probably impossible to accurately enumerate the living languages because our worldwide knowledge is incomplete, and it is a "moving target", as explained in greater detail by the [[Ethnologue]]'s Introduction, p. 7 - 8.
[10580310] |With the 15th edition, the 103 newly added languages are not new but reclassified due to refinements in the definition of language.
[10580320] |Although widely considered an [[encyclopedia]], the [[Ethnologue]] actually presents itself as an incomplete catalog, including only named languages that its editors are able to document.
[10580330] |With each edition, the number of catalogued languages has grown.
[10580340] |Beginning with the 14th edition (2000), an attempt was made to include all known living languages.
[10580350] |SIL used an internal 3-letter code fashioned after [[airport code]]s to identify languages.
[10580360] |This was the precursor to the modern [[ISO 639-3]] standard, to which SIL contributed.
[10580370] |The standard allows for over 14,000 languages.
[10580380] |In turn, the 15th edition was revised to conform to the pending ISO 639-3 standard.
[10580390] |Of the catalogued languages, 497 have been flagged as "nearly extinct" due to trends in their usage.
[10580400] |Per the 15th edition, 6,912 living languages are shared by over 5.7 billion speakers. (p. 15)
[10580410] |== Taxonomy == 
[10580420] |The [[Taxonomic classification|classification]] of natural languages can be performed on the basis of different underlying principles (different closeness notions, respecting different properties and relations between languages); important directions of present classifications are: 
[10580430] |* paying attention to the historical evolution of languages results in a genetic classification of languages&mdash;which is based on genetic relatedness of languages,
[10580440] |* paying attention to the internal structure of languages ([[grammar]]) results in a typological classification of languages&mdash;which is based on similarity of one or more components of the language's grammar across languages,
[10580450] |* and respecting geographical closeness and contacts between language-speaking communities results in areal groupings of languages.
[10580460] |The different classifications do not match each other and are not expected to, but the correlation between them is an important point for many [[linguistics|linguistic]] research works.
[10580470] |(There is a parallel to the classification of [[species]] in biological [[phylogenetics]] here: consider [[monophyletic]] vs. [[polyphyletic]] groups of species.)
[10580480] |The task of genetic classification belongs to the field of [[historical-comparative linguistics]], of typological&mdash;to [[linguistic typology]].
[10580490] |See also [[Taxonomy]], and [[Taxonomic classification]] for the general idea of classification and taxonomies.
[10580500] |==== Genetic classification ==== 
[10580510] |The world's languages have been grouped into families of languages that are believed to have common ancestors.
[10580520] |Some of the major families are the [[Indo-European languages]], the [[Afro-Asiatic languages]], the [[Austronesian languages]], and the [[Sino-Tibetan languages]].
[10580530] |The shared features of languages from one family can be due to shared ancestry.
[10580540] |(Compare with [[homology (biology)|homology]] in biology.)
[10580550] |==== Typological classification ==== 
[10580560] |An example of a typological classification is the classification of languages on the basis of the basic order of the [[verb]], the [[subject (grammar)|subject]] and the [[object (grammar)|object]] in a [[sentence (linguistics)|sentence]] into several types: [[SVO language|SVO]], [[SOV language|SOV]], [[VSO language|VSO]], and so on, languages.
[10580570] |([[English language|English]], for instance, belongs to the [[SVO language]] type.)
[10580580] |The shared features of languages of one type (= from one typological class) may have arisen completely independently.
[10580590] |(Compare with [[analogy (biology)|analogy]] in biology.)
[10580595] |Their cooccurence might be due to the universal laws governing the structure of natural languages&mdash;[[language universal]]s.
[10580600] |==== Areal classification ==== 
[10580610] |The following language groupings can serve as some linguistically significant examples of areal linguistic units, or ''[[sprachbund]]s'': [[Balkan linguistic union]], or the bigger group of [[European languages]]; [[Caucasian languages]]; [[East Asian languages]].
[10580620] |Although the members of each group are not closely [[genetic relatedness of languages|genetically related]], there is a reason for them to share similar features, namely: their speakers have been in contact for a long time within a common community and the languages ''converged'' in the course of the history.
[10580630] |These are called "[[areal feature (linguistics)|areal feature]]s".
[10580640] |One should be careful about the underlying classification principle for groups of languages which have apparently a geographical name: besides areal linguistic units, the [[taxa]] of the genetic classification ([[language family|language families]]) are often given names which themselves or parts of which refer to geographical areas.
[10580650] |== Controlled languages == 
[10580660] |Controlled natural languages are subsets of natural languages whose grammars and dictionaries have been restricted in order to reduce or eliminate both ambiguity and complexity.
[10580670] |The purpose behind the development and implementation of a controlled natural language typically is to aid non-native speakers of a natural language in understanding it, or to ease computer processing of a natural language.
[10580680] |An example of a widely used controlled natural language is [[Simplified English]], which was originally developed for [[aerospace]] industry maintenance manuals.
[10580690] |== Constructed languages and international auxiliary languages == 
[10580700] |Constructed [[international auxiliary language]]s such as [[Esperanto]] and [[Interlingua]] that have [[native speaker]]s are by some also considered natural languages.
[10580710] |However, constructed languages, while they are clearly languages, are not generally considered natural languages.
[10580720] |The problem is that other languages have been used to communicate and evolve in a natural way, while Esperanto has been selectively designed by [[L.L. Zamenhof]] from natural languages, not grown from the natural fluctuations in vocabulary and syntax.
[10580730] |Nor has Esperanto been naturally "standardized" by children's natural tendency to correct for illogical grammar structures in their parents' language, which can be seen in the development of [[pidgin]] languages into [[creole language]]s (as explained by Steven Pinker in [[The Language Instinct]]).
[10580740] |The possible exception to this are true native speakers of such languages.
[10580750] |More substantive basis for this designation is that the vocabulary, grammar, and orthography of Interlingua are natural; they have been standardized and presented by a [[International Auxiliary Language Association|linguistic research body]], but they predated it and are not themselves considered a product of human invention.
[10580760] |Most experts, however, consider Interlingua to be naturalistic rather than natural.
[10580770] |[[Latino Sine Flexione]], a second naturalistic auxiliary language, is also naturalistic in content but is no longer widely spoken.
[10580780] |==Natural Language Processing== 
[10580790] |Natural language processing (NLP) is a subfield of artificial intelligence and computational linguistics.
[10580800] |It studies the problems of automated generation and understanding of natural human languages.
[10580810] |Natural-language-generation systems convert information from computer databases into normal-sounding human language.
[10580820] |Natural-language-understanding systems convert samples of human language into more formal representations that are easier for computer programs to manipulate.
[10580830] |== Modalities == 
[10580840] |Natural language manifests itself in modalities other than speech.
[10580850] |=== Sign languages === 
[10580860] |In linguistic terms, sign languages are as rich and complex as any oral language, despite the previously common misconception that they are not "real languages".
[10580870] |Professional linguists have studied many sign languages and found them to have every linguistic component required to be classed as true natural languages.
[10580880] |Sign languages are not [[pantomime]], much as most spoken language is not [[onomatopoeic]].
[10580890] |The signs do tend to exploit iconicity (visual connections with their referents) more than what is common in spoken language, but they are above all conventional and hence generally incomprehensible to non-speakers, just like spoken words and morphemes.
[10580900] |They are not a visual rendition of an oral language either.
[10580910] |They have complex grammars of their own, and can be used to discuss any topic, from the simple and concrete to the lofty and abstract.
[10580920] |=== Written languages === 
[10580930] |In a sense, written language should be distinguished from natural language.
[10580940] |Until recently in the developed world, it was common for many people to be fluent in [[spoken language|spoken]] or [[sign language|signed languages]] and yet remain illiterate; this is still the case in poor countries today.
[10580950] |Furthermore, natural [[language acquisition]] during childhood is largely spontaneous, while [[literacy]] must usually be intentionally acquired.
[10590010] |<article>Natural language processing</article>
[10590020] |'''Natural language processing''' ('''NLP''') is a subfield of [[artificial intelligence]] and [[computational linguistics]].
[10590030] |It studies the problems of automated generation and understanding of [[natural language|natural human languages]].
[10590040] |Natural-language-generation systems convert information from computer databases into normal-sounding human language.
[10590050] |Natural-language-understanding systems convert samples of human language into more formal representations that are easier for [[computer]] programs to manipulate.
[10590060] |==Tasks and limitations== 
[10590070] |In theory, natural-language processing is a very attractive method of [[human-computer interaction]].
[10590080] |Early systems such as [[SHRDLU]], working in restricted "[[blocks world]]s" with restricted vocabularies, worked extremely well, leading researchers to excessive optimism, which was soon lost when the systems were extended to more realistic situations with real-world [[ambiguity]] and [[complexity]].
[10590090] |Natural-language understanding is sometimes referred to as an [[AI-complete]] problem, because natural-language recognition seems to require extensive knowledge about the outside world and the ability to manipulate it.
[10590100] |The definition of "[[understanding]]" is one of the major problems in natural-language processing.
[10590110] |==Concrete problems== 
[10590120] |Some examples of the problems faced by natural-language-understanding systems:
[10590130] |* The sentences ''We gave the monkeys the bananas because they were hungry'' and ''We gave the monkeys the bananas because they were over-ripe'' have the same surface grammatical structure.
[10590140] |However, the pronoun ''they'' refers to ''monkeys'' in one sentence and ''bananas'' in the other, and it is impossible to tell which without a knowledge of the properties of monkeys and bananas.
[10590150] |* A string of words may be interpreted in different ways.
[10590160] |For example, the string ''Time flies like an arrow'' may be interpreted in a variety of ways:
[10590170] |**The common [[simile]]: ''[[time]]'' moves quickly just like an arrow does;
[10590180] |**measure the speed of flies like you would measure that of an arrow (thus interpreted as an imperative) - i.e. ''(You should) time flies as you would (time) an arrow.'';
[10590190] |**measure the speed of flies like an arrow would - i.e. ''Time flies in the same way that an arrow would (time them).'';
[10590200] |**measure the speed of flies that are like arrows - i.e. ''Time those flies that are like arrows'';
[10590210] |**all of a type of flying insect, "time-flies," collectively enjoys a single arrow (compare ''Fruit flies like a banana'');
[10590220] |**each of a type of flying insect, "time-flies," individually enjoys a different arrow (similar comparison applies);
[10590230] |**A concrete object, for example the magazine, ''[[Time (magazine)|Time]]'', travels through the air in an arrow-like manner.
[10590240] |English is particularly challenging in this regard because it has little [[inflectional morphology]] to distinguish between [[parts of speech]].
[10590250] |* English and several other languages don't specify which word an adjective applies to.
[10590260] |For example, in the string "pretty little girls' school".
[10590270] |** Does the school look little?
[10590280] |** Do the girls look little?
[10590290] |** Do the girls look pretty?
[10590300] |** Does the school look pretty?
[10590310] |* We will often imply additional information in spoken language by the way we place stress on words.
[10590320] |The sentence "I never said she stole my money" demonstrates the importance stress can play in a sentence, and thus the inherent difficulty a natural language processor can have in parsing it.
[10590330] |Depending on which word the speaker places the stress, this sentence could have several distinct meanings:
[10590340] |** "'''I''' never said she stole my money" - Someone else said it, but ''I'' didn't.
[10590350] |** "I '''never''' said she stole my money" - I simply didn't ever say it.
[10590360] |** "I never '''said''' she stole my money" - I might have implied it in some way, but I never explicitly said it.
[10590370] |** "I never said '''she''' stole my money" - I said someone took it; I didn't say it was she.
[10590380] |** "I never said she '''stole''' my money" - I just said she probably borrowed it.
[10590390] |** "I never said she stole '''my''' money" - I said she stole someone else's money.
[10590400] |** "I never said she stole my '''money'''" - I said she stole something, but not my money.
[10590410] |==Subproblems== 
[10590420] |; [[Speech segmentation]]:
[10590430] |In most spoken languages, the sounds representing successive letters blend into each other, so the conversion of the analog signal to discrete characters can be a very difficult process.
[10590440] |Also, in [[natural speech]] there are hardly any pauses between successive words; the location of those boundaries usually must take into account [[grammatical]] and [[semantic]] constraints, as well as the [[context]].
[10590450] |; [[Text segmentation]]:
[10590460] |Some written languages like [[Chinese language|Chinese]], [[Japanese language|Japanese]] and [[Thai language|Thai]] do not have single-word boundaries either, so any significant text [[parsing]] usually requires the identification of word boundaries, which is often a non-trivial task.
[10590470] |; [[Word sense disambiguation]]:
[10590480] |Many words have more than one [[meaning]]; we have to select the meaning which makes the most sense in context.
[10590490] |; [[Syntactic ambiguity]]:
[10590500] |The [[grammar]] for [[natural language]]s is [[ambiguous]], i.e. there are often multiple possible [[parse tree]]s for a given sentence.
[10590510] |Choosing the most appropriate one usually requires [[semantics|semantic]] and contextual information.
[10590520] |Specific problem components of syntactic ambiguity include [[sentence boundary disambiguation]].
[10590530] |; Imperfect or irregular input :
[10590540] |Foreign or regional accents and vocal impediments in speech; typing or grammatical errors, [[Optical character recognition|OCR]] errors in texts.
[10590550] |; [[Speech acts]] and plans:
[10590560] |A sentence can often be considered an action by the speaker.
[10590570] |The sentence structure, alone, may not contain enough information to define this action.
[10590580] |For instance, a question is actually the speaker requesting some sort of response from the listener.
[10590590] |The desired response may be verbal, physical, or some combination.
[10590600] |For example, "Can you pass the class?" is a request for a simple yes-or-no answer, while "Can you pass the salt?" is requesting a physical action to be performed.
[10590610] |It is not appropriate to respond with "Yes, I can pass the salt," without the accompanying action (although "No" or "I can't reach the salt" would explain a lack of action).
[10590620] |== Statistical NLP == 
[10590630] |Statistical natural-language processing uses [[stochastic]], [[probabilistic]] and [[statistical]] methods to resolve some of the difficulties discussed above, especially those which arise because longer sentences are highly ambiguous when processed with realistic grammars, yielding thousands or millions of possible analyses.
[10590640] |Methods for disambiguation often involve the use of [[corpus linguistics | corpora]] and [[Markov model]]s.
[10590650] |Statistical NLP comprises all quantitative approaches to automated language processing, including probabilistic modeling, [[information theory]], and [[linear algebra]].
[10590660] |The technology for statistical NLP comes mainly from [[machine learning]] and [[data mining]], both of which are fields of [[artificial intelligence]] that involve learning from data.
[10590670] |==Major tasks in NLP== 
[10590680] |* [[Automatic summarization]]
[10590690] |* [[Foreign language reading aid]]
[10590700] |* [[Foreign language writing aid]]
[10590710] |* [[Information extraction]]
[10590720] |* [[Information retrieval]]
[10590730] |* [[Machine translation]]
[10590740] |* [[Named entity recognition]]
[10590750] |* [[Natural language generation]]
[10590760] |* [[Natural language understanding]]
[10590770] |* [[Optical character recognition]]
[10590780] |* [[Question answering]]
[10590790] |* [[Speech recognition]]
[10590800] |* [[Spoken dialogue system]]
[10590810] |* [[Text simplification]]
[10590820] |* [[Text to speech]]
[10590830] |* [[Text-proofing]]
[10590840] |== Evaluation of natural language processing == 
[10590850] |===Objectives=== 
[10590860] |The goal of NLP evaluation is to measure one or more ''qualities'' of an algorithm or a system, in order to determine if (or to what extent) the system answers the goals of its designers, or the needs of its users.
[10590870] |Research in NLP evaluation has received considerable attention, because the definition of proper evaluation criteria is one way to specify precisely an NLP problem, going thus beyond the vagueness of tasks defined only as ''language understanding'' or ''language generation''.
[10590880] |A precise set of evaluation criteria, which includes mainly evaluation data and evaluation metrics, enables several teams to compare their solutions to a given NLP problem.
[10590890] |===Short history of evaluation in NLP=== 
[10590900] |The first evaluation campaign on written texts seems to be a campaign dedicated to message understanding in 1987 (Pallet 1998).
[10590910] |Then, the Parseval/GEIG project compared phrase-structure grammars (Black 1991).
[10590920] |A series of campaigns within Tipster project were realized on tasks like summarization, translation and searching (Hirshman 1998).
[10590930] |In 1994, in Germany, the Morpholympics compared German taggers.
[10590940] |Then, the Senseval and Romanseval campaigns were conducted with the objectives of semantic disambiguation.
[10590950] |In 1996, the Sparkle campaign compared syntactic parsers in four different languages (English, French, German and Italian).
[10590960] |In France, the Grace project compared a set of 21 taggers for French in 1997 (Adda 1999).
[10590970] |In 2004, during the [[Technolangue/Easy]] project, 13 parsers for French were compared.
[10590980] |Large-scale evaluation of dependency parsers were performed in the context of the CoNLL shared tasks in 2006 and 2007.
[10590990] |In Italy, the evalita campaign was conducted in 2007 to compare various tools for Italian [http://evalita.itc.it evalita web site].
[10591000] |In France, within the ANR-Passage project (end of 2007), 10 parsers for French were compared [http://atoll.inria.fr/passage/ passage web site].
[10591010] |Adda G., Mariani J., Paroubek P., Rajman M. 1999 L'action GRACE d'évaluation de l'assignation des parties du discours pour le français. Langues vol-2
[10591030] |Black E., Abney S., Flickinger D., Gdaniec C., Grishman R., Harrison P., Hindle D., Ingria R., Jelinek F., Klavans J., Liberman M., Marcus M., Reukos S., Santoni B., Strzalkowski T. 1991 A procedure for quantitatively comparing the syntactic coverage of English grammars. DARPA Speech and Natural Language Workshop
[10591050] |Hirshman L. 1998 Language understanding evaluation: lessons learned from MUC and ATIS. LREC Granada
[10591070] |Pallet D.S. 1998 The NIST role in automatic speech recognition benchmark tests. LREC Granada
[10591090] |===Different types of evaluation=== 
[10591100] |Depending on the evaluation procedures, a number of distinctions are traditionally made in NLP evaluation.
[10591110] |* Intrinsic vs. extrinsic evaluation
[10591120] |Intrinsic evaluation considers an isolated NLP system and characterizes its performance mainly with respect to a ''gold standard'' result, pre-defined by the evaluators.
[10591130] |Extrinsic evaluation, also called ''evaluation in use'' considers the NLP system in a more complex setting, either as an embedded system or serving a precise function for a human user.
[10591140] |The extrinsic performance of the system is then characterized in terms of its utility with respect to the overall task of the complex system or the human user.
[10591150] |* Black-box vs. glass-box evaluation
[10591160] |Black-box evaluation requires one to run an NLP system on a given data set and to measure a number of parameters related to the quality of the process (speed, reliability, resource consumption) and, most importantly, to the quality of the result (e.g. the accuracy of data annotation or the fidelity of a translation).
[10591170] |Glass-box evaluation looks at the design of the system, the algorithms that are implemented, the linguistic resources it uses (e.g. vocabulary size), etc.
[10591180] |Given the complexity of NLP problems, it is often difficult to predict performance only on the basis of glass-box evaluation, but this type of evaluation is more informative with respect to error analysis or future developments of a system.
[10591190] |* Automatic vs. manual evaluation
[10591200] |In many cases, automatic procedures can be defined to evaluate an NLP system by comparing its output with the gold standard (or desired) one.
[10591210] |Although the cost of producing the gold standard can be quite high, automatic evaluation can be repeated as often as needed without much additional costs (on the same input data).
[10591220] |However, for many NLP problems, the definition of a gold standard is a complex task, and can prove impossible when inter-annotator agreement is insufficient.
[10591230] |Manual evaluation is performed by human judges, which are instructed to estimate the quality of a system, or most often of a sample of its output, based on a number of criteria.
[10591240] |Although, thanks to their linguistic competence, human judges can be considered as the reference for a number of language processing tasks, there is also considerable variation across their ratings.
[10591250] |This is why automatic evaluation is sometimes referred to as ''objective'' evaluation, while the human kind appears to be more ''subjective.''
[10591260] |=== Shared tasks (Campaigns)=== 
[10591270] |* [[BioCreative]]
[10591280] |* [[Message Understanding Conference]]
[10591290] |* [[Technolangue/Easy]]
[10591300] |* [[Text Retrieval Conference]]
[10591310] |==Standardization in NLP== 
[10591320] |An ISO sub-committee is working in order to ease interoperability between [[Lexical resource]]s and NLP programs.
[10591330] |The sub-committee is part of [[ISO/TC37]] and is called ISO/TC37/SC4.
[10591340] |Some ISO standards are already published but most of them are under construction, mainly on lexicon representation (see [[lexical markup framework|LMF]]), annotation and data category registry.
[10600010] |<article>Neural network</article>
[10600020] |Traditionally, the term '''neural network''' had been used to refer to a network or circuit of [[neuron|biological neurons]].
[10600030] |The modern usage of the term often refers to [[artificial neural network]]s, which are composed of [[artificial neuron]]s or nodes.
[10600040] |Thus the term has two distinct usages: 
[10600050] |# [[Biological neural network]]s are made up of real biological neurons that are connected or functionally-related in the [[peripheral nervous system]] or the [[central nervous system]].
[10600060] |In the field of [[neuroscience]], they are often identified as groups of neurons that perform a specific physiological function in laboratory analysis.
[10600070] |# [[Artificial neural network]]s are made up of interconnecting artificial neurons (programming constructs that mimic the properties of biological neurons).
[10600080] |Artificial neural networks may either be used to gain an understanding of biological neural networks, or for solving artificial intelligence problems without necessarily creating a model of a real biological system.
[10600090] |This article focuses on the relationship between the two concepts; for detailed coverage of the two different concepts refer to the separate articles: [[Biological neural network]] and [[Artificial neural network]].
[10600100] |==Characterization== 
[10600110] |In general a biological neural network is composed of a group or groups of chemically connected or functionally associated neurons.
[10600120] |A single neuron may be connected to many other neurons and the total number of neurons and connections in a network may be extensive.
[10600130] |Connections, called [[synapses]], are usually formed from [[axons]] to [[dendrites]], though dendrodendritic microcircuits and other connections are possible.
[10600140] |Apart from the electrical signaling, there are other forms of signaling that arise from [[neurotransmitter]] diffusion, which have an effect on electrical signaling.
[10600150] |As such, neural networks are extremely complex.
[10600160] |[[Artificial intelligence]] and [[cognitive modeling]] try to simulate some properties of neural networks.
[10600170] |While similar in their techniques, the former has the aim of solving particular tasks, while the latter aims to build mathematical models of biological neural systems.
[10600180] |In the [[artificial intelligence]] field, artificial neural networks have been applied successfully to [[speech recognition]], [[image analysis]] and adaptive [[control]], in order to construct [[software agents]] (in [[Video game|computer and video games]]) or [[autonomous robot]]s.
[10600190] |Most of the currently employed artificial neural networks for artificial intelligence are based on [[statistical estimation]], [[Optimization (mathematics)|optimization]] and [[control theory]].
[10600200] |The [[cognitive modelling]] field involves the physical or mathematical modeling of the behaviour of neural systems; ranging from the individual neural level (e.g. modelling the spike response curves of neurons to a stimulus), through the neural cluster level (e.g. modelling the release and effects of dopamine in the basal ganglia) to the complete organism (e.g. behavioural modelling of the organism's response to stimuli).
[10600210] |==The brain, neural networks and computers== 
[10600220] |Neural networks, as used in artificial intelligence, have traditionally been viewed as simplified models of neural processing in the brain, even though the relation between this model and brain biological architecture is debated.
[10600230] |A subject of current research in theoretical neuroscience is the question surrounding the degree of complexity and the properties that individual neural elements should have to reproduce something resembling animal intelligence.
[10600240] |Historically, computers evolved from the [[von Neumann architecture]], which is based on sequential processing and execution of explicit instructions.
[10600250] |On the other hand, the origins of neural networks are based on efforts to model information processing in biological systems, which may rely largely on parallel processing as well as implicit instructions based on recognition of patterns of 'sensory' input from external sources.
[10600260] |In other words, at its very heart a neural network is a complex statistical processor (as opposed to being tasked to sequentially process and execute).
[10600270] |==Neural networks and artificial intelligence== 
[10600280] |An ''artificial neural network'' (ANN), also called a ''simulated neural network'' (SNN) or commonly just ''neural network'' (NN) is an interconnected group of [[artificial neuron]]s that uses a [[mathematical model|mathematical or computational model]] for [[information processing]] based on a [[connectionism|connectionistic]] approach to [[computation]].
[10600290] |In most cases an ANN is an [[adaptive system]] that changes its structure based on external or internal information that flows through the network.
[10600300] |In more practical terms neural networks are [[non-linear]] [[statistical]] [[data modeling]] or [[decision making]] tools.
[10600310] |They can be used to model complex relationships between inputs and outputs or to [[Pattern recognition|find patterns]] in data.
[10600320] |===Background=== 
[10600330] |An [[artificial neural network]] involves a network of simple processing elements ([[artificial neurons]]) which can exhibit complex global behaviour, determined by the connections between the processing elements and element parameters.
[10600340] |One classical type of artificial neural network is the [[Hopfield net]].
[10600350] |In a neural network model simple [[Node (neural networks)|nodes]], which can be called variously "neurons", "neurodes", "Processing Elements" (PE) or "units", are connected together to form a network of nodes &mdash; hence the term "neural network".
[10600360] |While a neural network does not have to be adaptive ''per se'', its practical use comes with algorithms designed to alter the strength (weights) of the connections in the network to produce a desired signal flow.
[10600370] |In modern [[Neural network software|software implementations]] of artificial neural networks the approach inspired by biology has more or less been abandoned for a more practical approach based on statistics and signal processing.
[10600380] |In some of these systems neural networks, or parts of neural networks (such as [[artificial neuron]]s) are used as components in larger systems that combine both adaptive and non-adaptive elements.
[10600390] |The concept of a neural network appears to have first been proposed by [[Alan Turing]] in his 1948 paper "Intelligent Machinery".
[10600400] |===Applications=== 
[10600410] |The utility of artificial neural network models lies in the fact that they can be used to infer a function from observations and also to use it.
[10600420] |This is particularly useful in applications where the complexity of the data or task makes the design of such a function by hand impractical.
[10600430] |====Real life applications==== 
[10600440] |The tasks to which artificial neural networks are applied tend to fall within the following broad categories: 
[10600450] |*[[Function approximation]], or [[regression analysis]], including [[time series prediction]] and modelling.
[10600460] |*[[Statistical classification|Classification]], including [[Pattern recognition|pattern]] and sequence recognition, novelty detection and sequential decision making.
[10600470] |*[[Data processing]], including filtering, clustering, [[blind signal separation]] and compression.
[10600480] |Application areas include system identification and control (vehicle control, process control), game-playing and decision making (backgammon, chess, racing), pattern recognition (radar systems, face identification, object recognition, etc.), sequence recognition (gesture, speech, handwritten text recognition), medical diagnosis, financial applications, [[data mining]] (or knowledge discovery in databases, "KDD"), visualization and [[e-mail spam]] filtering.
[10600490] |===Neural network software=== 
[10600500] |''Main article:'' [[Neural network software]]
[10600510] |'''Neural network software''' is used to [[Simulation|simulate]], [[research]], [[Software development|develop]] and apply [[artificial neural network]]s, [[biological neural network]]s and in some cases a wider array of [[adaptive system]]s.
[10600520] |====Learning paradigms==== 
[10600530] |There are three major learning paradigms, each corresponding to a particular abstract learning task.
[10600540] |These are [[supervised learning]], [[unsupervised learning]] and [[reinforcement learning]].
[10600550] |Usually any given type of network architecture can be employed in any of those tasks.
[10600560] |;Supervised learning
[10600570] |In [[supervised learning]], we are given a set of example pairs <math> (x, y), x \in X, y \in Y</math> and the aim is to find a function <math>f</math> in the allowed class of functions that matches the examples.
[10600580] |In other words, we wish to ''infer'' how the mapping implied by the data and the cost function is related to the mismatch between our mapping and the data.
[10600590] |;Unsupervised learning
[10600600] |In [[unsupervised learning]] we are given some data <math>x</math>, and a cost function which is to be minimized which can be any function of <math>x</math> and the network's output, <math>f</math>.
[10600610] |The cost function is determined by the task formulation.
[10600620] |Most applications fall within the domain of [[estimation problems]] such as [[statistical modeling]], [[Data compression|compression]], [[Mail filter|filtering]], [[blind source separation]] and [[data clustering|clustering]].
[10600630] |;Reinforcement learning
[10600640] |In [[reinforcement learning]], data <math>x</math> is usually not given, but generated by an agent's interactions with the environment.
[10600650] |At each point in time <math>t</math>, the agent performs an action <math>y_t</math> and the environment generates an observation <math>x_t</math> and an instantaneous cost <math>c_t</math>, according to some (usually unknown) dynamics.
[10600660] |The aim is to discover a ''policy'' for selecting actions that minimises some measure of a long-term cost, i.e. the expected cumulative cost.
[10600670] |The environment's dynamics and the long-term cost for each policy are usually unknown, but can be estimated.
[10600680] |ANNs are frequently used in reinforcement learning as part of the overall algorithm.
[10600690] |Tasks that fall within the paradigm of reinforcement learning are [[control]] problems, [[game]]s and other [[sequential decision making]] tasks.
[10600700] |====Learning algorithms==== 
[10600710] |There are many algorithms for training neural networks; most of them can be viewed as a straightforward application of [[Optimization (mathematics)|optimization]] theory and [[statistical estimation]].
[10600720] |[[Evolutionary computation]] methods, [[simulated annealing]], [[Expectation-Maximization|expectation maximization]] and [[non-parametric methods]] are among other commonly used methods for training neural networks.
[10600730] |See also [[machine learning]].
[10600740] |Recent developments in this field also saw the use of [[particle swarm optimization]] and other [[swarm intelligence]] techniques used in the training of neural networks.
[10600750] |==Neural networks and neuroscience== 
[10600760] |Theoretical and [[computational neuroscience]] is the field concerned with the theoretical analysis and computational modeling of biological neural systems.
[10600770] |Since neural systems are intimately related to cognitive processes and behaviour, the field is closely related to cognitive and behavioural modeling.
[10600780] |The aim of the field is to create models of biological neural systems in order to understand how biological systems work.
[10600790] |To gain this understanding, neuroscientists strive to make a link between observed biological processes (data), biologically plausible mechanisms for neural processing and learning ([[biological neural network]] models) and theory (statistical learning theory and [[information theory]]).
[10600800] |=== Types of models === 
[10600810] |Many models are used in the field, each defined at a different level of abstraction and trying to model different aspects of neural systems.
[10600820] |They range from models of the short-term behaviour of [[biological neuron models|individual neurons]], through models of how the dynamics of neural circuitry arise from interactions between individual neurons, to models of how behaviour can arise from abstract neural modules that represent complete subsystems.
[10600830] |These include models of the long-term and short-term plasticity of neural systems and its relation to learning and memory, from the individual neuron to the system level.
[10600840] |===Current research=== 
[10600850] |While initially research had been concerned mostly with the electrical characteristics of neurons, a particularly important part of the investigation in recent years has been the exploration of the role of [[neuromodulators]] such as [[dopamine]], [[acetylcholine]], and [[serotonin]] on behaviour and learning.
[10600860] |[[Biophysics|Biophysical]] models, such as [[BCM theory]], have been important in understanding mechanisms for [[synaptic plasticity]], and have had applications in both computer science and neuroscience.
[10600870] |Research is ongoing in understanding the computational algorithms used in the brain, with some recent biological evidence for [[radial basis networks]] and [[neural backpropagation]] as mechanisms for processing data.
[10600880] |==History of the neural network analogy== 
[10600890] |The concept of neural networks started in the late-1800s as an effort to describe how the human mind performed.
[10600900] |These ideas started being applied to computational models with the [[Perceptron]].
[10600910] |In early 1950s [[Friedrich Hayek]] was one of the first to posit the idea of [[spontaneous order]] in the brain arising out of decentralized networks of simple units (neurons).
[10600920] |In the late 1940s, [[Donald Hebb]] made one of the first hypotheses for a mechanism of neural plasticity (i.e. learning), [[Hebbian learning]].
[10600930] |Hebbian learning is considered to be a 'typical' unsupervised learning rule and it (and variants of it) was an early model for [[long term potentiation]].
[10600940] |The [[Perceptron]] is essentially a linear classifier for classifying data <math> x \in R^n</math> specified by parameters <math>w \in R^n, b \in R</math> and an output function <math>f = w'x + b</math>.
[10600950] |Its parameters are adapted with an ad-hoc rule similar to stochastic steepest gradient descent.
[10600960] |Because the [[inner product]] is a [[linear operator]] in the input space, the Perceptron can only perfectly classify a set of data for which different classes are [[linearly separable]] in the input space, while it often fails completely for non-separable data.
[10600970] |While the development of the algorithm initially generated some enthusiasm, partly because of its apparent relation to biological mechanisms, the later discovery of this inadequacy caused such models to be abandoned until the introduction of non-linear models into the field.
[10600980] |The [[Cognitron]] (1975) was an early multilayered neural network with a training algorithm.
[10600990] |The actual structure of the network and the methods used to set the interconnection weights change from one neural strategy to another, each with its advantages and disadvantages.
[10601000] |Networks can propagate information in one direction only, or they can bounce back and forth until self-activation at a node occurs and the network settles on a final state.
[10601010] |The ability for bi-directional flow of inputs between neurons/nodes was produced with the [[Hopfield net|Hopfield's network]] (1982), and specialization of these node layers for specific purposes was introduced through the first [[hybrid neural network|hybrid network]].
[10601020] |The [[connectionism|parallel distributed processing]] of the mid-1980s became popular under the name [[connectionism]].
[10601030] |The rediscovery of the [[backpropagation]] algorithm was probably the main reason behind the repopularisation of neural networks after the publication of "Learning Internal Representations by Error Propagation" in 1986 (Though backpropagation itself dates from 1974).
[10601040] |The original network utilised multiple layers of weight-sum units of the type <math>f = g(w'x + b)</math>, where <math>g</math> was a [[sigmoid function]] or [[logistic function]] such as used in [[logistic regression]].
[10601050] |Training was done by a form of stochastic steepest gradient descent.
[10601060] |The employment of the chain rule of differentiation in deriving the appropriate parameter updates results in an algorithm that seems to 'backpropagate errors', hence the nomenclature.
[10601070] |However it is essentially a form of gradient descent.
[10601080] |Determining the optimal parameters in a model of this type is not trivial, and steepest gradient descent methods cannot be relied upon to give the solution without a good starting point.
[10601090] |In recent times, networks with the same architecture as the backpropagation network are referred to as [[Multilayer perceptron|Multi-Layer Perceptrons]].
[10601100] |This name does not impose any limitations on the type of algorithm used for learning.
[10601110] |The backpropagation network generated much enthusiasm at the time and there was much controversy about whether such learning could be implemented in the brain or not, partly because a mechanism for reverse signalling was not obvious at the time, but most importantly because there was no plausible source for the 'teaching' or 'target' signal.
[10601120] |==Criticism== 
[10601130] |[[A. K. Dewdney]], a former ''[[Scientific American]]'' columnist, wrote in 1997, ''“Although neural nets do solve a few toy problems, their powers of computation are so limited that I am surprised anyone takes them seriously as a general problem-solving tool.”''
[10601140] |(Dewdney, p.82)
[10601150] |Arguments against Dewdney's position are that neural nets have been successfully used to solve many complex and diverse tasks, ranging from autonomously flying aircraft[http://www.nasa.gov/centers/dryden/news/NewsReleases/2003/03-49.html] to detecting credit card fraud[http://www.visa.ca/en/about/visabenefits/innovation.cfm].
[10601160] |Technology writer [[Roger Bridgman]] commented on Dewdney's statements about neural nets: 
[10601170] |<blockquote>  Neural networks, for instance, are in the dock not only because they have been hyped to high heaven, (what hasn't?) but also because you could create a successful net without understanding how it worked: the bunch of numbers that captures its behaviour would in all probability be "an opaque, unreadable table...valueless as a scientific resource".
[10601180] |In spite of his emphatic declaration that science is not technology, Dewdney seems here to pillory neural nets as bad science when most of those devising them are just trying to be good engineers.
[10601190] |An unreadable table that a useful machine could read would still be well worth having.</blockquote>
[10610010] |<article>N-gram</article>
[10610020] |An '''''n''-gram''' is a sub-sequence of ''n'' items from a given [[sequence]].
[10610025] |''n''-grams are used in various areas of statistical [[natural language processing]] and genetic sequence analysis.
[10610030] |The items in question can be letters, words or [[base pairs]] according to the application.
[10610040] |An ''n''-gram of size 1 is a "[[unigram]]"; size 2 is a "[[bigram]]" (or, more etymologically sound but less commonly used, a "digram"); size 3 is a "[[trigram]]"; and size 4 or more is simply called an "''n''-gram".
[10610050] |Some [[language model]]s built from n-grams are "(''n''&nbsp;&minus;&nbsp;1)-order [[Markov_chain|Markov model]]s".
[10610060] |==Examples== 
[10610070] |Here are examples of '''''word''''' level 3-grams and 4-grams (and counts of the number of times they appeared) from the [[N-gram#Google_use_of_N-gram|Google n-gram corpus]].
[10610080] |*ceramics collectables collectibles (55)
[10610090] |*ceramics collectables fine (130)
[10610100] |*ceramics collected by (52)
[10610110] |*ceramics collectible pottery (50)
[10610120] |*ceramics collectibles cooking (45)
[10610130] |4-grams
[10610140] |*serve as the incoming (92)
[10610150] |*serve as the incubator (99)
[10610160] |*serve as the independent (794)
[10610170] |*serve as the index (223)
[10610180] |*serve as the indication (72)
[10610190] |*serve as the indicator (120)
[10610200] |==''n''-gram models== 
[10610210] |An '''''n''-gram model''' models sequences, notably natural languages, using the statistical properties of ''n''-grams.
[10610220] |This idea can be traced to an experiment by [[Claude Shannon]]'s work in [[information theory]].
[10610230] |His question was, given a sequence of letters (for example, the sequence "for ex"), what is the [[likelihood]] of the next letter?
[10610240] |From training data, one can derive a [[probability distribution]] for the next letter given a history of size <math>n</math>: ''a'' = 0.4, ''b'' = 0.00001, ''c'' = 0, ....; where the probabilities of all possible "next-letters" sum to 1.0.
[10610250] |More concisely, an ''n''-gram model predicts <math>x_{i}</math> based on <math>x_{i-1}, x_{i-2}, \dots, x_{i-n}</math>.
[10610260] |In Probability terms, this is nothing but <math>P(x_{i} | x_{i-1}, x_{i-2}, \dots, x_{i-n})</math>.
[10610270] |When used for [[language model|language modeling]] independence assumptions are made so that each word depends only on the last ''n'' words.
[10610280] |This [[Markov model]] is used as an approximation of the true underlying language.
[10610290] |This assumption is important because it massively simplifies the problem of learning the language model from data.
[10610300] |In addition, because of the open nature of language, it is common to group words unknown to the language model together.
[10610310] |''n''-gram models are widely used in statistical [[natural language processing]].
[10610320] |In [[speech recognition]], [[phonemes]] and sequences of phonemes are modeled using a ''n''-gram distribution.
[10610330] |For parsing, words are modeled such that each ''n''-gram is composed of ''n'' words.
[10610340] |For [[language recognition]], sequences of letters are modeled for different languages.
[10610350] |For a sequence of words, (for example "the dog smelled like a skunk"), the trigrams would be: "the dog smelled", "dog smelled like", "smelled like a", and "like a skunk".
[10610360] |For sequences of characters, the 3-grams (sometimes referred to as "trigrams") that can be generated from "good morning" are "goo", "ood", "od ", "d m", " mo", "mor" and so forth.
[10610370] |Some practitioners preprocess strings to remove spaces, most simply collapse whitespace to a single space while preserving paragraph marks.
[10610380] |Punctuation is also commonly reduced or removed by preprocessing.
[10610385] |''n''-grams can also be used for sequences of words or, in fact, for almost any type of data.
[10610390] |They have been used for example for extracting features for clustering large sets of satellite earth images and for determining what part of the Earth a particular image came from.
[10610400] |They have also been very successful as the first pass in genetic sequence search and in the identification of which species short sequences of DNA were taken from.
[10610410] |N-gram models are often criticized because they lack any explicit representation of long range dependency.
[10610420] |While it is true that the only explicit dependency range is (n-1) tokens for an n-gram model, it is also true that the effective range of dependency is significantly longer than this although long range correlations drop exponentially with distance for any Markov model.
[10610430] |Alternative Markov language models that incorporate some degree of local state can exhibit very long range dependencies.
[10610440] |This is often done using hand-crafted state variables that represent, for instance, the position in a sentence, the general topic of discourse or a grammatical state variable.
[10610450] |Some of the best parsers of English currently in existence are roughly of this form.
[10610460] |Another criticism that has been leveled is that Markov models of language, including n-gram models, do not explicitly capture the performance/competence distinction introduced by [[Noam Chomsky]].
[10610470] |This criticism fails to explain why parsers that are the best at parsing text seem to uniformly lack any such distinction and most even lack any clear distinction between semantics and syntax.
[10610480] |Most proponents of n-gram and related language models opt for a fairly pragmatic approach to language modeling that emphasizes empirical results over theoretical purity.
[10610490] |==''n''-grams for approximate matching== 
[10610500] |''n''-grams can also be used for efficient approximate matching.
[10610510] |By converting a sequence of items to a set of ''n''-grams, it can be embedded in a [[vector space]] (in other words, represented as a [[histogram]]), thus allowing the sequence to be compared to other sequences in an efficient manner.
[10610520] |For example, if we convert strings with only letters in the English alphabet into 3-grams, we get a <math>26^3</math>-dimensional space (the first dimension measures the number of occurrences of "aaa", the second "aab", and so forth for all possible combinations of three letters).
[10610530] |Using this representation, we lose information about the string.
[10610540] |For example, both the strings "abcba" and "bcbab" give rise to exactly the same 2-grams.
[10610550] |However, we know empirically that if two strings of real text have a similar vector representation (as measured by [[dot product|cosine distance]]) then they are likely to be similar.
[10610560] |Other metrics have also been applied to vectors of ''n''-grams with varying, sometimes better, results.
[10610570] |For example [[z-score]]s have been used to compare documents by examining how many standard deviations each ''n''-gram differs from its mean occurrence in a large collection, or [[text corpus]], of documents (which form the "background" vector).
[10610580] |In the event of small counts, the [[g-score]] may give better results for comparing alternative models.
[10610590] |It is also possible to take a more principled approach to the statistics of ''n''-grams, modeling similarity as the likelihood that two strings came from the same source directly in terms of a problem in [[Bayesian inference]].
[10610600] |==Other applications== 
[10610610] |''n''-grams find use in several areas of computer science, [[computational linguistics]], and applied mathematics.
[10610620] |They have been used to: 
[10610630] |* design [[kernel (mathematics)|kernels]] that allow [[machine learning]] algorithms such as [[support vector machine]]s to learn from string data
[10610640] |* find likely candidates for the correct spelling of a misspelled word
[10610650] |* improve compression in [[data compression|compression algorithms]] where a small area of data requires ''n''-grams of greater length
[10610660] |* assess the probability of a given word sequence appearing in text of a language of interest in pattern recognition systems, [[speech recognition]], OCR ([[optical character recognition]]), [[Intelligent Character Recognition]] ([[ICR]]), [[machine translation]] and similar applications 
[10610670] |* improve retrieval in [[information retrieval]] systems when it is hoped to find similar "documents" (a term for which the conventional meaning is sometimes stretched, depending on the data set) given a single query document and a database of reference documents
[10610680] |* improve retrieval performance in genetic sequence analysis as in the [[BLAST]] family of programs
[10610690] |* identify the language a text is in or the species a small sequence of DNA was taken from 
[10610700] |* predict letters or words at random in order to create text, as in the [[dissociated press]] algorithm.
[10610710] |== Bias-versus-variance trade-off == 
[10610720] |What goes into picking the ''n'' for the ''n''-gram?
[10610730] |There are problems of balance weight between ''infrequent grams'' (for example, if a proper name appeared in the training data) and ''frequent grams''.
[10610740] |Also, items not seen in the training data will be given a [[probability]] of 0.0 without [[smoothing]].
[10610750] |For unseen but plausible data from a sample, one can introduce [[pseudocount]]s.
[10610760] |Pseudocounts are generally motivated on Bayesian grounds.
[10610770] |=== Smoothing techniques === 
[10610780] |* [[Linear interpolation]] (e.g., taking the [[weighted mean]] of the unigram, bigram, and trigram)
[10610790] |* [[Good-Turing]] discounting
[10610800] |* [[Witten-Bell discounting]]
[10610810] |* [[Katz's back-off model]] (trigram)
[10610820] |==Google use of N-gram== 
[10610830] |[[Google]] uses n-gram models for a variety of R&D projects, such as [[statistical machine translation]], [[speech recognition]], [[Spell checker|checking spelling]], [[entity detection]], and [[information extraction|data mining]].
[10610840] |In September of 2006 [http://googleresearch.blogspot.com/2006/08/all-our-n-gram-are-belong-to-you.html Google announced] that they made their n-grams [http://www.ldc.upenn.edu/Catalog/CatalogEntry.jsp?catalogId=LDC2006T13 public] at the [[Linguistic Data Consortium]] ([http://www.ldc.upenn.edu/ LDC]).
[10620010] |<article>Noun</article>
[10620020] |In [[linguistics]], a '''noun''' is a member of a large, [[open class (linguistics)|open]] [[lexical category]] whose members can occur as the main word in the [[subject (grammar)|subject]] of a [[clause]], the [[object (grammar)|object]] of a [[verb]], or the object of a [[preposition]].
[10620030] |Lexical categories are defined in terms of how their members combine with other kinds of expressions.
[10620040] |The syntactic rules for nouns differ from language to language.
[10620050] |In [[English language|English]], nouns may be defined as those words which can occur with articles and [[adjective|attributive adjectives]] and can function as the [[phrase|head]] of a [[noun phrase]].
[10620060] |In [[traditional grammar|traditional]] English grammar, the noun is one of the eight [[parts of speech]].
[10620070] |==History== 
[10620080] |The word comes from the [[Latin]] ''nomen'' meaning "[[name]]".
[10620090] |Word classes like nouns were first described by the Sanskrit grammarian [[Panini (grammarian)|{{IAST|Pāṇini}}]] and ancient Greeks like [[Dionysios Thrax]]; and were defined in terms of their [[morphology (linguistics)|morphological]] properties.
[10620100] |For example, in Ancient Greek, nouns inflect for [[case (grammar)|grammatical case]], such as dative or accusative.
[10620110] |[[Verb]]s, on the other hand, inflect for [[grammatical tense|tenses]], such as past, present or future, while nouns do not.
[10620120] |[[Aristotle]] also had a notion of ''onomata'' (nouns) and ''rhemata'' (verbs) which, however, does not exactly correspond with modern notions of nouns and verbs.
[10620130] |Vinokurova 2005 has a more detailed discussion of the historical origin of the notion of a noun.
[10620140] |==Different definitions of nouns== 
[10620150] |Expressions of [[natural language]] have properties at different levels.
[10620160] |They have ''formal'' properties, like what kinds of [[morphology (linguistics)|morphological]] [[prefix]]es or [[suffix]]es they take and what kinds of other expressions they combine with; but they also have [[semantics|semantic]] properties, i.e. properties pertaining to their meaning.
[10620170] |The definition of a noun at the outset of this page is thus a ''formal'', traditional grammatical definition.
[10620180] |That definition, for the most part, is considered uncontroversial and furnishes the propensity for certain language users to effectively distinguish most nouns from non-nouns.
[10620190] |However, it has the disadvantage that it does not apply to nouns in all languages.
[10620200] |For example in [[Russian language|Russian]], there are no definite articles, so one cannot define nouns as words that are modified by definite articles.
[10620210] |There are also several attempts of defining nouns in terms of their [[semantics|semantic]] properties.
[10620220] |Many of these are controversial, but some are discussed below.
[10620230] |===Names for things=== 
[10620240] |In [[Traditional grammar|traditional school grammars]], one often encounters the definition of nouns that they are all and only those expressions that refer to a ''person'', ''place'', ''thing'', ''event'', ''substance'', ''quality'', or ''idea'', etc.
[10620250] |This is a ''semantic'' definition.
[10620260] |It has been criticized by contemporary linguists as being uninformative.
[10620270] |Contemporary linguists generally agree that one cannot successfully define nouns (or other grammatical categories) in terms of what sort of ''object in the world'' they ''[[reference|refer]] to'' or ''[[signification|signify]]''.
[10620280] |Part of the [[conundrum]] is that the definition makes use of relatively ''general'' nouns ("thing", "phenomenon", "event") to define what nouns ''are''.
[10620290] |The existence of such ''general'' nouns demonstrates that nouns refer to entities that are organized in [[taxonomy|taxonomic]] [[hierarchies]].
[10620300] |But other kinds of expressions are also organized into such structured taxonomic relationships.
[10620310] |For example the verbs "stroll","saunter", "stride", and "tread" are more specific words than the more ''general'' "walk".
[10620320] |Moreover, "walk" is more specific than the verb "move", which, in turn, is less general than "change".
[10620330] |But it is unlikely that such taxonomic relationships can be used to ''define'' nouns and verbs.
[10620340] |We cannot ''define'' verbs as those words that refer to "changes" or "states", for example, because the nouns ''change'' and ''state'' probably refer to such things, but, of course, aren't verbs.
[10620350] |Similarly, nouns like "invasion", "meeting", or "collapse" refer to things that are "done" or "happen".
[10620360] |In fact, an influential [[theory]] has it that verbs like "kill" or "die" refer to events, which is among the sort of thing that nouns are supposed to refer to.
[10620370] |The point being made here is not that this view of verbs is wrong, but rather that this property of verbs is a poor basis for a ''definition'' of this category, just like the property of ''having wheels'' is a poor basis for a definition of cars (some things that have wheels, such as my suitcase or a jumbo jet, aren't cars).
[10620380] |Similarly, adjectives like "yellow" or "difficult" might be thought to refer to qualities, and adverbs like "outside" or "upstairs" seem to refer to places, which are also among the sorts of things nouns can refer to.
[10620390] |But verbs, adjectives and adverbs are not nouns, and nouns aren't verbs, adjectives or adverbs.
[10620400] |One might argue that "definitions" of this sort really rely on speakers' prior intuitive knowledge of what nouns, verbs and adjectives are, and, so don't really add anything over and beyond this.
[10620410] |Speakers' intuitive knowledge of such things might plausibly be based on ''formal'' criteria, such as the traditional grammatical definition of English nouns aforementioned.
[10620420] |===Prototypically referential expressions=== 
[10620430] |Another semantic definition of nouns is that they are ''prototypically referential.''
[10620440] |That definition is also not very helpful in distinguishing actual nouns from verbs.
[10620450] |But it may still correctly identify a core property of nounhood.
[10620460] |For example, we will tend to use nouns like "fool" and "car" when we wish to refer to fools and cars, respectively.
[10620470] |The notion that this is '''prototypical''' reflects the fact that such nouns can be used, even though nothing with the corresponding property is referred to: 
[10620480] |:John is no '''fool'''.
[10620490] |:If I had a '''car''', I'd go to Marrakech.
[10620500] |The first sentence above doesn't refer to any fools, nor does the second one refer to any particular car.
[10620510] |===Predicates with identity criteria=== 
[10620520] |The British logician [[Peter Thomas Geach]] proposed a very subtle semantic definition of nouns.
[10620530] |He noticed that adjectives like "same" can modify nouns, but no other kinds of parts of speech, like [[verbs]] or [[adjectives]].
[10620540] |Not only that, but there also doesn't seem to be any ''other'' expressions with similar meaning that can modify verbs and adjectives.
[10620550] |Consider the following examples.
[10620560] |: Good: John and Bill participated in the '''same''' fight.
[10620570] |: Bad: 
[10620580] |*John and Bill '''samely''' fought.
[10620590] |There is no English adverb "samely".
[10620600] |In some other languages, like Czech, however there are adverbs corresponding to "samely".
[10620610] |Hence, in Czech, the translation of the last sentence would be fine; however, it would mean that John and Bill fought ''in the same way'': not that they participated in the ''same fight''.
[10620620] |Geach proposed that we could explain this, if nouns denote logical [[predicate (grammar)|predicate]]s with '''identity criteria'''.
[10620630] |An identity criterion would allow us to conclude, for example, that "person x at time 1 is ''the same person'' as person y at time 2".
[10620640] |Different nouns can have different identity criteria.
[10620650] |A well known example of this is due to Gupta: 
[10620660] |:National Airlines transported 2 million '''passengers''' in 1979.
[10620670] |:National Airlines transported (at least) 2 million '''persons''' in 1979.
[10620680] |Given that, in general, all passengers are persons, the last sentence above ought to follow logically from the first one.
[10620690] |But it doesn't.
[10620700] |It is easy to imagine, for example, that on average, every person who travelled with National Airlines in 1979, travelled with them twice.
[10620710] |In that case, one would say that the airline transported 2 million ''passengers'' but only 1 million ''persons''.
[10620720] |Thus, the way that we count ''passengers'' isn't necessarily the same as the way that we count ''persons''.
[10620730] |Put somewhat differently: At two different times, ''you'' may correspond to two distinct ''passengers'', even though you are one and the same person.
[10620740] |For a precise definition of ''identity criteria'', see Gupta.
[10620750] |Recently, Baker has proposed that Geach's definition of nouns in terms of identity criteria allows us to ''explain'' the characteristic properties of nouns.
[10620760] |He argues that nouns can co-occur with (in-)definite articles and numerals, and are "prototypically referential" ''because'' they are all and only those [[parts of speech]] that provide identity criteria.
[10620770] |Baker's proposals are quite new, and linguists are still evaluating them.
[10620780] |==Classification of nouns in English== 
[10620790] |===Proper nouns and common nouns=== 
[10620800] |''Proper nouns'' (also called ''[[proper name]]s'') are nouns representing unique entities (such as ''London'', ''Universe'' or ''John''), as distinguished from common nouns which describe a class of entities (such as ''city'', ''planet'' or ''person'').
[10620810] |In [[English language|English]] and most other languages that use the [[Latin alphabet]], proper nouns are usually [[capitalization|capitalized]].
[10620820] |Languages differ in whether most elements of multiword proper nouns are capitalised (e.g., American English ''House of Representatives'') or only the initial element (e.g., Slovenian ''Državni zbor'' 'National Assembly').
[10620830] |In [[German language|German]], nouns of all types are capitalized.
[10620840] |The convention of capitalizing ''all'' nouns was previously used in English, but ended circa 1800.
[10620850] |In America, the shift in capitalization is recorded in several noteworthy documents.
[10620860] |The end (but not the beginning) of the [[United States Declaration of Independence#Annotated text of the Declaration|Declaration of Independence]] (1776) and all of the [[United States Constitution|Constitution]] (1787) show nearly all nouns capitalized, the [[United States Bill of Rights#Text of the Bill of Rights|Bill of Rights]] (1789) capitalizes a few common nouns but not most of them, and the [[Thirteenth Amendment to the United States Constitution|Thirteenth Constitutional Amendment]] (1865) only capitalizes proper nouns.
[10620870] |Sometimes the same word can function as both a common noun and a proper noun, where one such entity is special.
[10620880] |For example the common noun ''god'' denotes all deities, while the proper noun ''God'' references the [[monotheism|monotheistic]] [[God]] specifically.
[10620890] |Owing to the essentially arbitrary nature of [[Orthography|orthographic]] classification and the existence of variant authorities and adopted [[Style guide|''house styles'']], questionable capitalization of words is not uncommon, even in respected newspapers and magazines.
[10620900] |Most publishers, however, properly require ''consistency'', at least within the same document, in applying their specified standard.
[10620910] |The common meaning of the word or words constituting a proper noun may be unrelated to the object to which the proper noun refers.
[10620920] |For example, someone might be named "Tiger Smith" despite being neither a [[tiger]] nor a [[smith (metalwork)|smith]].
[10620930] |For this reason, proper nouns are usually not [[translation|translated]] between languages, although they may be [[transliteration|transliterated]].
[10620940] |For example, the German surname ''Knödel'' becomes ''Knodel'' or ''Knoedel'' in English (not the literal ''Dumpling'').
[10620950] |However, the [[Transliteration|transcription]] of place names and the names of [[monarch]]s, [[pope]]s, and non-contemporary [[author]]s is common and sometimes universal.
[10620960] |For instance, the [[Portuguese language|Portuguese]] word ''Lisboa'' becomes ''[[Lisbon]]'' in [[English language|English]]; the English ''London'' becomes ''Londres'' in French; and the [[ancient Greek|Greek]] ''Aristotelēs'' becomes [[Aristotle]] in English.
[10620970] |===Countable and uncountable nouns=== 
[10620980] |''Count nouns'' are common nouns that can take a [[plural]], can combine with [[numerals]] or [[quantifiers]] (e.g. "one", "two", "several", "every", "most"), and can take an indefinite article ("a" or "an").
[10620990] |Examples of count nouns are "chair", "nose", and "occasion".
[10621000] |''Mass nouns'' (or ''non-count nouns'') differ from count nouns in precisely that respect: they can't take plural or combine with number words or quantifiers.
[10621010] |Examples from English include "laughter", "cutlery", "helium", and "furniture".
[10621020] |For example, it is not possible to refer to "a furniture" or "three furnitures".
[10621030] |This is true even though the pieces of furniture comprising "furniture" could be counted.
[10621040] |Thus the distinction between mass and count nouns shouldn't be made in terms of what sorts of things the nouns ''refer'' to, but rather in terms of how the nouns ''present'' these entities.
[10621050] |===Collective nouns=== 
[10621060] |''Collective nouns'' are nouns that refer to ''groups'' consisting of more than one individual or entity, even when they are inflected for the [[Grammatical number|singular]].
[10621070] |Examples include "committee", "herd", and "school" (of herring).
[10621080] |These nouns have slightly different grammatical properties than other nouns.
[10621090] |For example, the [[noun phrases]] that they [[head (syntax)|head]] can serve as the [[subject (grammar)|subject]] of a [[collective predicate]], even when they are inflected for the singular.
[10621100] |A [[collective predicate]] is a predicate that normally can't take a singular subject.
[10621110] |An example of the latter is "talked to each other".
[10621120] |:Good: The '''boys''' talked to each other.
[10621130] |:Bad: *The '''boy''' talked to each other.
[10621140] |:Good: The '''committee''' talked to each other.
[10621150] |===Concrete nouns and abstract nouns=== 
[10621160] |''Concrete nouns'' refer to [[physical bodies]] which you use at least one of your [[sense]]s to observe.
[10621170] |For instance, "chair", "apple", or "Janet".
[10621180] |''Abstract nouns'' on the other hand refer to [[abstract object]]s, that is ideas or concepts, such as "justice" or "hate".
[10621190] |While this distinction is sometimes useful, the boundary between the two of them is not always clear; consider, for example, the noun "art".
[10621200] |In English, many abstract nouns are formed by adding noun-forming suffixes ("-ness", "-ity", "-tion") to adjectives or verbs.
[10621210] |Examples are "happiness", "circulation" and "serenity".
[10621220] |==Nouns and pronouns== 
[10621230] |[[Noun phrase]]s can typically be replaced by [[pronoun]]s, such as "he", "it", "which", and "those", in order to avoid repetition or explicit identification, or for other reasons.
[10621240] |For example, in the sentence "Janet thought that he was weird", the word "he" is a pronoun standing in place of the name of the person in question.
[10621250] |The English word ''one'' can replace parts of [[noun phrase]]s, and it sometimes stands in for a noun.
[10621260] |An example is given below: 
[10621270] |: John's car is newer than ''the one'' that Bill has.
[10621280] |But ''one'' can also stand in for bigger subparts of a noun phrase.
[10621290] |For example, in the following example, ''one'' can stand in for ''new car''.
[10621300] |: This new car is cheaper than ''that one''.
[10621310] |==Substantive as a word for "noun"== 
[10621320] |Starting with old [[Latin language|Latin]] grammars, many European languages use some form of the word ''substantive'' as the basic term for noun.
[10621330] |Nouns in the dictionaries of such languages are demarked by the abbreviation "s" instead of "n", which may be used for proper nouns instead.
[10621340] |This corresponds to those grammars in which nouns and adjectives phase into each other in more areas than, for example, the English term [[Predicative_adjective#Predicative_adjective|predicate adjective]] entails.
[10621350] |In French and Spanish, for example, adjectives frequently act as nouns referring to people who have the characteristics of the adjective.
[10621360] |An example in English is: 
[10621370] |: The ''poor'' you have always with you.
[10621380] |Similarly, an adjective can also be used for a whole group or organization of people: 
[10621390] |: The Socialist ''International''.
[10621400] |Hence, these words are substantives that are usually adjectives in English.
[10630010] |<article>Ontology (information science)</article>
[10630020] |In both [[computer science]] and [[information science]], an '''ontology''' is a formal representation of a set of concepts within a [[Domain of discourse|domain]] and the relationships between those concepts.
[10630030] |It is used to [[Reasoning|reason]] about the properties of that domain, and may be used to define the domain.
[10630040] |Ontologies are used in [[artificial intelligence]], the [[Semantic Web]], [[software engineering]], [[biomedical informatics]], [[library science]], and [[information architecture]] as a form of [[knowledge representation]] about the world or some part of it.
[10630050] |Common components of ontologies include:
[10630060] |* Individuals: instances or objects (the basic or "ground level" objects)
[10630070] |* [[Class]]es: [[set (computer science)|set]]s, collections, concepts or types of objects
[10630080] |* [[Attribute (computing)|Attribute]]s: properties, features, characteristics, or parameters that objects (and classes) can have
[10630090] |* [[Relation (mathematics)|Relations]]: ways that classes and objects can be related to one another
[10630100] |* Function terms: complex structures formed from certain relations that can be used in place of an individual term in a statement
[10630110] |* Restrictions: formally stated descriptions of what must be true in order for some assertion to be accepted as input
[10630120] |* Rules: statements in the form of an if-then (antecedent-consequent) sentence that describe the logical inferences that can be drawn from an assertion in a particular form
[10630130] |* Axioms: assertions (including rules) in a logical form that together comprise the overall theory that the ontology describes in its domain of application.
[10630140] |This definition differs from that of "axioms" in generative grammar and formal logic.
[10630150] |In these disciplines, axioms include only statements asserted as ''a priori'' knowledge.
[10630160] |As used here, "axioms" also include the theory derived from axiomatic statements.
[10630170] |* [[Event (philosophy)|Events]]: the changing of attributes or relations
[10630180] |Ontologies are commonly encoded using [[ontology language]]s.
[10630190] |== Elements == 
[10630200] |Contemporary ontologies share many structural similarities, regardless of the language in which they are expressed.
[10630210] |As mentioned above, most ontologies describe individuals (instances), classes (concepts), attributes, and relations.
[10630220] |In this section each of these components is discussed in turn.
[10630230] |=== Individuals === 
[10630240] |Individuals (instances) are the basic, "ground level" components of an ontology.
[10630250] |The individuals in an ontology may include concrete objects such as people, animals, tables, automobiles, molecules, and planets, as well as abstract individuals such as numbers and words.
[10630260] |Strictly speaking, an ontology need not include any individuals, but one of the general purposes of an ontology is to provide a means of classifying individuals, even if those individuals are not explicitly part of the ontology.
[10630270] |In formal extensional ontologies, only the utterances of words and numbers are considered individuals – the numbers and names themselves are classes.
[10630280] |In a 4D ontology, an individual is identified by its spatio-temporal extent.
[10630290] |Examples of formal extensional ontologies are [[ISO 15926]] and the model in development by the [[IDEAS Group]].
[10630300] |=== Classes === 
[10630310] |Classes &ndash; concepts that are also called ''type'', ''sort'', ''category'', and ''kind'' &ndash; are abstract groups, sets, or collections of objects.
[10630320] |They may contain individuals, other classes, or a combination of both.
[10630330] |Some examples of classes:
[10630340] |* ''Person'', the class of all people
[10630350] |* ''Vehicle'', the class of all vehicles
[10630360] |* ''Car'', the class of all cars
[10630370] |* ''Class'', representing the class of all classes
[10630380] |* ''Thing'', representing the class of all things
[10630390] |Ontologies vary on whether classes can contain other classes, whether a class can belong to itself, whether there is a universal class (that is, a class containing everything), etc.
[10630400] |Sometimes restrictions along these lines are made in order to avoid certain well-known [[paradox]]es.
[10630410] |The classes of an ontology may be [[extensional]] or [[intensional]] in nature.
[10630420] |A class is extensional if and only if it is characterized solely by its membership.
[10630430] |More precisely, a class C is extensional if and only if for any class C', if C' has exactly the same members as C, then C and C' are identical.
[10630440] |If a class does not satisfy this condition, then it is intensional.
[10630450] |While extensional classes are more well-behaved and well-understood mathematically, as well as less problematic philosophically, they do not permit the fine grained distinctions that ontologies often need to make.
[10630460] |For example, an ontology may want to distinguish between the class of all creatures with a kidney and the class of all creatures with a heart, even if these classes happen to have exactly the same members.
[10630470] |In the upper ontologies mentioned above, the classes are defined intensionally.
[10630480] |Intensionally defined classes usually have necessary conditions associated with membership in each class.
[10630490] |Some classes may also have sufficient conditions, and in those cases the combination of necessary and sufficient conditions make that class a fully ''defined'' class.
[10630500] |Importantly, a class can subsume or be subsumed by other classes; a class subsumed by another is called a ''subclass'' of the subsuming class.
[10630510] |For example, ''Vehicle'' subsumes ''Car'', since (necessarily) anything that is a member of the latter class is a member of the former.
[10630520] |The subsumption relation is used to create a hierarchy of classes, typically with a maximally general class like ''Thing'' at the top, and very specific classes like ''2002 Ford Explorer'' at the bottom.
[10630530] |The critically important consequence of the subsumption relation is the inheritance of properties from the parent (subsuming) class to the child (subsumed) class.
[10630540] |Thus, anything that is necessarily true of a parent class is also necessarily true of all of its subsumed child classes.
[10630550] |In some ontologies, a class is only allowed to have one parent (''single inheritance''), but in most ontologies, classes are allowed to have any number of parents (''multiple inheritance''), and in the latter case all necessary properties of each parent are inherited by the subsumed child class.
[10630560] |Thus a particular class of animal (''HouseCat'') may be a child of the class ''Cat'' and also a child of the class ''Pet''.
[10630570] |A partition is a set of related classes and associated rules that allow objects to be placed into the appropriate class.
[10630580] |For example, to the right is the partial diagram of an ontology that has a partition of the ''Car'' class into the classes ''2-Wheel Drive'' and ''4-Wheel Drive''.
[10630590] |The partition rule determines if a particular car is placed in the ''2-Wheel Drive'' or the ''4-Wheel Drive'' class.
[10630600] |If the partition rule(s) guarantee that a single ''Car'' cannot be in both classes, then the partition is called a disjoint partition.
[10630610] |If the partition rules ensure that every concrete object in the super-class is an instance of at least one of the partition classes, then the partition is called an exhaustive partition.
[10630620] |=== Attributes === 
[10630630] |Objects in the ontology can be described by assigning attributes to them.
[10630640] |Each attribute has at least a name and a value, and is used to store information that is specific to the object it is attached to.
[10630650] |For example the Ford Explorer object has attributes such as:
[10630660] |* ''Name'': Ford Explorer
[10630670] |* ''Number-of-doors'': 4
[10630680] |* ''Engine'': {4.0L, 4.6L}
[10630690] |* ''Transmission'': 6-speed
[10630700] |The value of an attribute can be a complex [[data type]]; in this example, the value of the attribute called ''Engine'' is a list of values, not just a single value.
[10630710] |If you did not define attributes for the concepts you would have either a [[taxonomy]] (if [[hyponym]] relationships exist between concepts) or a '''controlled vocabulary'''.
[10630720] |These are useful, but are not considered true ontologies.
[10630730] |===Relationships=== 
[10630740] |An important use of attributes is to describe the relationships (also known as relations) between objects in the ontology.
[10630750] |Typically a relation is an attribute whose value is another object in the ontology.
[10630760] |For example in the ontology that contains the Ford Explorer and the [[Ford Bronco]], the Ford Bronco object might have the following attribute:
[10630770] |* ''Successor'': Ford Explorer
[10630780] |This tells us that the Explorer is the model that replaced the Bronco.
[10630790] |Much of the power of ontologies comes from the ability to describe these relations.
[10630800] |Together, the set of relations describes the [[semantics]] of the domain.
[10630810] |The most important type of relation is the [[subsumption]] relation (''is-[[superclass]]-of'', the converse of ''[[is-a]]'', ''is-subtype-of'' or ''is-[[subclass]]-of'').
[10630820] |This defines which objects are members of classes of objects.
[10630830] |For example we have already seen that the Ford Explorer ''is-a'' 4-wheel drive, which in turn ''is-a'' Car:
[10630840] |The addition of the is-a relationships has created a hierarchical [[taxonomy]]; a tree-like structure (or, more generally, a [[partially ordered set]]) that clearly depicts how objects relate to one another.
[10630850] |In such a structure, each object is the 'child' of a 'parent class' (Some languages restrict the is-a relationship to one parent for all nodes, but many do not).
[10630860] |Another common type of relations is the [[meronymy]] relation, written as ''part-of'', that represents how objects combine together to form composite objects.
[10630870] |For example, if we extended our example ontology to include objects like Steering Wheel, we would say that "Steering Wheel is-part-of Ford Explorer" since a steering wheel is one of the components of a Ford Explorer.
[10630880] |If we introduce meronymy relationships to our ontology, we find that this simple and elegant tree structure quickly becomes complex and significantly more difficult to interpret manually.
[10630890] |It is not difficult to understand why; an entity that is described as 'part of' another entity might also be 'part of' a third entity.
[10630900] |Consequently, entities may have more than one parent.
[10630910] |The structure that emerges is known as a [[directed acyclic graph]] (DAG).
[10630920] |As well as the standard is-a and part-of relations, ontologies often include additional types of relation that further refine the semantics they model.
[10630930] |These relations are often domain-specific and are used to answer particular types of question.
[10630940] |For example in the domain of automobiles, we might define a ''made-in'' relationship which tells us where each car is built.
[10630950] |So the Ford Explorer is ''made-in'' [[Louisville, Kentucky|Louisville]].
[10630960] |The ontology may also know that Louisville is-in [[Kentucky]] and Kentucky is-a state of the [[United States|USA]].
[10630970] |Software using this ontology could now answer a question like "which cars are made in the U.S.?"
[10630980] |== Domain ontologies and upper ontologies == 
[10630990] |A domain ontology (or domain-specific ontology) models a specific domain, or part of the world.
[10631000] |It represents the particular meanings of terms as they apply to that domain.
[10631010] |For example the word ''[[card]]'' has many different meanings.
[10631020] |An ontology about the domain of [[poker]] would model the "[[playing card]]" meaning of the word, while an ontology about the domain of [[computer hardware]] would model the "[[punch card]]" and "[[video card]]" meanings.
[10631030] |An [[Upper ontology (computer science)|upper ontology]] (or foundation ontology) is a model of the common objects that are generally applicable across a wide range of domain ontologies.
[10631040] |It contains a [[core glossary]] in whose terms objects in a set of domains can be described.
[10631050] |There are several standardized upper ontologies available for use, including [[Dublin Core]], [[General Formal Ontology|GFO]], [[OpenCyc]]/[[ResearchCyc]], [[Suggested Upper Merged Ontology|SUMO]], and [http://www.loa-cnr.it/DOLCE.html DOLCE]l.
[10631060] |[[WordNet]], while considered an upper ontology by some, is not an ontology: it is a unique combination of a [[taxonomy]] and a controlled vocabulary (see above, under Attributes).
[10631070] |The [[Gellish]] ontology is an example of a combination of an upper and a domain ontology.
[10631080] |Since domain ontologies represent concepts in very specific and often eclectic ways, they are often incompatible.
[10631090] |As systems that rely on domain ontologies expand, they often need to merge domain ontologies into a more general representation.
[10631100] |This presents a challenge to the ontology designer.
[10631110] |Different ontologies in the same domain can also arise due to different perceptions of the domain based on cultural background, education, ideology, or because a different representation language was chosen.
[10631120] |At present, merging ontologies is a largely manual process and therefore time-consuming and expensive.
[10631130] |Using a foundation ontology to provide a common definition of core terms can make this process manageable.
[10631140] |There are studies on generalized techniques for merging ontologies, but this area of research is still largely theoretical.
[10631150] |== Ontology languages == 
[10631160] |An [[ontology language]] is a [[formal language]] used to encode the ontology.
[10631170] |There are a number of such languages for ontologies, both proprietary and standards-based: 
[10631180] |* [[Web Ontology Language|OWL]] is a language for making ontological statements, developed as a follow-on from [[Resource Description Framework|RDF]] and [[RDFS]], as well as earlier ontology language projects including [[Ontology Inference Layer|OIL]], [[DARPA Agent Markup Language|DAML]] and [[DAMLplusOIL|DAML+OIL]].
[10631190] |OWL is intended to be used over the [[World Wide Web]], and all its elements (classes, properties and individuals) are defined as RDF [[resource (Web)|resources]], and identified by [[Uniform Resource Identifier|URI]]s.
[10631200] |* [[KIF]] is a syntax for [[first-order logic]] that is based on [[S-expression]]s.
[10631210] |* The [[Cyc]] project has its own ontology language called [[CycL]], based on [[first-order predicate calculus]] with some higher-order extensions.
[10631220] |* [[Rule Interchange Format]] (RIF) and [[F-Logic]] combine ontologies and rules.
[10631230] |* The [[Gellish]] language includes rules for its own extension and thus integrates an ontology with an ontology language.
[10631240] |== Relation to the philosophical term == 
[10631250] |The term ''ontology'' has its origin in [[ontology|philosophy]], where it is the name of one fundamental branch of [[metaphysics]], concerned with analyzing various types or modes of ''existence'', often with special attention to the relations between particulars and universals, between intrinsic and extrinsic properties, and between essence and existence.
[10631260] |According to [[Tom Gruber]] at [[Stanford University]], the meaning of ''ontology'' in the context of computer science is “a description of the concepts and relationships that can exist for an [[Software agent|agent]] or a community of agents.”
[10631270] |He goes on to specify that an ontology is generally written, “as a set of definitions of formal vocabulary.”
[10631280] |What ontology has in common in both computer science and philosophy is the representation of entities, ideas, and events, along with their properties and relations, according to a system of categories.
[10631290] |In both fields, one finds considerable work on problems of ontological relativity (e.g. [[Quine]] and [[Kripke]] in philosophy, [[John F. Sowa|Sowa]] and [[Nicola Guarino|Guarino]] in computer science (Top-level ontological categories.
[10631310] |By: Sowa, John F.
[10631320] |In International Journal of Human-Computer Studies, v. 43 (November/December 1995) p. 669-85.), and debates concerning whether a normative ontology is viable (e.g. debates over [[foundationalism]] in philosophy, debates over the [[Cyc]] project in AI).
[10631330] |Differences between the two are largely matters of focus.
[10631340] |Philosophers are less concerned with establishing fixed, controlled vocabularies than are researchers in computer science, while computer scientists are less involved in discussions of first principles (such as debating whether there are such things as fixed essences, or whether entities must be ontologically more primary than processes).
[10631350] |During the second half of the 20th century, philosophers extensively debated the possible methods or approaches to building ontologies, without actually ''building'' any very elaborate ontologies themselves.
[10631360] |By contrast, computer scientists were building some large and robust ontologies (such as [[WordNet]] and [[Cyc]]) with comparatively little debate over ''how'' they were built.
[10631370] |In the early years of the 21st century, the interdisciplinary project of [[cognitive science]] has been bringing the two circles of scholars closer together.
[10631380] |For example, there is talk of a "computational turn in philosophy" which includes philosophers analyzing the formal ontologies of computer science (sometimes even working directly with the software), while researchers in computer science have been making more references to those philosophers who work on ontology (sometimes with direct consequences for their methods).
[10631390] |Still, many scholars in both fields are uninvolved in this trend of cognitive science, and continue to work independently of one another, pursuing separately their different concerns.
[10631400] |==Resources== 
[10631410] |===Examples of published ontologies === 
[10631420] |* [[Dublin Core]], a simple ontology for documents and publishing.
[10631430] |* [[Cyc]] for formal representation of the universe of discourse.
[10631440] |* [[Suggested Upper Merged Ontology]], which is a formal upper ontology
[10631450] |* [http://www.ifomis.org/bfo/ Basic Formal Ontology (BFO)], a formal upper ontology designed to support scientific research
[10631460] |* [[Gellish English dictionary]], an ontology that includes a dictionary and taxonomy that includes an upper ontology and a lower ontology that focusses on industrial and business applications in engineering, technology and procurement.
[10631470] |* [http://www.fb10.uni-bremen.de/anglistik/langpro/webspace/jb/gum/index.htm Generalized Upper Model], a linguistically-motivated ontology for mediating between clients systems and natural language technology
[10631480] |* [[WordNet]] Lexical reference system
[10631490] |* [[OBO Foundry]]: a suite of interoperable reference ontologies in biomedicine.
[10631500] |* The [[Ontology for Biomedical Investigations]] is an open access, integrated ontology for the description of biological and clinical investigations.
[10631510] |* [http://colab.cim3.net/file/work/SICoP/ontac/COSMO/ COSMO]: An OWL ontology that is a merger of the basic elements of the OpenCyc and SUMO ontologies, with additional elements.
[10631520] |* [[Gene Ontology]] for [[genomics]]
[10631530] |* [http://pir.georgetown.edu/pro/ PRO], the Protein Ontology of the Protein Information Resource, Georgetown University.
[10631540] |* [http://proteinontology.info/ Protein Ontology] for [[proteomics]]
[10631550] |* [http://sig.biostr.washington.edu/projects/fm/AboutFM.html Foundational Model of Anatomy] for human anatomy 
[10631560] |* [[SBO]], the Systems Biology Ontology, for computational models in biology
[10631570] |* [http://www.plantontology.org/ Plant Ontology] for plant structures and growth/development stages, etc.
[10631580] |* [[CIDOC|CIDOC CRM]] (Conceptual Reference Model) - an ontology for "[[cultural heritage]] information".
[10631590] |* [http://www.linguistics-ontology.org/gold.html GOLD ] ('''G'''eneral '''O'''ntology for [[descriptive linguistics|'''L'''inguistic '''D'''escription ]])
[10631600] |* [http://www.landcglobal.com/pages/linkbase.php Linkbase] A formal representation of the biomedical domain, founded upon [http://www.ifomis.org/bfo/ Basic Formal Ontology (BFO)].
[10631610] |* [http://www.loa-cnr.it/Ontologies.html Foundational, Core and Linguistic Ontologies]
[10631620] |* [[ThoughtTreasure]] ontology
[10631630] |* [[LPL]] Lawson Pattern Language
[10631640] |* [[TIME-ITEM]] Topics for Indexing Medical Education
[10631650] |* [[POPE]] Purdue Ontology for Pharmaceutical Engineering
[10631660] |* [[IDEAS Group]] A formal ontology for enterprise architecture being developed by the Australian, Canadian, UK and U.S. Defence Depts. [http://www.ideasgroup.org The IDEAS Group Website]
[10631670] |* [http://www.eden-study.org/articles/2007/problems-ontology-programs_ao.pdf program abstraction taxonomy]
[10631680] |* [http://sweet.jpl.nasa.gov/ SWEET] Semantic Web for Earth and Environmental Terminology
[10631690] |* [http://www.cellcycleontology.org/ CCO] The Cell-Cycle Ontology is an application ontology that represents the cell cycle
[10631700] |===Ontology libraries=== 
[10631710] |The development of ontologies for the Web has led to the apparition of services providing lists or directories of ontologies with search facility.
[10631720] |Such directories have been called ontology libraries.
[10631730] |The following are static libraries of human-selected ontologies.
[10631740] |* The [http://www.daml.org/ontologies/ DAML Ontology Library] maintains a legacy of ontologies in DAML.
[10631750] |* The [http://protegewiki.stanford.edu/index.php/Protege_Ontology_Library Protege Ontology Library] contains a set of owl, Frame-based and other format ontologies.
[10631760] |* [http://www.schemaweb.info/ SchemaWeb] is a directory of RDF schemata expressed in RDFS, OWL and DAML+OIL.
[10631770] |The following are both directories and search engines.
[10631780] |They include crawlers searching the Web for well-formed ontologies.
[10631790] |* [[Swoogle]] is a directory and search engine for all RDF resources available on the Web, including ontologies.
[10631800] |* The [http://olp.dfki.de/OntoSelect/ OntoSelect] Ontology Library offers similar services for RDF/S, DAML and OWL ontologies.
[10631810] |* [http://www.w3.org/2004/ontaria/ Ontaria] is a "searchable and browsable directory of semantic web data", with a focus on RDF vocabularies with OWL ontologies.
[10631820] |* The [http://www.obofoundry.org/ OBO Foundry / Bioportal]is a suite of interoperable reference ontologies in biology and biomedicine.
[10640010] |<article>OpenOffice.org</article>
[10640020] |'''OpenOffice.org''' ('''OO.o''' or '''OOo''') is a [[cross-platform]] [[office suite|office application suite]] available for a number of different computer [[operating system]]s.
[10640030] |It supports the ISO standard '''[[OpenDocument]] Format (ODF)''' for data interchange as its default [[file format]], as well as [[Microsoft Office]] '97–2003 formats, [[Microsoft Office]] '2007 format (in version 3), among many others.
[10640040] |OpenOffice.org was originally derived from [[StarOffice]], an office suite developed by [[StarDivision]] and acquired by [[Sun Microsystems]] in August 1999.
[10640050] |The [[source code]] of the suite was released in July 2000 with the aim of reducing the dominant [[market share]] of [[Microsoft Office]] by providing a free, open and high-quality alternative; later versions of StarOffice are based upon OpenOffice.org with additional proprietary components.
[10640060] |OpenOffice.org is [[free software]], available under the [[GNU Lesser General Public License]] (LGPL).
[10640070] |The project and software are informally referred to as ''OpenOffice'', but this term is a [[trademark]] held by another party, requiring the project to adopt ''OpenOffice.org'' as its formal name.
[10640080] |== History==
[10640090] |Originally developed as the [[proprietary software]] application suite StarOffice by the German company [[StarDivision]], the code was purchased in 1999 by Sun Microsystems.
[10640100] |In August 1999 version 5.2 of StarOffice was made available free of charge.
[10640110] |On [[July 19]], [[2000]], Sun Microsystems announced that it was making the source code of StarOffice available for download under both the LGPL and the [[Sun Industry Standards Source License]] (SISSL) with the intention of building an open source development community around the software.
[10640120] |The new project was known as OpenOffice.org, and its website went live on [[October 13]], [[2000]].
[10640130] |Work on version 2.0 began in early 2003 with the following goals: better interoperability with Microsoft Office; better performance, with improved speed and lower memory usage; greater [[Scripting language|scripting]] capabilities; better integration, particularly with [[GNOME]]; an easier-to-find and use database front-end for creating reports, forms and queries; a new built-in [[SQL]] database; and improved [[usability]].
[10640140] |A [[beta version]] was released on [[March 4]], [[2005]].
[10640150] |On [[September 2]], [[2005]] Sun announced that it was retiring the SISSL.
[10640160] |As a consequence, the OpenOffice.org Community Council announced that it would no longer [[dual license]] the office suite, and future versions would use only the LGPL.
[10640170] |On [[October 20]], [[2005]], OpenOffice.org 2.0 was formally released to the public.
[10640180] |Eight weeks after the release of Version 2.0, an update, OpenOffice.org 2.0.1, was released.
[10640190] |It fixed minor bugs and introduced new features.
[10640200] |As of the 2.0.3 release, OpenOffice.org changed its release cycle from 18-months to releasing updates, feature enhancements and bug fixes every three months.
[10640210] |Currently, new versions including new features are released every six months (so-called "feature releases") alternating with so-called "bug fix releases" which are being released between two feature releases (Every 3 months).
[10640220] |=== StarOffice === 
[10640230] |Sun subsidizes the development of OpenOffice.org in order to use it as a base for its commercial [[proprietary software|proprietary]] StarOffice application software.
[10640240] |Releases of StarOffice since version 6.0 have been based on the OpenOffice.org source code, with some additional proprietary components, including: 
[10640250] |* Additional bundled fonts (especially [[CJK|East Asian language]] fonts).
[10640260] |* [[Adabas D]] database.
[10640270] |* Additional document [[Template (word processing)|templates]].
[10640280] |* [[Clip art]].
[10640290] |* Sorting functionality for Asian versions.
[10640300] |* Additional file filters.
[10640310] |* Migration assessment tool (Enterprise Edition).
[10640320] |* Macro migration tool (Enterprise Edition).
[10640330] |* Configuration management tool (Enterprise Edition).
[10640340] |OpenOffice.org, therefore, inherited many features from the original StarOffice upon which it was based including the [[OpenOffice.org XML]] file format which it retained until version 2, when it was replaced by the ISO standard [[OpenDocument]] Format (ODF).
[10640350] |== Features == 
[10640360] |According to its [[mission statement]], the OpenOffice.org project aims "''To create, as a community, the leading international office suite that will run on all major platforms and provide access to all functionality and data through open-component based APIs and an XML-based file format.''"
[10640370] |OpenOffice.org aims to compete with Microsoft Office and emulate its look and feel where suitable.
[10640380] |It can read and write most of the [[file formats]] found in Microsoft Office, and many other applications; an essential feature of the suite for many users.
[10640390] |OpenOffice.org has been found to be able to open files of older versions of Microsoft Office and damaged files that newer versions of Microsoft Office itself cannot open.
[10640400] |However, it cannot open older Word for Macintosh (MCW) files.
[10640410] |=== Platforms === 
[10640420] |Platforms for which OO.o is available include [[Microsoft Windows]], [[Linux]], [[Solaris Operating System|Solaris]], [[BSD]], [[OpenVMS]], [[OS/2]] and [[IRIX]].
[10640430] |The current primary development platforms are Microsoft Windows, Linux and Solaris.
[10640440] |A port for [[Mac OS X]] exists for OS X machines which have the [[X Window System]] component installed.
[10640450] |A port to OS X's native [[Aqua (user interface)|Aqua user interface]] is in progress, and is scheduled for completion for the 3.0 milestone.
[10640460] |[[NeoOffice]] is an independent [[Fork (software development)|fork]] of OpenOffice, specially adapted for Mac OS X.
[10640470] |=== Version compatibility === 
[10640480] |*Windows 95: up to v1.1.5
[10640490] |*Windows 98-Vista: up to v2.4, development releases of v3.0
[10640500] |*Mac OS 10.2: up to v1.1.2
[10640510] |*Mac OS 10.3: up to v2.1
[10640520] |*Mac OS 10.4-10.5: up to v2.4, development releases of v3.0 ([[Apple-Intel architecture|intel]] only)
[10640530] |*OS/2 and eComStation: up to v2.0.4
[10640540] |=== Components === 
[10640550] |OpenOffice.org is a collection of applications that work together closely to provide the features expected from a modern office suite.
[10640560] |Many of the components are designed to mirror those available in Microsoft Office.
[10640570] |The components available include: 
[10640580] |*[[QuickStart]]er
[10640590] |:A small program for Windows and Linux that runs when the computer starts for the first time.
[10640600] |It loads the core files and libraries for OpenOffice.org during computer startup and allows the suite applications to start more quickly when selected later.
[10640610] |The amount of time it takes to open OpenOffice.org applications was a common complaint in version 1.0 of the suite.
[10640620] |Substantial improvements were made in this area for version 2.2.
[10640630] |*The [[Macro (computer science)|macro]] recorder
[10640640] |:Is used to record user actions and replay them later to help with automating tasks, using [[OpenOffice.org Basic]] (see [[OpenOffice.org#OpenOffice.org Basic|below]]).
[10640650] |It is not possible to download these components individually on Windows, though they can be installed separately.
[10640660] |Most Linux distributions break the components into individual packages which may be downloaded and installed separately.
[10640670] |=== OpenOffice.org Basic === 
[10640680] |OpenOffice.org Basic is a programming language similar to Microsoft [[Visual Basic for Applications]] (VBA) based on [[StarOffice Basic]].
[10640690] |In addition to the macros, the upcoming Novell edition of OpenOffice.org 2.0 supports running Microsoft VBA macros, a feature expected to be incorporated into the mainstream version soon.
[10640700] |OpenOffice.org Basic is available in the Writer and Calc applications.
[10640710] |It is written in functions called subroutines or macros, with each macro performing a different task, such as counting the words in a paragraph.
[10640720] |OpenOffice.org Basic is especially useful in doing repetitive tasks that have not been integrated in the program.
[10640730] |As the OpenOffice.org database, called "Base", uses documents created under the Writer application for reports and forms, one could say that Base can also be programmed with OpenOffice.org Basic.
[10640740] |== File formats == 
[10640750] |OpenOffice.org pioneered the ISO/IEC standard [[OpenDocument]] file formats (ODF), which it uses natively, by default.
[10640760] |It also supports reading (and in some cases writing) a large number of legacy proprietary file formats (e.g.: [[WordPerfect]] through libwpd, [[StarOffice]], [[Lotus software]], [[Microsoft Works|MS Works]] through libwps, [[Rich Text Format]]), most notably including [[Microsoft Office]] formats after which the OpenDocument specification was "approved for release as an ISO and IEC International Standard" under the name ISO/IEC 26300:2006..
[10640770] |=== Microsoft Office interoperability === 
[10640780] |In response to Microsoft's recent movement towards using the [[Office Open XML]] format in [[Microsoft Office 2007]], [[Novell]] has released an [[Office Open XML]] converter for OOo under a liberal [[BSD license]] (along with [[GNU GPL]] and [[LGPL]] licensed libraries), that will be submitted for inclusion into the OpenOffice.org project.
[10640790] |This allows OOo to read and write Microsoft OpenXML-formatted word processing documents (.docx) in OpenOffice.org. 
[10640800] |Currently it works only with the latest Novell edition of OpenOffice.org.
[10640810] |[[Sun Microsystems]] has developed an ODF plugin for Microsoft Office which enables users of Microsoft Office Word, Excel and PowerPoint to read and write ODF documents.
[10640820] |The plugin currently works with Microsoft Office 2003, Microsoft Office XP and Microsoft Office 2000.
[10640830] |Support for Microsoft Office 2007 is only available in combination with Microsoft Office 2007 SP1.
[10640840] |Several software companies (including Microsoft and Novell) are working on an add-in for Microsoft Office that allows reading and writing ODF files.
[10640850] |Currently it works only for Microsoft Word 2007 / XP / 2003.
[10640860] |Microsoft provides a compatibility pack to read and write Office Open XML files with Office 2000, XP and 2003.
[10640870] |The compatibility pack can also be used as a stand-alone converter with Microsoft Office 97.
[10640880] |This might be helpful to convert older Microsoft Office files via Office Open XML to ODF if a direct conversion doesn't work as expected.
[10640890] |The Office compatibility pack however does not install for Office 2000 or Office XP on [[Windows 9x]].
[10640900] |Note that some office applications built with Microsoft components may refuse to import OpenOffice data.
[10640910] |[[The Sage Group]]'s Simply Accounting, for example, can import Excel's .xls files, but refuses to accept OpenOffice.org-generated .xls files for the reason that the OOo .xls files are not "genuine Microsoft" .xls files.
[10640920] |== Development == 
[10640930] |=== Overview === 
[10640940] |The OpenOffice.org [[Application Programming Interface|API]] is based on a component technology known as [[Universal Network Objects]] (UNO).
[10640950] |It consists of a wide range of interfaces defined in a [[CORBA]]-like [[interface description language]].
[10640960] |The [[document file format]] used is based on [[XML]] and several export and import filters.
[10640970] |All external formats read by OpenOffice.org are converted back and forth from an internal XML representation.
[10640980] |By using [[data compression|compression]] when saving [[XML]] to disk, files are generally smaller than the equivalent binary Microsoft Office documents.
[10640990] |The native file format for storing documents in version 1.0 was used as the basis of the [[OASIS (organization)|OASIS]] OpenDocument file format standard, which has become the default file format in version 2.0.
[10641000] |Development versions of the suite are released every few weeks on the developer zone of the OpenOffice.org website.
[10641010] |The releases are meant for those who wish to test new features or are simply curious about forthcoming changes; they are not suitable for production use.
[10641020] |=== Native desktop integration === 
[10641030] |OpenOffice.org 1.0 was criticized for not having the [[look and feel]] of applications developed natively for the platforms on which it runs.
[10641040] |Starting with version 2.0, OpenOffice.org uses native [[widget toolkit]], icons, and font-rendering libraries across a variety of platforms, to better match native applications and provide a smoother experience for the user.
[10641050] |There are projects underway to further improve this integration on both [[GNOME]] and [[KDE]].
[10641060] |This issue has been particularly pronounced on Mac OS X, whose standard user interface looks noticeably different from either Windows or [[X11]]-based desktop environments and requires the use of programming toolkits unfamiliar to most OpenOffice.org developers.
[10641070] |There are two implementations of OpenOffice.org available for OS X:
[10641080] |;OpenOffice.org Mac OS X (X11):
[10641090] |This official implementation requires the installation of [[X11.app]] or [[XDarwin]], and is a close port of the well-tested Unix version.
[10641100] |It is functionally equivalent to the Unix version, and its user interface resembles the [[look and feel]] of that version; for example, the application uses its own [[menu bar]] instead of the OS X menu at the top of the screen.
[10641110] |It also requires system fonts to be converted to X11 format for OpenOffice.org to use them (which can be done during application installation).
[10641120] |;OpenOffice.org Aqua:
[10641130] |After a first step (completed) using [[Carbon (API)|Carbon]], OpenOffice.org Aqua switched to [[Cocoa (API)|Cocoa]] technology, and an [[Aqua (GUI)|Aqua]] version (based on [[Cocoa (API)|Cocoa]]) is also being developed under the aegis of OpenOffice.org, with a Beta version currently available.
[10641140] |Sun Microsystems is collaborating with OOo to further development of the Aqua version of OpenOffice.org for Mac.
[10641150] |=== Future === 
[10641160] |Currently, a developed preview of OpenOffice.org 3 (OOo-dev 3.0) is available for download.
[10641170] |Among the planned features for OOo 3.0, set to be released by September 2008 , are: 
[10641180] |* Personal Information Manager ([[Personal Information Manager|PIM]]), probably based on [[Mozilla Thunderbird|Thunderbird]]/[[Lightning (software)|Lightning]]
[10641190] |* PDF import into Draw (to maintain correct layout of the original PDF)
[10641200] |* [[OOXML]] document support for opening documents created in [[Office 2007]]
[10641210] |* Support for [[Mac OS X]] [[Aqua (user interface)|Aqua]] platform
[10641220] |* Extensions, to add third party functionality.
[10641230] |* Presenter screen in Impress with multi-screen support
[10641240] |=== Other projects === 
[10641250] |A number of products are [http://wiki.services.openoffice.org/wiki/DerivedWorks derived from OpenOffice.org].
[10641260] |Among the more well-known ones are Sun StarOffice and NeoOffice.
[10641270] |The OpenOffice.org site also lists a large variety of [http://wiki.services.openoffice.org/wiki/OpenOffice.org_Solutions complementary products] including groupware solutions.
[10641280] |==== NeoOffice ==== 
[10641290] |[[NeoOffice]] is an independent [[porting|port]] that integrates with [[Mac OS X|OS X]]’s [[Aqua (GUI)|Aqua]] user interface using [[Java platform|Java]], [[Carbon (API)|Carbon]] and (increasingly) [[Cocoa (API)|Cocoa]] toolkits.
[10641300] |NeoOffice adheres fairly closely to OS X UI standards (for example, using native pull-down menus), and has direct access to OS X’s installed fonts and printers.
[10641310] |Its releases lag behind the official OpenOffice.org X11 releases, due to its small development team and the concurrent development of the technology used to port the user interface.
[10641320] |Other projects run alongside the main OpenOffice.org project and are easier to contribute to.
[10641330] |These include documentation, [[internationalisation and localisation]] and the API.
[10641340] |==== OpenGroupware.org ==== 
[10641350] |[[OpenGroupware.org]] is a set of extension programs to allow the sharing of OpenOffice.org documents, calendars, address books, [[e-mail]]s, [[instant messenger|instant messaging]] and blackboards, and provide access to other [[collaborative software|groupware]] applications.
[10641360] |There is also an effort to create and share assorted document templates and other useful additions at OOExtras.
[10641370] |A set of [[Perl]] extensions is available through the [[CPAN]] in order to allow OpenOffice.org document processing by external programs.
[10641380] |These libraries do not use the OpenOffice.org API.
[10641390] |They directly read or write the OpenOffice.org files using Perl standard file [[codec|compression/decompression]], XML access and [[UTF-8]] encoding modules.
[10641400] |==== Portable ==== 
[10641410] |A distribution of OpenOffice.org called OpenOffice.org Portable is designed to run the suite from a [[USB flash drive]].
[10641420] |==== OxygenOffice Professional ==== 
[10641430] |An enhancement of OpenOffice.org, providing: Current Version: 2.4
[10641440] |* Possibility to run Visual Basic for Application (VBA) macros in Calc (for testing)
[10641450] |* Improved Calc HTML export
[10641460] |* Enhanced Access support for Base
[10641470] |* Security fixes
[10641480] |* Enhanced performance
[10641490] |* Enhanced color-palette
[10641500] |* Enhanced help menu, additional User’s Manual, and extended tips for beginners
[10641510] |Optionally it provides, free for personal and professional use: 
[10641520] |* More than 3,200 graphics, both clip art and photos.
[10641530] |* Several templates and sample documents
[10641540] |* Over 90 free fonts.
[10641550] |* Additional tools like OOoWikipedia
[10641560] |====Extensions==== 
[10641570] |Since version 2.0.4, OpenOffice.org has supported extensions in a similar manner to [[Mozilla Firefox]].
[10641580] |Extensions make it easy to add new functionality to an existing OpenOffice.org installation.
[10641590] |The [http://extensions.services.openoffice.org/most_pop_ext OpenOffice.org Extension Repository] lists already more than 80 extensions.
[10641600] |Developers can easily build new extensions for OpenOffice.org, for example by using the [http://wiki.services.openoffice.org/wiki/OpenOffice_NetBeans_Integration OpenOffice.org API Plugin for NetBeans].
[10641610] |==== The OpenOffice.org Bibliographic Project ==== 
[10641620] |This aims to incorporate a powerful [[reference management software]] into the suite.
[10641630] |The new major addition is slated for inclusion with the standard OpenOffice.org release on late-2007 to mid-2008, or possibly later depending upon the availability of programmers.
[10641640] |=== Security === 
[10641650] |OpenOffice.org includes a security team, and as of June 2008 the security organization [[Secunia]] reports no known unpatched security flaws for the software.
[10641660] |[[Kaspersky Lab]] has shown a [[proof of concept]] virus for OpenOffice.org. 
[10641670] |This shows OOo viruses are possible, but there is no known virus "in the wild".
[10641680] |In a private meeting of the French Ministry of Defense, macro-related security issues were raised.
[10641690] |OpenOffice.org developers have responded and noted that the supposed vulnerability had not been announced through "well defined procedures" for disclosure and that the ministry had revealed nothing specific.
[10641700] |However, the developers have been in talks with the researcher concerning the supposed vulnerability.
[10641710] |As with Microsoft Word, documents created in OpenOffice can contain [[metadata]] which may include a complete history of what was changed, when and by whom.
[10641720] |== Ownership == 
[10641730] |The project and software are informally referred to as ''OpenOffice'', but project organizers report that this term is a [[trademark]] held by another party, requiring them to adopt ''OpenOffice.org'' as its formal name.
[10641740] |(Due to a similar trademark issue, the [[Brazilian Portuguese]] version of the suite is distributed under the name ''BrOffice.org''.)
[10641750] |Development is managed by staff members of StarOffice.
[10641760] |Some delay and difficulty in implementing external contributions to the core codebase (even those from the project's corporate sponsors) has been noted.
[10641770] |Currently, there are [http://wiki.services.openoffice.org/wiki/DerivedWorks several derived and/or proprietary works based on OOo], with some of them being: 
[10641780] |* Sun Microsystem's [[StarOffice]], with various complementary add-ons.
[10641790] |* IBM's [[Lotus Symphony]], with a new interface based on [[Eclipse (software)|Eclipse]] (based on OO.o 1.x).
[10641800] |* OpenOffice.org Novell edition, integrated with [[Novell Evolution|Evolution]] and with a [[OOXML]] filter.
[10641810] |* Beijing [[Redflag]] Chinese 2000's [[RedOffice]], fully localized in Chinese characters.
[10641820] |* Planamesa's [[NeoOffice]] for [[Mac OS X]] with Aqua support via Java.
[10641830] |In [[May 23]], [[2007]], the OpenOffice.org community and Redflag Chinese 2000 Software Co, Ltd. announced a joint development effort focused on integrating the new features that have been added in the RedOffice localization of OpenOffice.org, as well as quality assurance and work on the core applications.
[10641840] |Additionally, Redflag Chinese 2000 made public its commitment to the global OO.o community stating it would "strengthen its support of the development of the world's leading free and open source productivity suite", adding around 50 engineers (that have been working on RedOffice since 2006) to the project.
[10641850] |In [[September 10]], [[2007]], the OO.o community announced that [[IBM]] had joined to support the development of OpenOffice.org. 
[10641860] |"IBM will be making initial code contributions that it has been developing as part of its Lotus Notes product, including accessibility enhancements, and will be making ongoing contributions to the feature richness and code quality of OpenOffice.org. 
[10641870] |Besides working with the community on the free productivity suite's software, IBM will also leverage OpenOffice.org technology in its products" as has been seen with [[Lotus Symphony]].
[10641880] |Sean Poulley, the vice president of business and strategy in IBM's [[Lotus Software]] division said that IBM plans to take a leadership role in the OpenOffice.org community together with other companies such as Sun Microsystems.
[10641890] |IBM will work within the leadership structure that exists.
[10641900] |As of [[October 02]], [[2007]], [[Michael Meeks]] announced (and generated an answer by Sun's [[Simon Phipps]] and Mathias Bauer) a derived OpenOffice.org work, under the wing of his employer [[Novell]], with the purpose of including new features and fixes that do not get easily integrated in the OOo-build up-stream core.
[10641910] |The work is called Go-OO (http://go-oo.org/) a name under which alternative OO.o software has been available for five years.
[10641920] |The new features are shared with Novell's edition of OOo and include: 
[10641930] |* [[Visual Basic for Applications|VBA]] macros support.
[10641940] |* Faster start up time.
[10641950] |* "A [[Linear programming|linear optimization]] solver to optimize a cell value based on arbitrary constraints built into Calc".
[10641960] |* Multimedia content supports into documents, using the [[gstreamer]] multimedia framework.
[10641970] |* Support for [[Microsoft Works]] formats, [[WordPerfect]] graphics (WPG format) and T602 files imports.
[10641980] |[http://wiki.services.openoffice.org/wiki/Contributing_Patches Details about the patch handling including metrics] can be found on the OpenOffice.org site.
[10641990] |== Reactions == 
[10642000] |Federal Computer Week issue listed OpenOffice.org as one of the "5 stars of open-source products."
[10642010] |In contrast, OpenOffice.org was used in [[2005]] by ''[[The Guardian]]'' newspaper to illustrate what it claims are the limitations of open-source software, although the article does finish by stating that the software may be better than MS Word for books.
[10642020] |=== Market share === 
[10642030] |It is extremely difficult to estimate the market share of OpenOffice.org due to the fact that OpenOffice.org can be freely distributed via download sites including mirrors, peer-to-peer networks, CDs, Linux distros, etc.
[10642040] |Nevertheless, the OpenOffice.org tries to capture key adoption data in a market share analysis 
[10642050] |Although Microsoft Office retains 95% of the general market as measured by revenue, OpenOffice.org and StarOffice have secured 14% of the large enterprise market as of 2004 and 19% of the small to midsize business market in 2005.
[10642060] |The OpenOffice.org web site reports more than 98 million downloads.
[10642070] |Other large scale users of OpenOffice.org include [[Ministry of Defence (Singapore)|Singapore’s Ministry of Defence]], and [[Bristol]] City Council in the UK.
[10642080] |In [[France]], OpenOffice.org has attracted the attention of both local and national government administrations who wish to rationalize their software procurement, as well as have stable, standard file formats for archival purposes.
[10642090] |It is now the official office suite for the [[French Gendarmerie]].
[10642100] |Several government organizations in India, such as [[IIT Bombay]] (a renowned technical institute), the [[Supreme Court of India]], the [[Allahabad High Court]], which use Linux, completely rely on OpenOffice.org for their administration.
[10642110] |On [[October 4]], [[2005]], Sun and [[Google]] announced a strategic partnership.
[10642120] |As part of this agreement, Sun will add a Google search bar to OpenOffice.org, Sun and Google will engage in joint marketing activities as well as joint research and development, and Google will help distribute OpenOffice.org. 
[10642130] |Google is currently distributing StarOffice as part of the [[Google Pack]].
[10642140] |Besides StarOffice, there are still a number of OpenOffice.org derived commercial products.
[10642150] |Most of them are developed under [[SISSL]] license (which is valid up to OpenOffice.org 2.0 Beta 2).
[10642160] |In general they are targeted at local or niche market, with proprietary add-ons such as speech recognition module, automatic database connection, or better [[CJK]] support.
[10642170] |In July 2007 Everex, a division of First International Computer and the 9th largest PC supplier in the U.S., began shipping systems preloaded with OpenOffice.org 2.2 into Wal-Mart and Sam's Club throughout North America.
[10642180] |In September 2007 IBM announced that it would supply and support OpenOffice.org branded as [[Lotus Symphony]], and integrated into Lotus Notes.
[10642190] |IBM also announced 35 developers would be assigned to work on OpenOffice.org, and that it would join the OpenOffice.org foundation.
[10642200] |Commentators noted parallels between IBM's 2000 support of Linux and this announcement.
[10642210] |=== Java controversy === 
[10642220] |In the past OpenOffice.org was criticized for an increasing dependency on the [[Java Runtime Environment]] which was not [[free software]].
[10642230] |That Sun Microsystems is both the creator of Java and the chief supporter of OpenOffice.org drew accusations of ulterior motives for this technology choice.
[10642240] |Version 1 depended on the [[Java Runtime Environment]] (JRE) being present on the user’s computer for some auxiliary functions, but version 2 increased the suite’s use of Java requiring a JRE.
[10642250] |In response, [[Red Hat]] increased their efforts to improve [[free Java implementations]].
[10642260] |Red Hat’s [[Fedora (Linux distribution)|Fedora Core]] 4 (released on [[June 13]], [[2005]]) included a beta version of OpenOffice.org version 2, running on [[GNU Compiler for Java|GCJ]] and [[GNU Classpath]].
[10642270] |The issue of OpenOffice.org’s use of Java came to the fore in May 2005, when [[Richard Stallman]] appeared to call for a [[fork (software)|fork]] of the application in a posting on the [[Free Software Foundation]] website.
[10642280] |This led to discussions within the OpenOffice.org community and between Sun staff and developers involved in [[GNU Classpath]], a free replacement for Sun’s Java implementation.
[10642290] |Later that year, the OpenOffice.org developers also placed into their development guidelines various requirements to ensure that future versions of OpenOffice.org could be run on free implementations of Java and fixed the issues which previously prevented OpenOffice.org 2.0 from using free software Java implementations.
[10642300] |On [[November 13]], [[2006]], Sun committed to releasing Java under the [[GNU General Public License]] in the near future.
[10642310] |This process would end OpenOffice.org's dependence on [[non-free]] software.
[10642320] |Between November 2006 and May 2007, Sun Microsystems made available most of their Java technologies under the GNU General Public License, in compliance with the specifications of the Java Community Process, thus making almost all of Sun's Java also free software.
[10642330] |The following areas of OpenOffice.org 2.0 depend on the JRE being present: 
[10642340] |* The [[media player (application software)|media player]] on Unix-like systems
[10642350] |* All document wizards in Writer
[10642360] |* Accessibility tools
[10642370] |* Report Autopilot
[10642380] |* [[JDBC]] driver support
[10642390] |* [[Hsqldb|HSQL]] database engine, which is used in OpenOffice.org Base
[10642400] |* [[XSLT]] filters
[10642410] |* [[BeanShell]], the [[NetBeans]] scripting language and the Java UNO bridge
[10642420] |* Export filters to the Aportis.doc (.pdb) format for the [[Palm OS]] or [[Pocket Word]] (.psw) format for the [[Pocket PC]]
[10642430] |* Export filter to [[LaTeX]]
[10642440] |* Export filter to [[MediaWiki]]'s [[wikitext]]
[10642450] |A common point of confusion is that [[mail merge]] to generate emails requires the Java API JavaMail in [[StarOffice]]; however, as of version 2.0.1, OpenOffice.org uses a [[Python (programming language)|Python]]-component instead.
[10642460] |=== Complementary software === 
[10642470] |OpenOffice.org provides replacement for MS Office's [[Microsoft Word]], [[Microsoft Excel]], [[Microsoft PowerPoint]], [[Microsoft Access]], [[Equation Editor|Microsoft Equation Editor]] and [[Microsoft Visio]].
[10642480] |But to level the equivalent functionality from the rest of MS Office, OOo can be complemented with other open source programs such as: 
[10642490] |* [[Novell Evolution|Evolution]] or [[Mozilla Thunderbird|Thunderbird]]/[[Lightning (software)|Lightning]] for a PIM like [[Microsoft Outlook]].
[10642500] |* [[OpenProj]] (which seeks integration with OOo, but might be limited due to licensing issues) for [[Microsoft Project]].
[10642510] |* [[Scribus]] for [[Microsoft Publisher]]
[10642520] |* [[O3spaces]] for [[Sharepoint]]
[10642530] |Microsoft also provides Administrative Template Files ("adm files") that allow MS Office to be configured using Windows Group Policy.
[10642540] |Equivalent functionality for OpenOffice.org is provided by [http://openoffice-enterprise.com/ OpenOffice-Enterprise], a commercial product from Open Office Technology, Inc.
[10642550] |=== Issues === 
[10642560] |OpenOffice.org has been criticized for slow start times and extensive CPU and RAM usage in comparison to other competitive software such as Microsoft Office.
[10642570] |In comparison, tests between OpenOffice.org&nbsp;2.2 and Microsoft Office&nbsp;2007 have found that OpenOffice.org takes approximately 2 times the processing time and memory to load itself along with a blank file; and took approximately 4.7 times the processing time and 3.9 times the memory to open an extremely large spreadsheet file.
[10642580] |Critics have pointed to excessive code bloat and OpenOffice.org's loading of the [[Java Virtual Machine|Java Runtime Environment]] as possible reasons for the slow speeds and excessive memory usage.
[10642590] |However, since OpenOffice.org 2.2 the performance of OpenOffice.org has been improved dramatically.
[10642600] |One of the greatest challenges is its ability to be truly cross compatible with other applications.
[10642610] |Since Openoffice.org is forced to reverse engineer proprietary binary formats due to unavailability of open specifications, slight formatting incompatibilities tend to exist when files are saved in non-native format.
[10642620] |For example, a complex .doc document formatted under OpenOffice.org, is usually not displayed with the correct format when opened with Microsoft Office.
[10642630] |== Retail == 
[10642640] |The [[free software license]] under which OpenOffice.org is distributed allows unlimited use of the software for both home and business use, including unlimited redistribution of the software.
[10642650] |Several businesses sell the OpenOffice.org suite on auction websites such as [[eBay]], offering value-added services such as 24/7 technical support, download mirrors, and CD mailing.
[10642660] |However, often the 24/7 support offered is not provided by the company selling the software, but rather by the official OpenOffice.org mailing list.
[10650010] |<article>Parsing</article>
[10650020] |In [[computer science]] and [[linguistics]], '''parsing''', or, more formally, '''syntactic analysis''', is the process of analyzing a sequence of [[Token (parser)|tokens]] to determine grammatical structure with respect to a given (more or less) [[formal grammar]].
[10650030] |A '''parser''' is thus one of the components in an [[interpreter]] or [[compiler]], where it captures the implied hierarchy of the input text and transforms it into a form suitable for further processing (often some kind of [[parse tree]], [[abstract syntax tree]] or other hierarchical structure) and normally checks for syntax errors at the same time.
[10650040] |The parser often uses a separate [[lexical analyser]] to create tokens from the sequence of input characters.
[10650050] |Parsers may be programmed by hand or may be semi-automatically generated (in some programming language) by a tool (such as [[Yet Another Compiler Compiler|Yacc]]) from a grammar written in [[Backus-Naur form]].
[10650060] |Parsing is also an earlier term for the diagramming of sentences of natural languages, and is still used for the diagramming of [[Inflection|inflected]] languages, such as the [[Romance languages|Romance languages]] or [[Latin]].
[10650070] |Parsers can also be constructed as executable specifications of grammars in functional programming languages.
[10650080] |Frost, Hafiz and Callaghan have built on the work of others to construct a set of [[higher-order function]]s (called [[parser combinators]]) which allow polynomial time and space complexity top-down parser to be constructed as executable specifications of ambiguous grammars containing left-recursive productions.
[10650090] |The [http://www.cs.uwindsor.ca/~hafiz/proHome.html X-SAIGA] site has more about the algorithms and implementation details.
[10650100] |== Human languages == 
[10650110] |:''Also see [[:Category:Natural language parsing]]''
[10650120] |In some [[machine translation]] and [[natural language processing]] systems, human languages are parsed by computer programs.
[10650130] |Human sentences are not easily parsed by programs, as there is substantial [[syntactic ambiguity|ambiguity]] in the structure of human language.
[10650140] |In order to parse natural language data, researchers must first agree on the [[grammar]] to be used.
[10650150] |The choice of syntax is affected by both [[linguistic]] and computational concerns; for instance some parsing systems use [[lexical functional grammar]], but in general, parsing for grammars of this type is known to be [[NP-complete]].
[10650160] |[[Head-driven phrase structure grammar]] is another linguistic formalism which has been popular in the parsing community, but other research efforts have focused on less complex formalisms such as the one used in the Penn [[Treebank]].
[10650170] |[[Shallow parsing]] aims to find only the boundaries of major constituents such as noun phrases.
[10650180] |Another popular strategy for avoiding linguistic controversy is [[dependency grammar]] parsing.
[10650190] |Most modern parsers are at least partly [[statistics|statistical]]; that is, they rely on a corpus of training data which has already been annotated (parsed by hand).
[10650200] |This approach allows the system to gather information about the frequency with which various constructions occur in specific contexts.
[10650210] |''(See [[machine learning]].)''
[10650220] |Approaches which have been used include straightforward [[PCFG]]s (probabilistic context free grammars), [[maximum entropy]], and [[neural net]]s.
[10650230] |Most of the more successful systems use ''lexical'' statistics (that is, they consider the identities of the words involved, as well as their [[part of speech]]).
[10650240] |However such systems are vulnerable to [[overfitting]] and require some kind of smoothing to be effective.
[10650250] |Parsing algorithms for natural language cannot rely on the grammar having 'nice' properties as with manually-designed grammars for programming languages.
[10650260] |As mentioned earlier some grammar formalisms are very computationally difficult to parse; in general, even if the desired structure is not [[context-free]], some kind of context-free approximation to the grammar is used to perform a first pass.
[10650265] |Algorithms which use context-free grammars often rely on some variant of the [[CKY algorithm]], usually with some [[heuristic (computer science)|heuristic]] to prune away unlikely analyses to save time.
[10650270] |''(See [[chart parsing]].)''
[10650280] |However some systems trade speed for accuracy using, eg, linear-time versions of the [[Shift-reduce parsing|shift-reduce]] algorithm.
[10650290] |A somewhat recent development has been [[parse reranking]] in which the parser proposes some large number of analyses, and a more complex system selects the best option.
[10650300] |It is normally branching of one part and its subparts
[10650310] |== Programming languages == 
[10650320] |The most common use of a parser is as a component of a [[compiler]] or [[interpreter]].
[10650330] |This parses the [[source code]] of a [[computer programming language]] to create some form of internal representation.
[10650340] |Programming languages tend to be specified in terms of a [[context-free grammar]] because fast and efficient parsers can be written for them.
[10650350] |Parsers are written by hand or generated by [[parser generator]]s.
[10650360] |Context-free grammars are limited in the extent to which they can express all of the requirements of a language.
[10650370] |Informally, the reason is that the memory of such a language is limited.
[10650380] |The grammar cannot remember the presence of a construct over an arbitrarily long input; this is necessary for a language in which, for example, a name must be declared before it may be referenced.
[10650390] |More powerful grammars that can express this constraint, however, cannot be parsed efficiently.
[10650400] |Thus, it is a common strategy to create a relaxed parser for a context-free grammar which accepts a superset of the desired language constructs (that is, it accepts some invalid constructs); later, the unwanted constructs can be filtered out.
[10650410] |===Overview of process=== 
[10650420] |[[image:Parser_Flow.gif|right|Flow of data in a typical parser]] The following example demonstrates the common case of parsing a computer language with two levels of grammar: lexical and syntactic.
[10650430] |The first stage is the token generation, or [[lexical analysis]], by which the input character stream is split into meaningful symbols defined by a grammar of [[regular expression]]s.
[10650440] |For example, a calculator program would look at an input such as "<code>12*(3+4)^2</code>" and split it into the tokens <code>12</code>, <code>*</code>, <code>(</code>, <code>3</code>, <code>+</code>, <code>4</code>, <code>)</code>, <code>^</code>, and <code>2</code>, each of which is a meaningful symbol in the context of an arithmetic expression.
[10650450] |The parser would contain rules to tell it that the characters <code>*</code>, <code>+</code>, <code>^</code>, <code>(</code> and <code>)</code> mark the start of a new token, so meaningless tokens like "<code>12*</code>" or "<code>(3</code>" will not be generated.
[10650460] |The next stage is parsing or syntactic analysis, which is checking that the tokens form an allowable expression.
[10650470] |This is usually done with reference to a [[context-free grammar]] which recursively defines components that can make up an expression and the order in which they must appear.
[10650480] |However, not all rules defining programming languages can be expressed by context-free grammars alone, for example type validity and proper declaration of identifiers.
[10650490] |These rules can be formally expressed with [[attribute grammar]]s.
[10650500] |The final phase is [[Semantic analysis (computer science)|semantic parsing]] or analysis, which is working out the implications of the expression just validated and taking the appropriate action.
[10650510] |In the case of a calculator or interpreter, the action is to evaluate the expression or program; a compiler, on the other hand, would generate some kind of code.
[10650520] |Attribute grammars can also be used to define these actions.
[10650530] |==Types of parsers== 
[10650540] |The task of the parser is essentially to determine if and how the input can be derived from the start symbol of the grammar.
[10650550] |This can be done in essentially two ways: 
[10650560] |*[[Top-down parsing]] - Top-down parsing can be viewed as an attempt to find left-most derivations of an input-stream by searching for [[parse tree|parse-trees]] using a top-down expansion of the given [[formal grammar]] rules.
[10650570] |Tokens are consumed from left to right.
[10650580] |Inclusive choice is used to accommodate [[ambiguity]] by expanding all alternative right-hand-sides of grammar rules .
[10650590] |[[LL parser]]s and [[recursive-descent parser]] are examples of top-down parsers, which cannot accommodate [[left recursion | left recursive]] productions.
[10650600] |Although it has been believed that simple implementations of top-down parsing cannot accommodate direct and indirect left-recursion and may require exponential time and space complexity while parsing ambiguous [[context-free grammar]]s, more sophisticated algorithm for top-down parsing have been created by Frost, Hafiz, and Callaghan which accommodates [[ambiguity]] and [[left recursion]] in polynomial time and which generates polynomial-size representations of the potentially-exponential number of parse trees.
[10650610] |Their algorithm is able to produce both left-most and right-most derivations of an input w.r.t. a given CFG.
[10650620] |*[[Bottom-up parsing]] - A parser can start with the input and attempt to rewrite it to the start symbol.
[10650630] |Intuitively, the parser attempts to locate the most basic elements, then the elements containing these, and so on.
[10650640] |[[LR parser]]s are examples of bottom-up parsers.
[10650650] |Another term used for this type of parser is Shift-Reduce parsing.
[10650660] |Another important distinction is whether the parser generates a ''leftmost derivation'' or a ''rightmost derivation'' (see [[context-free grammar]]).
[10650670] |LL parsers will generate a leftmost [[derivation]] and LR parsers will generate a rightmost derivation (although usually in reverse) .
[10650680] |== Examples of parsers == 
[10650690] |=== Top-down parsers === 
[10650700] |Some of the parsers that use [[top-down parsing]] include: 
[10650710] |* [[Recursive descent parser]]
[10650720] |* [[LL parser]] ('''L'''eft-to-right, '''L'''eftmost derivation)
[10650730] |* [http://www.cs.uwindsor.ca/~hafiz/proHome.html X-SAIGA] - eXecutable SpecificAtIons of GrAmmars.
[10650740] |Contains publications related to top-down parsing algorithm that supports left-recursion and ambiguity in polynomial time and space.
[10650750] |=== Bottom-up parsers === 
[10650760] |Some of the parsers that use [[bottom-up parsing]] include: 
[10650770] |* Precedence parser
[10650780] |** [[Operator-precedence parser]]
[10650790] |** [[Simple precedence parser]]
[10650800] |* BC (bounded context) parsing
[10650810] |* [[LR parser]] ('''L'''eft-to-right, '''R'''ightmost derivation)
[10650820] |** [[SLR parser|Simple LR (SLR) parser]]
[10650830] |** [[LALR parser]]
[10650840] |** [[Canonical LR parser|Canonical LR (LR(1)) parser]]
[10650850] |** [[GLR parser]]
[10650860] |* [[CYK algorithm|CYK parser]]
[10660010] |<article>Lexical category</article>
[10660020] |In [[grammar]], a '''lexical category''' (also '''word class''', '''lexical class''', or in traditional grammar '''part of speech''') is a linguistic category of words (or more precisely ''lexical items''), which is generally defined by the [[syntactic]] or [[morphology (linguistics)|morphological]] behaviour of the lexical item in question.
[10660030] |Common linguistic categories include ''noun'' and ''verb'', among others.
[10660040] |There are [[open class word|open word classes]], which constantly acquire new members, and [[closed class word|closed word classes]], which acquire new members infrequently if at all.
[10660050] |Different languages may have different lexical categories, or they might associate different properties to the same one.
[10660060] |For example, [[Japanese language|Japanese]] has at least three classes of adjectives where English has one; Chinese and Japanese have [[measure word]]s while European languages have nothing resembling them; many languages don't have a distinction between adjectives and adverbs, or adjectives and nouns, etc.
[10660070] |Many linguists argue that the formal distinctions between parts of speech must be made within the framework of a specific language or language family, and should not be carried over to other languages or language families.
[10660080] |==History== 
[10660090] |The classification of words into lexical categories is found from the earliest moments in the [[history of linguistics]].
[10660100] |In the ''[[Nirukta]]'', written in the [[5th century BCE|5th]] or [[6th century BCE]], the [[Sanskrit grammarian]] [[Yāska]] defined four main categories of words : 
[10660110] |# nāma - [[noun]]s or substantives
[10660120] |# ākhyāta - [[verb]]s
[10660130] |# upasarga - pre-verbs or [[prefix]]es
[10660140] |# nipāta - [[Grammatical particle|particle]]s, invariant words (perhaps [[prepositions]])
[10660150] |These four were grouped into two large classes: [[inflection|inflected]] (nouns and verbs) and uninflected (pre-verbs and particles).
[10660160] |A century or two later, the [[Classical Greece|Greek]] scholar [[Plato]] wrote in the [[Cratylus (dialogue)|''Cratylus'' dialog]] that "... sentences are, I conceive, a combination of verbs [''rhēma''] and nouns [''ónoma'']".
[10660170] |Another class, "conjunctions" (covering [[Grammatical conjunction|conjunction]]s, [[pronoun]]s, and the [[article (grammar)|article]]), was later added by [[Aristotle]].
[10660180] |By the end of the [[2nd century BCE]], the classification scheme had been expanded into eight categories, seen in the ''[[Art of Grammar|Tékhnē grammatiké]]'':
[10660190] |# Noun: a part of speech inflected for case, signifying a concrete or abstract entity
[10660200] |# Verb: a part of speech without case inflection, but inflected for tense, person and number, signifying an activity or process performed or undergone
[10660210] |# Participle: a part of speech sharing the features of the verb and the noun
[10660220] |# Article: a part of speech inflected for case and preposed or postposed to nouns (the relative pronoun is meant by the postposed article)
[10660230] |# Pronoun: a part of speech substitutable for a noun and marked for person
[10660240] |# Preposition: a part of speech placed before other words in composition and in syntax 
[10660250] |# Adverb: a part of speech without inflection, in modification of or in addition to a verb
[10660260] |# Conjunction: a part of speech binding together the discourse and filling gaps in its interpretation
[10660270] |The [[Latin grammar]]ian [[Priscian]] ([[floruit|fl.]] [[500 CE]]) modified the above eight-fold system, substituting "[[interjection]]" for "article".
[10660280] |It wasn't until 1767 that the [[adjective]] was taken as a separate class.
[10660290] |Traditional English grammar is patterned after the European tradition above, and is still taught in schools and used in [[dictionaries]].
[10660300] |It names eight parts of speech: [[noun]], [[verb]], [[adjective]], [[adverb]], [[pronoun]], [[preposition]], [[Grammatical conjunction|conjunction]], and [[interjection]] (sometimes called an exclamation).
[10660310] |==Controversies== 
[10660320] |Since the Greek grammarians of 2nd century BCE, parts of speech have been defined by [[morphology (linguistics)|morphological]], [[syntax|syntactic]] and [[semantics|semantic]] criteria.
[10660330] |However, there is currently no generally agreed-upon classification scheme that can apply to all languages, or even a set of criteria upon which such a scheme should be based.
[10660340] |Linguists recognize that the above list of eight word classes is simplified and artificial.
[10660350] |For example, "adverb" is to some extent a catch-all class that includes words with many different functions.
[10660360] |Some have even argued that the most basic of category distinctions, that of nouns and verbs, is unfounded, or not applicable to certain languages.
[10660370] |==Functional classification== 
[10660380] |Common ways of delimiting words by function include: 
[10660390] |* '''[[Open word classes]]:'''
[10660400] |**[[adjective]]s
[10660410] |**[[adverb]]s 
[10660420] |**[[interjection]]s
[10660430] |**[[noun]]s
[10660440] |**[[verb]]s (except [[auxiliary verb]]s)
[10660450] |* '''[[Closed word classes]]:'''
[10660460] |**[[auxiliary verb]]s
[10660470] |**[[clitic]]s
[10660480] |**[[coverb]]s
[10660490] |**[[Grammatical conjunction|conjunction]]s
[10660500] |**[[determiner (class)|Determiner]]s ([[article (grammar)|article]]s, [[quantifier]]s, [[demonstrative adjective]]s, and [[possessive adjective]]s)
[10660510] |**[[grammatical particle|particle]]s
[10660520] |**[[measure word]]s
[10660530] |**[[adposition]]s (prepositions, postpositions, and circumpositions)
[10660540] |**[[preverb]]s
[10660550] |**[[pronoun]]s
[10660560] |**[[Contraction (grammar)|contraction]]s
[10660570] |**[[Names of numbers in English#Cardinal numbers|cardinal numbers]]
[10660580] |==English== 
[10660590] |[[English language|English]] frequently does not [[marker (linguistics)|mark]] words as belonging to one part of speech or another.
[10660600] |Words like ''neigh'', ''break'', ''outlaw'', ''laser'', ''microwave'' and ''telephone'' might all be either verb forms or nouns.
[10660610] |Although ''-ly'' is an adverb marker, not all adverbs end in ''-ly'' and not all words ending in ''-ly'' are adverbs.
[10660620] |For instance, ''tomorrow'', ''slow'', ''fast'', ''crosswise'' can all be adverbs, while ''early'', ''friendly'', ''ugly'' are all adjectives (though ''early'' can also function as an adverb).
[10660630] |In certain circumstances, even words with primarily grammatical functions can be used as verbs or nouns, as in "We must look to the ''hows'' and not just the ''whys''" or "Miranda was ''to-ing and fro-ing'' and not paying attention".
[10670010] |<article>Part-of-speech tagging</article>
[10670020] |'''Part-of-speech tagging''' ('''POS tagging''' or '''POST'''), also called '''grammatical tagging''', is the process of marking up the words in a text as corresponding to a particular [[parts of speech|part of speech]], based on both its definition, as well as its context—i.e., relationship with adjacent and related words in a [[phrase]], [[sentence]], or [[paragraph]].
[10670030] |A simplified form of this is commonly taught school-age children, in the identification of words as [[noun]]s, [[verb]]s, [[adjective]]s, [[adverb]]s, etc.
[10670040] |Once performed by hand, POS tagging is now done in the context of [[computational linguistics]], using [[algorithms]] which associate discrete terms, as well as hidden parts of speech, in accordance with a set of descriptive tags.
[10670050] |==History== 
[10670060] |Research on part-of-speech tagging has been closely tied to [[corpus linguistics]].
[10670070] |The first major corpus of English for computer analysis was the [[Brown Corpus]] developed at [[Brown University]] by [[Henry Kucera]] and [[Nelson Francis]], in the mid-1960s.
[10670080] |It consists of about 1,000,000 words of running English prose text, made up of 500 samples from randomly chosen publications.
[10670090] |Each sample is 2,000 or more words (ending at the first sentence-end after 2,000 words, so that the corpus contains only complete sentences).
[10670100] |The [[Brown Corpus]] was painstakingly "tagged" with part-of-speech markers over many years.
[10670110] |A first approximation was done with a program by Greene and Rubin, which consisted of a huge handmade list of what categories could co-occur at all.
[10670120] |For example, article then noun can occur, but article verb (arguably) cannot.
[10670130] |The program got about 70% correct.
[10670140] |Its results were repeatedly reviewed and corrected by hand, and later users sent in errata, so that by the late 70s the tagging was nearly perfect (allowing for some cases even human speakers might not agree on).
[10670150] |This corpus has been used for innumerable studies of word-frequency and of part-of-speech, and inspired the development of similar "tagged" corpora in many other languages.
[10670160] |Statistics derived by analyzing it formed the basis for most later part-of-speech tagging systems, such as CLAWS and [[VOLSUNGA]].
[10670170] |However, by this time (2005) it has been superseded by larger corpora such as the 100 million word [[British National Corpus]].
[10670180] |For some time, part-of-speech tagging was considered an inseparable part of [[natural language processing]], because there are certain cases where the correct part of speech cannot be decided without understanding the [[semantics]] or even the [[pragmatics]] of the context.
[10670190] |This is extremely expensive, especially because analyzing the higher levels is much harder when multiple part-of-speech possibilities must be considered for each word.
[10670200] |In the mid 1980s, researchers in Europe began to use [[hidden Markov model]]s (HMMs) to disambiguate parts of speech, when working to tag the [[Lancaster-Oslo-Bergen Corpus]] of British English.
[10670210] |HMMs involve counting cases (such as from the Brown Corpus), and making a table of the probabilities of certain sequences.
[10670220] |For example, once you've seen an article such as 'the', perhaps the next word is a noun 40% of the time, an adjective 40%, and a number 20%.
[10670230] |Knowing this, a program can decide that "can" in "the can" is far more likely to be a noun than a verb or a modal.
[10670240] |The same method can of course be used to benefit from knowledge about following words.
[10670250] |More advanced ("higher order") HMMs learn the probabilities not only of pairs, but triples or even larger sequences.
[10670260] |So, for example, if you've just seen an article and a verb, the next item may be very likely a preposition, article, or noun, but even less likely another verb.
[10670270] |When several ambiguous words occur together, the possibilities multiply.
[10670280] |However, it is easy to enumerate every combination and to assign a relative probability to each one, by multiplying together the probabilities of each choice in turn.
[10670290] |The combination with highest probability is then chosen.
[10670300] |The European group developed CLAWS, a tagging program that did exactly this, and achieved accuracy in the 93-95% range.
[10670310] |It is worth remembering, as [[Eugene Charniak]] points out in ''Statistical techniques for natural language parsing'' [http://www.cs.brown.edu/people/ec/home.html], that merely assigning the most common tag to each known word and the tag "proper noun" to all unknowns, will approach 90% accuracy because many words are unambiguous.
[10670320] |CLAWS pioneered the field of HMM-based part of speech tagging, but was quite expensive since it enumerated all possibilities.
[10670330] |It sometimes had to resort to backup methods when there were simply too many (the [[Brown Corpus]] contains a case with 17 ambiguous words in a row, and there are words such as "still" that can represent as many as 7 distinct parts of speech).
[10670340] |In 1987, [[Steve DeRose]] and [[Ken Church]] independently developed [[dynamic programming]] algorithms to solve the same problem in vastly less time.
[10670350] |Their methods were similar to the [[Viterbi algorithm]] known for some time in other fields.
[10670360] |DeRose used a table of pairs, while Church used a table of triples and an ingenious method of estimating the values for triples that were rare or nonexistent in the Brown Corpus (actual measurement of triple probabilities would require a much larger corpus).
[10670370] |Both methods achieved accuracy over 95%.
[10670380] |DeRose's 1990 dissertation at [[Brown University]] included analyses of the specific error types, probabilities, and other related data, and replicated his work for Greek, where it proved similarly effective.
[10670390] |These findings were surprisingly disruptive to the field of [[Natural Language Processing]].
[10670400] |The accuracy reported was higher than the typical accuracy of very sophisticated algorithms that integrated part of speech choice with many higher levels of linguistic analysis: syntax, morphology, semantics, and so on.
[10670410] |CLAWS, DeRose's and Church's methods did fail for some of the known cases where semantics is required, but those proved negligibly rare.
[10670420] |This convinced many in the field that part-of-speech tagging could usefully be separated out from the other levels of processing; this in turn simplified the theory and practice of computerized language analysis, and encouraged researchers to find ways to separate out other pieces as well.
[10670430] |Markov Models are now the standard method for part-of-speech assignment.
[10670440] |The methods already discussed involve working from a pre-existing corpus to learn tag probabilities.
[10670450] |It is, however, also possible to [[Bootstrapping (linguistics)|bootstrap]] using "unsupervised" tagging.
[10670460] |Unsupervised tagging techniques use an untagged corpus for their training data and produce the tagset by induction.
[10670470] |That is, they observe patterns in word use, and derive part-of-speech categories themselves.
[10670480] |For example, statistics readily reveal that "the", "a", and "an" occur in similar contexts, while "eat" occurs in very different ones.
[10670490] |With sufficient iteration, similarity classes of words emerge that are remarkably similar to those human linguists would expect; and the differences themselves sometimes suggest valuable new insights.
[10670500] |These two categories can be further subdivided into rule-based, stochastic, and neural approaches.
[10670510] |Some current major algorithms for '''part-of-speech tagging''' include the [[Viterbi algorithm]], [[Brill Tagger]], and the [[Baum-Welch algorithm]] (also known as the forward-backward algorithm).
[10670520] |[[Hidden Markov model]] and [[visible Markov model]] taggers can both be implemented using the [[Viterbi algorithm]].
[10680010] |<article>Pattern recognition</article>
[10680020] |'''Pattern recognition''' is a sub-topic of [[machine learning]].
[10680030] |It can be defined as 
[10680040] |:"the act of taking in raw data and taking an action based on the [[Category (taxonomy)|category]] of the data".
[10680050] |Most research in pattern recognition is about methods for [[supervised learning]] and [[unsupervised learning]].
[10680060] |Pattern recognition aims to classify [[data]] ([[pattern]]s) based on either ''[[A priori and a posteriori (philosophy)|a priori]]'' knowledge or on [[statistics|statistical]] information extracted from the patterns.
[10680070] |The patterns to be classified are usually groups of measurements or observations, defining points in an appropriate [[space (mathematics)|multidimensional space]].
[10680080] |This is in contrast to '''[[pattern matching]]''', where the pattern is rigidly specified.
[10680090] |==Overview== 
[10680100] |A complete pattern recognition system consists of a [[sensor]] that gathers the observations to be classified or described; a [[feature extraction]] mechanism that computes numeric or symbolic information from the observations; and a [[statistical classification|classification]] or description scheme that does the actual job of classifying or describing observations, relying on the extracted features.
[10680110] |The classification or description scheme is usually based on the availability of a set of patterns that have already been classified or described.
[10680120] |This set of patterns is termed the [[training set]] and the resulting learning strategy is characterized as [[supervised learning]].
[10680130] |Learning can also be [[unsupervised learning|unsupervised]], in the sense that the system is not given an ''a priori'' labeling of patterns, instead it establishes the classes itself based on the statistical regularities of the patterns.
[10680140] |The classification or description scheme usually uses one of the following approaches: [[statistical classification|statistical]] (or decision theoretic), [[syntactic pattern recognition|syntactic]] (or structural).
[10680150] |Statistical pattern recognition is based on statistical characterisations of patterns, assuming that the patterns are generated by a [[probabilistic]] system.
[10680160] |Syntactical (or structural) pattern recognition is based on the structural interrelationships of features.
[10680170] |A wide range of algorithms can be applied for pattern recognition, from very simple [[Naive Bayes classifier|Bayesian classifiers]] to much more powerful [[Artificial neural network|neural networks]].
[10680180] |An intriguing problem in pattern recognition yet to be solved is the relationship between the problem to be solved (data to be classified) and the performance of various pattern recognition algorithms (classifiers).
[10680190] |Pattern recognition is more complex when templates are used to generate variants.
[10680200] |For example, in English, sentences often follow the "N-VP" (noun - verb phrase) pattern, but some knowledge of the English language is required to detect the pattern.
[10680210] |Pattern recognition is studied in many fields, including [[psychology]], [[ethology]], and [[computer science]].
[10680220] |[[Holographic associative memory]] is another type of pattern matching scheme where a target small patterns can be searched from a large set of learned patterns based on cognitive meta-weight.
[10680230] |==Uses== 
[10680240] |Within medical science pattern recognition creates the basis for [[computer-aided diagnosis]] (CAD) systems.
[10680250] |CAD describes a procedure that supports the doctor's interpretations and findings.
[10680260] |Typical applications are automatic [[speech recognition]], [[document classification|classification of text into several categories]] (e.g. spam/non-spam email messages), the [[handwriting recognition|automatic recognition of handwritten postal codes]] on postal envelopes, or the [[facial recognition system|automatic recognition of images]] of human faces.
[10680270] |The last two examples form the subtopic [[image analysis]] of pattern recognition that deals with digital images as input to pattern recognition systems.
[10690010] |<article>Phrase</article>
[10690020] |In [[grammar]], a '''phrase''' is a group of [[word]]s that functions as a single unit in the [[syntax]] of a [[Sentence (linguistics)|sentence]].
[10690030] |For example ''the house at the end of the street'' (example 1) is a phrase.
[10690040] |It acts like a noun.
[10690050] |It contains the phrase ''at the end of the street'' (example 2), a prepositional phrase which acts like an adjective.
[10690060] |Example 2 could be replaced by ''white'', to make the phrase ''the white house''.
[10690070] |Examples 1 and 2 contain the phrase ''the end of the street'' (example 3) which acts like a noun.
[10690080] |It could be replaced by ''the cross-roads'' to give ''the house at the cross-roads''.
[10690090] |Most phrases have a or central word which defines the type of phrase.
[10690100] |This word is called the [[head (linguistics)|head]] of the phrase.
[10690110] |In English the head is often the first word of the phrase.
[10690120] |Some phrases, however, can be headless.
[10690130] |For example, ''the rich'' is a noun phrase composed of a determiner and an adjective, but no noun.
[10690140] |Phrases may be classified by the type of head they take
[10690150] |*[[Prepositional phrase]] (PP) with a [[preposition]] as head (e.g. ''in love'', ''over the rainbow'').
[10690160] |Languages that use [[postposition]]s instead have [[postpositional phrase]]s.
[10690170] |The two types are sometimes commonly referred to as [[adpositional phrase]]s.
[10690180] |*[[Noun phrase]] (NP) with a [[noun]] as head (e.g. ''the black cat'', ''a cat on the mat'')
[10690190] |*[[Verb phrase]] (VP) with a [[verb]] as head (e.g. ''eat cheese'', ''jump up and down'')
[10690200] |*[[Adjectival phrase]] with an [[adjective]] as head (e.g. ''full of toys'')
[10690210] |*[[Adverbial phrase]] with [[adverb]] as head (e.g. ''very carefully'')
[10690220] |== Formal definition == 
[10690230] |A '''phrase''' is a [[syntax|syntactic]] structure which has syntactic properties derived from its [[head (linguistics)|head]].
[10690240] |== Complexity == 
[10690250] |A complex phrase consists of several words, whereas a simple phrase consists of only one word.
[10690260] |This terminology is especially often used with [[verb]] phrases: 
[10690270] |* simple past and present are simple verb, which require just one verb
[10690280] |* complex verb have one or two [[grammatical aspect|aspect]]s added, hence require additional two or three words
[10690290] |"Complex", which is phrase-level, is often confused with "[[compound (linguistics)|compound]]", which is [[word]]-level.
[10690300] |However, there are certain phenomena that formally seem to be phrases but semantically are more like compounds, like "women's magazines", which has the form of a possessive noun phrase, but which refers (just like a compound) to one specific [[lexeme]] (i.e. a magazine for women and not some magazine owned by a woman).
[10690310] |== Semiotic approaches to the concept of "phrase" == 
[10690320] |In more [[semiotic]] approaches to language, such as the more cognitivist versions of [[construction grammar]], a phrasal structure is not only a certain formal combination of word types whose features are inherited from the head.
[10690330] |Here each phrasal structure also expresses some type of [[concept]]ual content, be it specific or abstract.
[10700010] |<article>Portuguese language</article>
[10700020] |'''Portuguese''' ( or ''língua portuguesa'') is a [[Romance language]] that originated in what is now [[Galicia (Spain)]] and [[Portugal|northern Portugal]] from the [[Latin language|Latin]] spoken by [[Romanization (cultural)|romanized]] [[Pre-Roman peoples of the Iberian Peninsula]] (namely the [[Gallaeci]], the [[Lusitanians]], the [[Celtici]] and the [[Conii]]) about 2000 years ago.
[10700030] |It spread worldwide in the 15th and 16th centuries as Portugal established a [[Portuguese Empire|colonial and commercial empire]] (1415&ndash;1999) which spanned from [[Brazil]] in the [[Americas]] to [[Goa]] in [[India]] and [[Macau]] in [[China]], in fact it was used exclusively on the island of [[Sri Lanka]] as the [[lingua franca]] for almost 350 years.
[10700040] |During that time, many [[Portuguese Creole|creole languages based on Portuguese]] also appeared around the world, especially in [[Africa]], [[Asia]], and the [[Caribbean]].
[10700050] |Today it is one of the world's major languages, [[List of languages by number of native speakers|ranked 6th]] according to number of native speakers (approximately 177 million).
[10700060] |It is the language with the largest number of speakers in [[South America]], spoken by nearly all of Brazil's population, which amounts to over 51% of the continent's population even though it is the only Portuguese-speaking nation in [[the Americas]].
[10700070] |It is also a major lingua franca in Portugal's former colonial possessions in Africa.
[10700080] |It is the official language of ten countries (see the table on the right), also being co-official with [[Spanish language|Spanish]] and [[French language|French]] in [[Equatorial Guinea]], with [[Standard Cantonese|Cantonese]] [[Chinese language|Chinese]] in the Chinese special administrative region of [[Macau]], and with [[Tetum]] in [[East Timor]].
[10700090] |There are sizable communities of Portuguese-speakers in various regions of North America, notably in the [[United States]] ([[New Jersey]], [[New England]] and south [[Florida]]) and in [[Ontario]], [[Canada]].
[10700100] |[[Spain|Spanish]] author [[Miguel de Cervantes]] once called Portuguese "the sweet language", while Brazilian writer [[Olavo Bilac]] poetically described it as ''a última flor do Lácio, inculta e bela'': "the last flower of [[Latium]], wild and beautiful".
[10700110] |==Geographic distribution== 
[10700120] |Today, Portuguese is the [[official language]] of [[Angola]], [[Brazil]], [[Cape Verde]], [[Guinea-Bissau]], [[Portugal]], [[São Tomé and Príncipe]] and [[Mozambique]].
[10700130] |It is also one of the official languages of [[Equatorial Guinea]] (with [[Spanish language|Spanish]] and [[French language|French]]), the [[Special Administrative Region of the People's Republic of China|Chinese special administrative region]] of [[Macau]] (with [[Chinese language|Chinese]]), and [[East Timor]], (with [[Tetum]]).
[10700140] |It is a [[First language|native language]] of most of the population in Portugal (100%), Brazil (99%), Angola (60%), and São Tomé and Príncipe (50%), and it is spoken by a [[plurality]] of the population of Mozambique (40%), though only 6.5% are native speakers.
[10700150] |No data is available for Cape Verde, but almost all the population is bilingual, and the monolingual population speaks [[Cape Verdean Creole]].
[10700160] |Small Portuguese-speaking communities subsist in former overseas colonies of Portugal such as Macau, where it is spoken as a first language by 0.6% of the population and East Timor.
[10700170] |[[Uruguay]] gave Portuguese an equal status to Spanish in its educational system at the north border with Brazil.
[10700180] |In the rest of the country, it's taught as an obligatory subject beginning by the 6th grade.
[10700190] |It is also spoken by substantial immigrant communities, though not official, in [[Andorra]], [[France]], [[Luxembourg]], [[Jersey]] (with a statistically significant Portuguese-speaking community of approximately 10,000 people), [[Paraguay]], [[Namibia]], [[South Africa]], [[Switzerland]], [[Venezuela]] and in the [[U.S.]] states of [[California]], [[Connecticut]], [[Florida]], [[Massachusetts]], [[New Jersey]], [[New York]] and [[Rhode Island]].
[10700200] |In some parts of India, such as [[Goa]] and [[Daman and Diu]] Portuguese is still spoken.
[10700210] |There are also significant populations of Portuguese speakers in [[Canada]] (mainly concentrated in and around [[Toronto]]) [[Bermuda]] and [[Netherlands Antilles]].
[10700220] |Portuguese is an official language of several international organizations.
[10700230] |The [[Community of Portuguese Language Countries]] (with the Portuguese acronym CPLP) consists of the eight independent countries that have Portuguese as an official language.
[10700240] |It is also an official language of the [[European Union]], [[Mercosul]], the [[Organization of American States]], the [[Organization of Ibero-American States]], the [[Union of South American Nations]], and the [[African Union]] (one of the working languages) and one of the official languages of other organizations.
[10700250] |The Portuguese language is gaining popularity in Africa, Asia, and South America as a second language for study.
[10700260] |Portuguese and Spanish are the fastest-growing European languages, and, according to estimates by UNESCO, Portuguese is the language with the highest potential for growth as an international language in southern Africa and South America.
[10700270] |The Portuguese-speaking African countries are expected to have a combined population of 83 million by 2050.
[10700280] |Since 1991, when Brazil signed into the economic market of Mercosul with other South American nations, such as Argentina, Uruguay, and Paraguay, there has been an increase in interest in the study of Portuguese in those South American countries.
[10700290] |The demographic weight of Brazil in the continent will continue to strengthen the presence of the language in the region.
[10700300] |Although in the early 21st century, after Macau was ceded to China in 1999, the use of Portuguese was in decline in Asia, it is becoming a language of opportunity there; mostly because of East Timor's boost in the number of speakers in the last five years but also because of increased Chinese diplomatic and financial ties with Portuguese-speaking countries.
[10700310] |In July 2007, President Teodoro Obiang Nguema announced his government's decision to make Portuguese [[Equatorial Guinea]]'s third official language, in order to meet the requirements to apply for full membership of the [[Community of Portuguese Language Countries]].
[10700320] |This upgrading from its current Associate Observer condition would result in Equatorial Guinea being able to access several professional and academic exchange programs and the facilitation of cross-border circulation of citizens.
[10700330] |Its application is currently being assessed by other CPLP members.
[10700340] |In March 1994 the [[Bosque de Portugal]] (Portugal's Woods) was founded in the Brazilian city of [[Curitiba]].
[10700350] |The park houses the Portuguese Language Memorial, which honors the Portuguese immigrants and the countries that adopted the Portuguese language.
[10700360] |Originally there were seven nations represented with pillars, but the independence of [[East Timor]] brought yet another pillar for that nation in 2007.
[10700370] |In March 2006, the [[Museum of the Portuguese Language]], an interactive museum about the Portuguese language, was founded in [[São Paulo]], Brazil, the city with the largest number of Portuguese speakers in the world.
[10700380] |==Dialects== 
[10700390] |Portuguese is a [[pluricentric language]] with two main groups of [[dialect]]s, those of [[Brazil]] and those of the [[Old World]].
[10700400] |For historical reasons, the dialects of Africa and Asia are generally closer to those of Portugal than the Brazilian dialects, although in some aspects of their phonetics, especially the pronunciation of unstressed vowels, they resemble [[Brazilian Portuguese]] more than [[European Portuguese]].
[10700410] |They have not been studied as widely as European and Brazilian Portuguese.
[10700420] |Audio samples of some dialects of Portuguese are available below.
[10700430] |There are some differences between the areas but these are the best approximations possible.
[10700440] |For example, the ''caipira'' dialect has some differences from the one of Minas Gerais, but in general it is very close.
[10700450] |A good example of Brazilian Portuguese may be found in the capital city, [[Brasília]], because of the generalized population from all parts of the country.
[10700460] |'''[[Angola]]'''
[10700470] |# ''Benguelense'' &mdash; [[Benguela]] province.
[10700480] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som85.html ''Luandense''] &mdash; [[Luanda]] province.
[10700490] |# ''Sulista'' &mdash; South of Angola.
[10700500] |'''[[Brazil]]''' 
[10700510] |# ''[[Caipira]]'' &mdash; States of [[São Paulo (state)|São Paulo]] (countryside; the city of São Paulo and the eastern areas of the state have their own dialect, called ''paulistano''); southern [[Minas Gerais]], northern [[Paraná (state)|Paraná]], [[Goiás]] and [[Mato Grosso do Sul]].
[10700520] |# ''Cearense'' &mdash; [[Ceará]].
[10700530] |# ''Baiano'' &mdash; [[Bahia]].
[10700540] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som90.html ''Fluminense''] &mdash; Variants spoken in the states of [[Rio de Janeiro (state)|Rio de Janeiro]] and [[Espírito Santo]] (excluding the city of Rio de Janeiro and its adjacent metropolitan areas, which have their own dialect, called ''[[carioca]]'').
[10700550] |# ''[[Gaucho|Gaúcho]]'' &mdash; [[Rio Grande do Sul]].
[10700560] |(There are many distinct accents in Rio Grande do Sul, mainly due to the heavy influx of European immigrants of diverse origins, those which have settled several colonies throughout the state.)
[10700570] |# ''[[Mineiro]]'' &mdash; [[Minas Gerais]] (not prevalent in the [[Triângulo Mineiro]], southern and southeastern [[Minas Gerais]]).
[10700580] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som91.html ''Nordestino''] &mdash; [[Northeast Region, Brazil|northeastern states of Brazil]] ([[Pernambuco]] and [[Rio Grande do Norte]] have a particular way of speaking).
[10700590] |# ''Nortista'' &mdash; [[Amazon Basin]] states.
[10700600] |# ''Paulistano'' &mdash; Variants spoken around [[São Paulo]] city and the eastern areas of São Paulo state.
[10700610] |# ''Sertanejo'' &mdash; States of [[Goiás]] and [[Mato Grosso]] (the city of [[Cuiabá]] has a particular way of speaking).
[10700620] |# ''Sulista'' &mdash; Variants spoken in the areas between the northern regions of [[Rio Grande do Sul]] and southern regions of São Paulo state.
[10700630] |(The cities of [[Curitiba]], [[Florianópolis]], and [[Itapetininga]] have fairly distinct accents as well.)
[10700640] |'''[[Portugal]]''' 
[10700650] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som69.html ''Açoriano''] (Azorean) &mdash; [[Azores]].
[10700660] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som40.html ''Alentejano''] &mdash; [[Alentejo]] 
[10700670] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som44.html ''Algarvio''] &mdash; [[Algarve]] (there is a particular dialect in a small part of western Algarve).
[10700680] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som1.html ''Alto-Minhoto''] &mdash; North of [[Braga]] (hinterland).
[10700690] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som49.html ''Baixo-Beirão''; ''Alto-Alentejano''] &mdash; Central Portugal (hinterland).
[10700700] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som9.html ''Beirão''] &mdash; Central Portugal.
[10700710] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som22.html ''Estremenho''] &mdash; Regions of [[Coimbra]] and [[Lisbon]] (the Lisbon dialect has some peculiar features not shared with the one of Coimbra).
[10700720] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som60.html ''Madeirense''] (Madeiran) &mdash; [[Madeira]].
[10700730] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som14.html ''Nortenho''] &mdash; Regions of Braga and [[Porto]].
[10700740] |# [http://www.instituto-camoes.pt/cvc/hlp/geografia/som6.html ''Transmontano''] &mdash; [[Trás-os-Montes e Alto Douro]].
[10700750] |Other countries 
[10700760] |* '''[[Cape Verde]]''' &mdash; [http://www.instituto-camoes.pt/cvc/hlp/geografia/som87.html ''Português cabo-verdiano''] ([[Cape Verdean Portuguese]])
[10700770] |* '''[[Daman and Diu]]''', India &mdash; ''Damaense''.
[10700780] |* '''[[East Timor]]''' &mdash; [http://www.instituto-camoes.pt/cvc/hlp/geografia/som84.html ''Timorense''] ([[East Timorese Portuguese|East Timorese]])
[10700790] |* '''[[Goa]]''', India &mdash; ''Goês''.
[10700800] |* '''[[Guinea-Bissau]]''' &mdash; [http://www.instituto-camoes.pt/cvc/hlp/geografia/som88.html ''Guineense''] ([[Guinean Portuguese]]).
[10700810] |* '''[[Macau]]''', China &mdash; [http://www.instituto-camoes.pt/cvc/hlp/geografia/som92.html ''Macaense''] ([[Macanese Portuguese|Macanese]])
[10700820] |* '''[[Mozambique]]''' &mdash; [http://www.instituto-camoes.pt/cvc/hlp/geografia/som89.html ''Moçambicano''] ([[Mozambican Portuguese|Mozambican]])
[10700830] |* '''[[São Tomé and Príncipe]]''' &mdash; [http://www.instituto-camoes.pt/cvc/hlp/geografia/som83.html ''Santomense'']
[10700840] |* '''[[Uruguay]]''' &mdash; [[Riverense Portuñol language|''Dialectos Portugueses del Uruguay (DPU)'']].
[10700850] |Differences between dialects are mostly of [[accent (linguistics)|accent]] and [[vocabulary]], but between the Brazilian dialects and other dialects, especially in their most coloquial forms, there can also be some grammatical differences.
[10700860] |The [[Portuguese creole|Portuguese-based creole]]s spoken in various parts of Africa, Asia, and the Americas are independent languages which should not be confused with Portuguese itself.
[10700870] |==History== 
[10700880] |Arriving in the Iberian Peninsula in 216 BC, the Romans brought with them the [[Latin language]], from which all Romance languages descend.
[10700890] |The language was spread by arriving Roman soldiers, settlers and merchants, who built Roman cities mostly near the settlements of previous civilizations.
[10700900] |Between AD 409 and 711, as the Roman Empire collapsed in Western Europe, the Iberian Peninsula was conquered by Germanic peoples ([[Migration Period]]).
[10700910] |The occupiers, mainly [[Suebi]] and [[Visigoths]], quickly adopted late Roman culture and the [[Vulgar Latin]] dialects of the peninsula.
[10700920] |After the [[Moors|Moorish]] invasion of 711, [[Arabic language|Arabic]] became the administrative language in the conquered regions, but most of the population continued to speak a form of [[Romance languages|Romance]] commonly known as [[Mozarabic]].
[10700930] |The influence exerted by Arabic on the Romance dialects spoken in the Christian kingdoms of the north was small, affecting mainly their lexicon.
[10700940] |The earliest surviving records of a distinctively Portuguese language are administrative documents of the 9th century, still interspersed with many Latin phrases.
[10700950] |Today this phase is known as Proto-Portuguese (between the 9th and the 12th centuries).
[10700960] |In the first period of Old Portuguese — [[Galician-Portuguese]] Period (from the 12th to the 14th century) — the language gradually came into general use.
[10700970] |For some time, it was the language of preference for [[lyric poetry]] in Christian Hispania, much like [[Occitan]] was the language of the [[Occitan literature#Poetry_of_the_troubadours|poetry of the troubadours]].
[10700980] |Portugal was formally recognized as an independent kingdom by the [[Kingdom of Leon]] in 1143, with [[Afonso I of Portugal|Afonso Henriques]] as king.
[10700990] |In 1290, king [[Denis of Portugal|Dinis]] created the first Portuguese university in Lisbon (the ''Estudos Gerais'', later moved to [[Coimbra]]) and decreed that Portuguese, then simply called the "common language" should be known as the Portuguese language and used officially.
[10701000] |In the second period of Old Portuguese, from the 14th to the 16th century, with the [[Age of discovery|Portuguese discoveries]], the language was taken to many regions of [[Asia]], [[Africa]] and the [[Americas]] (nowadays, the great majority of Portuguese speakers live in Brazil, in South America).
[10701010] |By the 16th century it had become a ''[[lingua franca]]'' in Asia and Africa, used not only for colonial administration and trade but also for communication between local officials and Europeans of all nationalities.
[10701020] |Its spread was helped by mixed marriages between Portuguese and local people, and by its association with [[Roman Catholic]] [[missionary]] efforts, which led to the formation of a [[creole language]] called [[Kristang language|Kristang]] in many parts of Asia (from the word ''cristão'', "Christian").
[10701030] |The language continued to be popular in parts of Asia until the 19th century.
[10701040] |Some Portuguese-speaking Christian communities in [[India]], [[Sri Lanka]], [[Malaysia]], and [[Indonesia]] preserved their language even after they were isolated from Portugal.
[10701050] |The end of the Old Portuguese period was marked by the publication of the ''Cancioneiro Geral'' by [[Garcia de Resende]], in 1516.
[10701060] |The early times of Modern Portuguese, which spans from the 16th century to present day, were characterized by an increase in the number of learned words borrowed from Classical Latin and Classical Greek since the Renaissance, which greatly enriched the lexicon.
[10701070] |===Characterization=== 
[10701080] |A distinctive feature of Portuguese is that it preserved the stressed vowels of [[Vulgar Latin]], which became diphthongs in other Romance languages; cf. Fr. ''pierre'', Sp. ''piedra'', It. ''pietra'', Port. ''pedra'', from Lat. ''petra''; or Sp. ''fuego'', It. ''fuoco'', Port. ''fogo'', from Lat. ''focum''.
[10701090] |Another characteristic of early Portuguese was the loss of [[:wiktionary:intervocalic|intervocalic]] ''l'' and ''n'', sometimes followed by the merger of the two surrounding vowels, or by the insertion of an [[epenthesis|epenthetic vowel]] between them: cf. Lat. ''salire'', ''tenere'', ''catena'', Sp. ''salir'', ''tener'', ''cadena'', Port. ''sair'', ''ter'', ''cadeia''.
[10701100] |When the [[elision|elided]] consonant was ''n'', it often [[nasalization|nasalized]] the preceding vowel: cf. Lat. ''manum'', ''rana'', ''bonum'', Port. ''mão'', ''rãa'', ''bõo'' (now ''mão'', ''rã'', ''bom'').
[10701110] |This process was the source of most of the nasal diphthongs which are typical of Portuguese.
[10701120] |In particular, the Latin endings ''-anem'', ''-anum'' and ''-onem'' became ''-ão'' in most cases, cf. Lat. ''canem'', ''germanum'', ''rationem'' with Modern Port. ''cão'', ''irmão'', ''razão'', and their plurals ''-anes'', ''-anos'', ''-ones'' normally became ''-ães'', ''-ãos'', ''-ões'', cf. ''cães'', ''irmãos'', ''razões''.
[10701130] |===Movement to make Portuguese an official language of the UN=== 
[10701140] |There is a growing number of people in the Portuguese speaking media and the internet who are presenting the case to the CPLP and other organizations to run a debate in the [[Lusophone]] community with the purpose of bringing forward a petition to make Portuguese an official language of the United Nations.
[10701150] |In October 2005, during the international Convention of the [http://www.elosinternacional.com.br/index.htm Elos Club International ] that took place in Tavira, Portugal a petition was written and unanimously approved whose text can be found on the internet with the title ''Petição Para Tornar Oficial o Idioma Português na ONU''.
[10701160] |Romulo Alexandre Soares, president of the Brazil-Portugal Chamber highlights that the positioning of Brazil in the international arena as one of the emergent powers of the 21 century, the size of its population, and the presence of the language around the world provides legitimacy and justifies a petition to the UN to make the Portuguese an official language at the UN.
[10701170] |==Vocabulary== 
[10701180] |Most of the lexicon of Portuguese is derived from Latin.
[10701190] |Nevertheless, because of the [[Moors|Moorish]] occupation of the [[Iberian Peninsula]] during the Middle Ages, and the participation of Portugal in the [[Age of Discovery]], it has adopted loanwords from all over the world.
[10701200] |Very few Portuguese words can be traced to the [[Pre-Roman peoples of the Iberian Peninsula|pre-Roman inhabitants of Portugal]], which included the [[Gallaeci]], [[Lusitanians]], [[Celtici]] and [[Cynetes]].
[10701210] |The [[Phoenicians]] and [[Carthaginians]], briefly present, also left some scarce traces.
[10701220] |Some notable examples are ''abóbora'' "pumpkin" and ''bezerro'' "year-old calf", from the nearby [[Celtiberian language]] (probably through the Celtici); ''cerveja'' "beer", from [[Celtic languages|Celtic]]; ''saco'' "bag", from [[Phoenician language|Phoenician]]; and ''cachorro'' "dog, puppy", from [[Basque language|Basque]].
[10701230] |In the 5th century, the Iberian Peninsula (the [[Ancient Rome|Roman]] [[Hispania]]) was conquered by the [[Germanic peoples|Germanic]] [[Suevi]] and [[Visigoths]].
[10701240] |As they adopted the Roman civilization and language, however, these people contributed only a few words to the lexicon, mostly related to warfare — such as ''espora'' "spur", ''estaca'' "stake", and ''guerra'' "war", from [[Gothic language|Gothic]] ''*spaúra'', ''*stakka'', and ''*wirro'', respectively.
[10701250] |Between the 9th and 15th centuries Portuguese acquired about 1000 words from [[Arabic language|Arabic]] by influence of [[al-Andalus|Moorish Iberia]].
[10701260] |They are often recognizable by the initial Arabic article ''a''(''l'')''-'', and include many common words such as ''aldeia'' "village" from الضيعة ''aldaya'', ''alface'' "lettuce" from الخس ''alkhass'', ''armazém'' "warehouse" from المخزن ''almahazan'', and ''azeite'' "olive oil" from زيت ''azzait''.
[10701270] |From Arabic came also the grammatically peculiar word [[Insha'Allah|''oxalá'']] "hopefully".
[10701280] |The Mozambican currency name [[Mozambican Metical|''metical'']] was derived from the word مطقال ''miṭqāl'', a unit of weight.
[10701290] |The word Mozambique itself is from the Arabic name of sultan Muça Alebique (Musa Alibiki).
[10701300] |The name of the Portuguese town of [[Fátima, Portugal|Fátima]] comes from the name of one of the daughters of the prophet [[Muhammad]].
[10701310] |Starting in the 15th century, the Portuguese maritime explorations led to the introduction of many loanwords from [[Asia]]n languages.
[10701320] |For instance, ''catana'' "cutlass" from Japanese ''katana''; ''corja'' "rabble" from Malay ''kórchchu''; and ''chá'' "tea" from [[Chinese language|Chinese]] ''[[Tea#The word tea|''chá'']]''.
[10701330] |From South America came ''batata'' "[[potato]]", from [[Taino]]; ''ananás'' and ''abacaxi'', from [[Tupi-Guarani]] ''naná'' and [[Tupi language|Tupi]] ''ibá cati'', respectively (two species of [[pineapple]]), and ''tucano'' "[[toucan]]" from [[Guarani language|Guarani]] ''tucan''.
[10701340] |See [[List of Brazil state name etymologies]], for some more examples.
[10701350] |From the 16th to the 19th century, the role of Portugal as intermediary in the [[Atlantic slave trade]], with the establishment of large Portuguese colonies in Angola, Mozambique, and Brazil, Portuguese got several words of African and [[indigenous peoples of Brazil|Amerind]] origin, especially names for most of the animals and plants found in those territories.
[10701360] |While those terms are mostly used in the former colonies, many became current in European Portuguese as well.
[10701370] |From [[Kimbundu language|Kimbundu]], for example, came ''kifumate'' → ''cafuné'' "head caress", ''kusula'' → ''caçula'' "youngest child", ''marimbondo'' "tropical wasp", and ''kubungula'' → ''bungular'' "to dance like a wizard".
[10701380] |Finally, it has received a steady influx of loanwords from other European languages.
[10701390] |For example, ''melena'' "hair lock", ''fiambre'' "wet-cured ham" (in contrast with ''presunto'' "dry-cured ham" from Latin ''prae-exsuctus'' "dehydrated"), and ''castelhano'' "Castilian", from Spanish; ''colchete''/''crochê'' "bracket"/"crochet", ''paletó'' "jacket", ''batom'' "lipstick", and ''filé''/''filete'' "steak"/"slice" respectively, from French ''crochet'', ''paletot'', ''bâton'', ''filet''; ''macarrão'' "pasta", ''piloto'' "pilot", ''carroça'' "carriage", and ''barraca'' "barrack", from Italian ''maccherone'', ''pilota'', ''carrozza'', ''baracca''; and ''bife'' "steak", ''futebol'', ''revólver'', ''estoque'', ''folclore'', from English ''beef'', ''football'', ''revolver'', ''stock'', ''folklore''.
[10701400] |==Classification and related languages== 
[10701410] |Portuguese belongs to the [[West Iberian languages|West Iberian]] branch of the [[Romance language]]s, and it has special ties with the following members of this group:
[10701420] |* [[Galician language|Galician]] and the [[Fala language|Fala]], its closest relatives.
[10701430] |See below.
[10701440] |* [[Spanish language|Spanish]], the major language closest to Portuguese.
[10701450] |(See also [[Differences between Spanish and Portuguese]].)
[10701460] |* [[Mirandese language|Mirandese]], another West Iberian language spoken in Portugal.
[10701470] |* [[Judeo-Portuguese]] and [[Ladino language|Judeo-Spanish]], languages spoken by [[Sephardic Jew]]s, which remained close to Portuguese and Spanish.
[10701480] |Despite the obvious lexical and grammatical similarities between Portuguese and other Romance languages, it is not [[mutually intelligible]] with most of them.
[10701490] |Apart from Galician, Portuguese speakers will usually need some formal study of basic grammar and vocabulary, before attaining a reasonable level of comprehension of those languages, and vice-versa.
[10701500] |===Galician and the Fala=== 
[10701510] |The closest language to Portuguese is Galician, spoken in the autonomous community of Galicia (northwestern Spain).
[10701520] |The two were at one time a single language, known today as [[Galician-Portuguese]], but since the political separation of Portugal from Galicia they have diverged somewhat, especially in pronunciation and vocabulary.
[10701530] |Nevertheless, the core vocabulary and grammar of Galician are still noticeably closer to Portuguese than to Spanish.
[10701540] |In particular, like Portuguese, it uses the future subjunctive, the personal infinitive, and the synthetic pluperfect (see the section on the grammar of Portuguese, below).
[10701550] |Mutual intelligibility (estimated at 85% by R. A. Hall, Jr., 1989) is good between Galicians and northern Portuguese, but poorer between Galicians and speakers from central Portugal.
[10701560] |The Fala language is another descendant of Galician-Portuguese, spoken by a small number of people in the Spanish towns of Valverdi du Fresnu, As Ellas and Sa Martín de Trebellu (autonomous community of [[Extremadura]], near the border with Portugal).
[10701570] |===Influence on other languages=== 
[10701580] |Many languages have [[loanword|borrowed words]] from Portuguese, such as [[Bahasa Indonesia|Indonesian]], [[Sri Lanka]]n [[Sri Lanka Tamils (native)|Tamil]] and [[Sinhalese language|Sinhalese]] (see [[Sri Lanka Indo-Portuguese language|Sri Lanka Indo-Portuguese]]), [[Malay language|Malay]], [[Bengali language|Bengali]], [[English (language)|English]], [[Hindi]], [[Konkani language|Konkani]], [[Marathi language|Marathi]], [[Tetum language|Tetum]], [[Tsonga language|Xitsonga]], [[Papiamentu]], [[Japanese language|Japanese]], [[Barbadian|Bajan Creole]] (Spoken in Barbados), [[Lanc-Patuá]] (spoken in northern Brazil) and [[Sranan Tongo]] (spoken in Suriname).
[10701590] |It left a strong influence on the ''[[Old Tupi|língua brasílica]]'', a [[Tupi-Guarani|Tupi-Guarani language]] which was the most widely spoken in [[Brazil]] until the 18th century, and on the language spoken around [[Sikka]] in [[Flores|Flores Island]], [[Indonesia]].
[10701600] |In nearby [[Larantuka]], Portuguese is used for prayers in [[Holy Week]] rituals.
[10701610] |The Japanese-Portuguese dictionary ''[[Nippo Jisho]]'' (1603) was the first dictionary of Japanese in a European language, a product of [[Society of Jesus|Jesuit]] missionary activity in [[Japan]].
[10701620] |Building on the work of earlier Portuguese missionaries, the ''Dictionarium Anamiticum, Lusitanum et Latinum'' (Annamite-Portuguese-Latin dictionary) of [[Alexandre de Rhodes]] (1651) introduced the modern [[Vietnamese alphabet|orthography of Vietnamese]], which is based on the orthography of 17th-century Portuguese.
[10701630] |The [[Romanization]] of [[Chinese language|Chinese]] was also influenced by the Portuguese language (among others), particularly regarding [[List of common Chinese surnames|Chinese surnames]]; one example is ''Mei''.
[10701640] |See also [[List of English words of Portuguese origin]], [[Loan words in Indonesian]], [[Japanese words of Portuguese origin]], [[Malay_language#Borrowed_words|Borrowed words in Malay]], [[Sinhala words of Portuguese origin]], [[Loan words in Sri Lankan Tamil#Portuguese|Loan words from Portuguese in Sri Lankan Tamil]].
[10701650] |===Derived languages=== 
[10701660] |Beginning in the 16th century, the extensive contacts between Portuguese travelers and settlers, African slaves, and local populations led to the appearance of many [[pidgin]]s with varying amounts of Portuguese influence.
[10701670] |As these pidgins became the mother tongue of succeeding generations, they evolved into fully fledged [[creole language]]s, which remained in use in many parts of Asia and Africa until the 18th century.
[10701680] |Some Portuguese-based or Portuguese-influenced creoles are still spoken today, by over 3 million people worldwide, especially people of partial [[Portuguese people|Portuguese]] ancestry.
[10701690] |== Phonology == 
[10701700] |There is a maximum of 9 oral vowels and 19 consonants, though some varieties of the language have fewer phonemes (Brazilian Portuguese has only 8 oral vowel [[phone]]s).
[10701710] |There are also five nasal vowels, which some linguists regard as allophones of the oral vowels, ten oral [[diphthong]]s, and five nasal diphthongs.
[10701720] |===Vowels=== 
[10701730] |To the seven vowels of [[Vulgar Latin]], European Portuguese has added two [[Mid-centralized vowel|near central vowels]], one of which tends to be [[elision|elided]] in [[relaxed pronunciation|rapid speech]], like the ''e caduc'' of [[French language|French]] (represented either as {{IPA|/ɯ̽/}}, or {{IPA|/ɨ/}}, or {{IPA|/ə/}}).
[10701740] |The high vowels {{IPA|/e o/}} and the low vowels {{IPA|/ɛ ɔ/}} are four distinct phonemes, and they alternate in various forms of [[apophony]].
[10701750] |Like [[Catalan language|Catalan]], Portuguese uses vowel quality to contrast stressed syllables with unstressed syllables: isolated vowels tend to be [[Vowel#Height|raised]], and in some cases centralized, when unstressed.
[10701760] |Nasal diphthongs occur mostly at the end of words.
[10701770] |===Consonants===
[10701780] |The consonant inventory of Portuguese is fairly conservative.
[10701790] |The medieval affricates {{IPA|/ts/}}, {{IPA|/dz/}}, {{IPA|/tʃ/}}, {{IPA|/dʒ/}} merged with the fricatives {{IPA|/s/}}, {{IPA|/z/}}, {{IPA|/ʃ/}}, {{IPA|/ʒ/}}, respectively, but not with each other, and there were no other significant changes to the consonant phonemes since then.
[10701800] |However, some remarkable dialectal variants and [[allophone]]s have appeared, among which:
[10701810] |*In many regions of Brazil, {{IPA|/t/}} and {{IPA|/d/}} have the affricate allophones {{IPA|[tʃ]}} and {{IPA|[dʒ]}}, respectively, before {{IPA|/i/}} and {{IPA|/ĩ/}}.
[10701820] |([[Quebec French]] has a similar phenomenon, with alveolar affricates instead of postalveolars.
[10701830] |[[Japanese language|Japanese]] is another example).
[10701840] |*At the end of a syllable, the phoneme {{IPA|/l/}} has the allophone {{IPA|[u̯]}} in Brazilian Portuguese (''[[L-vocalization#L-vocalization|L-vocalization]]'').
[10701850] |*In many parts of Brazil and Angola, intervocalic {{IPA|/ɲ/}} is pronounced as a [[nasalization|nasalized]] [[palatal approximant]] {{IPA|[j̃]}} which nasalizes the preceding vowel, so that for instance {{IPA|/ˈniɲu/}} is pronounced {{IPA|[ˈnĩj̃u]}}.
[10701860] |*In most of Brazil, the alveolar sibilants {{IPA|/s/}} and {{IPA|/z/}} occur in complementary distribution at the end of syllables, depending on whether the consonant that follows is voiceless or voiced, as in English.
[10701870] |But in most of Portugal and parts of Brazil sibilants are postalveolar at the end of syllables, {{IPA|/ʃ/}} before voiceless consonants, and {{IPA|/ʒ/}} before voiced consonants (in [[Ladino language|Judeo-Spanish]], {{IPA|/s/}} is often replaced with {{IPA|/ʃ/}} at the end of syllables, too).
[10701880] |*There is considerable dialectal variation in the value of the [[Rhotic consonant|rhotic]] phoneme {{IPA|/ʁ/}}.
[10701890] |See [[Guttural R#Portuguese|Guttural R in Portuguese]], for details.
[10701900] |==Grammar== 
[10701910] |A particularly interesting aspect of the grammar of Portuguese is the verb.
[10701920] |Morphologically, more verbal inflections from classical Latin have been preserved by Portuguese than any other major Romance language.
[10701930] |See [[Romance copula#Morphological comparison|Romance copula]], for a detailed comparison.
[10701940] |It has also some innovations not found in other Romance languages (except Galician and the Fala):
[10701950] |* The [[present perfect tense]] has an iterative sense unique among the Romance languages.
[10701960] |It denotes an action or a series of actions which began in the past and are expected to keep repeating in the future.
[10701970] |For instance, the sentence ''Tenho tentado falar com ela'' would be translated to "I have been trying to talk to her", not "I have tried to talk to her".
[10701980] |On the other hand, the correct translation of the question "Have you heard the latest news?" is not ''*Tem ouvido a última notícia?'', but ''Ouviu a última notícia?'', since no repetition is implied.
[10701990] |* The future [[Subjunctive mood|subjunctive]] tense, which was developed by medieval [[West Iberian languages|West Iberian Romance]], but has now fallen into disuse in Spanish, is still used in [[vernacular]] Portuguese.
[10702000] |It appears in dependent clauses that denote a condition which must be fulfilled in the future, so that the independent clause will occur.
[10702010] |Other languages normally employ the present tense under the same circumstances:
[10702020] |:''Se ''for'' eleito presidente, mudarei a lei.''
[10702030] |:If ''I am'' elected president, I will change the law.
[10702040] |:''Quando ''fores'' mais velho, vais entender.''
[10702050] |:When ''you are'' older, you will understand.
[10702060] |* The personal [[infinitive]]: infinitives can [[inflection|inflect]] according to their subject in [[Grammatical person|person]] and [[Grammatical number|number]], often showing who is expected to perform a certain action; cf. ''É melhor voltares'' "It is better [for you] to go back," ''É melhor voltarmos'' "It is better [for us] to go back."
[10702070] |Perhaps for this reason, infinitive clauses replace subjunctive clauses more often in Portuguese than in other Romance languages.
[10702080] |==Writing system==
[10702090] |Portuguese is written with the [[Latin alphabet]], making use of five [[diacritic]]s to denote stress, vowel height, contraction, nasalization, and other sound changes (acute accent, grave accent, circumflex accent, tilde, and cedilla).
[10702100] |[[Brazilian Portuguese]] also uses the diaeresis mark.
[10702110] |Accented characters and digraphs are not counted as separate letters for [[collation]] purposes.
[10702120] |===Brazilian vs. European spelling=== 
[10702130] |There are some minor differences between the orthographies of Brazil and other Portuguese language countries.
[10702140] |One of the most pervasive is the use of acute accents in the European/African/Asian orthography in many words such as ''sinónimo'', where the Brazilian orthography has a circumflex accent, ''sinônimo''.
[10702150] |Another important difference is that Brazilian spelling often lacks ''c'' or ''p'' before ''c'', ''ç'', or ''t'', where the European orthography has them; for example, cf. Brazilian ''fato'' with European ''facto'', "fact", or Brazilian ''objeto'' with European ''objecto'', "object".
[10702160] |Some of these spelling differences reflect differences in the pronunciation of the words, but others are merely graphic.
[10702170] |==Examples== 
[10702180] |;Excerpt from the Portuguese [[national epic]] ''[[Os Lusíadas]]'', by author [[Luís de Camões]] (I, 33)
[10710010] |<article>Predictive analytics</article>
[10710020] |'''Predictive analytics''' encompasses a variety of techniques from [[statistics]] and [[data mining]] that analyze current and historical data to make predictions about future events.
[10710030] |Such predictions rarely take the form of absolute statements, and are more likely to be expressed as values that correspond to the odds of a particular event or behavior taking place in the future.
[10710040] |In business, predictive models exploit patterns found in historical and transactional data to identify risks and opportunities.
[10710050] |Models capture relationships among many factors to allow assessment of risk or potential associated with a particular set of conditions, guiding decision making for candidate transactions.
[10710060] |One of the most well-known applications is [[credit scoring]], which is used throughout [[financial services]].
[10710070] |Scoring models process a customer’s [[credit history]], [[loan application]], customer data, etc., in order to rank-order individuals by their likelihood of making future credit payments on time.
[10710080] |Predictive analytics are also used in [[insurance]], [[telecommunications]], [[retail]], [[travel]], [[healthcare]], [[Pharmaceutical company|pharmaceuticals]] and other fields.
[10710090] |== Types of predictive analytics == 
[10710100] |Generally, predictive analytics is used to mean [[predictive modeling]], scoring of predictive models, and [[forecasting]].
[10710110] |However, people are increasingly using the term to describe related analytic disciplines, such as descriptive modeling and decision modeling or optimization.
[10710120] |These disciplines also involve rigorous data analysis, and are widely used in business for segmentation and decision making, but have different purposes and the statistical techniques underlying them vary.
[10710130] |===Predictive models=== 
[10710140] |Predictive models analyze past performance to assess how likely a customer is to exhibit a specific behavior in the future in order to improve [[marketing effectiveness]].
[10710150] |This category also encompasses models that seek out subtle data patterns to answer questions about customer performance, such as fraud detection models.
[10710160] |Predictive models often perform calculations during live transactions, for example, to evaluate the risk or opportunity of a given customer or transaction, in order to guide a decision.
[10710170] |===Descriptive models=== 
[10710180] |Descriptive models “describe” relationships in data in a way that is often used to classify customers or prospects into groups.
[10710190] |Unlike predictive models that focus on predicting a single customer behavior (such as credit risk), descriptive models identify many different relationships between customers or products.
[10710200] |But the descriptive models do not rank-order customers by their likelihood of taking a particular action the way predictive models do.
[10710210] |Descriptive models are often used “offline,” for example, to categorize customers by their product preferences and life stage.
[10710220] |Descriptive modeling tools can be utilized to develop agent based models that can simulate large number of individualized agents to predict possible futures.
[10710230] |===Decision models=== 
[10710240] |Decision models describe the relationship between all the elements of a decision — the known data (including results of predictive models), the decision and the forecast results of the decision — in order to predict the results of decisions involving many variables.
[10710250] |These models can be used in optimization, a data-driven approach to improving decision logic that involves maximizing certain outcomes while minimizing others.
[10710260] |Decision models are generally used offline, to develop decision logic or a set of business rules that will produce the desired action for every customer or circumstance.
[10710270] |== Predictive analytics == 
[10710280] |===Definition=== 
[10710290] |Predictive analytics is an area of statistical analysis that deals with extracting information from data and using it to predict future trends and behavior patterns.
[10710300] |The core of predictive analytics relies on capturing relationships between explanatory variables and the predicted variables from past occurrences, and exploiting it to predict future outcomes.
[10710310] |===Current uses=== 
[10710320] |Although predictive analytics can be put to use in many applications, we outline a few examples where predictive analytics has shown positive impact in recent years.
[10710330] |====Analytical Customer Relationship Management (CRM)==== 
[10710340] |Analytical [[Customer Relationship Management]] is a frequent commercial application of Predictive Analysis.
[10710350] |Methods of predictive analysis are applied to customer data to pursue CRM objectives.
[10710360] |====Direct marketing==== 
[10710370] |Product [[marketing]] is constantly faced with the challenge of coping with the increasing number of competing products, different consumer preferences and the variety of methods (channels) available to interact with each consumer.
[10710380] |Efficient marketing is a process of understanding the amount of variability and tailoring the marketing strategy for greater profitability.
[10710390] |Predictive analytics can help identify consumers with a higher likelihood of responding to a particular marketing offer.
[10710400] |Models can be built using data from consumers’ past purchasing history and past response rates for each channel.
[10710410] |Additional information about the consumers demographic, geographic and other characteristics can be used to make more accurate predictions.
[10710420] |Targeting only these consumers can lead to substantial increase in response rate which can lead to a significant reduction in cost per acquisition.
[10710430] |Apart from identifying prospects, predictive analytics can also help to identify the most effective combination of products and marketing channels that should be used to target a given consumer.
[10710440] |====Cross-sell==== 
[10710450] |Often corporate organizations collect and maintain abundant data (e.g. customer records, sale transactions) and exploiting hidden relationships in the data can provide a competitive advantage to the organization.
[10710460] |For an organization that offers multiple products, an analysis of existing customer behavior can lead to efficient [[cross-selling|cross sell]] of products.
[10710470] |This directly leads to higher profitability per customer and strengthening of the customer relationship.
[10710480] |Predictive analytics can help analyze customers’ spending, usage and other behavior, and help cross-sell the right product at the right time.
[10710490] |====Customer retention==== 
[10710500] |With the amount of competing services available, businesses need to focus efforts on maintaining continuous [[consumer satisfaction]].
[10710510] |In such a competitive scenario, [[consumer loyalty]] needs to be rewarded and [[customer attrition]] needs to be minimized.
[10710520] |Businesses tend to respond to customer attrition on a reactive basis, acting only after the customer has initiated the process to terminate service.
[10710530] |At this stage, the chance of changing the customer’s decision is almost impossible.
[10710540] |Proper application of predictive analytics can lead to a more proactive retention strategy.
[10710550] |By a frequent examination of a customer’s past service usage, service performance, spending and other behavior patterns, predictive models can determine the likelihood of a customer wanting to terminate service sometime in the near future.
[10710560] |An intervention with lucrative offers can increase the chance of retaining the customer.
[10710570] |Silent attrition is the behavior of a customer to slowly but steadily reduce usage and is another problem faced by many companies.
[10710580] |Predictive analytics can also predict this behavior accurately and before it occurs, so that the company can take proper actions to increase customer activity.
[10710590] |====Underwriting==== 
[10710600] |Many businesses have to account for risk exposure due to their different services and determine the cost needed to cover the risk.
[10710610] |For example, auto insurance providers need to accurately determine the amount of premium to charge to cover each automobile and driver.
[10710620] |A financial company needs to assess a borrower’s potential and ability to pay before granting a loan.
[10710630] |For a health insurance provider, predictive analytics can analyze a few years of past medical claims data, as well as lab, pharmacy and other records where available, to predict how expensive an enrollee is likely to be in the future.
[10710640] |Predictive analytics can help [[underwriting]] of these quantities by predicting the chances of illness, [[Default (finance)|default]], [[bankruptcy]], etc.
[10710650] |Predictive analytics can streamline the process of customer acquisition, by predicting the future risk behavior of a customer using application level data.
[10710660] |Proper predictive analytics can lead to proper pricing decisions, which can help mitigate future risk of default.
[10710670] |====Collection analytics==== 
[10710680] |Every portfolio has a set of delinquent customers who do not make their payments on time.
[10710690] |The financial institution has to undertake collection activities on these customers to recover the amounts due.
[10710700] |A lot of collection resources are wasted on customers who are difficult or impossible to recover.
[10710710] |Predictive analytics can help optimize the allocation of collection resources by identifying the most effective collection agencies, contact strategies, legal actions and other strategies to each customer, thus significantly increasing recovery at the same time reducing collection costs.
[10710720] |====Fraud detection==== 
[10710730] |Fraud is a big problem for many businesses and can be of various types.
[10710740] |Inaccurate credit applications, fraudulent transactions, [[identity theft]]s and false insurance claims are some examples of this problem.
[10710750] |These problems plague firms all across the spectrum and some examples of likely victims are [[Credit card fraud|credit card issuers]], insurance companies, retail merchants, manufacturers, business to business suppliers and even services providers.
[10710760] |This is an area where a predictive model is often used to help weed out the “bads” and reduce a business's exposure to fraud.
[10710770] |====Portfolio, product or economy level prediction==== 
[10710780] |Often the focus of analysis is not the consumer but the product, portfolio, firm, industry or even the economy.
[10710790] |For example a retailer might be interested in predicting store level demand for inventory management purposes.
[10710800] |Or the Federal Reserve Board might be interested in predicting the unemployment rate for the next year.
[10710810] |These type of problems can be addressed by predictive analytics using Time Series techniques (see below).
[10710820] |Wrong Information....
[10710830] |==Statistical techniques== 
[10710840] |The approaches and techniques used to conduct predictive analytics can broadly be grouped into regression techniques and machine learning techniques.
[10710850] |====Regression Techniques==== 
[10710860] |Regression models are the mainstay of predictive analytics.
[10710870] |The focus lies on establishing a mathematical equation as a model to represent the interactions between the different variables in consideration.
[10710880] |Depending on the situation, there is a wide variety of models that can be applied while performing predictive analytics.
[10710890] |Some of them are briefly discussed below.
[10710900] |=====Linear Regression Model===== 
[10710910] |The linear regression model analyzes the relationship between the response or dependent variable and a set of independent or predictor variables.
[10710920] |This relationship is expressed as an equation that predicts the response variable as a linear function of the parameters.
[10710930] |These parameters are adjusted so that a measure of fit is optimized.
[10710940] |Much of the effort in model fitting is focused on minimizing the size of the residual, as well as ensuring that it is randomly distributed with respect to the model predictions.
[10710950] |The goal of regression is to select the parameters of the model so as to minimize the sum of the squared residuals.
[10710960] |This is referred to as '''[[ordinary least squares]]''' (OLS) estimation and results in best linear unbiased estimates (BLUE) of the parameters if and only if the [[Gauss–Markov theorem|Gauss-Markowitz]] assumptions are satisfied.
[10710970] |Once the model has been estimated we would be interested to know if the predictor variables belong in the model – i.e. is the estimate of each variable’s contribution reliable?
[10710980] |To do this we can check the statistical significance of the model’s coefficients which can be measured using the t-statistic.
[10710990] |This amounts to testing whether the coefficient is significantly different from zero.
[10711000] |How well the model predicts the dependent variable based on the value of the independent variables can be assessed by using the R² statistic.
[10711010] |It measures predictive power of the model i.e. the proportion of the total variation in the dependent variable that is “explained” (accounted for) by variation in the independent variables.
[10711020] |====Discrete choice models==== 
[10711030] |Multivariate regression (above) is generally used when the response variable is continuous and has an unbounded range.
[10711040] |Often the response variable may not be continuous but rather discrete.
[10711050] |While mathematically it is feasible to apply multivariate regression to discrete ordered dependent variables, some of the assumptions behind the theory of multivariate linear regression no longer hold, and there are other techniques such as discrete choice models which are better suited for this type of analysis.
[10711060] |If the dependent variable is discrete, some of those superior methods are [[logistic regression]], [[multinomial logit]] and [[probit]] models.
[10711070] |Logistic regression and probit models are used when the dependent variable is [[binary numeral system|binary]].
[10711080] |=====Logistic regression===== 
[10711090] |In a classification setting, assigning outcome probabilities to observations can be achieved through the use of a logistic model, which is basically a method which transforms information about the binary dependent variable into an unbounded continuous variable and estimates a regular multivariate model (See Allison’s Logistic Regression for more information on the theory of Logistic Regression).
[10711100] |The [[Wald test|Wald]] and [[likelihood-ratio test]] are used to test the statistical significance of each coefficient b in the model (analogous to the t tests used in OLS regression; see above).
[10711110] |A test assessing the goodness-of-fit of a classification model is the [[Hosmer and Lemeshow test]].
[10711120] |=====Multinomial logistic regression===== 
[10711130] |An extension of the [[binary logit model]] to cases where the dependent variable has more than 2 categories is the [[multinomial logit model]].
[10711140] |In such cases collapsing the data into two categories might not make good sense or may lead to loss in the richness of the data.
[10711150] |The multinomial logit model is the appropriate technique in these cases, especially when the dependent variable categories are not ordered (for examples colors like red, blue, green).
[10711160] |Some authors have extended multinomial regression to include feature selection/importance methods such as [[Random multinomial logit]].
[10711170] |=====Probit regression===== 
[10711180] |Probit models offer an alternative to logistic regression for modeling categorical dependent variables.
[10711190] |Even though the outcomes tend to be similar, the underlying distributions are different.
[10711200] |Probit models are popular in social sciences like economics.
[10711210] |A good way to understand the key difference between probit and logit models, is to assume that there is a latent variable z.
[10711220] |We do not observe z but instead observe y which takes the value 0 or 1.
[10711230] |In the logit model we assume that follows a logistic distribution.
[10711240] |In the probit model we assume that follows a standard normal distribution.
[10711250] |Note that in social sciences (example economics), probit is often used to model situations where the observed variable y is continuous but takes values between 0 and 1.
[10711260] |=====Logit vs. Probit===== 
[10711270] |The Probit model has been around longer than the logit model.
[10711280] |They look identical, except that the logistic distribution tends to be a little flat tailed.
[10711290] |In fact one of the reasons the logit model was formulated was that the probit model was extremely hard to compute because it involved calculating difficult integrals.
[10711300] |Modern computing however has made this computation fairly simple.
[10711310] |The coefficients obtained from the logit and probit model are also fairly close.
[10711320] |However the odds ratio makes the logit model easier to interpret.
[10711330] |For practical purposes the only reasons for choosing the probit model over the logistic model would be: 
[10711340] |* There is a strong belief that the underlying distribution is normal
[10711350] |* The actual event is not a binary outcome (e.g. Bankrupt/not bankrupt) but a proportion (e.g. Proportion of population at different debt levels).
[10711360] |==== Time series models==== 
[10711370] |[[Time series]] models are used for predicting or forecasting the future behavior of variables.
[10711380] |These models account for the fact that data points taken over time may have an internal structure (such as autocorrelation, trend or seasonal variation) that should be accounted for.
[10711390] |As a result standard regression techniques cannot be applied to time series data and methodology has been developed to decompose the trend, seasonal and cyclical component of the series.
[10711400] |Modeling the dynamic path of a variable can improve forecasts since the predictable component of the series can be projected into the future.
[10711410] |Time series models estimate difference equations containing stochastic components.
[10711420] |Two commonly used forms of these models are [[autoregressive model]]s (AR) and [[Moving average (technical analysis)|moving average]] (MA) models.
[10711430] |The [[Box-Jenkins]] methodology (1976) developed by George Box and G.M. Jenkins combines the AR and MA models to produce the [[Autoregressive moving average model|ARMA]] (autoregressive moving average) model which is the cornerstone of stationary time series analysis.
[10711440] |ARIMA (autoregressive integrated moving average models) on the other hand are used to describe non-stationary time series.
[10711450] |Box and Jenkins suggest differencing a non stationary time series to obtain a stationary series to which an ARMA model can be applied.
[10711460] |Non stationary time series have a pronounced trend and do not have a constant long-run mean or variance.
[10711470] |Box and Jenkins proposed a three stage methodology which includes: model identification, estimation and validation.
[10711480] |The identification stage involves identifying if the series is stationary or not and the presence of seasonality by examining plots of the series, autocorrelation and partial autocorrelation functions.
[10711490] |In the estimation stage, models are estimated using non-linear time series or maximum likelihood estimation procedures.
[10711500] |Finally the validation stage involves diagnostic checking such as plotting the residuals to detect outliers and evidence of model fit.
[10711510] |In recent years time series models have become more sophisticated and attempt to model conditional heteroskedasticity with models such as ARCH ([[autoregressive conditional heteroskedasticity]]) and GARCH (generalized autoregressive conditional heteroskedasticity) models frequently used for financial time series.
[10711520] |In addition time series models are also used to understand inter-relationships among economic variables represented by systems of equations using VAR (vector autoregression) and structural VAR models.
[10711530] |==== Survival or duration analysis==== 
[10711540] |[[Survival analysis]] is another name for time to event analysis.
[10711550] |These techniques were primarily developed in the medical and biological sciences, but they are also widely used in the social sciences like economics, as well as in engineering (reliability and failure time analysis).
[10711560] |Censoring and non-normality which are characteristic of survival data generate difficulty when trying to analyze the data using conventional statistical models such as multiple linear regression.
[10711570] |The Normal distribution, being a symmetric distribution, takes positive as well as negative values, but duration by its very nature cannot be negative and therefore normality cannot be assumed when dealing with duration/survival data.
[10711580] |Hence the normality assumption of regression models is violated.
[10711590] |A censored observation is defined as an observation with incomplete information.
[10711600] |Censoring introduces distortions into traditional statistical methods and is essentially a defect of the sample data.
[10711610] |The assumption is that if the data were not censored it would be representative of the population of interest.
[10711620] |In survival analysis, censored observations arise whenever the dependent variable of interest represents the time to a terminal event, and the duration of the study is limited in time.
[10711630] |An important concept in survival analysis is the hazard rate.
[10711640] |The hazard rate is defined as the probability that the event will occur at time t conditional on surviving until time t.
[10711650] |Another concept related to the hazard rate is the survival function which can be defined as the probability of surviving to time t. 
[10711660] |Most models try to model the hazard rate by choosing the underlying distribution depending on the shape of the hazard function.
[10711670] |A distribution whose hazard function slopes upward is said to have positive duration dependence, a decreasing hazard shows negative duration dependence whereas constant hazard is a process with no memory usually characterized by the exponential distribution.
[10711680] |Some of the distributional choices in survival models are: F, gamma, Weibull, log normal, inverse normal, exponential etc.
[10711690] |All these distributions are for a non-negative random variable.
[10711700] |Duration models can be parametric, non-parametric or semi-parametric.
[10711710] |Some of the models commonly used are Kaplan-Meier, Cox proportional hazard model (non parametric).
[10711720] |==== Classification and regression trees==== 
[10711730] |Classification and regression trees (CART) is a [[non-parametric statistics|non-parametric]] technique that produces either classification or regression trees, depending on whether the dependent variable is categorical or numeric, respectively.
[10711740] |Trees are formed by a collection of rules based on values of certain variables in the modeling data set 
[10711750] |* Rules are selected based on how well splits based on variables’ values can differentiate observations based on the dependent variable
[10711760] |* Once a rule is selected and splits a node into two, the same logic is applied to each “child” node (i.e. it is a recursive procedure)
[10711770] |* Splitting stops when CART detects no further gain can be made, or some pre-set stopping rules are met
[10711780] |Each branch of the tree ends in a terminal node 
[10711790] |* Each observation falls into one and exactly one terminal node
[10711800] |* Each terminal node is uniquely defined by a set of rules
[10711810] |A very popular method for predictive analytics is Leo Breiman's [[Random forests]] or derived versions of this technique like [[Random multinomial logit]].
[10711820] |==== Multivariate adaptive regression splines==== 
[10711830] |[[Multivariate adaptive regression splines]] (MARS) is a [[Non-parametric statistics|non-parametric]] technique that builds flexible models by fitting [[piecewise linear regression]]s.
[10711840] |An important concept associated with regression splines is that of a knot.
[10711850] |Knot is where one local regression model gives way to another and thus is the point of intersection between two splines.
[10711860] |In multivariate and adaptive regression splines, [[basis function]]s are the tool used for generalizing the search for knots.
[10711870] |Basis functions are a set of functions used to represent the information contained in one or more variables.
[10711880] |Multivariate and Adaptive Regression Splines model almost always creates the basis functions in pairs.
[10711890] |Multivariate and adaptive regression spline approach deliberately overfits the model and then prunes to get to the optimal model.
[10711900] |The algorithm is computationally very intensive and in practice we are required to specify an upper limit on the number of basis functions.
[10711910] |=== Machine learning techniques=== 
[10711920] |[[Machine learning]], a branch of artificial intelligence, was originally employed to develop techniques to enable computers to learn.
[10711930] |Today, since it includes a number of advanced statistical methods for regression and classification, it finds application in a wide variety of fields including [[medical diagnostics]], [[credit card fraud detection]], [[Face recognition|face]] and [[speech recognition]] and analysis of the [[stock market]].
[10711940] |In certain applications it is sufficient to directly predict the dependent variable without focusing on the underlying relationships between variables.
[10711950] |In other cases, the underlying relationships can be very complex and the mathematical form of the dependencies unknown.
[10711960] |For such cases, machine learning techniques emulate [[human cognition]] and learn from training examples to predict future events.
[10711970] |A brief discussion of some of these methods used commonly for predictive analytics is provided below.
[10711980] |A detailed study of machine learning can be found in Mitchell (1997).
[10711990] |==== Neural networks==== 
[10712000] |[[Neural networks]] are [[Nonlinearity|nonlinear]] sophisticated modeling techniques that are able to [[Model (abstract)|model]] complex functions.
[10712010] |They can be applied to problems of [[Time series|prediction]], [[Statistical classification|classification]] or [[Control theory|control]] in a wide spectrum of fields such as [[finance]], [[cognitive psychology]]/[[cognitive neuroscience|neuroscience]], [[medicine]], [[engineering]], and [[physics]].
[10712020] |Neural networks are used when the exact nature of the relationship between inputs and output is not known.
[10712030] |A key feature of neural networks is that they learn the relationship between inputs and output through training.
[10712040] |There are two types of training in neural networks used by different networks, [[Supervised learning|supervised]] and [[Unsupervised learning|unsupervised]] training, with supervised being the most common one.
[10712050] |Some examples of neural network training techniques are [[backpropagation]], quick propagation, [[Conjugate gradient method|conjugate gradient descent]], [[Radial basis function|projection operator]], Delta-Bar-Delta etc.
[10712060] |Theses are applied to network architectures such as multilayer [[perceptron]]s, [[Self-organizing map|Kohonen network]]s, [[Hopfield network]]s, etc.
[10712070] |====Radial basis functions==== 
[10712080] |A [[radial basis function]] (RBF) is a function which has built into it a distance criterion with respect to a center.
[10712090] |Such functions can be used very efficiently for interpolation and for smoothing of data.
[10712100] |Radial basis functions have been applied in the area of [[neural network]]s where they are used as a replacement for the sigmoidal transfer function.
[10712110] |Such networks have 3 layers, the input layer, the hidden layer with the RBF non-linearity and a linear output layer.
[10712120] |The most popular choice for the non-linearity is the Gaussian.
[10712130] |RBF networks have the advantage of not being locked into local minima as do the [[feed-forward]] networks such as the multilayer perceptron.
[10712140] |==== Support vector machines==== 
[10712150] |[[Support Vector Machine]]s (SVM) are used to detect and exploit complex patterns in data by clustering, classifying and ranking the data.
[10712160] |They are learning machines that are used to perform binary classifications and regression estimations.
[10712170] |They commonly use kernel based methods to apply linear classification techniques to non-linear classification problems.
[10712180] |There are a number of types of SVM such as linear, polynomial, sigmoid etc.
[10712190] |==== Naïve Bayes==== 
[10712200] |[[Naive Bayes classifier|Naïve Bayes]] based on Bayes conditional probability rule is used for performing classification tasks.
[10712210] |Naïve Bayes assumes the predictors are statistically independent which makes it an effective classification tool that is easy to interpret.
[10712220] |It is best employed when faced with the problem of ‘curse of dimensionality’ i.e. when the number of predictors is very high.
[10712230] |==== k-nearest neighbours==== 
[10712240] |The [[K-nearest neighbor algorithm|nearest neighbour algorithm]] (KNN) belongs to the class of pattern recognition statistical methods.
[10712250] |The method does not impose a priori any assumptions about the distribution from which the modeling sample is drawn.
[10712260] |It involves a training set with both positive and negative values.
[10712270] |A new sample is classified by calculating the distance to the nearest neighbouring training case.
[10712280] |The sign of that point will determine the classification of the sample.
[10712290] |In the k-nearest neighbour classifier, the k nearest points are considered and the sign of the majority is used to classify the sample.
[10712300] |The performance of the kNN algorithm is influenced by three main factors: (1) the distance measure used to locate the nearest neighbours; (2) the decision rule used to derive a classification from the k-nearest neighbours; and (3) the number of neighbours used to classify the new sample.
[10712310] |It can be proved that, unlike other methods, this method is universally asymptotically convergent, i.e.: as the size of the training set increases, if the observations are iid, regardless of the distribution from which the sample is drawn, the predicted class will converge to the class assignment that minimizes misclassification error.
[10712320] |See Devroy et alt.
[10712330] |==Popular tools== 
[10712340] |There are numerous tools available in the marketplace which help with the execution of predictive analytics.
[10712350] |These range from those which need very little user sophistication to those that are designed for the expert practitioner.
[10712360] |The difference between these tools is often in the level of customization and heavy data lifting allowed.
[10712370] |For traditional statistical modeling some of the popular tools are [[DAP (software)|DAP]]/[[SAS Institute|SAS]], S-Plus, [[PSPP]]/[[SPSS]] and Stata.
[10712380] |For machine learning/data mining type of applications, KnowledgeSEEKER, KnowledgeSTUDIO, Enterprise Miner, GeneXproTools, [[Viscovery]], Clementine, [[KXEN Inc.|KXEN Analytic Framework]], [[InforSense]] and Excel Miner are some of the popularly used options.
[10712390] |Classification Tree analysis can be performed using CART software.
[10712400] |SOMine is a predictive analytics tool based on [[self-organizing map]]s (SOMs) available from [[Viscovery Software]].
[10712410] |[[R (programming_language)|R]] is a very powerful tool that can be used to perform almost any kind of statistical analysis, and is freely downloadable.
[10712420] |[[WEKA]] is a freely available [[open source|open-source]] collection of [[machine learning]] methods for pattern classification, regression, clustering, and some types of meta-learning, which can be used for predictive analytics.
[10712430] |[[RapidMiner]] is another freely available integrated [[open source|open-source]] software environment for predictive analytics, [[data mining]], and [[machine learning]] fully integrating WEKA and providing an even larger number of methods for predictive analytics.
[10712440] |Recently, in an attempt to provide a standard language for expressing predictive models, the [[Predictive Model Markup Language]] (PMML) has been proposed.
[10712450] |Such an XML-based language provides a way for the different tools to define predictive models and to share these between PMML compliant applications.
[10712460] |Several tools already produce or consume PMML documents, these include [[ADAPA]], [[IBM DB2]] Warehouse, CART, SAS Enterprise Miner, and [[SPSS]].
[10712470] |Predictive analytics has also found its way into the IT lexicon, most notably in the area of IT Automation.
[10712480] |Vendors such as [[Stratavia]] and their [[Data Palette]] product offer predictive analytics as part of their automation platform, predicting how resources will behave in the future and automate the environment accordingly.
[10712490] |The widespread use of predictive analytics in industry has led to the proliferation of numerous productized solutions firms.
[10712500] |Some of them are highly specialized (focusing, for example, on fraud detection, automatic saleslead generation or response modeling) in a specific domain ([[Fair Isaac]] for credit card scores) or industry verticals (MarketRx in Pharmaceutical).
[10712510] |Others provide predictive analytics services in support of a wide range of business problems across industry verticals ([[Fifth C]]).
[10712520] |Predictive Analytics competitions are also fairly common and often pit academics and Industry practitioners (see for example, KDD CUP).
[10712530] |==Conclusion== 
[10712540] |Predictive analytics adds great value to a businesses decision making capabilities by allowing it to formulate smart policies on the basis of predictions of future outcomes.
[10712550] |A broad range of tools and techniques are available for this type of analysis and their selection is determined by the analytical maturity of the firm as well as the specific requirements of the problem being solved.
[10712560] |==Education== 
[10712570] |Predictive analytics is taught at the following institutions: 
[10712580] |* Ghent University, Belgium: [http://www.mma.UGent.be Master of Marketing Analysis], an 8-month advanced master degree taught in English with strong emphasis on applications of predictive analytics in Analytical CRM.
[10720010] |<article>RapidMiner</article>
[10720020] |'''RapidMiner''' (formerly YALE (Yet Another Learning Environment)) is an environment for [[machine learning]] and [[data mining]] experiments.
[10720030] |It allows experiments to be made up of a large number of arbitrarily nestable operators, described in [[XML]] files which can easily be created with RapidMiner's [[graphical user interface]].
[10720040] |Applications of RapidMiner cover both research and real-world data mining tasks.
[10720050] |The initial version has been developed by the Artificial Intelligence Unit of [[Dortmund University of Technology|University of Dortmund]] since [[2001]].
[10720060] |It is distributed under a [[GNU]] license, and has been hosted by [[SourceForge]] since [[2004]].
[10720070] |RapidMiner provides more than 400 operators for all main machine learning procedures, including input and output, and data preprocessing and visualization.
[10720080] |It is written in the [[Java (programming language)|Java programming language]] and therefore can work on all popular operating systems.
[10720090] |It also integrates all learning schemes and attribute evaluators of the [[Weka (machine learning)|Weka]] learning environment.
[10720100] |== Properties == 
[10720110] |Some properties of RapidMiner are: 
[10720120] |* written in Java
[10720130] |* [[knowledge discovery]] processes are modeled as operator trees
[10720140] |* internal XML representation ensures standardized interchange format of data mining experiments
[10720150] |* scripting language allows for automatic large-scale experiments
[10720160] |* multi-layered data view concept ensures efficient and transparent data handling
[10720170] |* [[graphical user interface]], [[command line]] mode ([[Batch file|batch mode]]), and [[Java API]] for using RapidMiner from your own programs
[10720180] |* [[plugin]] and [[Extension (computing)|extension]] mechanisms, several plugins already exist
[10720190] |* [[plotting]] facility offering a large set of high-dimensional visualization schemes for data and models
[10720200] |* applications include [[text mining]], multimedia mining, feature engineering, data stream mining and tracking drifting concepts, development of ensemble methods, and distributed data mining.
[10730010] |<article>Russian language</article>
[10730020] |'''Russian''' (<span class="unicode audiolink">[[:Media:Ru-russkiy jizyk.ogg|]]</span>&nbsp;<span class="metadata audiolinkinfo"><small>([[Wikipedia:Media help|help]]•[[:Image:Ru-russkiy jizyk.ogg|info]])</small></span>, [[Romanization of Russian|transliteration]]: , {{IPA-ru|ˈruskʲɪj jɪˈzɨk}}) is the most geographically widespread language of [[Eurasia]], the most widely spoken of the [[Slavic languages]], and the largest [[native language]] in [[Europe]].
[10730030] |Russian belongs to the family of [[Indo-European languages]] and is one of three (or, according to some authorities , four) living members of the [[East Slavic languages]], the others being [[Belarusian language|Belarusian]] and [[Ukrainian language|Ukrainian]] (and possibly [[Rusyn language|Rusyn]], often considered a dialect of Ukrainian).
[10730040] |It is also spoken by the countries of the [[Russophone]].
[10730050] |Written examples of Old East Slavonic are attested from the 10th century onwards.
[10730060] |Today Russian is widely used outside [[Russia]].
[10730070] |It is applied as a means of coding and storage of universal knowledge — 60–70% of all world information is published in English and Russian languages.
[10730080] |Over a quarter of the world's scientific literature is published in Russian.
[10730090] |Russian is also a necessary accessory of world communications systems (broadcasts, air- and space communication, etc).
[10730100] |Due to the status of the [[Soviet Union]] as a [[superpower]], Russian had great political importance in the 20th century.
[10730110] |Hence, the language is one of the [[United Nations#Languages|official languages]] of the [[United Nations]].
[10730120] |Russian distinguishes between [[consonant]] [[phoneme]]s with [[palatalization|palatal]] [[secondary articulation]] and those without, the so-called ''soft'' and ''hard'' sounds.
[10730130] |This distinction is found between pairs of almost all consonants and is one of the most distinguishing features of the language.
[10730140] |Another important aspect is the [[vowel reduction|reduction]] of [[stress (linguistics)|unstressed]] [[vowel]]s, which is somewhat similar to [[Unstressed and reduced vowels in English|that of English]].
[10730150] |Stress, which is unpredictable, is not normally indicated orthographically.
[10730160] |According to the Institute of Russian Language of the Russian Academy of Sciences, an optional [[acute accent]] () may, and sometimes should, be used to mark stress.
[10730170] |For example, it is used to distinguish between otherwise identical words, especially when context doesn't make it obvious: ''замо́к/за́мок'' (lock/castle), ''сто́ящий/стоя́щий'' (worthwhile/standing), ''чудно́/чу́дно'' (this is odd/this is marvellous), ''молоде́ц/мо́лодец'' (attaboy/fine young man), ''узна́ю/узнаю́'' (I shall learn it/I am learning it), ''отреза́ть/отре́зать'' (infinitive for "cut"/perfective for "cut"); to indicate the proper pronouncation of uncommon words, especially personal and family names (''афе́ра, гу́ру, Гарси́а, Оле́ша, Фе́рми''), and to express the stressed word in the sentence (''Ты́ съел печенье?/Ты съе́л печенье?/Ты съел пече́нье?'' - Was it you who eat the cookie?/Did you eat the cookie?/Was the cookie your meal?).
[10730180] |Acute accents are mandatory in lexical dictionaries and books intended to be used either by children or foreign readers.
[10730190] |==Classification== 
[10730200] |Russian is a [[Slavic languages|Slavic language]] in the [[Indo-European Languages|Indo-European family]].
[10730210] |From the point of view of the [[spoken language]], its closest relatives are [[Ukrainian language|Ukrainian]] and [[Belarusian language|Belarusian]], the other two national languages in the [[East Slavic languages|East Slavic]] group.
[10730220] |In many places in eastern [[Ukraine]] and [[Belarus]], these languages are spoken interchangeably, and in certain areas traditional bilingualism resulted in language mixture, e.g. [[Surzhyk]] in eastern Ukraine and [[Trasianka]] in Belarus.
[10730240] |An East Slavic [[Old Novgorod dialect]], although vanished during the fifteenth or sixteenth century, is sometimes considered to have played a significant role in formation of the modern Russian language.
[10730250] |The vocabulary (mainly abstract and literary words), principles of word formation, and, to some extent, inflections and literary style of Russian have been also influenced by [[Church Slavonic language|Church Slavonic]], a developed and partly adopted form of the [[South Slavic languages|South Slavic]] [[Old Church Slavonic]] language used by the [[Russian Orthodox Church]].
[10730260] |However, the East Slavic forms have tended to be used exclusively in the various dialects that are experiencing a rapid decline.
[10730270] |In some cases, both the [[East Slavic languages|East Slavic]] and the [[Church Slavonic]] forms are in use, with slightly different meanings.
[10730280] |''For details, see [[Russian phonology]] and [[History of the Russian language]].''
[10730290] |Russian phonology and syntax (especially in northern dialects) have also been influenced to some extent by the numerous Finnic languages of the [[Finno-Ugric languages|Finno-Ugric subfamily]]: [[Merya language|Merya]], [[Moksha language|Moksha]], [[Muromian language|Muromian]], the language of the [[Meshchera]], [[Veps language|Veps]], et cetera.
[10730300] |These languages, some of them now extinct, used to be spoken in the center and in the north of what is now the European part of Russia.
[10730310] |They came in contact with Eastern Slavic as far back as the early Middle Ages and eventually served as substratum for the modern Russian language.
[10730320] |The Russian dialects spoken north, north-east and north-west of [[Moscow]] have a considerable number of words of Finno-Ugric origin.
[10730330] |Over the course of centuries, the vocabulary and literary style of Russian have also been influenced by Turkic/Caucasian/Central Asian languages, as well as Western/Central European languages such as [[Polish language|Polish]], [[Latin]], [[Dutch language|Dutch]], [[German language|German]], [[French language|French]], and [[English language|English]].
[10730340] |According to the [[Defense Language Institute]] in [[Monterey, California]], Russian is classified as a level III language in terms of learning difficulty for native English speakers, requiring approximately 780 hours of immersion instruction to achieve intermediate fluency.
[10730350] |It is also regarded by the [[United States Intelligence Community]] as a "hard target" language, due to both its difficulty to master for English speakers as well as due to its critical role in American world policy.
[10730360] |==Geographic distribution== 
[10730370] |Russian is primarily spoken in [[Russia]] and, to a lesser extent, the other countries that were once constituent republics of the [[Soviet Union|USSR]].
[10730380] |Until [[1917]], it was the sole official language of the [[Russian Empire]].
[10730390] |During the Soviet period, the policy toward the languages of the various other ethnic groups fluctuated in practice.
[10730400] |Though each of the constituent republics had its own official language, the unifying role and superior status was reserved for Russian.
[10730410] |Following the break-up of [[1991]], several of the newly independent states have encouraged their native languages, which has partly reversed the privileged status of Russian, though its role as the language of post-Soviet national intercourse throughout the region has continued.
[10730420] |In [[Latvia]], notably, its official recognition and legality in the classroom have been a topic of considerable debate in a country where more than one-third of the population is Russian-speaking, consisting mostly of post-[[World War II]] immigrants from Russia and other parts of the former [[USSR]] (Belarus, Ukraine).
[10730430] |Similarly, in [[Estonia]], the Soviet-era immigrants and their Russian-speaking descendants constitute 25,6% of the country's current population and 58,6% of the native Estonian population is also able to speak Russian.
[10730440] |In all, 67,8% of Estonia's population can speak Russian.
[10730450] |In [[Kazakhstan]] and [[Kyrgyzstan]], Russian remains a co-official language with [[Kazakh language|Kazakh]] and [[Kyrgyz language|Kyrgyz]] respectively.
[10730460] |Large Russian-speaking communities still exist in northern Kazakhstan, and ethnic Russians comprise 25.6 % of Kazakhstan's population.
[10730470] |A much smaller Russian-speaking minority in [[Lithuania]] has represented less than 1/10 of the country's overall population.
[10730480] |Nevertheless more than half of the population of the [[Baltic states]] are able to hold a conversation in Russian and almost all have at least some familiarity with the most basic spoken and written phrases.
[10730490] |The Russian control of [[Finland]] in 1809–1918, however, has left few Russian speakers in Finland.
[10730500] |There are 33,400 Russian speakers in Finland, amounting to 0.6% of the population.
[10730510] |5000 (0.1%) of them are late 19th century and 20th century immigrants, and the rest are recent immigrants, who have arrived in the 90's and later.
[10730520] |In the twentieth century, Russian was widely taught in the schools of the members of the old [[Warsaw Pact]] and in other [[Communist state|countries]] that used to be allies of the USSR.
[10730530] |In particular, these countries include [[Poland]], [[Bulgaria]], the [[Czech Republic]], [[Slovakia]], [[Hungary]], [[Romania]], [[Albania]] and [[Cuba]].
[10730540] |However, younger generations are usually not fluent in it, because Russian is no longer mandatory in the school system.
[10730550] |It is currently the most widely-taught foreign language in [[Mongolia]].
[10730560] |Russian is also spoken in [[Israel]] by at least 750,000 ethnic [[Jew]]ish immigrants from the former [[Soviet Union]] (1999 census).
[10730570] |The Israeli [[Mass media|press]] and [[website]]s regularly publish material in Russian.
[10730580] |Sizable Russian-speaking communities also exist in [[North America]], especially in large urban centers of the [[United States|U.S.]] and [[Canada]] such as [[New York City]], [[Philadelphia]], [[Boston, Massachusetts|Boston]], [[Los Angeles, California|Los Angeles]], [[San Francisco]], [[Seattle]], [[Toronto]], [[Baltimore]], [[Miami, Florida|Miami]], [[Chicago]], [[Denver]], and the [[Cleveland, Ohio|Cleveland]] suburb of [[Richmond Heights, Ohio|Richmond Heights]].
[10730590] |In the former two, Russian-speaking groups total over half a million.
[10730600] |In a number of locations they issue their own newspapers, and live in their self-sufficient neighborhoods (especially the generation of immigrants who started arriving in the early sixties).
[10730610] |Only about a quarter of them are ethnic Russians, however.
[10730620] |Before the [[dissolution of the Soviet Union]], the overwhelming majority of [[Russophone]]s in North America were Russian-speaking [[Jews]].
[10730630] |Afterwards the influx from the countries of the former [[Soviet Union]] changed the statistics somewhat.
[10730640] |According to the [[United States 2000 Census]], Russian is the primary language spoken in the homes of over 700,000 individuals living in the United States.
[10730650] |Significant Russian-speaking groups also exist in [[Western Europe]].
[10730660] |These have been fed by several waves of immigrants since the beginning of the twentieth century, each with its own flavor of language.
[10730670] |[[Germany]], the [[United Kingdom]], [[Spain]], [[France]], [[Italy]], [[Belgium]], [[Greece]], [[Brazil]], [[Norway]], [[Austria]], and [[Turkey]] have significant Russian-speaking communities totaling 3 million people.
[10730680] |Two thirds of them are actually Russian-speaking descendants of [[German people|Germans]], [[Greeks]], [[Jews]], [[Armenians]], or [[Ukrainians]] who either repatriated after the [[USSR]] collapsed or are just looking for temporary employment.
[10730690] |Recent estimates of the total number of speakers of Russian: 
[10730700] |===Official status=== 
[10730710] |Russian is the official language of [[Russia]].
[10730720] |It is also an official language of [[Belarus]], [[Kazakhstan]], [[Kyrgyzstan]], an unofficial but widely spoken language in [[Ukraine]] and the de facto official language of the [[List of unrecognized countries|unrecognized]] of [[Transnistria]], [[South Ossetia]] and [[Abkhazia]].
[10730730] |Russian is one of the [[United Nations#Languages|six official languages]] of the [[United Nations]].
[10730740] |Education in Russian is still a popular choice for both Russian as a second language (RSL) and native speakers in Russia as well as many of the former Soviet republics.
[10730750] |97% of the public school students of Russia, 75% in Belarus, 41% in Kazakhstan, 25% in [[Ukraine]], 23% in Kyrgyzstan, 21% in [[Moldova]], 7% in [[Azerbaijan]], 5% in [[Georgia (country)|Georgia]] and 2% in [[Armenia]] and [[Tajikistan]] receive their education only or mostly in Russian.
[10730760] |Although the corresponding percentage of ethnic Russians is 78% in [[Russia]], 10% in [[Belarus]], 26% in [[Kazakhstan]], 17% in [[Ukraine]], 9% in [[Kyrgyzstan]], 6% in [[Republic of Moldova|Moldova]], 2% in [[Azerbaijan]], 1.5% in [[Georgia (country)|Georgia]] and less than 1% in both [[Armenia]] and [[Tajikistan]].
[10730770] |Russian-language schooling is also available in Latvia, Estonia and Lithuania, but due to education reforms, a number of subjects taught in Russian are reduced at the high school level.
[10730780] |The language has a co-official status alongside [[Moldovan language|Moldovan]] in the autonomies of [[Gagauzia]] and [[Transnistria]] in [[Moldova]], and in seven [[Romania]]n [[Commune in Romania|communes]] in [[Tulcea County|Tulcea]] and [[Constanţa County|Constanţa]] counties.
[10730790] |In these localities, Russian-speaking [[Lipovans]], who are a recognized ethnic minority, make up more than 20% of the population.
[10730800] |Thus, according to Romania's minority rights law, education, signage, and access to public administration and the justice system are provided in Russian alongside Romanian.
[10730810] |In the [[Crimea|Autonomous Republic of Crimea]] in Ukraine, Russian is an officially recognized language alongside with [[Crimean Tatar language|Crimean Tatar]], but in reality, is the only language used by the government, thus being a ''[[de facto]]'' official language.
[10730820] |===Dialects=== 
[10730830] |Despite leveling after 1900, especially in matters of vocabulary, a number of dialects exist in Russia.
[10730840] |Some linguists divide the dialects of the Russian language into two primary regional groupings, "Northern" and "Southern", with [[Moscow]] lying on the zone of transition between the two.
[10730850] |Others divide the language into three groupings, Northern, Central and Southern, with Moscow lying in the Central region.
[10730860] |[[Dialectology]] within Russia recognizes dozens of smaller-scale variants.
[10730870] |The dialects often show distinct and non-standard features of pronunciation and intonation, vocabulary, and grammar.
[10730880] |Some of these are relics of ancient usage now completely discarded by the standard language.
[10730890] |The [[northern Russian dialects]] and those spoken along the [[Volga River]] typically pronounce unstressed {{IPA|/o/}} clearly (the phenomenon called [[vowel reduction in Russian#Back vowels|okanye]]/оканье).
[10730900] |East of Moscow, particularly in [[Ryazan Region]], unstressed {{IPA|/e/}} and {{IPA|/a/}} following [[palatalization|palatalized]] consonants and preceding a stressed syllable are not reduced to {{IPA|[ɪ]}} (like in the Moscow dialect), being instead pronounced as {{IPA|/a/}} in such positions (e.g. несл'''и''' is pronounced as {{IPA|[nʲasˈlʲi]}}, not as {{IPA|[nʲɪsˈlʲi]}}) - this is called [[yakanye]]/ яканье; many southern dialects have a palatalized final {{IPA|/tʲ/}} in 3rd person forms of verbs (this is unpalatalized in the standard dialect) and a fricative {{IPA|[ɣ]}} where the standard dialect has {{IPA|[g]}}.
[10730910] |However, in certain areas south of Moscow, e.g. in and around [[Tula, Russia|Tula]], {{IPA|/g/}} is pronounced as in the Moscow and northern dialects unless it precedes a voiceless plosive or a pause.
[10730920] |In this position {{IPA|/g/}} is lenited and devoiced to the fricative {{IPA|[x]}}, e.g. друг {{IPA|[drux]}} (in Moscow's dialect, only Бог {{IPA|[box]}}, лёгкий {{IPA|[lʲɵxʲkʲɪj]}}, мягкий {{IPA|[ˈmʲæxʲkʲɪj]}} and some derivatives follow this rule).
[10730930] |Some of these features (e.g. a [[debuccalization|debuccalized]] or [[lenition|lenited]] {{IPA|/g/}} and palatalized final {{IPA|/tʲ/}} in 3rd person forms of verbs) are also present in modern [[Ukrainian language|Ukrainian]], indicating either a linguistic continuum or strong influence one way or the other.
[10730940] |The city of [[Veliky Novgorod]] has historically displayed a feature called chokanye/tsokanye (чоканье/цоканье), where {{IPA|/ʨ/}} and {{IPA|/ʦ/}} were confused (this is thought to be due to influence from [[Finnish language|Finnish]], which doesn't distinguish these sounds).
[10730950] |So, '''ц'''апля ("heron") has been recorded as 'чапля'.
[10730960] |Also, the second palatalization of [[Velar consonant|velar]]s did not occur there, so the so-called '''ě²''' (from the Proto-Slavonic diphthong *ai) did not cause {{IPA|/k, g, x/}} to shift to {{IPA|/ʦ, ʣ, s/}}; therefore where [[Standard Russian]] has '''ц'''епь ("chain"), the form '''к'''епь {{IPA|[kʲepʲ]}} is attested in earlier texts.
[10730970] |Among the first to study Russian dialects was [[Mikhail Lomonosov|Lomonosov]] in the eighteenth century.
[10730980] |In the nineteenth, [[Vladimir Dal]] compiled the first dictionary that included dialectal vocabulary.
[10730990] |Detailed mapping of Russian dialects began at the turn of the twentieth century.
[10731000] |In modern times, the monumental ''Dialectological Atlas of the Russian Language'' (''Диалектологический атлас русского языка'' {{IPA|[dʲɪɐˌlʲɛktəlɐˈgʲiʨɪskʲɪj ˈatləs ˈruskəvə jɪzɨˈka]}}), was published in 3 folio volumes 1986–1989, after four decades of preparatory work.
[10731010] |The ''standard language'' is based on (but not identical to) the Moscow dialect.
[10731020] |===Derived languages=== 
[10731030] |* [[Balachka]] a dialect, spoken primarily by [[Cossacks]], in the regions of Don, [[Kuban]] and [[Terek]].
[10731040] |* [[Fenya]], a criminal [[argot]] of ancient origin, with Russian grammar, but with distinct vocabulary.
[10731050] |* [[Nadsat]], the fictional language spoken in '[[A Clockwork Orange]]' uses a lot of Russian words and Russian slang.
[10731060] |* [[Surzhyk]] is a language with Russian and Ukrainian features, spoken in some areas of Ukraine
[10731070] |* [[Trasianka]] is a language with Russian and Belarusian features used by a large portion of the rural population in [[Belarus]].
[10731080] |* [[Quelia]], a pseudo pidgin of German and Russian.
[10731090] |* [[Runglish]], Russian-English pidgin.
[10731100] |This word is also used by English speakers to describe the way in which Russians attempt to speak English using Russian morphology and/or syntax.
[10731110] |* [[Russenorsk language|Russenorsk]] is an extinct [[pidgin]] language with mostly Russian vocabulary and mostly [[Norwegian language|Norwegian]] grammar, used for communication between [[Russians]] and [[Norway|Norwegian]] traders in the Pomor trade in [[Finnmark]] and the [[Kola Peninsula]].
[10731120] |==Writing system== 
[10731130] |===Alphabet=== 
[10731140] |Russian is written using a modified version of the [[Cyrillic alphabet|Cyrillic (кириллица)]] alphabet.
[10731150] |The Russian alphabet consists of 33 letters.
[10731160] |The following table gives their upper case forms, along with [[help:IPA|IPA]] values for each letter's typical sound: 
[10731170] |Older letters of the Russian alphabet include <>, which merged to <е> ({{IPA|/e/}}); <і> and <>, which both merged to <и>({{IPA|/i/}}); <>, which merged to <ф> ({{IPA|/f/}}); and <>, which merged to <я> ({{IPA|/ja/}} or {{IPA|/ʲa/}}).
[10731180] |While these older letters have been abandoned at one time or another, they may be used in this and related articles.
[10731190] |The [[yer]]s <ъ> and <ь> originally indicated the pronunciation of ''ultra-short'' or ''reduced'' {{IPA|/ŭ/}}, {{IPA|/ĭ/}}.
[10731200] |The Russian alphabet has many systems of [[character encoding]].
[10731210] |[[KOI8-R]] was designed by the government and was intended to serve as the standard encoding.
[10731220] |This encoding is still used in UNIX-like operating systems.
[10731230] |Nevertheless, the spread of [[MS-DOS]] and [[Microsoft Windows]] created chaos and ended by establishing different encodings as de-facto standards.
[10731240] |For communication purposes, a number of conversion applications were developed.
[10731245] |"[[iconv]]" is an example that is supported by most versions of [[Linux]], [[Macintosh]] and some other [[operating system]]s.
[10731250] |Most implementations (especially old ones) of the character encoding for the Russian language are aimed at simultaneous use of English and Russian characters only and do not include support for any other language.
[10731260] |Certain hopes for a unification of the character encoding for the Russian alphabet are related to the [[Unicode|Unicode standard]], specifically designed for peaceful coexistence of various languages, including even [[dead language]]s.
[10731270] |[[Unicode]] also supports the letters of the [[Early Cyrillic alphabet]], which have many similarities with the [[Greek alphabet]].
[10731280] |===Orthography=== 
[10731290] |Russian spelling is reasonably phonemic in practice.
[10731300] |It is in fact a balance among phonemics, morphology, etymology, and grammar; and, like that of most living languages, has its share of inconsistencies and controversial points.
[10731310] |A number of rigid [[spelling rule]]s introduced between the 1880s and 1910s have been responsible for the latter whilst trying to eliminate the former.
[10731320] |The current spelling follows the major reform of 1918, and the final codification of 1956.
[10731330] |An update proposed in the late 1990s has met a hostile reception, and has not been formally adopted.
[10731340] |The punctuation, originally based on Byzantine Greek, was in the seventeenth and eighteenth centuries reformulated on the French and German models.
[10731350] |==Sounds== 
[10731360] |The phonological system of Russian is inherited from [[Common Slavonic]], but underwent considerable modification in the early historical period, before being largely settled by about 1400.
[10731370] |The language possesses five vowels, which are written with different letters depending on whether or not the preceding consonant is [[palatalization|palatalized]].
[10731380] |The consonants typically come in plain vs. palatalized pairs, which are traditionally called ''hard'' and ''soft.''
[10731390] |(The ''hard'' consonants are often [[velarization|velarized]], especially before back vowels, although in some dialects the velarization is limited to hard {{IPA|/l/}}).
[10731400] |The standard language, based on the Moscow dialect, possesses heavy stress and moderate variation in pitch.
[10731410] |Stressed vowels are somewhat lengthened, while unstressed vowels tend to be reduced to near-close vowels or an unclear [[schwa]].
[10731420] |(See also: [[vowel reduction in Russian]].)
[10731430] |The Russian [[syllable]] structure can be quite complex with both initial and final consonant clusters of up to 4 consecutive sounds.
[10731440] |Using a formula with V standing for the nucleus (vowel) and C for each consonant the structure can be described as follows: 
[10731450] |(C)(C)(C)(C)V(C)(C)(C)(C)
[10731460] |Clusters of four consonants are not very common, however, especially within a morpheme.
[10731470] |===Consonants===
[10731480] |Russian is notable for its distinction based on [[palatalization]] of most of the consonants.
[10731490] |While {{IPA|/k/, /g/, /x/}} do have palatalized [[allophone]]s {{IPA|[kʲ, gʲ, xʲ]}}, only {{IPA|/kʲ/}} might be considered a phoneme, though it is marginal and generally not considered distinctive (the only native [[minimal pair]] which argues for {{IPA|/kʲ/}} to be a separate phoneme is "это ткёт"/"этот кот").
[10731500] |Palatalization means that the center of the tongue is raised during and after the articulation of the consonant.
[10731510] |In the case of {{IPA|/tʲ/ and /dʲ/}}, the tongue is raised enough to produce slight frication (affricate sounds).
[10731520] |These sounds: {{IPA|/t, d, ʦ, s, z, n and rʲ/}} are [[dental consonant|dental]], that is pronounced with the tip of the tongue against the teeth rather than against the [[alveolar ridge]].
[10731530] |==Grammar== 
[10731540] |Russian has preserved an [[Indo-European languages|Indo-European]] [[Synthetic language|synthetic]]-[[inflection]]al structure, although considerable leveling has taken place.
[10731550] |Russian grammar encompasses 
[10731560] |* a highly [[Synthetic language|synthetic]] '''morphology'''
[10731570] |* a '''syntax''' that, for the literary language, is the conscious fusion of three elements:
[10731580] |** a polished [[vernacular]] foundation;
[10731590] |** a [[Church Slavonic language|Church Slavonic]] inheritance;
[10731600] |** a [[Western Europe]]an style.
[10731610] |The spoken language has been influenced by the literary one, but continues to preserve characteristic forms.
[10731620] |The dialects show various non-standard grammatical features, some of which are archaisms or descendants of old forms since discarded by the literary language.
[10731630] |==Vocabulary== 
[10731640] |See [[History of the Russian language]] for an account of the successive foreign influences on the Russian language.
[10731650] |The total number of words in Russian is difficult to reckon because of the ability to agglutinate and create manifold compounds, diminutives, etc. (see [[Russian grammar#Word Formation|Word Formation]] under [[Russian grammar]]).
[10731660] |The number of listed words or entries in some of the major dictionaries published during the last two centuries, and the total vocabulary of [[Pushkin]] (who is credited with greatly augmenting and codifying literary Russian), are as follows: 
[10731670] |(As a historical aside, [[Vladimir Ivanovich Dal|Dahl]] was, in the second half of the nineteenth century, still insisting that the proper spelling of the adjective '''русский''', which was at that time applied uniformly to all the Orthodox Eastern Slavic subjects of the Empire, as well as to its one official language, be spelled '''руский''' with one s, in accordance with ancient tradition and what he termed the "spirit of the language".
[10731680] |He was contradicted by the philologist Grot, who distinctly heard the s lengthened or doubled).
[10731690] |=== Proverbs and sayings === 
[10731700] |The Russian language is replete with many hundreds of proverbs ('''пословица''' {{IPA|[pɐˈslo.vʲɪ.ʦə]}}) and sayings ('''поговоркa''' {{IPA|[pə.gɐˈvo.rkə]}}).
[10731710] |These were already tabulated by the seventeenth century, and collected and studied in the nineteenth and twentieth, with the folk-tales being an especially fertile source.
[10731720] |==History and examples== 
[10731730] |The history of Russian language may be divided into the following periods.
[10731740] |* [[History of the Russian language#Kievan period and feudal breakup|Kievan period and feudal breakup]]
[10731750] |* [[History of the Russian language#The Tatar yoke and the Grand Duchy of Lithuania|The Tatar yoke and the Grand Duchy of Lithuania]]
[10731760] |* [[History of the Russian language#The Moscovite period (15th–17th centuries)|The Moscovite period (15th–17th centuries)]]
[10731770] |* [[History of the Russian language#Empire (18th–19th centuries)|Empire (18th–19th centuries)]]
[10731780] |* [[History of the Russian language#Soviet period and beyond (20th century)|Soviet period and beyond (20th century)]]
[10731790] |Judging by the historical records, by approximately 1000 AD the predominant ethnic group over much of modern European [[Russia]], [[Ukraine]], and [[Belarus]] was the Eastern branch of the [[Slavic peoples|Slavs]], speaking a closely related group of dialects.
[10731800] |The political unification of this region into [[Kievan Rus']] in about 880, from which modern Russia, Ukraine and Belarus trace their origins, established [[Old East Slavic]] as a literary and commercial language.
[10731810] |It was soon followed by the adoption of [[Christianity]] in 988 and the introduction of the South Slavic [[Old Church Slavonic]] as the liturgical and official language.
[10731820] |Borrowings and [[calque]]s from Byzantine [[Greek language|Greek]] began to enter the [[Old East Slavic]] and spoken dialects at this time, which in their turn modified the [[Old Church Slavonic]] as well.
[10731830] |Dialectal differentiation accelerated after the breakup of [[Kievan Rus]] in approximately 1100.
[10731840] |On the territories of modern [[Belarus]] and [[Ukraine]] emerged [[Ruthenian language|Ruthenian]] and in modern [[Russia]] [[History of the Russian language|medieval Russian]].
[10731850] |They definitely became distinct in 13th century by the time of division of that land between the [[Grand Duchy of Lithuania]] on the west and independent Novgorod Feudal Republic plus small duchies which were vassals of the Tatars on the east.
[10731860] |The official language in Moscow and Novgorod, and later, in the growing Moscow Rus’, was [[Church Slavonic]] which evolved from [[Old Church Slavonic]] and remained [[Diglossia|the literary language]] until the Petrine age, when its usage shrank drastically to biblical and liturgical texts.
[10731870] |Russian developed under a strong influence of the Church Slavonic until the close of the seventeenth century; the influence reversed afterwards leading to corruption of liturgical texts.
[10731880] |The political reforms of [[Peter I of Russia|Peter the Great]] were accompanied by a reform of the alphabet, and achieved their goal of secularization and Westernization.
[10731890] |Blocks of specialized vocabulary were adopted from the languages of Western Europe.
[10731900] |By 1800, a significant portion of the gentry spoke [[French language|French]], less often [[German language|German]], on an everyday basis.
[10731910] |Many Russian novels of the 19th century, e.g. Lev Tolstoy’s "War and Peace", contain entire paragraphs and even pages in French with no translation given, with an assumption that educated readers won't need one.
[10731920] |The modern literary language is usually considered to date from the time of [[Aleksandr Pushkin]] in the first third of the nineteenth century.
[10731930] |Pushkin revolutionized Russian literature by rejecting archaic grammar and vocabulary (so called "высокий стиль" — "high style") in favor of grammar and vocabulary found in the spoken language of the time.
[10731940] |Even modern readers of younger age may only experience slight difficulties understanding some words in Pushkin’s texts, since only few words used by Pushkin became archaic or changed meaning.
[10731950] |On the other hand, many expressions used by Russian writers of the early 19th century, in particular Pushkin, [[Lermontov]], [[Gogol]], Griboiädov, became proverbs or sayings which can be frequently found even in the modern Russian colloquial speech.
[10731960] |The political upheavals of the early twentieth century and the wholesale changes of political ideology gave written Russian its modern appearance after the spelling reform of 1918.
[10731970] |Political circumstances and Soviet accomplishments in military, scientific, and technological matters (especially cosmonautics), gave Russian a world-wide prestige, especially during the middle third of the twentieth century.
[10740010] |<article>Web search engine</article>
[10740020] |A '''Web search engine''' is a [[search engine (computing)|search engine]] designed to search for information on the [[World Wide Web]].
[10740030] |Information may consist of [[web page]]s, images and other types of files.
[10740040] |Some search engines also mine data available in newsbooks, databases, or [[Web directory|open directories]].
[10740050] |Unlike [[Web directories]], which are maintained by human editors, search engines operate algorithmically or are a mixture of [[algorithmic]] and human input.
[10740060] |==History==
[10740070] |Before there were search engines there was a complete list of all webservers.
[10740080] |The list was edited by [[Tim Berners-Lee]] and hosted on the CERN webserver.
[10740090] |One historical snapshot from 1992 remains.
[10740100] |As more and more webservers went online the central list could not keep up.
[10740110] |On the NCSA Site new servers were announced under the title "What's New!", but no complete listing existed any more.
[10740120] |The very first tool used for searching on the (pre-web) Internet was [[Archie search engine|Archie]].
[10740130] |The name stands for "archive" without the "v".
[10740140] |It was created in 1990 by [[Alan Emtage]], a student at [[McGill University]] in Montreal.
[10740150] |The program downloaded the directory listings of all the files located on public anonymous FTP ([[File Transfer Protocol]]) sites, creating a searchable database of file names; however, Archie did not index the contents of these sites.
[10740160] |The rise of [[Gopher (protocol)|Gopher]] (created in 1991 by [[Mark McCahill]] at the [[University of Minnesota]]) led to two new search programs, [[Veronica (computer)|Veronica]] and [[Jughead (computer)|Jughead]].
[10740170] |Like Archie, they searched the file names and titles stored in Gopher index systems.
[10740180] |Veronica ('''V'''ery '''E'''asy '''R'''odent-'''O'''riented '''N'''et-wide '''I'''ndex to '''C'''omputerized '''A'''rchives) provided a keyword search of most Gopher menu titles in the entire Gopher listings.
[10740190] |Jughead ('''J'''onzy's '''U'''niversal '''G'''opher '''H'''ierarchy '''E'''xcavation '''A'''nd '''D'''isplay) was a tool for obtaining menu information from specific Gopher servers.
[10740200] |While the name of the search engine "[[Archie search engine|Archie]]" was not a reference to the [[Archie Comics|Archie comic book]] series, "[[Veronica Lodge|Veronica]]" and "[[Jughead Jones|Jughead]]" are characters in the series, thus referencing their predecessor.
[10740210] |The first Web search engine was Wandex, a now-defunct index collected by the [[World Wide Web Wanderer]], a [[web crawler]] developed by Matthew Gray at [[Massachusetts Institute of Technology|MIT]] in 1993.
[10740220] |Another very early search engine, [[Aliweb]], also appeared in 1993.
[10740230] |[[JumpStation]] (released in early 1994) used a crawler to find web pages for searching, but search was limited to the title of web pages only.
[10740240] |One of the first "full text" crawler-based search engines was [[WebCrawler]], which came out in 1994.
[10740250] |Unlike its predecessors, it let users search for any word in any webpage, which became the standard for all major search engines since.
[10740260] |It was also the first one to be widely known by the public.
[10740270] |Also in 1994 [[Lycos]] (which started at [[Carnegie Mellon University]]) was launched, and became a major commercial endeavor.
[10740280] |Soon after, many search engines appeared and vied for popularity.
[10740290] |These included [[Magellan]], [[Excite]], [[Infoseek]], [[Inktomi]], [[Northern Light Group|Northern Light]], and [[AltaVista]].
[10740300] |[[Yahoo!]] was among the most popular ways for people to find web pages of interest, but its search function operated on its [[web directory]], rather than full-text copies of web pages.
[10740310] |Information seekers could also browse the directory instead of doing a keyword-based search.
[10740320] |In 1996, [[Netscape]] was looking to give a single search engine an exclusive deal to be their featured search engine.
[10740330] |There was so much interest that instead a deal was struck with Netscape by 5 of the major search engines, where for $5Million per year each search engine would be in a rotation on the Netscape search engine page.
[10740340] |These five engines were: [[Yahoo!]], [[Magellan]], [[Lycos]], [[Infoseek]] and [[Excite]].
[10740350] |Search engines were also known as some of the brightest stars in the Internet investing frenzy that occurred in the late 1990s.
[10740360] |Several companies entered the market spectacularly, receiving record gains during their [[initial public offering]]s.
[10740370] |Some have taken down their public search engine, and are marketing enterprise-only editions, such as Northern Light.
[10740380] |Many search engine companies were caught up in the [[dot-com bubble]], a speculation-driven market boom that peaked in 1999 and ended in 2001.
[10740390] |Around 2000, the [[Google Search|Google search engine]] rose to prominence.
[10740400] |The company achieved better results for many searches with an innovation called [[PageRank]].
[10740410] |This iterative algorithm ranks web pages based on the number and PageRank of other web sites and pages that link there, on the premise that good or desirable pages are linked to more than others.
[10740420] |Google also maintained a minimalist interface to its search engine.
[10740430] |In contrast, many of its competitors embedded a search engine in a [[web portal]].
[10740440] |By 2000, Yahoo was providing search services based on [[Inktomi]]'s search engine.
[10740450] |Yahoo! acquired [[Inktomi]] in 2002, and [[Overture]] (which owned [[AlltheWeb]] and [[AltaVista]]) in 2003.
[10740460] |Yahoo! switched to Google's search engine until 2004, when it launched its own search engine based on the combined technologies of its acquisitions.
[10740470] |Microsoft first launched MSN Search (since re-branded [[Live Search]]) in the fall of 1998 using search results from [[Inktomi]].
[10740480] |In early 1999 the site began to display listings from [[Looksmart]] blended with results from [[Inktomi]] except for a short time in 1999 when results from [[AltaVista]] were used instead.
[10740490] |In 2004, Microsoft began a transition to its own search technology, powered by its own [[web crawler]] (called [[msnbot]]).
[10740500] |As of late 2007, Google was by far the most popular Web search engine worldwide.
[10740510] |A number of country-specific search engine companies have become prominent; for example [[Baidu]] is the most popular search engine in the [[People's Republic of China]] and [[guruji.com]] in [[India]].
[10740520] |==How Web search engines work== 
[10740530] |A search engine operates, in the following order 
[10740540] |# [[Web crawling]]
[10740550] |# [[Index (search engine)|Indexing]]
[10740560] |# [[Web search query|Searching]]
[10740570] |Web search engines work by storing information about many web pages, which they retrieve from the WWW itself.
[10740580] |These pages are retrieved by a [[Web crawler]] (sometimes also known as a spider) &mdash; an automated Web browser which follows every link it sees.
[10740590] |Exclusions can be made by the use of [[robots.txt]].
[10740600] |The contents of each page are then analyzed to determine how it should be [[Search engine indexing|indexed]] (for example, words are extracted from the titles, headings, or special fields called [[meta tags]]).
[10740610] |Data about web pages are stored in an index database for use in later queries.
[10740620] |Some search engines, such as [[Google]], store all or part of the source page (referred to as a [[web cache|cache]]) as well as information about the web pages, whereas others, such as [[AltaVista]], store every word of every page they find.
[10740630] |This cached page always holds the actual search text since it is the one that was actually indexed, so it can be very useful when the content of the current page has been updated and the search terms are no longer in it.
[10740640] |This problem might be considered to be a mild form of [[linkrot]], and Google's handling of it increases [[usability]] by satisfying [[user expectations]] that the search terms will be on the returned webpage.
[10740650] |This satisfies the [[principle of least astonishment]] since the user normally expects the search terms to be on the returned pages.
[10740660] |Increased search relevance makes these cached pages very useful, even beyond the fact that they may contain data that may no longer be available elsewhere.
[10740670] |When a user enters a [[web search query|query]] into a search engine (typically by using [[Keyword (Internet search)|key word]]s), the engine examines its [[inverted index|index]] and provides a listing of best-matching web pages according to its criteria, usually with a short summary containing the document's title and sometimes parts of the text.
[10740680] |Most search engines support the use of the [[boolean operators]] AND, OR and NOT to further specify the [[web search query|search query]].
[10740690] |Some search engines provide an advanced feature called [[Proximity search (text)|proximity search]] which allows users to define the distance between keywords.
[10740700] |The usefulness of a search engine depends on the [[relevance (information retrieval)|relevance]] of the '''result set''' it gives back.
[10740710] |While there may be millions of webpages that include a particular word or phrase, some pages may be more relevant, popular, or authoritative than others.
[10740720] |Most search engines employ methods to [[rank order|rank]] the results to provide the "best" results first.
[10740730] |How a search engine decides which pages are the best matches, and what order the results should be shown in, varies widely from one engine to another.
[10740740] |The methods also change over time as Internet usage changes and new techniques evolve.
[10740750] |Most Web search engines are commercial ventures supported by [[advertising]] revenue and, as a result, some employ the controversial practice of allowing advertisers to pay money to have their listings ranked higher in search results.
[10740760] |Those search engines which do not accept money for their search engine results make money by running search related ads alongside the regular search engine results.
[10740770] |The search engines make money every time someone clicks on one of these ads.
[10740780] |The vast majority of search engines are run by private companies using proprietary algorithms and closed databases, though [[List of search engines#Open source search engines|some]] are open source.
[10740790] |Revenue in the web search portals industry is projected to grow in 2008 by 13.4 percent, with broadband connections expected to rise by 15.1 percent.
[10740800] |Between 2008 and 2012, industry revenue is projected to rise by 56 percent as Internet penetration still has some way to go to reach full saturation in American households.
[10740810] |Furthermore, broadband services are projected to account for an ever increasing share of domestic Internet users, rising to 118.7 million by 2012, with an increasing share accounted for by fiber-optic and high speed cable lines.
[10750010] |<article>Semantics</article>
[10750020] |'''Semantics''' is the study of meaning in communication.
[10750030] |The word derives from [[Greek language|Greek]] ''σημαντικός'' (''semantikos''), "significant", from ''σημαίνω'' (''semaino''), "to signify, to indicate" and that from ''σήμα'' (''sema''), "sign, mark, token".
[10750040] |In [[linguistics]] it is the study of interpretation of signs as used by [[agent]]s or [[community|communities]] within particular circumstances and contexts.
[10750050] |It has related meanings in several other fields.
[10750060] |Semanticists differ on what constitutes [[Meaning (linguistics)|meaning]] in an expression.
[10750070] |For example, in the sentence, "John loves a bagel", the word ''bagel'' may refer to the object itself, which is its ''literal'' meaning or ''[[denotation]]'', but it may also refer to many other figurative associations, such as how it meets John's hunger, etc., which may be its ''[[connotation]]''.
[10750080] |Traditionally, the [[formal semantic]] view restricts semantics to its literal meaning, and relegates all figurative associations to [[pragmatics]], but this distinction is increasingly difficult to defend.
[10750090] |The degree to which a theorist subscribes to the literal-figurative distinction decreases as one moves from the [[formal semantic]], [[semiotic]], [[pragmatic]], to the [[cognitive semantic]] traditions.
[10750100] |The word ''semantic'' in its modern sense is considered to have first appeared in [[French language|French]] as ''sémantique'' in [[Michel Bréal]]'s 1897 book, ''Essai de sémantique'.
[10750110] |In [[International Scientific Vocabulary]] semantics is also called ''[[semasiology]]''.
[10750120] |The discipline of Semantics is distinct from [[General semantics|Alfred Korzybski's General Semantics]], which is a system for looking at non-immediate, or abstract meanings.
[10750130] |==Linguistics== 
[10750140] |In [[linguistics]], '''semantics''' is the subfield that is devoted to the study of meaning, as inherent at the levels of words, phrases, sentences, and even larger units of [[discourse]] (referred to as ''texts'').
[10750150] |The basic area of study is the meaning of [[sign (semiotics)|sign]]s, and the study of relations between different linguistic units: [[homonym]]y, [[synonym]]y, [[antonym]]y, [[polysemy]], [[paronyms]], [[hypernym]]y, [[hyponym]]y, [[meronymy]], [[metonymy]], [[holonymy]], [[exocentric]]ity / [[endocentric]]ity, linguistic [[compound (linguistics)|compounds]].
[10750160] |A key concern is how meaning attaches to larger chunks of text, possibly as a result of the composition from smaller units of meaning.
[10750170] |Traditionally, semantics has included the study of connotative ''[[word sense|sense]]'' and denotative ''[[reference]]'', [[truth condition]]s, [[argument structure]], [[thematic role]]s, [[discourse analysis]], and the linkage of all of these to syntax.
[10750180] |[[Formal semantics|Formal semanticists]] are concerned with the modeling of meaning in terms of the semantics of logic.
[10750190] |Thus the sentence ''John loves a bagel'' above can be broken down into its constituents (signs), of which the unit ''loves'' may serve as both syntactic and semantic [[head (linguistics)|head]].
[10750200] |In the late 1960s, [[Richard Montague]] proposed a system for defining semantic entries in the lexicon in terms of [[lambda calculus]].
[10750210] |Thus, the syntactic [[parsing|parse]] of the sentence above would now indicate ''loves'' as the head, and its entry in the lexicon would point to the arguments as the agent, ''John'', and the object, ''bagel'', with a special role for the article "a" (which Montague called a quantifier).
[10750220] |This resulted in the sentence being associated with the logical predicate ''loves (John, bagel)'', thus linking semantics to [[categorial grammar]] models of [[syntax]].
[10750230] |The logical predicate thus obtained would be elaborated further, e.g. using truth theory models, which ultimately relate meanings to a set of [[Tarski]]ian universals, which may lie outside the logic.
[10750240] |The notion of such meaning atoms or primitives are basic to the [[language of thought]] hypothesis from the 70s.
[10750250] |Despite its elegance, [[Montague grammar]] was limited by the context-dependent variability in word sense, and led to several attempts at incorporating context, such as : 
[10750260] |*[[situation semantics]] ('80s): Truth-values are incomplete, they get assigned based on context
[10750270] |*[[generative lexicon]] ('90s): categories (types) are incomplete, and get assigned based on context
[10750280] |===The dynamic turn in semantics=== 
[10750290] |In the [[Noam Chomsky|Chomskian]] tradition in linguistics there was no mechanism for the learning of semantic relations, and the [[Psychological nativism|nativist]] view considered all semantic notions as inborn.
[10750300] |Thus, even novel concepts were proposed to have been dormant in some sense.
[10750310] |This traditional view was also unable to address many issues such as [[metaphor]] or associative meanings, and [[semantic change]], where meanings within a linguistic community change over time, and [[qualia]] or subjective experience.
[10750320] |Another issue not addressed by the nativist model was how perceptual cues are combined in thought, e.g. in [[mental rotation]].
[10750330] |This traditional view of semantics, as an innate finite meaning inherent in a [[lexical unit]] that can be composed to generate meanings for larger chunks of discourse, is now being fiercely debated in the emerging domain of [[cognitive linguistics]] and also in the non-[[Jerry Fodor|Fodorian]] camp in [[Philosophy of Language]].
[10750340] |The challenge is motivated by 
[10750350] |* factors internal to language, such as the problem of resolving [[indexical]] or [[anaphora]] (e.g. ''this x'', ''him'', ''last week'').
[10750360] |In these situations "context" serves as the input, but the interpreted utterance also modifies the context, so it is also the output.
[10750370] |Thus, the interpretation is necessarily dynamic and the meaning of sentences is viewed as context-change potentials instead of [[propositions]].
[10750380] |* factors external to language, i.e. language is not a set of labels stuck on things, but "a toolbox, the importance of whose elements lie in the way they function rather than their attachments to things."
[10750390] |This view reflects the position of the later [[Wittgenstein]] and his famous ''game'' example, and is related to the positions of [[Willard Van Orman Quine|Quine]], [[Donald Davidson (philosopher)|Davidson]], and others.
[10750400] |A concrete example of the latter phenomenon is semantic [[underspecification]] &mdash; meanings are not complete without some elements of context.
[10750410] |To take an example of a single word, "red", its meaning in a phrase such as ''red book'' is similar to many other usages, and can be viewed as compositional.
[10750420] |However, the colours implied in phrases such as "red wine" (very dark), and "red hair" (coppery), or "red soil", or "red skin" are very different.
[10750430] |Indeed, these colours by themselves would not be called "red" by native speakers.
[10750440] |These instances are contrastive, so "red wine" is so called only in comparison with the other kind of wine (which also is not "white" for the same reasons).
[10750450] |This view goes back to [[Ferdinand de Saussure|de Saussure]]: 
[10750460] |:Each of a set of synonyms like ''redouter'' ('to dread'), ''craindre'' ('to fear'), ''avoir peur'' ('to be afraid') has its particular value only because they stand in contrast with one another.
[10750470] |No word has a value that can be identified independently of what else is in its vicinity.
[10750480] |and may go back to earlier [[India]]n views on language, especially the [[Nyaya]] view of words as [[Semantic indicator|indicators]] and not carriers of meaning.
[10750490] |An attempt to defend a system based on propositional meaning for semantic underspecification can be found in the [[Generative Lexicon]] model of [[James Pustejovsky]], who extends contextual operations (based on type shifting) into the lexicon.
[10750500] |Thus meanings are generated on the fly based on finite context.
[10750510] |===Prototype theory=== 
[10750520] |Another set of concepts related to fuzziness in semantics is based on [[Prototype Theory|prototype]]s.
[10750530] |The work of [[Eleanor Rosch]] and [[George Lakoff]] in the 1970s led to a view that natural categories are not characterizable in terms of necessary and sufficient conditions, but are graded (fuzzy at their boundaries) and inconsistent as to the status of their constituent members.
[10750540] |Systems of categories are not objectively "out there" in the world but are rooted in people's experience.
[10750550] |These categories evolve as [[learning theory (education)|learned]] concepts of the world &mdash; meaning is not an objective truth, but a subjective construct, learned from experience, and language arises out of the "grounding of our conceptual systems in shared [[embodied philosophy|embodiment]] and bodily experience".
[10750560] |A corollary of this is that the conceptual categories (i.e. the lexicon) will not be identical for different cultures, or indeed, for every individual in the same culture.
[10750570] |This leads to another debate (see the [[Whorf-Sapir hypothesis]] or [[Eskimo words for snow]]).
[10750580] |==Computer science== 
[10750590] |In [[computer science]], where it is considered as an application of [[mathematical logic]], semantics reflects the meaning of programs or functions.
[10750600] |In this regard, semantics permits programs to be separated into their syntactical part (grammatical structure) and their semantic part (meaning).
[10750610] |For instance, the following statements use different syntaxes (languages), but result in the same semantic: 
[10750620] |* x += y; ([[C (programming language)|C]], [[Java (programming language)|Java]], etc.)
[10750630] |* x := x + y; ([[Pascal (programming language)|Pascal]])
[10750640] |* Let x = x + y; (early [[BASIC]])
[10750650] |* x = x + y (most BASIC dialects, [[Fortran]])
[10750660] |Generally these operations would all perform an arithmetical addition of 'y' to 'x' and store the result in a variable 'x'.
[10750670] |Semantics for computer applications falls into three categories: 
[10750680] |* [[Operational semantics]]: The meaning of a construct is specified by the computation it induces when it is executed on a machine.
[10750690] |In particular, it is of interest ''how'' the effect of a computation is produced.
[10750700] |* [[Denotational semantics]]: Meanings are modelled by mathematical objects that represent the effect of executing the constructs.
[10750710] |Thus ''only'' the effect is of interest, not how it is obtained.
[10750720] |* [[Axiomatic semantics]]: Specific properties of the effect of executing the constructs as expressed as ''assertions''.
[10750730] |Thus there may be aspects of the executions that are ignored.
[10750740] |The '''[[Semantic Web]]''' refers to the extension of the [[World Wide Web]] through the embedding of additional semantic [[metadata]]; s.a.
[10750750] |[[Web Ontology Language]] (OWL).
[10750760] |==Psychology== 
[10750770] |In [[psychology]], ''[[semantic memory]]'' is memory for meaning, in other words, the aspect of memory that preserves only the ''gist'', the general significance, of remembered experience, while [[episodic memory]] is memory for the ephemeral details, the individual features, or the unique particulars of experience.
[10750780] |Word meaning is measured by the company they keep; the relationships among words themselves in a [[semantic network]].
[10750790] |In a network created by people analyzing their understanding of the word (such as [[Wordnet]]) the links and decomposition structures of the network are few in number and kind; and include "part of", "kind of", and similar links.
[10750800] |In automated [[ontologies]] the links are computed vectors without explicit meaning.
[10750810] |Various automated technologies are being developed to compute the meaning of words: [[latent semantic indexing]] and [[support vector machines]] as well as [[natural language processing]], [[neural networks]] and [[predicate calculus]] techniques.
[10750820] |Semantics has been reported to drive the course of psychotherapeutic interventions.
[10750830] |Language structure can determine the treatment approach to drug-abusing patients. .
[10750840] |While working in Europe for the US Information Agency, American psychiatrist, Dr. A. James Giannini reported semantic differences in medical approaches to addiction treatment..
[10750850] |English speaking countries used the term "drug dependence" to describe a rather passive pathology in their patients.
[10750860] |As a result the physician's role was more active.
[10750870] |Southern European countries such as Italy and Yugoslavia utilized the concept of "tossicomania" (i.e. toxic mania) to describe a more acive rather than passive role of the addict.
[10750880] |As a result the treating physician's role shifted to that of a more passive guide than that of an active interventionist. .
[10760010] |<article>Sentence (linguistics)</article>
[10760020] |In [[linguistics]], a '''sentence''' is a grammatical unit of one or more words, bearing minimal syntactic relation to the words that precede or follow it, often preceded and followed in speech by pauses, having one of a small number of characteristic intonation patterns, and typically expressing an independent statement, question, request, command, etc.
[10760030] |Sentences are generally characterized in most languages by the presence of a [[finite verb]], e.g. "[[The quick brown fox jumps over the lazy dog]]".
[10760050] |==Components of a sentence== 
[10760060] |A simple ''complete sentence'' consists of a ''[[subject (grammar)|subject]]'' and a ''[[predicate (grammar)|predicate]]''.
[10760070] |The subject is typically a [[noun phrase]], though other kinds of phrases (such as [[gerund]] phrases) work as well, and some languages allow subjects to be omitted.
[10760080] |The predicate is a finite [[verb phrase]]: it's a finite verb together with zero or more [[object (grammar)|objects]], zero or more [[complement (linguistics)|complements]], and zero or more [[adverbial]]s.
[10760090] |See also [[copula]] for the consequences of this verb on the theory of sentence structure.
[10760100] |===Clauses=== 
[10760110] |A [[clause]] consists of a subject and a verb.
[10760120] |There are two types of clauses: independent and subordinate (dependent).
[10760130] |An independent clause consists of a subject verb and also demonstrates a complete thought: for example, "I am sad."
[10760140] |A subordinate clause consists of a subject and a verb, but demonstrates an incomplete thought: for example, "Because I had to move."
[10760150] |==Classification== 
[10760160] |===By structure=== 
[10760170] |One traditional scheme for classifying [[English language|English]] sentences is by the number and types of [[finite verb|finite]] [[clause]]s:
[10760180] |* A ''[[simple sentence]]'' consists of a single [[independent clause]] with no [[dependent clause]]s.
[10760190] |* A ''[[compound sentence (linguistics)|compound sentence]]'' consists of multiple independent clauses with no dependent clauses.
[10760200] |These clauses are joined together using [[grammatical conjunction|conjunctions]], [[punctuation]], or both.
[10760210] |* A ''[[complex sentence]]'' consists of one or more independent clauses with at least one dependent clause.
[10760220] |* A ''[[complex-compound sentence]]'' (or ''compound-complex sentence'') consists of multiple independent clauses, at least one of which has at least one dependent clause.
[10760230] |===By purpose=== 
[10760240] |Sentences can also be classified based on their purpose:
[10760250] |*A ''declarative sentence'' or ''declaration'', the most common type, commonly makes a statement: ''I am going home.''
[10760260] |*A ''negative sentence'' or ''[[negation (linguistics)|negation]]'' denies that a statement is true: ''I am not going home.''
[10760270] |*An ''interrogative sentence'' or ''[[question]]'' is commonly used to request information &mdash; ''When are you going to work?'' &mdash; but sometimes not; ''see'' [[rhetorical question]].
[10760280] |*An ''exclamatory sentence'' or ''[[exclamation]]'' is generally a more emphatic form of statement: ''What a wonderful day this is!''
[10760290] |===Major and minor sentences=== 
[10760300] |A major sentence is a ''regular'' sentence; it has a [[subject (grammar)|subject]] and a [[predicate (grammar)|predicate]].
[10760310] |For example: ''I have a ball.''
[10760320] |In this sentence one can change the persons: ''We have a ball.''
[10760330] |However, a minor sentence is an irregular type of sentence.
[10760340] |It does not contain a finite verb.
[10760350] |For example, "Mary!"
[10760360] |"Yes."
[10760370] |"Coffee." etc.
[10760380] |Other examples of minor sentences are headings (e.g. the heading of this entry), stereotyped expressions (''Hello!''), emotional expressions (''Wow!''), proverbs, etc.
[10760390] |This can also include sentences which do not contain verbs (e.g. ''The more, the merrier.'') in order to intensify the meaning around the nouns (normally found in poetry and catchphrases) by Judee N..
[10770010] |<article>Computer software</article>
[10770020] |'''Computer software,''' or just '''software''' is a general term used to describe a collection of [[computer program]]s, [[procedures]] and documentation that perform some tasks on a computer system.
[10770030] |The term includes [[application software]] such as [[word processor]]s which perform productive tasks for users, [[system software]] such as [[operating system]]s, which interface with [[hardware]] to provide the necessary services for application software, and [[middleware]] which controls and co-ordinates [[Distributed computing|distributed systems]].
[10770040] |"Software" is sometimes used in a broader context to mean anything which is not hardware but which is ''used'' with hardware, such as film, tapes and records.
[10770050] |==Relationship to computer hardware== 
[10770060] |[[Computer]] software is so called to distinguish it from [[computer hardware]], which encompasses the physical interconnections and devices required to store and execute (or run) the software.
[10770070] |At the lowest level, software consists of a [[machine language]] specific to an individual processor.
[10770080] |A machine language consists of groups of binary values signifying processor instructions which change the state of the computer from its preceding state.
[10770090] |Software is an ordered sequence of instructions for changing the state of the computer hardware in a particular sequence.
[10770100] |It is usually written in [[high-level programming language]]s that are easier and more efficient for humans to use (closer to [[natural language]]) than machine language.
[10770110] |High-level languages are [[compiler|compiled]] or [[interpreter (computing)|interpreted]] into machine language object code.
[10770120] |Software may also be written in an [[assembly language]], essentially, a mnemonic representation of a machine language using a natural language alphabet.
[10770130] |Assembly language must be assembled into object code via an [[assembly language#Assembler|assembler]].
[10770140] |The term "software" was first used in this sense by [[John W. Tukey]] in [[1958]].
[10770150] |In [[computer science]] and [[software engineering]], '''computer software''' is all computer programs.
[10770160] |The theory that is the basis for most modern software was first proposed by [[Alan Turing]] in his [[1935]] essay ''Computable numbers with an application to the Entscheidungsproblem''.
[10770170] |==Types== 
[10770180] |Practical [[computer system]]s divide [[software system]]s into three major classes: [[system software]], [[programming software]] and [[application software]], although the distinction is arbitrary, and often blurred.
[10770190] |*'''[[System software]]''' helps run the [[computer hardware]] and [[computer system]].
[10770200] |It includes [[operating system]]s, [[device driver]]s, diagnostic tools, [[Server (computing)|server]]s, [[windowing system]]s, [[software utility|utilities]] and more.
[10770210] |The purpose of systems software is to insulate the applications programmer as much as possible from the details of the particular computer complex being used, especially memory and other hardware features, and such as accessory devices as communications, printers, readers, displays, keyboards, etc.
[10770220] |*'''[[Programming software]]''' usually provides tools to assist a [[programmer]] in writing [[computer program]]s, and software using different [[programming language]]s in a more convenient way.
[10770230] |The tools include [[text editors]], [[compilers]], [[interpreter (computing)|interpreters]], [[linkers]], [[debuggers]], and so on.
[10770240] |An [[Integrated development environment]] (IDE) merges those tools into a software bundle, and a programmer may not need to type multiple [[command]]s for compiling, interpreting, debugging, tracing, and etc., because the IDE usually has an advanced ''[[graphical user interface]],'' or GUI.
[10770250] |*'''[[Application software]]''' allows end users to accomplish one or more specific (non-computer related) [[task]]s.
[10770260] |Typical applications include [[Industry|industrial]] [[automation]], [[business software]], [[educational software]], [[medical software]], [[database]]s, and [[computer games]].
[10770270] |Businesses are probably the biggest users of application software, but almost every field of human activity now uses some form of application software
[10770280] |==Program and library== 
[10770290] |A [[Computer program|program]] may not be sufficiently complete for execution by a [[computer]].
[10770300] |In particular, it may require additional software from a [[software library]] in order to be complete.
[10770310] |Such a library may include software components used by [[stand-alone]] programs, but which cannot work on their own.
[10770320] |Thus, programs may include standard routines that are common to many programs, extracted from these libraries.
[10770330] |Libraries may also ''include'' 'stand-alone' programs which are activated by some [[event-driven programming|computer event]] and/or perform some function (e.g., of computer 'housekeeping') but do not return data to their calling program.
[10770340] |Libraries may be [[Execution (computers)|called]] by one to many other programs; programs may call zero to many other programs.
[10770350] |==Three layers== 
[10770360] |Users often see things differently than programmers.
[10770370] |People who use modern general purpose computers (as opposed to [[embedded system]]s, [[analog computer]]s, [[supercomputer]]s, etc.) usually see three layers of software performing a variety of tasks: platform, application, and user software.
[10770380] |;Platform software:
[10770390] |[[Platform (computing)|Platform]] includes the [[firmware]], [[device driver]]s, an [[operating system]], and typically a [[graphical user interface]] which, in total, allow a user to interact with the computer and its [[peripheral]]s (associated equipment).
[10770400] |Platform software often comes bundled with the computer.
[10770410] |On a [[Personal computer|PC]] you will usually have the ability to change the platform software.
[10770420] |;Application software:
[10770430] |[[Application software]] or Applications are what most people think of when they think of software.
[10770440] |Typical examples include office suites and video games.
[10770450] |Application software is often purchased separately from computer hardware.
[10770460] |Sometimes applications are bundled with the computer, but that does not change the fact that they run as independent applications.
[10770470] |Applications are almost always independent programs from the operating system, though they are often tailored for specific platforms.
[10770480] |Most users think of compilers, databases, and other "system software" as applications.
[10770490] |;User-written software:
[10770500] |[[End-user development]] tailors systems to meet users' specific needs.
[10770510] |User software include spreadsheet templates, word processor macros, scientific simulations, and scripts for graphics and animations.
[10770520] |Even email filters are a kind of user software.
[10770530] |Users create this software themselves and often overlook how important it is.
[10770535] |Depending on how competently the user-written software has been integrated into purchased application packages, many users may not be aware of the distinction between the purchased packages, and what has been added by fellow co-workers.
[10770540] |==Creation== 
[10770550] |==Operation== 
[10770560] |Computer software has to be "loaded" into the [[computer storage|computer's storage]] (such as a ''[[hard drive]]'', ''memory'', or ''[[RAM]]'').
[10770570] |Once the software has loaded, the computer is able to ''execute'' the software.
[10770580] |This involves passing [[instruction (computer science)|instructions]] from the application software, through the system software, to the [[hardware]] which ultimately receives the instruction as [[machine language|machine code]].
[10770590] |Each instruction causes the computer to carry out an operation -- moving [[data (computing)|data]], carrying out a [[computation]], or altering the [[control flow]] of instructions.
[10770600] |Data movement is typically from one place in memory to another.
[10770610] |Sometimes it involves moving data between memory and registers which enable high-speed data access in the CPU.
[10770620] |Moving data, especially large amounts of it, can be costly.
[10770630] |So, this is sometimes avoided by using "pointers" to data instead.
[10770640] |Computations include simple operations such as incrementing the value of a variable data element.
[10770650] |More complex computations may involve many operations and data elements together.
[10770660] |Instructions may be performed sequentially, conditionally, or iteratively.
[10770670] |Sequential instructions are those operations that are performed one after another.
[10770680] |Conditional instructions are performed such that different sets of instructions execute depending on the value(s) of some data.
[10770690] |In some languages this is known as an "if" statement.
[10770700] |Iterative instructions are performed repetitively and may depend on some data value.
[10770710] |This is sometimes called a "loop."
[10770720] |Often, one instruction may "call" another set of instructions that are defined in some other program or [[module (programming)|module]].
[10770730] |When more than one computer processor is used, instructions may be executed simultaneously.
[10770740] |A simple example of the way software operates is what happens when a user selects an entry such as "Copy" from a menu.
[10770750] |In this case, a conditional instruction is executed to copy text from data in a 'document' area residing in memory, perhaps to an intermediate storage area known as a 'clipboard' data area.
[10770760] |If a different menu entry such as "Paste" is chosen, the software may execute the instructions to copy the text from the clipboard data area to a specific location in the same or another document in memory.
[10770770] |Depending on the application, even the example above could become complicated.
[10770780] |The field of [[software engineering]] endeavors to manage the complexity of how software operates.
[10770790] |This is especially true for software that operates in the context of a large or powerful [[computer system]].
[10770800] |Currently, almost the only limitations on the use of computer software in applications is the ingenuity of the designer/programmer.
[10770810] |Consequently, large areas of activities (such as playing grand master level chess) formerly assumed to be incapable of software simulation are now routinely programmed.
[10770820] |The only area that has so far proved reasonably secure from software simulation is the realm of human art— especially, pleasing music and literature.
[10770830] |Kinds of software by operation: [[computer program]] as [[executable]], [[source code]] or [[script (computer programming)|script]], [[computer configuration|configuration]].
[10770840] |==Quality and reliability== 
[10770850] |[[Software reliability]] considers the errors, faults, and failures related to the design, implementation and operation of software.
[10770860] |'''See''' [[Computer security audit|Software auditing]], [[Software quality]], [[Software testing]], and [[Software reliability]].
[10770870] |==License== 
[10770880] |[[Software license]] gives the user the right to use the software in the licensed environment, some software comes with the license when purchased off the shelf, or an OEM license when bundled with hardware.
[10770890] |Other software comes with a [[free software licence]], granting the recipient the rights to modify and redistribute the software.
[10770900] |Software can also be in the form of [[freeware]] or [[shareware]].
[10770910] |See also [[License Management]].
[10770920] |==Patents== 
[10770930] |The issue of [[software patent]]s is controversial.
[10770940] |Some believe that they hinder [[software development]], while others argue that software patents provide an important incentive to spur software innovation.
[10770950] |See [[software patent debate]].
[10770960] |==Ethics and rights for software users== 
[10770970] |Being a new part of society, the idea of what rights users of software should have is not very developed.
[10770980] |Some, such as the [[free software community]], believe that software users should be free to modify and redistribute the software they use.
[10770990] |They argue that these rights are necessary so that each individual can control their computer, and so that everyone can cooperate, if they choose, to work together as a community and control the direction that software progresses in.
[10770995] |Others believe that software authors should have the power to say what rights the user will get.
[10771000] |==Software companies and non-profit organizations== 
[10771010] |Examples of non-profit software organizations : [[Free Software Foundation]], [[GNU Project]], [[Mozilla Foundation]] 
[10771020] |Examples of large software companies are: [[Microsoft]], [[IBM]], [[Oracle_Corporation|Oracle]], [[SAP AG|SAP]] and [[HP]].
[10780010] |<article>Spanish language</article>
[10780020] |'''Spanish''' or '''Castilian''' (''castellano'') is an [[Indo-European]], [[Romance languages|Romance language]] that originated in northern [[Spain]], and gradually spread in the [[Kingdom of Castile]] and evolved into the principal language of government and trade.
[10780030] |It was taken to [[Spanish Empire#Territories in Africa (1898–1975)|Africa]], the [[Spanish colonization of the Americas|Americas]], and [[Spanish East Indies|Asia Pacific]] with the expansion of the [[Spanish Empire]] between the fifteenth and nineteenth centuries.
[10780040] |Today, between 322 and 400 million people speak Spanish as a native language, making it the world's second most-spoken language by native speakers (after [[Standard Mandarin|Mandarin Chinese]]).
[10780050] |==Hispanosphere== 
[10780060] |It is estimated that the combined total of native and non-native Spanish speakers is approximately 500 million, likely making it the third most spoken language by total number of speakers (after [[English_language|English]] and [[Chinese_language|Chinese]]).
[10780070] |Today, Spanish is an official language of Spain, most [[Latin American]] countries, and [[Equatorial Guinea]]; 21 nations speak it as their primary language.
[10780080] |Spanish also is one of [[United Nations#Languages|six official languages]] of the [[United Nations]].
[10780090] |[[Mexico]] has the world's largest Spanish-speaking population, and Spanish is the second most-widely spoken language in the [[United States]] and the most popular studied foreign language in [[United States|U.S.]] schools and universities.
[10780100] |[[Global internet usage]] statistics for 2007 show Spanish as the third most commonly used language on the Internet, after English and [[Chinese language|Chinese]].
[10780110] |==Naming and origin== 
[10780120] |Spaniards tend to call this language {{lang|es|'''''español'''''}} (Spanish) when contrasting it with languages of other states, such as [[French language|French]] and [[English language|English]], but call it {{lang|es|'''''castellano'''''}} (Castilian), that is, the language of the [[Castile (historical region)|Castile]] region, when contrasting it with other [[languages of Spain|languages spoken in Spain]] such as [[Galician language|Galician]], [[Basque language|Basque]], and [[Catalan language|Catalan]].
[10780130] |This reasoning also holds true for the language's preferred name in some [[Hispanic America]]n countries.
[10780140] |In this manner, the [[Spanish Constitution of 1978]] uses the term {{lang|es|''castellano''}} to define the [[official language]] of the whole Spanish State, as opposed to {{lang|es|''las demás lenguas españolas''}} (lit. ''the other Spanish languages'').
[10780150] |Article III reads as follows:
[10780160] |The name ''castellano'' is, however, widely used for the language as a whole in Latin America.
[10780170] |Some Spanish speakers consider ''{{lang|es|castellano}}'' a generic term with no political or ideological links, much as "Spanish" is in English.
[10780180] |Often Latin Americans use it to differentiate their own variety of Spanish as opposed to the variety of Spanish spoken in Spain, or variety of Spanish which is considered as standard in the region.
[10780190] |==Classification and related languages== 
[10780200] |Spanish is closely related to the other [[West Iberian languages|West Iberian]] Romance languages: [[Asturian language|Asturian]] ({{lang|ast|''asturianu''}}), [[Galician language|Galician]] ({{lang|gl|''galego''}}), [[Ladino language|Ladino]] ({{lang|lad|''dzhudezmo/spanyol/kasteyano''}}), and [[Portuguese language|Portuguese]] ({{lang|pt|''português''}}).
[10780210] |Catalan, an [[Iberian Romance languages|East Iberian language]] which exhibits many [[Gallo-Romance]] traits, is more similar to the neighbouring [[Occitan language]] ({{lang|oc|''occitan''}}) than to Spanish, or indeed than Spanish and Portuguese are to each other.
[10780220] |Spanish and Portuguese share similar grammars and vocabulary as well as a common history of [[Influence of Arabic on other languages|Arabic influence]] while a great part of the peninsula was under [[Timeline of the Muslim presence in the Iberian peninsula|Islamic rule]] (both languages expanded over [[Islamic empire|Islamic territories]]).
[10780230] |Their [[lexical similarity]] has been estimated as 89%.
[10780240] |See [[Differences between Spanish and Portuguese]] for further information.
[10780250] |===Ladino=== 
[10780260] |Ladino, which is essentially medieval Spanish and closer to modern Spanish than any other language, is spoken by many descendants of the [[Sephardi Jews]] who were [[Alhambra decree|expelled from Spain in the 15th century]].
[10780270] |Ladino speakers are currently almost exclusively [[Sephardim|Sephardi]] Jews, with family roots in Turkey, Greece or the Balkans: current speakers mostly live in Israel and Turkey, with a few pockets in Latin America.
[10780280] |It lacks the [[Amerindian languages|Native American vocabulary]] which was influential during the [[Spanish Empire|Spanish colonial period]], and it retains many archaic features which have since been lost in standard Spanish.
[10780290] |It contains, however, other vocabulary which is not found in standard Castilian, including vocabulary from [[Hebrew language|Hebrew]], some French, Greek and [[Turkish language|Turkish]], and other languages spoken where the Sephardim settled.
[10780300] |Ladino is in serious danger of extinction because many native speakers today are elderly as well as elderly ''olim'' (immigrants to [[Israel]]) who have not transmitted the language to their children or grandchildren.
[10780310] |However, it is experiencing a minor revival among Sephardi communities, especially in music.
[10780320] |In the case of the Latin American communities, the danger of extinction is also due to the risk of assimilation by modern Castilian.
[10780330] |A related dialect is [[Haketia]], the Judaeo-Spanish of northern Morocco.
[10780340] |This too tended to assimilate with modern Spanish, during the Spanish occupation of the region.
[10780350] |===Vocabulary comparison=== 
[10780360] |Spanish and [[Italian language|Italian]] share a very similar phonological system.
[10780370] |At present, the [[lexical similarity]] with Italian is estimated at 82%.
[10780380] |As a result, Spanish and Italian are mutually intelligible to various degrees.
[10780390] |The lexical similarity with [[Portuguese language|Portuguese]] is greater, 89%, but the vagaries of Portuguese pronunciation make it less easily understood by Hispanophones than Italian.
[10780400] |[[Mutual intelligibility]] between Spanish and [[French language|French]] or [[Romanian language|Romanian]] is even lower (lexical similarity being respectively 75% and 71%): comprehension of Spanish by French speakers who have not studied the language is as low as an estimated 45% - the same as of English.
[10780410] |The common features of the writing systems of the Romance languages allow for a greater amount of interlingual reading comprehension than oral communication would.
[10780420] |<small> 1. also {{lang|pt|''nós outros''}} in early modern Portuguese (e.g. ''[[The Lusiads]]'')
[10780430] |2. {{lang|it|''noi '''altri'''''}} in Southern [[List of languages of Italy|Italian dialects and languages]]
[10780440] |3. Alternatively {{lang|fr|''nous '''autres'''''}} </small>
[10780460] |==History== 
[10780470] |Spanish evolved from [[Vulgar Latin]], with major [[Arabic influence on the Spanish language|influences from Arabic]] in vocabulary during the [[Al-Andalus|Andalusian]] period and minor surviving influences from [[Basque language|Basque]] and [[Celtiberian language|Celtiberian]], as well as [[Germanic languages]] via the [[Visigoths]].
[10780480] |Spanish developed along the remote cross road strips among the [[Alava]], [[Cantabria]], [[Burgos]], [[Soria]] and [[La Rioja (autonomous community)|La Rioja]] provinces of Northern Spain, as a strongly innovative and differing variant from its nearest cousin, [[Asturian|Leonese speech]], with a higher degree of Basque influence in these regions (see [[Iberian Romance languages]]).
[10780490] |Typical features of Spanish diachronical [[phonology]] include [[lenition]] (Latin {{lang|la|''vita''}}, Spanish {{lang|es|''vida''}}), [[palatalization]] (Latin {{lang|la|''annum''}}, Spanish {{lang|es|''año''}}, and Latin {{lang|la|''anellum''}}, Spanish {{lang|es|''anillo''}}) and [[diphthong]]ation ([[stem (linguistics)|stem]]-changing) of short ''e'' and ''o'' from Vulgar Latin (Latin {{lang|la|''terra''}}, Spanish {{lang|es|''tierra''}}; Latin {{lang|la|''novus''}}, Spanish {{lang|es|''nuevo''}}).
[10780500] |Similar phenomena can be found in other Romance languages as well.
[10780510] |During the {{lang|es|''[[Reconquista]]''}}, this northern dialect from [[Cantabria]] was carried south, and remains a [[minority language]] in the northern coastal [[Morocco]].
[10780520] |The first Latin-to-Spanish grammar ({{lang|es|''Gramática de la Lengua Castellana''}}) was written in [[Salamanca]], Spain, in 1492, by [[Antonio de Nebrija|Elio Antonio de Nebrija]].
[10780530] |When it was presented to [[Isabel de Castilla]], she asked, "What do I want a work like this for, if I already know the language?", to which he replied, "Your highness, the language is the instrument of the Empire."
[10780540] |From the 16th century onwards, the language was taken to the [[Americas]] and the [[Spanish East Indies]] via [[Spanish colonization of the Americas|Spanish colonization]].
[10780550] |In the 20th century, Spanish was introduced to [[Equatorial Guinea]] and the [[Western Sahara]], the United States, such as in [[Spanish Harlem]], in [[New York City]], that had not been part of the Spanish Empire.
[10780560] |For details on borrowed words and other external influences upon Spanish, see [[Influences on the Spanish language]].
[10780570] |===Characterization=== 
[10780580] |A defining characteristic of Spanish was the [[diphthong]]ization of the Latin short vowels ''e'' and ''o'' into ''ie'' and ''ue'', respectively, when they were stressed.
[10780590] |Similar [[sound law|sound changes]] are found in other Romance languages, but in Spanish they were significant.
[10780600] |Some examples:
[10780610] |* Lat. {{lang|la|''petra''}} > Sp. {{lang|es|''piedra''}}, It. {{lang|it|''pietra''}}, Fr. {{lang|fr|''pierre''}}, Rom. {{lang|ro|''piatrǎ''}}, Port./Gal. {{lang|pt|''pedra''}} "stone".
[10780620] |* Lat. {{lang|la|''moritur''}} > Sp. {{lang|es|''muere''}}, It. {{lang|it|''muore''}}, Fr. {{lang|fr|''meurt''}} / {{lang|fr|''muert''}}, Rom. {{lang|ro|''moare''}}, Port./Gal. {{lang|pt|''morre''}} "die".
[10780630] |Peculiar to early Spanish (as in the [[Gascon]] dialect of Occitan, and possibly due to a Basque [[substratum]]) was the mutation of Latin initial ''f-'' into ''h-'' whenever it was followed by a vowel that did not diphthongate.
[10780640] |Compare for instance: 
[10780650] |* Lat. {{lang|la|''filium''}} > It. {{lang|it|''figlio''}}, Port. {{lang|pt|''filho''}}, Gal. {{lang|gl|''fillo''}}, Fr. {{lang|fr|''fils''}}, Occitan {{lang|oc|''filh''}} (but Gascon {{lang|gsc|''hilh''}}) Sp. {{lang|es|''hijo''}} (but Ladino {{lang|lad|''fijo''}}); 
[10780660] |* Lat. {{lang|la|''fabulari''}} > Lad. {{lang|lad|''favlar''}}, Port./Gal. {{lang|pt|''falar''}}, Sp. {{lang|es|''hablar''}}; 
[10780670] |* but Lat. {{lang|la|''focum''}} > It. {{lang|it|''fuoco''}}, Port./Gal. {{lang|pt|''fogo''}}, Sp./Lad. {{lang|es|''fuego''}}.
[10780680] |Some [[consonant cluster]]s of Latin also produced characteristically different results in these languages, for example:
[10780690] |* Lat. {{lang|la|''clamare''}}, acc. {{lang|la|''flammam''}}, {{lang|la|''plenum''}} > Lad. {{lang|lad|''lyamar''}}, {{lang|lad|''flama''}}, {{lang|lad|''pleno''}}; Sp. {{lang|es|''llamar''}}, {{lang|es|''llama''}}, {{lang|es|''lleno''}}.
[10780700] |However, in Spanish there are also the forms {{lang|la|''clamar''}}, {{lang|lad|''flama''}}, {{lang|lad|''pleno''}}; Port. {{lang|pt|''chamar''}}, {{lang|pt|''chama''}}, {{lang|pt|''cheio''}}; Gal. {{lang|gl|''chamar''}}, {{lang|gl|''chama''}}, {{lang|gl|''cheo''}}.
[10780710] |* Lat. acc. {{lang|la|''octo''}}, {{lang|la|''noctem''}}, {{lang|la|''multum''}} > Lad. {{lang|lad|''ocho''}}, {{lang|lad|''noche''}}, {{lang|lad|''muncho''}}; Sp. {{lang|es|''ocho''}}, {{lang|es|''noche''}}, {{lang|es|''mucho''}}; Port. {{lang|pt|''oito''}}, {{lang|pt|''noite''}}, {{lang|pt|''muito''}}; Gal. {{lang|gl|''oito''}}, {{lang|gl|''noite''}}, {{lang|gl|''moito''}}.
[10780720] |==Geographic distribution== 
[10780730] |Spanish is one of the official languages of the [[European Union]], the [[Organization of American States]], the [[Organization of Ibero-American States]], the [[United Nations]], and the [[Union of South American Nations]].
[10780740] |===Europe=== 
[10780750] |Spanish is an official language of Spain, the country for which it is named and from which it originated.
[10780760] |It is also spoken in [[Gibraltar]], though English is the official language.
[10780770] |Likewise, it is spoken in [[Andorra]] though [[Catalan language|Catalan]] is the official language.
[10780780] |It is also spoken by small communities in other European countries, such as the [[United Kingdom]], [[France]], and [[Germany]].
[10780790] |Spanish is an official language of the [[European Union]].
[10780800] |In Switzerland, Spanish is the [[mother tongue]] of 1.7% of the population, representing the first minority after the 4 official languages of the country.
[10780810] |===The Americas === 
[10780820] |====Latin America==== 
[10780830] |Most Spanish speakers are in [[Latin America]]; of most countries with the most Spanish speakers, only [[Spain]] is outside of the [[Americas]].
[10780840] |[[Mexico]] has most of the world's native speakers.
[10780850] |Nationally, Spanish is the official language of [[Argentina]], [[Bolivia]] (co-official [[Quechua]] and [[Aymara language|Aymara]]), [[Chile]], [[Colombia]], [[Costa Rica]], [[Cuba]], [[Dominican Republic]], [[Ecuador]], [[El Salvador]], [[Guatemala]], [[Honduras]], [[Mexico]] , [[Nicaragua]], [[Panama]], [[Paraguay]] (co-official [[Guarani language|Guaraní]]), [[Peru]] (co-official [[Quechua]] and, in some regions, [[Aymara language|Aymara]]), [[Uruguay]], and [[Venezuela]].
[10780860] |Spanish is also the official language (co-official with [[English language|English]]) in the U.S. commonwealth of [[Puerto Rico]].
[10780870] |Spanish has no official recognition in the former [[British overseas territories|British colony]] of [[Belize]]; however, per the 2000 census, it is spoken by 43% of the population.
[10780880] |Mainly, it is spoken by Hispanic descendants who remained in the region since the 17th century; however, English is the official language.
[10780890] |Spain colonized [[Trinidad and Tobago]] first in [[1498]], leaving the [[Carib]] people the Spanish language.
[10780900] |Also the [[Cocoa Panyol]]s, laborers from Venezuela, took their culture and language with them; they are accredited with the music of "[[Parang]]" ("[[Parranda]]") on the island.
[10780910] |Because of Trinidad's location on the South American coast, the country is much influenced by its Spanish-speaking neighbors.
[10780920] |A recent census shows that more than 1,500 inhabitants speak Spanish.
[10780930] |In 2004, the government launched the ''Spanish as a First Foreign Language'' (SAFFL) initiative in March 2005.
[10780940] |Government regulations require Spanish to be taught, beginning in primary school, while thirty percent of public employees are to be linguistically competent within five years.
[10780950] |The government also announced that Spanish will be the country's second official language by [[2020]], beside English.
[10780960] |Spanish is important in [[Brazil]] because of its proximity to and increased trade with its Spanish-speaking neighbors; for example, as a member of the [[Mercosur]] trading bloc.
[10780970] |In 2005, the [[National Congress of Brazil]] approved a bill, signed into law by the [[President of Brazil|President]], making Spanish available as a foreign language in secondary schools.
[10780980] |In many border towns and villages (especially on the Uruguayan-Brazilian border), a [[mixed language]] known as [[Riverense Portuñol|Portuñol]] is spoken.
[10780990] |====United States==== 
[10781000] |In the 2006 census, 44.3 million people of the U.S. population were [[Hispanic]] or [[Latino]] by origin; 34 million people, 12.2 percent, of the population older than 5 years speak Spanish at home.
[10781005] |Spanish has a [[Spanish in the United States|long history in the United States]] (many south-western states were part of Mexico and Spain), and it recently has been revitalized by much immigration from Latin America.
[10781010] |Spanish is the most widely taught foreign language in the country.
[10781020] |Although the United States has no formally designated "official languages," Spanish is formally recognized at the state level beside English; in the U.S. state of [[New Mexico]], 30 per cent of the population speak it.
[10781030] |It also has strong influence in metropolitan areas such as Los Angeles, Miami and New York City.
[10781040] |Spanish is the dominant spoken language in [[Puerto Rico]], a U.S. territory.
[10781050] |In total, the U.S. has the world's fifth-largest Spanish-speaking population.
[10781060] |===Asia=== 
[10781070] |Spanish was an official language of the [[Philippines]] but was never spoken by a majority of the population.
[10781080] |Movements for most of the masses to learn the language were started but were stopped by the friars.
[10781090] |Its importance fell in the first half of the 20th century following the U.S. occupation and administration of the islands.
[10781100] |The introduction of the English language in the Philippine government system put an end to the use of Spanish as the official language.
[10781110] |The language lost its official status in 1973 during the [[Ferdinand Marcos]] administration.
[10781120] |Spanish is spoken mainly by small communities of Filipino-born Spaniards, Latin Americans, and Filipino [[mestizo]]s (mixed race), descendants of the early colonial Spanish settlers.
[10781130] |Throughout the 20th century, the Spanish language has declined in importance compared to English and [[Tagalog language|Tagalog]].
[10781140] |According to the 1990 Philippine census, there were 2,658 native speakers of Spanish.
[10781150] |No figures were provided during the 1995 and 2000 censuses; however, figures for 2000 did specify there were over 600,000 native speakers of [[Chavacano language|Chavacano]], a Spanish based [[Creole language|creole]] language spoken in [[Cavite]] and [[Zamboanga]].
[10781160] |Some other sources put the number of Spanish speakers in the Philippines around two to three million; however, these sources are disputed.
[10781170] |In Tagalog, there are 4,000 Spanish adopted words and around 6,000 Spanish adopted words in Visayan and other Philippine languages as well.
[10781180] |Today Spanish is offered as a foreign language in Philippines schools and universities.
[10781190] |===Africa=== 
[10781200] |In Africa, Spanish is official in the UN-recognised but Moroccan-occupied [[Western Sahara]] (co-official [[Arabic language|Arabic]]) and [[Equatorial Guinea]] (co-official [[French language|French]] and [[Portuguese language|Portuguese]]).
[10781210] |Today, nearly 200,000 refugee Sahrawis are able to read and write in Spanish, and several thousands have received [[university]] education in foreign countries as part of aid packages (mainly [[Cuba]] and [[Spain]]).
[10781220] |In Equatorial Guinea, Spanish is the predominant language when counting native and non-native speakers (around 500,000 people), while [[Fang language|Fang]] is the most spoken language by a number of native speakers.
[10781230] |It is also spoken in the Spanish cities in [[Plazas de soberanía|continental North Africa]] ([[Ceuta]] and [[Melilla]]) and in the autonomous community of [[Canary Islands]] (143,000 and 1,995,833 people, respectively).
[10781240] |Within Northern Morocco, a former [[History of Morocco#European influence|Franco-Spanish protectorate]] that is also geographically close to Spain, approximately 20,000 people speak Spanish.
[10781250] |It is spoken by some communities of [[Angola]], because of the Cuban influence from the [[Cold War]], and in [[Nigeria]] by the descendants of [[Afro-Cuban]] ex-slaves.
[10781260] |In [[Côte d'Ivoire]] and [[Senegal]], Spanish can be learned as a second foreign language in the public education system.
[10781270] |In 2008, [[Cervantes Institute]]s centers will be opened in [[Lagos]] and [[Johannesburg]], the first one in the [[Sub-Saharan Africa]]
[10781280] |===Oceania=== 
[10781290] |Among the countries and territories in [[Oceania]], Spanish is also spoken in [[Easter Island]], a territorial possession of Chile.
[10781300] |According to the 2001 census, there are approximately 95,000 speakers of Spanish in Australia, 44,000 of which live in Greater Sydney , where the older [[:Category: Australians of Mexican descent|Mexican]], [[:Category:Australians of Colombian descent|Colombian]], and [[:Category: Australians of Spanish descent|Spanish]] populations and newer [[:Category:Australians of Argentine descent|Argentine]], Salvadoran and [[:Category:Australians of Uruguayan descent|Uruguyan]] communities live.
[10781310] |The island nations of [[Guam]], [[Palau]], [[Northern Marianas]], [[Marshall Islands]] and [[Federated States of Micronesia]] all once had Spanish speakers, since [[Marianas Islands|Marianas]] and [[Caroline Islands]] were Spanish colonial possessions until late 19th century (see [[Spanish-American War]]), but Spanish has since been forgotten.
[10781320] |It now only exists as an influence on the local native languages and also spoken by [[Hispanics in the United States|Hispanic American]] resident populations.
[10781330] |==Dialectal variation== 
[10781340] |There are important variations among the regions of Spain and throughout Spanish-speaking America.
[10781350] |In countries in Hispanophone America, it is preferable to use the word ''castellano'' to distinguish their version of the language from that of Spain, thus asserting their autonomy and national identity.
[10781360] |In Spain the Castilian dialect's pronunciation is commonly regarded as the national standard, although a use of slightly different pronouns called [[Loísmo|{{lang|es|''laísmo''}}]] of this dialect is deprecated.
[10781370] |More accurately, for nearly everyone in Spain, "standard Spanish" means "pronouncing everything exactly as it is written," an ideal which does not correspond to any real dialect, though the northern dialects are the closest to it.
[10781380] |In practice, the standard way of speaking Spanish in the media is "written Spanish" for formal speech, "Madrid dialect" (one of the transitional variants between Castilian and Andalusian) for informal speech.
[10781390] |===Voseo=== 
[10781400] |Spanish has three [[grammatical person|second-person]] [[grammatical number|singular]] [[pronoun]]s: {{lang|es|''tú''}}, {{lang|es|''usted''}}, and in some parts of Latin America, {{lang|es|''vos''}} (the use of this pronoun and/or its verb forms is called ''voseo'').
[10781410] |In those regions where it is used, generally speaking, {{lang|es|''tú''}} and {{lang|es|''vos''}} are informal and used with friends; in other countries, {{lang|es|''vos''}} is considered an archaic form.
[10781415] |{{lang|es|''Usted''}} is universally regarded as the formal address (derived from {{lang|es|''vuestra merced''}}, "your grace"), and is used as a mark of respect, as when addressing one's elders or strangers.
[10781420] |{{lang|es|''Vos''}} is used extensively as the primary spoken form of the second-person singular pronoun, although with wide differences in social consideration, in many countries of [[Latin America]], including [[Argentina]], [[Chile]], [[Costa Rica]], the central mountain region of [[Ecuador]], the State of [[Chiapas]] in [[Mexico]], [[El Salvador]], [[Guatemala]], [[Honduras]], [[Nicaragua]], [[Paraguay]], [[Uruguay]], the [[Paisa region]] and Caleños of [[Colombia]] and the [[States]] of [[Zulia]] and Trujillo in [[Venezuela]].
[10781430] |There are some differences in the verbal endings for ''vos'' in each country.
[10781440] |In Argentina, Uruguay, and increasingly in Paraguay and some Central American countries, it is also the standard form used in the [[mass media|media]], but the media in other countries with {{lang|es|''voseo''}} generally continue to use {{lang|es|''usted''}} or {{lang|es|''tú''}} except in advertisements, for instance.
[10781445] |{{lang|es|''Vos''}} may also be used regionally in other countries.
[10781450] |Depending on country or region, usage may be considered standard or (by better educated speakers) to be unrefined.
[10781460] |Interpersonal situations in which the use of ''vos'' is acceptable may also differ considerably between regions.
[10781470] |===Ustedes=== 
[10781480] |Spanish forms also differ regarding second-person plural pronouns.
[10781490] |The Spanish dialects of Latin America have only one form of the second-person plural for daily use, {{lang|es|''ustedes''}} (formal or familiar, as the case may be, though {{lang|es|''vosotros''}} non-formal usage can sometimes appear in poetry and rhetorical or literary style).
[10781500] |In Spain there are two forms &mdash; {{lang|es|''ustedes''}} (formal) and {{lang|es|''vosotros''}} (familiar).
[10781510] |The pronoun {{lang|es|''vosotros''}} is the plural form of {{lang|es|''tú''}} in most of Spain, but in the Americas (and certain southern Spanish cities such as [[Cádiz]] or [[Seville]], and in the [[Canary Islands]]) it is replaced with {{lang|es|''ustedes''}}.
[10781520] |It is notable that the use of {{lang|es|''ustedes''}} for the informal plural "you" in southern Spain does not follow the usual rule for pronoun-verb [[agreement (linguistics)|agreement]]; e.g., while the formal form for "you go", {{lang|es|''ustedes van''}}, uses the third-person plural form of the verb, in Cádiz or Seville the informal form is constructed as {{lang|es|''ustedes vais''}}, using the second-person plural of the verb.
[10781530] |In the Canary Islands, though, the usual pronoun-verb agreement is preserved in most cases.
[10781540] |Some words can be different, even embarrassingly so, in different Hispanophone countries.
[10781550] |Most Spanish speakers can recognize other Spanish forms, even in places where they are not commonly used, but Spaniards generally do not recognise specifically American usages.
[10781560] |For example, Spanish ''mantequilla'', ''aguacate'' and ''albaricoque'' (respectively, "butter", "avocado", "apricot") correspond to ''manteca'', ''palta'', and ''damasco'', respectively, in Argentina, Chile and Uruguay.
[10781570] |The everyday Spanish words ''coger'' (to catch, get, or pick up), ''pisar'' (to step on) and ''concha'' (seashell) are considered extremely rude in parts of Latin America, where the meaning of ''coger'' and ''pisar'' is also "to have sex" and ''concha'' means "vulva".
[10781580] |The Puerto Rican word for "bobby pin" (''pinche'') is an obscenity in Mexico, and in [[Nicaragua]] simply means "stingy".
[10781590] |Other examples include ''[[taco]]'', which means "swearword" in Spain but is known to the rest of the world as a Mexican dish.
[10781600] |''Pija'' in many countries of Latin America is an obscene slang word for "penis", while in [[Spain]] the word also signifies "posh girl" or "snobby".
[10781610] |''Coche'', which means "car" in Spain, for the vast majority of Spanish-speakers actually means "baby-stroller", in Guatemala it means "pig", while ''carro'' means "car" in some Latin American countries and "cart" in others, as well as in Spain.
[10781620] |The {{lang|es|[[Real Academia Española]]}} (Royal Spanish Academy), together with the 21 other national ones (see [[Association of Spanish Language Academies]]), exercises a standardizing influence through its publication of dictionaries and widely respected grammar and style guides.
[10781630] |Due to this influence and for other sociohistorical reasons, a standardized form of the language ([[Standard Spanish]]) is widely acknowledged for use in literature, academic contexts and the media.
[10781640] |==Writing system== 
[10781650] |Spanish is written using the [[Latin alphabet]], with the addition of the character ''[[ñ]]'' (''eñe'', representing the phoneme {{IPA|/ɲ/}}, a letter distinct from ''n'', although typographically composed of an ''n'' with a [[tilde]]) and the [[digraph (orthography)|digraph]]s ''ch'' ({{lang|es|''che''}}, representing the phoneme {{IPA|/tʃ/}}) and ''ll'' ({{lang|es|''elle''}}, representing the phoneme {{IPA|/ʎ/}}).
[10781660] |However, the digraph ''rr'' ({{lang|es|''erre fuerte''}}, "strong ''r''", {{lang|es|''erre doble''}}, "double ''r''", or simply {{lang|es|''erre''}}), which also represents a distinct phoneme {{IPA|/r/}}, is not similarly regarded as a single letter.
[10781670] |Since 1994, the digraphs ''ch'' and ''ll'' are to be treated as letter pairs for [[collation]] purposes, though they remain a part of the alphabet.
[10781680] |Words with ''ch'' are now alphabetically sorted between those with ''ce'' and ''ci'', instead of following ''cz'' as they used to, and similarly for ''ll''.
[10781690] |Thus, the Spanish alphabet has the following 29 letters: 
[10781700] |:a, b, c, ch, d, e, f, g, h, i, j, k, l, ll, m, n, ñ, o, p, q, r, s, t, u, v, w, x, y, z.
[10781710] |With the exclusion of a very small number of regional terms such as ''México'' (see [[Toponymy of Mexico]]) and some neologisms like ''software'', pronunciation can be entirely determined from spelling.
[10781720] |A typical Spanish word is stressed on the [[syllable]] before the last if it ends with a vowel (not including ''y'') or with a vowel followed by ''n'' or ''s''; it is stressed on the last syllable otherwise.
[10781730] |Exceptions to this rule are indicated by placing an [[acute accent]] on the [[stress (linguistics)|stressed vowel]].
[10781740] |The acute accent is used, in addition, to distinguish between certain [[homophone]]s, especially when one of them is a stressed word and the other one is a [[clitic]]: compare {{lang|es|''el''}} ("the", masculine singular definite article) with {{lang|es|''él''}} ("he" or "it"), or {{lang|es|''te''}} ("you", object pronoun), {{lang|es|''de''}} (preposition "of" or "from"), and {{lang|es|''se''}} (reflexive pronoun) with {{lang|es|''té''}} ("tea"), {{lang|es|''dé''}} ("give") and {{lang|es|''sé''}} ("I know", or imperative "be").
[10781750] |The interrogative pronouns ({{lang|es|''qué''}}, {{lang|es|''cuál''}}, {{lang|es|''dónde''}}, {{lang|es|''quién''}}, etc.) also receive accents in direct or indirect questions, and some demonstratives ({{lang|es|''ése''}}, {{lang|es|''éste''}}, {{lang|es|''aquél''}}, etc.) must be accented when used as pronouns.
[10781760] |The conjunction {{lang|es|''o''}} ("or") is written with an accent between numerals so as not to be confused with a zero: e.g., {{lang|es|''10 ó 20''}} should be read as {{lang|es|''diez o veinte''}} rather than {{lang|es|''diez mil veinte''}} ("10,020").
[10781770] |Accent marks are frequently omitted in capital letters (a widespread practice in the early days of computers where only lowercase vowels were available with accents), although the [[Real Academia Española|RAE]] advises against this.
[10781780] |When ''u'' is written between ''g'' and a front vowel (''e'' or ''i''), if it should be pronounced, it is written with a [[diaeresis (diacritic)|diaeresis]] (''ü'') to indicate that it is not silent as it normally would be (e.g., ''cigüeña'', "stork", is pronounced {{IPA|/θiˈɣweɲa/}}; if it were written ''cigueña'', it would be pronounced {{IPA|/θiˈɣeɲa/}}.
[10781790] |Interrogative and exclamatory clauses are introduced with [[Inverted question and exclamation marks|inverted question ( ¿ ) and exclamation ( ¡ ) marks]].
[10781800] |==Sounds== 
[10781810] |The phonemic inventory listed in the following table includes [[phoneme]]s that are preserved only in some dialects, other dialects having merged them (such as ''[[yeísmo]]''); these are marked with an asterisk (*).
[10781820] |Sounds in parentheses are [[allophone]]s.
[10781830] |By the 16th century, the consonant system of Spanish underwent the following important changes that differentiated it from [[Iberian Romance languages|neighboring Romance languages]] such as [[Portuguese language|Portuguese]] and [[Catalan language|Catalan]]:
[10781840] |*Initial {{IPA|/f/}}, when it had evolved into a vacillating {{IPA|/h/}}, was lost in most words (although this etymological ''h-'' is preserved in spelling and in some Andalusian dialects is still aspirated).
[10781850] |*The [[bilabial approximant]] {{IPA|/β̞/}} (which was written ''u'' or ''v'') merged with the bilabial oclusive {{IPA|/b/}} (written ''b'').
[10781860] |There is no difference between the pronunciation of orthographic ''b'' and ''v'' in contemporary Spanish, excepting emphatic pronunciations that cannot be considered standard or natural.
[10781870] |*The [[voiced alveolar fricative]] {{IPA|/z/}} which existed as a separate phoneme in medieval Spanish merged with its voiceless counterpart {{IPA|/s/}}.
[10781880] |The phoneme which resulted from this merger is currently spelled ''s''.
[10781890] |*The [[voiced postalveolar fricative]] {{IPA|/ʒ/}} merged with its voiceless counterpart {{IPA|/ʃ/}}, which evolved into the modern velar sound {{IPA|/x/}} by the 17th century, now written with ''j'', or ''g'' before ''e, i''.
[10781900] |Nevertheless, in most parts of Argentina and in Uruguay, ''y'' and ''ll'' have both evolved to {{IPA|/ʒ/}} or {{IPA|/ʃ/}}.
[10781910] |*The [[voiced alveolar affricate]] {{IPA|/dz/}} merged with its voiceless counterpart {{IPA|/ts/}}, which then developed into the interdental {{IPA|/θ/}}, now written ''z'', or ''c'' before ''e, i''.
[10781920] |But in [[Andalusia]], the [[Canary Islands]] and the Americas this sound merged with {{IPA|/s/}} as well.
[10781930] |See ''[[Ceceo]]'', for further information.
[10781940] |The consonant system of Medieval Spanish has been better preserved in [[Ladino language|Ladino]] and in Portuguese, neither of which underwent these shifts.
[10781950] |===Lexical stress=== 
[10781960] |Spanish is a [[syllable-timed language]], so each syllable has the same duration regardless of stress.
[10781970] |Stress most often occurs on any of the last three syllables of a word, with some rare exceptions at the fourth last.
[10781980] |The ''tendencies'' of stress assignment are as follows:
[10781990] |* In words ending in vowels and {{IPA|/s/}}, stress most often falls on the penultimate syllable.
[10782000] |* In words ending in all other consonants, the stress more often falls on the ultimate syllable.
[10782010] |* Preantepenultimate stress occurs rarely and only in words like ''guardándoselos'' ('saving them for him/her') where a clitic follows certain verbal forms.
[10782020] |In addition to the many exceptions to these tendencies, there are numerous [[minimal pair]]s which contrast solely on stress.
[10782030] |For example, ''sabana'', with penultimate stress, means 'savannah' while ''{{lang|es|sábana}}'', with antepenultimate stress, means 'sheet'; ''{{lang|es|límite}}'' ('boundary'), ''{{lang|es|limite}}'' ('[that] he/she limits') and ''{{lang|es|limité}}'' ('I limited') also contrast solely on stress.
[10782040] |Phonological stress may be marked orthographically with an [[acute accent]] (''ácido'', ''distinción'', etc).
[10782050] |This is done according to the mandatory stress rules of [[Spanish orthography]] which are similar to the tendencies above (differing with words like ''distinción'') and are defined so as to unequivocally indicate where the stress lies in a given written word.
[10782060] |An acute accent may also be used to differentiate homophones (such as ''[[wikt:té#Spanish|té]]'' for 'tea' and ''[[wikt:te#Spanish|te]]'' 
[10782070] |An amusing example of the significance of intonation in Spanish is the phrase ''{{lang|es|¿Cómo "cómo como"?
[10782080] |¡Como como como!}}''
[10782090] |("What do you mean / 'how / do I eat'? / I eat / the way / I eat!").
[10782100] |==Grammar== 
[10782110] |Spanish is a relatively [[inflected]] language, with a two-[[Grammatical gender|gender]] system and about fifty [[Grammatical conjugation|conjugated]] forms per [[verb]], but limited inflection of [[noun]]s, [[adjective]]s, and [[determiner]]s.
[10782120] |(For a detailed overview of verbs, see [[Spanish verbs]] and [[Spanish irregular verbs]].)
[10782130] |It is [[Branching (linguistics)|right-branching]], uses [[preposition]]s, and usually, though not always, places [[adjective]]s after [[noun]]s.
[10782140] |Its [[syntax]] is generally [[Subject Verb Object]], though variations are common.
[10782150] |It is a [[pro-drop language]] (allows the deletion of pronouns when pragmatically unnecessary) and [[verb framing|verb-framed]].
[10782160] |== Samples ==
[10790010] |<article>Speech recognition</article>
[10790020] |'''Speech recognition''' (also known as '''automatic speech recognition''' or '''computer speech recognition''') converts spoken words to machine-readable input (for example, to keypresses, using the binary code for a string of [[Character (computing)|character]] codes).
[10790030] |The term [[speaker recognition|voice recognition]] may also be used to refer to speech recognition, but more precisely refers to '''speaker recognition''', which attempts to identify the person speaking, as opposed to what is being said.
[10790040] |Speech recognition applications include voice dialing (e.g., "Call home"), call routing (e.g., "I would like to make a collect call"), [[domotic]] appliance control and content-based spoken audio search (e.g., find a podcast where particular words were spoken), simple data entry (e.g., entering a credit card number), preparation of structured documents (e.g., a radiology report), speech-to-text processing (e.g., [[word processor]]s or [[email]]s), and in aircraft [[cockpit]]s (usually termed [[Direct Voice Input]]).
[10790050] |==History== 
[10790060] |One of the most notable domains for the commercial application of speech recognition in the United States has been health care and in particular the work of the [[medical transcription]]ist (MT).
[10790070] |According to industry experts, at its inception, speech recognition (SR) was sold as a way to completely eliminate transcription rather than make the transcription process more efficient, hence it was not accepted.
[10790080] |It was also the case that SR at that time was often technically deficient.
[10790090] |Additionally, to be used effectively, it required changes to the ways physicians worked and documented clinical encounters, which many if not all were reluctant to do.
[10790100] |The biggest limitation to speech recognition automating transcription, however, is seen as the software.
[10790110] |The nature of narrative dictation is highly interpretive and often requires judgment that may be provided by a real human but not yet by an automated system.
[10790120] |Another limitation has been the extensive amount of time required by the user and/or system provider to train the software.
[10790130] |A distinction in ASR is often made between "artificial syntax systems" which are usually domain-specific and "natural language processing" which is usually language-specific.
[10790140] |Each of these types of application presents its own particular goals and challenges.
[10790150] |==Applications== 
[10790160] |===Health care=== 
[10790170] |In the [[health care]] domain, even in the wake of improving speech recognition technologies, medical transcriptionists (MTs) have not yet become obsolete.
[10790180] |Many experts in the field anticipate that with increased use of speech recognition technology, the services provided may be redistributed rather than replaced.
[10790190] |Speech recognition can be implemented in front-end or back-end of the medical documentation process.
[10790200] |Front-End SR is where the provider dictates into a speech-recognition engine, the recognized words are displayed right after they are spoken, and the dictator is responsible for editing and signing off on the document.
[10790210] |It never goes through an MT/editor.
[10790220] |Back-End SR or Deferred SR is where the provider dictates into a digital dictation system, and the voice is routed through a speech-recognition machine and the recognized draft document is routed along with the original voice file to the MT/editor, who edits the draft and finalizes the report.
[10790230] |Deferred SR is being widely used in the industry currently.
[10790240] |Many [[Electronic Medical Records]] (EMR) applications can be more effective and may be performed more easily when deployed in conjunction with a speech-recognition engine.
[10790250] |Searches, queries, and form filling may all be faster to perform by voice than by using a keyboard.
[10790260] |****************************************************************************************
[10790270] |**********************************
[10790280] |*****************
[10790290] |===Military=== 
[10790300] |====High-performance fighter aircraft==== 
[10790310] |Substantial efforts have been devoted in the last decade to the test and evaluation of speech recognition in fighter aircraft.
[10790320] |Of particular note are the U.S. program in speech recognition for the Advanced Fighter Technology Integration (AFTI)/[[F-16]] aircraft ([[F-16 VISTA]]), the program in France on installing speech recognition systems on [[Mirage (aircraft)|Mirage]] aircraft, and programs in the UK dealing with a variety of aircraft platforms.
[10790330] |In these programs, speech recognizers have been operated successfully in fighter aircraft with applications including: setting radio frequencies, commanding an autopilot system, setting steer-point coordinates and weapons release parameters, and controlling flight displays.
[10790340] |Generally, only very limited, constrained vocabularies have been used successfully, and a major effort has been devoted to integration of the speech recognizer with the avionics system.
[10790350] |Some important conclusions from the work were as follows: 
[10790360] |#Speech recognition has definite potential for reducing pilot workload, but this potential was not realized consistently.
[10790370] |#Achievement of very high recognition accuracy (95% or more) was the most critical factor for making the speech recognition system useful&nbsp;— with lower recognition rates, pilots would not use the system.
[10790380] |#More natural vocabulary and grammar, and shorter training times would be useful, but only if very high recognition rates could be maintained.
[10790390] |Laboratory research in robust speech recognition for military environments has produced promising results which, if extendable to the cockpit, should improve the utility of speech recognition in high-performance aircraft.
[10790400] |Working with Swedish pilots flying in the [[JAS-39]] Gripen cockpit, Englund (2004) found recognition deteriorated with increasing G-loads.
[10790410] |It was also concluded that adaptation greatly improved the results in all cases and introducing models for breathing was shown to improve recognition scores significantly.
[10790420] |Contrary to what might be expected, no effects of the broken English of the speakers were found.
[10790430] |It was evident that spontaneous speech caused problems for the recognizer, as could be expected.
[10790440] |A restricted vocabulary, and above all, a proper syntax, could thus be expected to improve recognition accuracy substantially.
[10790450] |The [[Eurofighter Typhoon]] currently in service with the UK [[RAF]] employs a speaker-dependent system, i.e. it requires each pilot to create a template.
[10790460] |The system is not used for any safety critical or weapon critical tasks, such as weapon release or lowering of the undercarriage, but is used for a wide range of other [[cockpit]] functions.
[10790470] |Voice commands are confirmed by visual and/or aural feedback.
[10790480] |The system is seen as a major design feature in the reduction of pilot [[workload]], and even allows the pilot to assign targets to himself with two simple voice commands or to any of his wingmen with only five commands.
[10790490] |====Helicopters==== 
[10790500] |The problems of achieving high recognition accuracy under stress and noise pertain strongly to the helicopter environment as well as to the fighter environment.
[10790510] |The acoustic noise problem is actually more severe in the helicopter environment, not only because of the high noise levels but also because the helicopter pilot generally does not wear a facemask, which would reduce acoustic noise in the microphone.
[10790520] |Substantial test and evaluation programs have been carried out in the post decade in speech recognition systems applications in helicopters, notably by the U.S. Army Avionics Research and Development Activity (AVRADA) and by the Royal Aerospace Establishment (RAE) in the UK.
[10790530] |Work in France has included speech recognition in the Puma helicopter.
[10790540] |There has also been much useful work in Canada.
[10790550] |Results have been encouraging, and voice applications have included: control of communication radios; setting of navigation systems; and control of an automated target handover system.
[10790560] |As in fighter applications, the overriding issue for voice in helicopters is the impact on pilot effectiveness.
[10790570] |Encouraging results are reported for the AVRADA tests, although these represent only a feasibility demonstration in a test environment.
[10790580] |Much remains to be done both in speech recognition and in overall speech recognition technology, in order to consistently achieve performance improvements in operational settings.
[10790590] |====Battle management==== 
[10790600] |Battle management command centres generally require rapid access to and control of large, rapidly changing information databases.
[10790610] |Commanders and system operators need to query these databases as conveniently as possible, in an eyes-busy environment where much of the information is presented in a display format.
[10790620] |Human machine interaction by voice has the potential to be very useful in these environments.
[10790630] |A number of efforts have been undertaken to interface commercially available isolated-word recognizers into battle management environments.
[10790640] |In one feasibility study, speech recognition equipment was tested in conjunction with an integrated information display for naval battle management applications.
[10790650] |Users were very optimistic about the potential of the system, although capabilities were limited.
[10790660] |Speech understanding programs sponsored by the Defense Advanced Research Projects Agency (DARPA) in the U.S. has focused on this problem of natural speech interface..
[10790670] |Speech recognition efforts have focused on a database of continuous speech recognition (CSR), large-vocabulary speech which is designed to be representative of the naval resource management task.
[10790680] |Significant advances in the state-of-the-art in CSR have been achieved, and current efforts are focused on integrating speech recognition and natural language processing to allow spoken language interaction with a naval resource management system.
[10790690] |====Training air traffic controllers==== 
[10790700] |Training for military (or civilian) air traffic controllers (ATC) represents an excellent application for speech recognition systems.
[10790710] |Many ATC training systems currently require a person to act as a "pseudo-pilot", engaging in a voice dialog with the trainee controller, which simulates the dialog which the controller would have to conduct with pilots in a real ATC situation.
[10790720] |Speech recognition and synthesis techniques offer the potential to eliminate the need for a person to act as pseudo-pilot, thus reducing training and support personnel.
[10790730] |Air controller tasks are also characterized by highly structured speech as the primary output of the controller, hence reducing the difficulty of the speech recognition task.
[10790740] |The U.S. Naval Training Equipment Center has sponsored a number of developments of prototype ATC trainers using speech recognition.
[10790750] |Generally, the recognition accuracy falls short of providing graceful interaction between the trainee and the system.
[10790760] |However, the prototype training systems have demonstrated a significant potential for voice interaction in these systems, and in other training applications.
[10790770] |The U.S. Navy has sponsored a large-scale effort in ATC training systems, where a commercial speech recognition unit was integrated with a complex training system including displays and scenario creation.
[10790780] |Although the recognizer was constrained in vocabulary, one of the goals of the training programs was to teach the controllers to speak in a constrained language, using specific vocabulary specifically designed for the ATC task.
[10790790] |Research in France has focussed on the application of speech recognition in ATC training systems, directed at issues both in speech recognition and in application of task-domain grammar constraints.
[10790800] |The USAF, USMC, US Army, and FAA are currently using ATC simulators with speech recognition provided by Adacel Systems Inc (ASI).
[10790810] |Adacel's MaxSim software uses speech recognition and synthetic speech to enable the trainee to control aircraft and ground vehicles in the simulation without the need for pseudo pilots.
[10790820] |Adacel's ATC In A Box Software provideds a synthetic ATC environment for flight simulators.
[10790830] |The "real" pilot talks to a virtual controller using speech recognition and the virtual controller responds with synthetic speech.
[10790840] |It will be an application format
[10790850] |===Telephony and other domains=== 
[10790860] |ASR in the field of telephony is now commonplace and in the field of computer gaming and simulation is becoming more widespread.
[10790870] |Despite the high level of integration with word processing in general personal computing, however, ASR in the field of document production has not seen the expected increases in use.
[10790880] |The improvement of mobile processor speeds let create speech-enabled Symbian and Windows Mobile Smartphones.
[10790890] |Current speech-to-text programs are too large and require too much CPU power to be practical for the Pocket PC.
[10790900] |Speech is used mostly as a part of User Interface, for creating pre-defined or custom speech commands.
[10790910] |Leading software vendors in this field are: Microsoft Corporation (Microsoft Voice Command); Nuance Communications (Nuance Voice Control); Vito Technology (VITO Voice2Go); Speereo Software (Speereo Voice Translator).
[10790920] |===People with Disabilities=== 
[10790930] |People with disabilities are another part of the population that benefit from using speech recognition programs.
[10790940] |It is especially useful for people who have difficulty with or are unable to use their hands, from mild repetitive stress injuries to involved disabilities that require alternative input for support with accessing the computer.
[10790950] |In fact, people who used the keyboard a lot and developed [[Repetitive Strain Injury|RSI]] became an urgent early market for speech recognition.
[10790960] |Speech recognition is used in [[deaf]] [[telephony]], such as [[spinvox]] voice-to-text voicemail, [[relay services]], and [[Telecommunications Relay Service#Captioned_telephone|captioned telephone]].
[10790970] |===Further applications=== 
[10790980] |*Automatic translation
[10790990] |*Automotive speech recognition (e.g., [[Ford Sync]])
[10791000] |*Telematics (e.g. vehicle Navigation Systems)
[10791010] |*Court reporting (Realtime Voice Writing)
[10791020] |*[[Hands-free computing]]: voice command recognition computer [[user interface]]
[10791030] |*[[Home automation]]
[10791040] |*[[Interactive voice response]]
[10791050] |*[[Mobile telephony]], including mobile email
[10791060] |*[[Multimodal interaction]]
[10791070] |*[[Pronunciation]] evaluation in computer-aided language learning applications
[10791080] |*[[Robotics]]
[10791090] |*[[Transcription (linguistics)|Transcription]] (digital speech-to-text).
[10791100] |*Speech-to-Text (Transcription of speech into mobile text messages)
[10791110] |==Performance of speech recognition systems== 
[10791120] |The performance of speech recognition systems is usually specified in terms of accuracy and speed.
[10791130] |Accuracy may be measured in terms of performance accuracy which is usually rated with [[word error rate]] (WER), whereas speed is measured with the [[real time factor]].
[10791140] |Other measures of accuracy include [[Single Word Error Rate]] (SWER) and [[Command Success Rate]] (CSR).
[10791150] |Most speech recognition users would tend to agree that dictation machines can achieve very high performance in controlled conditions.
[10791160] |There is some confusion, however, over the interchangeability of the terms "speech recognition" and "dictation".
[10791170] |Commercially available speaker-dependent dictation systems usually require only a short period of training (sometimes also called `enrollment') and may successfully capture continuous speech with a large vocabulary at normal pace with a very high accuracy.
[10791180] |Most commercial companies claim that recognition software can achieve between 98% to 99% accuracy if operated under optimal conditions.
[10791190] |`Optimal conditions' usually assume that users: 
[10791200] |* have speech characteristics which match the training data,
[10791210] |* can achieve proper speaker adaptation, and
[10791220] |* work in a clean noise environment (e.g. quiet office or laboratory space).
[10791230] |This explains why some users, especially those whose speech is heavily accented, might achieve recognition rates much lower than expected.
[10791240] |Speech recognition in video has become a popular search technology used by several video search companies.
[10791250] |Limited vocabulary systems, requiring no training, can recognize a small number of words (for instance, the ten digits) as spoken by most speakers.
[10791260] |Such systems are popular for routing incoming phone calls to their destinations in large organizations.
[10791270] |Both [[Acoustic Model|acoustic modeling]] and [[language model]]ing are important parts of modern statistically-based speech recognition algorithms.
[10791280] |Hidden Markov models (HMMs) are widely used in many systems.
[10791290] |Language modeling has many other applications such as [[smart keyboard]] and [[document classification]].
[10791300] |===Hidden Markov model (HMM)-based speech recognition=== 
[10791310] |Modern general-purpose speech recognition systems are generally based on [[Hidden Markov Model|HMMs]].
[10791320] |These are statistical models which output a sequence of symbols or quantities.
[10791330] |One possible reason why HMMs are used in speech recognition is that a speech signal could be viewed as a piecewise stationary signal or a short-time stationary signal.
[10791340] |That is, one could assume in a short-time in the range of 10 milliseconds, speech could be approximated as a [[stationary process]].
[10791350] |Speech could thus be thought of as a [[Markov model]] for many stochastic processes.
[10791360] |Another reason why HMMs are popular is because they can be trained automatically and are simple and computationally feasible to use.
[10791370] |In speech recognition, the hidden Markov model would output a sequence of ''n''-dimensional real-valued vectors (with ''n'' being a small integer, such as 10), outputting one of these every 10 milliseconds.
[10791380] |The vectors would consist of [[cepstrum|cepstral]] coefficients, which are obtained by taking a [[Fourier transform]] of a short time window of speech and decorrelating the spectrum using a [[cosine transform]], then taking the first (most significant) coefficients.
[10791390] |The hidden Markov model will tend to have in each state a statistical distribution that is a mixture of diagonal covariance Gaussians which will give a likelihood for each observed vector.
[10791400] |Each word, or (for more general speech recognition systems), each [[phoneme]], will have a different output distribution; a hidden Markov model for a sequence of words or phonemes is made by concatenating the individual trained hidden Markov models for the separate words and phonemes.
[10791410] |Described above are the core elements of the most common, HMM-based approach to speech recognition.
[10791420] |Modern speech recognition systems use various combinations of a number of standard techniques in order to improve results over the basic approach described above.
[10791430] |A typical large-vocabulary system would need context dependency for the phonemes (so phonemes with different left and right context have different realizations as HMM states); it would use cepstral normalization to normalize for different speaker and recording conditions; for further speaker normalization it might use vocal tract length normalization (VTLN) for male-female normalization and maximum likelihood linear regression (MLLR) for more general speaker adaptation.
[10791440] |The features would have so-called delta and delta-delta coefficients to capture speech dynamics and in addition might use heteroscedastic linear discriminant analysis (HLDA); or might skip the delta and delta-delta coefficients and use splicing and an LDA-based projection followed perhaps by heteroscedastic linear discriminant analysis or a global semitied covariance transform (also known as maximum likelihood linear transform, or MLLT).
[10791450] |Many systems use so-called discriminative training techniques which dispense with a purely statistical approach to HMM parameter estimation and instead optimize some classification-related measure of the training data.
[10791460] |Examples are maximum [[mutual information]] (MMI), minimum classification error (MCE) and minimum phone error (MPE).
[10791470] |Decoding of the speech (the term for what happens when the system is presented with a new utterance and must compute the most likely source sentence) would probably use the [[Viterbi algorithm]] to find the best path, and here there is a choice between dynamically creating a combination hidden Markov model which includes both the acoustic and language model information, or combining it statically beforehand (the [[finite state transducer]], or FST, approach).
[10791480] |===Dynamic time warping (DTW)-based speech recognition=== 
[10791490] |Dynamic time warping is an approach that was historically used for speech recognition but has now largely been displaced by the more successful HMM-based approach.
[10791500] |Dynamic time warping is an algorithm for measuring similarity between two sequences which may vary in time or speed.
[10791510] |For instance, similarities in walking patterns would be detected, even if in one video the person was walking slowly and if in another they were walking more quickly, or even if there were accelerations and decelerations during the course of one observation.
[10791520] |DTW has been applied to video, audio, and graphics&nbsp;– indeed, any data which can be turned into a linear representation can be analyzed with DTW.
[10791530] |A well known application has been automatic speech recognition, to cope with different speaking speeds.
[10791540] |In general, it is a method that allows a computer to find an optimal match between two given sequences (e.g. time series) with certain restrictions, i.e. the sequences are "warped" non-linearly to match each other.
[10791550] |This sequence alignment method is often used in the context of hidden Markov models.
[10791560] |==Further information== 
[10791570] |Popular speech recognition conferences held each year or two include ICASSP, Eurospeech/ICSLP (now named Interspeech) and the IEEE ASRU.
[10791580] |Conferences in the field of [[Natural Language Processing]], such as ACL, NAACL, EMNLP, and HLT, are beginning to include papers on speech processing.
[10791590] |Important journals include the [[IEEE]] Transactions on Speech and Audio Processing (now named [[IEEE]] Transactions on Audio, Speech and Language Processing), Computer Speech and Language, and Speech Communication.
[10791600] |Books like "Fundamentals of Speech Recognition" by [[Lawrence Rabiner]] can be useful to acquire basic knowledge but may not be fully up to date (1993).
[10791610] |Another good source can be "Statistical Methods for Speech Recognition" by Frederick Jelinek which is a more up to date book (1998).
[10791620] |Even more up to date is "Computer Speech", by Manfred R. Schroeder, second edition published in 2004.
[10791630] |A good insight into the techniques used in the best modern systems can be gained by paying attention to government sponsored evaluations such as those organised by [[DARPA]] (the largest speech recognition-related project ongoing as of 2007 is the GALE project, which involves both speech recognition and translation components).
[10791640] |In terms of freely available resources, the [[HTK (software)|HTK]] book (and the accompanying HTK toolkit) is one place to start to both learn about speech recognition and to start experimenting.
[10791650] |Another such resource is [[Carnegie Mellon University]]'s SPHINX toolkit.
[10791660] |The AT&T libraries [http://www.research.att.com/projects/mohri/fsm FSM Library], [http://www.research.att.com/projects/mohri/grm GRM library], and [http://www.cs.nyu.edu/~mohri DCD library] are also general software libraries for large-vocabulary speech recognition.
[10791670] |A useful review of the area of robustness in ASR is provided by Junqua and Haton (1995).
[10800010] |<article>Speech synthesis</article>
[10800020] |'''Speech synthesis''' is the artificial production of human [[Speech communication|speech]].
[10800030] |A computer system used for this purpose is called a '''speech synthesizer''', and can be implemented in [[software]] or [[Computer hardware|hardware]].
[10800040] |A '''text-to-speech (TTS)''' system converts normal language text into speech; other systems render [[symbolic linguistic representation]]s like [[phonetic transcription]]s into speech.
[10800050] |Synthesized speech can be created by concatenating pieces of recorded speech that are stored in a [[database]].
[10800060] |Systems differ in the size of the stored speech units; a system that stores [[phone]]s or [[diphone]]s provides the largest output range, but may lack clarity.
[10800070] |For specific usage domains, the storage of entire words or sentences allows for high-quality output.
[10800080] |Alternatively, a synthesizer can incorporate a model of the [[vocal tract]] and other human voice characteristics to create a completely "synthetic" voice output.
[10800090] |The quality of a speech synthesizer is judged by its similarity to the human voice, and by its ability to be understood.
[10800100] |An intelligible text-to-speech program allows people with [[visual impairment]]s or [[reading disability|reading disabilities]] to listen to written works on a home computer.
[10800110] |Many computer operating systems have included speech synthesizers since the early 1980s.
[10800120] |== Overview of text processing == 
[10800130] |A text-to-speech system (or "engine") is composed of two parts: a [[front-end]] and a back-end.
[10800140] |The front-end has two major tasks.
[10800150] |First, it converts raw text containing symbols like numbers and abbreviations into the equivalent of written-out words.
[10800160] |This process is often called ''text normalization'', ''pre-processing'', or ''[[tokenization]]''.
[10800170] |The front-end then assigns [[phonetic transcription]]s to each word, and divides and marks the text into [[prosody (linguistics)|prosodic units]], like [[phrase]]s, [[clause]]s, and [[sentence (linguistics)|sentence]]s.
[10800180] |The process of assigning phonetic transcriptions to words is called ''text-to-phoneme'' or ''[[grapheme]]-to-phoneme'' conversion.
[10800190] |Phonetic transcriptions and prosody information together make up the symbolic linguistic representation that is output by the front-end.
[10800200] |The back-end—often referred to as the ''synthesizer''—then converts the symbolic linguistic representation into sound.
[10800210] |== History == 
[10800220] |Long before [[electronics|electronic]] [[signal processing]] was invented, there were those who tried to build machines to create human speech.
[10800230] |Some early legends of the existence of [[Brazen Head|"speaking heads"]] involved [[Pope Silvester II|Gerbert of Aurillac]] (d. 1003 AD), [[Albertus Magnus]] (1198&ndash;1280), and [[Roger Bacon]] (1214&ndash;1294).
[10800240] |In 1779, the [[Denmark|Danish]] scientist Christian Kratzenstein, working at the [[Russian Academy of Sciences]], built models of the human [[vocal tract]] that could produce the five long [[vowel]] sounds (in [[help:IPA|International Phonetic Alphabet]] notation, they are {{IPA|[aː]}}, {{IPA|[eː]}}, {{IPA|[iː]}}, {{IPA|[oː]}} and {{IPA|[uː]}}).
[10800250] |This was followed by the [[bellows]]-operated "acoustic-mechanical speech machine" by [[Wolfgang von Kempelen]] of [[Vienna]], [[Austria]], described in a 1791 paper.
[10800260] |This machine added models of the tongue and lips, enabling it to produce [[consonant]]s as well as vowels.
[10800270] |In 1837, [[Charles Wheatstone]] produced a "speaking machine" based on von Kempelen's design, and in 1857, M. Faber built the "Euphonia".
[10800280] |Wheatstone's design was resurrected in 1923 by Paget.
[10800290] |In the 1930s, [[Bell Labs]] developed the [[Vocoder|VOCODER]], a keyboard-operated electronic speech analyzer and synthesizer that was said to be clearly intelligible.
[10800300] |[[Homer Dudley]] refined this device into the VODER, which he exhibited at the [[1939 New York World's Fair]].
[10800310] |The [[Pattern playback]] was built by [[Franklin S. Cooper|Dr. Franklin S. Cooper]] and his colleagues at [[Haskins Laboratories]] in the late 1940s and completed in 1950.
[10800320] |There were several different versions of this hardware device but only one currently survives.
[10800330] |The machine converts pictures of the acoustic patterns of speech in the form of a spectrogram back into sound.
[10800340] |Using this device, [[Alvin Liberman]] and colleagues were able to discover acoustic cues for the perception of [[phonetic]] segments (consonants and vowels).
[10800350] |Early electronic speech synthesizers sounded robotic and were often barely intelligible.
[10800360] |However, the quality of synthesized speech has steadily improved, and output from contemporary speech synthesis systems is sometimes indistinguishable from actual human speech.
[10800370] |=== Electronic devices === 
[10800380] |The first computer-based speech synthesis systems were created in the late 1950s, and the first complete text-to-speech system was completed in 1968.
[10800390] |In 1961, physicist [[John Larry Kelly, Jr]] and colleague Louis Gerstman used an [[IBM 704]] computer to synthesize speech, an event among the most prominent in the history of [[Bell Labs]].
[10800400] |Kelly's voice recorder synthesizer (vocoder) recreated the song "[[Daisy Bell]]", with musical accompaniment from [[Max Mathews]].
[10800410] |Coincidentally, [[Arthur C. Clarke]] was visiting his friend and colleague John Pierce at the Bell Labs Murray Hill facility.
[10800420] |Clarke was so impressed by the demonstration that he used it in the climactic scene of his screenplay for his novel ''[[2001: A Space Odyssey (novel)|2001: A Space Odyssey]]'', where the [[HAL 9000]] computer sings the same song as it is being put to sleep by astronaut [[Dave Bowman]].
[10800430] |Despite the success of purely electronic speech synthesis, research is still being conducted into mechanical speech synthesizers.
[10800440] |== Synthesizer technologies == 
[10800450] |The most important qualities of a speech synthesis system are ''naturalness'' and ''[[Intelligibility]]''.
[10800460] |Naturalness describes how closely the output sounds like human speech, while intelligibility is the ease with which the output is understood.
[10800470] |The ideal speech synthesizer is both natural and intelligible.
[10800480] |Speech synthesis systems usually try to maximize both characteristics.
[10800490] |The two primary technologies for generating synthetic speech waveforms are ''concatenative synthesis'' and ''[[formant]] synthesis''.
[10800500] |Each technology has strengths and weaknesses, and the intended uses of a synthesis system will typically determine which approach is used.
[10800510] |=== Concatenative synthesis === 
[10800520] |Concatenative synthesis is based on the [[concatenation]] (or stringing together) of segments of recorded speech.
[10800530] |Generally, concatenative synthesis produces the most natural-sounding synthesized speech.
[10800540] |However, differences between natural variations in speech and the nature of the automated techniques for segmenting the waveforms sometimes result in audible glitches in the output.
[10800550] |There are three main sub-types of concatenative synthesis.
[10800560] |<blockquote> ==== Unit selection synthesis ==== 
[10800570] |Unit selection synthesis uses large [[database]]s of recorded speech.
[10800580] |During database creation, each recorded utterance is segmented into some or all of the following: individual [[phone]]s, [[diphone]]s, half-phones, [[syllable]]s, [[morpheme]]s, [[word]]s, [[phrase]]s, and [[Sentence (linguistics)|sentence]]s.
[10800590] |Typically, the division into segments is done using a specially modified [[speech recognition|speech recognizer]] set to a "forced alignment" mode with some manual correction afterward, using visual representations such as the [[waveform]] and [[spectrogram]].
[10800600] |An [[index (database)|index]] of the units in the speech database is then created based on the segmentation and acoustic parameters like the [[fundamental frequency]] ([[pitch (music)|pitch]]), duration, position in the syllable, and neighboring phones.
[10800610] |At [[runtime]], the desired target utterance is created by determining the best chain of candidate units from the database (unit selection).
[10800620] |This process is typically achieved using a specially weighted [[decision tree]].
[10800630] |Unit selection provides the greatest naturalness, because it applies only a small amount of [[digital signal processing]] (DSP) to the recorded speech.
[10800640] |DSP often makes recorded speech sound less natural, although some systems use a small amount of signal processing at the point of concatenation to smooth the waveform.
[10800650] |The output from the best unit-selection systems is often indistinguishable from real human voices, especially in contexts for which the TTS system has been tuned.
[10800660] |However, maximum naturalness typically require unit-selection speech databases to be very large, in some systems ranging into the [[gigabyte]]s of recorded data, representing dozens of hours of speech.
[10800670] |Also, unit selection algorithms have been known to select segments from a place that results in less than ideal synthesis (e.g. minor words become unclear) even when a better choice exists in the database.</blockquote>
[10800680] |<blockquote> ==== Diphone synthesis ==== 
[10800690] |Diphone synthesis uses a minimal speech database containing all the [[diphone]]s (sound-to-sound transitions) occurring in a language.
[10800700] |The number of diphones depends on the [[phonotactics]] of the language: for example, Spanish has about 800 diphones, and German about 2500.
[10800710] |In diphone synthesis, only one example of each diphone is contained in the speech database.
[10800720] |At runtime, the target [[prosody]] of a sentence is superimposed on these minimal units by means of [[digital signal processing]] techniques such as [[linear predictive coding]], [[PSOLA]] or [[MBROLA]].
[10800730] |The quality of the resulting speech is generally worse than that of unit-selection systems, but more natural-sounding than the output of formant synthesizers.
[10800740] |Diphone synthesis suffers from the sonic glitches of concatenative synthesis and the robotic-sounding nature of formant synthesis, and has few of the advantages of either approach other than small size.
[10800750] |As such, its use in commercial applications is declining, although it continues to be used in research because there are a number of freely available software implementations.</blockquote>
[10800760] |<blockquote> ==== Domain-specific synthesis ==== 
[10800770] |Domain-specific synthesis concatenates prerecorded words and phrases to create complete utterances.
[10800780] |It is used in applications where the variety of texts the system will output is limited to a particular domain, like transit schedule announcements or weather reports.
[10800790] |The technology is very simple to implement, and has been in commercial use for a long time, in devices like talking clocks and calculators.
[10800800] |The level of naturalness of these systems can be very high because the variety of sentence types is limited, and they closely match the prosody and intonation of the original recordings.
[10800810] |Because these systems are limited by the words and phrases in their databases, they are not general-purpose and can only synthesize the combinations of words and phrases with which they have been preprogrammed.
[10800820] |The blending of words within naturally spoken language however can still cause problems unless the many variations are taken into account.
[10800830] |For example, in [[Rhotic and non-rhotic accents|non-rhotic]] dialects of English the <r> in words like <clear> {{IPA|/ˈkliːə/}} is usually only pronounced when the following word has a vowel as its first letter (e.g. <clear out> is realized as {{IPA|/ˌkliːəɹˈɑʊt/}}).
[10800840] |Likewise in [[French language|French]], many final consonants become no longer silent if followed by a word that begins with a vowel, an effect called [[Liaison (French)|liaison]].
[10800845] |This [[alternation (linguistics)|alternation]] cannot be reproduced by a simple word-concatenation system, which would require additional complexity to be [[context-sensitive]].</blockquote>
[10800850] |=== Formant synthesis === 
[10800860] |[[Formant]] synthesis does not use human speech samples at runtime.
[10800870] |Instead, the synthesized speech output is created using an acoustic model.
[10800880] |Parameters such as [[fundamental frequency]], [[phonation|voicing]], and [[noise]] levels are varied over time to create a [[waveform]] of artificial speech.
[10800890] |This method is sometimes called ''rules-based synthesis''; however, many concatenative systems also have rules-based components.
[10800900] |Many systems based on formant synthesis technology generate artificial, robotic-sounding speech that would never be mistaken for human speech.
[10800910] |However, maximum naturalness is not always the goal of a speech synthesis system, and formant synthesis systems have advantages over concatenative systems.
[10800920] |Formant-synthesized speech can be reliably intelligible, even at very high speeds, avoiding the acoustic glitches that commonly plague concatenative systems.
[10800930] |High-speed synthesized speech is used by the visually impaired to quickly navigate computers using a [[screen reader]].
[10800940] |Formant synthesizers are usually smaller programs than concatenative systems because they do not have a database of speech samples.
[10800950] |They can therefore be used in [[embedded system]]s, where [[data storage device|memory]] and [[microprocessor]] power are especially limited.
[10800960] |Because formant-based systems have complete control of all aspects of the output speech, a wide variety of prosodies and [[Intonation (linguistics)|intonation]]s can be output, conveying not just questions and statements, but a variety of emotions and tones of voice.
[10800970] |Examples of non-real-time but highly accurate intonation control in formant synthesis include the work done in the late 1970s for the [[Texas Instruments]] toy [[Speak & Spell (game)|Speak & Spell]], and in the early 1980s [[Sega]] [[Video arcade|arcade]] machines.
[10800980] |Creating proper intonation for these projects was painstaking, and the results have yet to be matched by real-time text-to-speech interfaces.
[10800990] |=== Articulatory synthesis === 
[10801000] |[[Articulatory synthesis]] refers to computational techniques for synthesizing speech based on models of the human [[vocal tract]] and the articulation processes occurring there.
[10801010] |The first articulatory synthesizer regularly used for laboratory experiments was developed at [[Haskins Laboratories]] in the mid-1970s by [[Philip Rubin]], Tom Baer, and Paul Mermelstein.
[10801020] |This synthesizer, known as ASY, was based on vocal tract models developed at [[Bell Laboratories]] in the 1960s and 1970s by Paul Mermelstein, Cecil Coker, and colleagues.
[10801030] |Until recently, articulatory synthesis models have not been incorporated into commercial speech synthesis systems.
[10801040] |A notable exception is the [[NeXT]]-based system originally developed and marketed by Trillium Sound Research, a spin-off company of the [[University of Calgary]], where much of the original research was conducted.
[10801050] |Following the demise of the various incarnations of NeXT (started by [[Steve Jobs]] in the late 1980s and merged with Apple Computer in 1997), the Trillium software was published under the [[GNU General Public License]], with work continuing as ''gnuspeech''.
[10801060] |The system, first marketed in 1994, provides full articulatory-based text-to-speech conversion using a waveguide or transmission-line analog of the human oral and nasal tracts controlled by Carré's "distinctive region model".
[10801070] |=== HMM-based synthesis === 
[10801080] |HMM-based synthesis is a synthesis method based on [[hidden Markov model]]s.
[10801090] |In this system, the [[frequency spectrum]] ([[vocal tract]]), [[fundamental frequency]] (vocal source), and duration ([[prosody]]) of speech are modeled simultaneously by HMMs.
[10801100] |Speech [[waveforms]] are generated from HMMs themselves based on the [[maximum likelihood]] criterion.
[10801110] |=== Sinewave synthesis === 
[10801120] |[[Sinewave synthesis]] is a technique for synthesizing speech by replacing the [[formants]] (main bands of energy) with pure tone whistles.
[10801130] |== Challenges == 
[10801140] |=== Text normalization challenges === 
[10801150] |The process of normalizing text is rarely straightforward.
[10801160] |Texts are full of [[Heteronym (linguistics)|heteronym]]s, [[number]]s, and [[abbreviation]]s that all require expansion into a phonetic representation.
[10801170] |There are many spellings in English which are pronounced differently based on context.
[10801180] |For example, "My latest project is to learn how to better project my voice" contains two pronunciations of "project".
[10801190] |Most text-to-speech (TTS) systems do not generate semantic representations of their input texts, as processes for doing so are not reliable, well understood, or computationally effective.
[10801200] |As a result, various [[heuristic]] techniques are used to guess the proper way to disambiguate homographs, like examining neighboring words and using statistics about frequency of occurrence.
[10801210] |Deciding how to convert numbers is another problem that TTS systems have to address.
[10801220] |It is a simple programming challenge to convert a number into words, like "1325" becoming "one thousand three hundred twenty-five."
[10801230] |However, numbers occur in many different contexts; when a year or part of an address, "1325" should likely be read as "thirteen twenty-five", or, when part of a [[social security number]], as "one three two five".
[10801240] |A TTS system can often infer how to expand a number based on surrounding words, numbers, and punctuation, and sometimes the system provides a way to specify the context if it is ambiguous.
[10801250] |Similarly, abbreviations can be ambiguous.
[10801260] |For example, the abbreviation "in" for "inches" must be differentiated from the word "in", and the address "12 St John St." uses the same abbreviation for both "Saint" and "Street".
[10801270] |TTS systems with intelligent front ends can make educated guesses about ambiguous abbreviations, while others provide the same result in all cases, resulting in nonsensical (and sometimes comical) outputs.
[10801280] |=== Text-to-phoneme challenges === 
[10801290] |Speech synthesis systems use two basic approaches to determine the pronunciation of a word based on its spelling, a process which is often called text-to-phoneme or grapheme-to-phoneme conversion ([[phoneme]] is the term used by linguists to describe distinctive sounds in a language).
[10801300] |The simplest approach to text-to-phoneme conversion is the dictionary-based approach, where a large dictionary containing all the words of a language and their correct pronunciations is stored by the program.
[10801310] |Determining the correct pronunciation of each word is a matter of looking up each word in the dictionary and replacing the spelling with the pronunciation specified in the dictionary.
[10801320] |The other approach is rule-based, in which pronunciation rules are applied to words to determine their pronunciations based on their spellings.
[10801330] |This is similar to the "sounding out", or [[synthetic phonics]], approach to learning reading.
[10801340] |Each approach has advantages and drawbacks.
[10801350] |The dictionary-based approach is quick and accurate, but completely fails if it is given a word which is not in its dictionary.
[10801360] |As dictionary size grows, so too does the memory space requirements of the synthesis system.
[10801370] |On the other hand, the rule-based approach works on any input, but the complexity of the rules grows substantially as the system takes into account irregular spellings or pronunciations.
[10801380] |(Consider that the word "of" is very common in English, yet is the only word in which the letter "f" is pronounced [v].)
[10801390] |As a result, nearly all speech synthesis systems use a combination of these approaches.
[10801400] |Some languages, like [[Spanish language|Spanish]], have a very regular writing system, and the prediction of the pronunciation of words based on their spellings is quite successful.
[10801410] |Speech synthesis systems for such languages often use the rule-based method extensively, resorting to dictionaries only for those few words, like foreign names and borrowings, whose pronunciations are not obvious from their spellings.
[10801420] |On the other hand, speech synthesis systems for languages like [[English language|English]], which have extremely irregular spelling systems, are more likely to rely on dictionaries, and to use rule-based methods only for unusual words, or words that aren't in their dictionaries.
[10801430] |=== Evaluation challenges === 
[10801440] |It is very difficult to evaluate speech synthesis systems consistently because there is no subjective criterion and usually different organizations use different speech data.
[10801450] |The quality of a speech synthesis system highly depends on the quality of recording.
[10801460] |Therefore, evaluating speech synthesis systems is almost the same as evaluating the recording skills.
[10801470] |Recently researchers start evaluating speech synthesis systems using the common speech dataset.
[10801480] |This may help people to compare the difference between technologies rather than recordings.
[10801490] |=== Prosodics and emotional content === 
[10801500] |A recent study reported in the journal "'''Speech Communication'''" by Amy Drahota and colleagues at the [[University of Portsmouth]], [[UK]], reported that listeners to voice recordings could determine, at better than chance levels, whether or not the speaker was smiling.
[10801510] |It was suggested that identification of the vocal features which signal emotional content may be used to help make synthesized speech sound more natural.
[10801520] |== Dedicated hardware == 
[10801530] |*Votrax
[10801540] |**SC-01A (analog formant)
[10801550] |**SC-02 / SSI-263 / "Arctic 263"
[10801560] |*General Instruments SP0256-AL2 (CTS256A-AL2, MEA8000)
[10801570] |*Magnevation SpeakJet (www.speechchips.com TTS256)
[10801580] |*Savage Innovations SoundGin
[10801590] |*National Semiconductor DT1050 Digitalker (Mozer)
[10801600] |*Silicon Systems SSI 263 (analog formant)
[10801610] |*Texas Instruments
[10801620] |**TMS5110A (LPC)
[10801630] |**TMS5200
[10801640] |*Oki Semiconductor
[10801650] |**MSM5205
[10801660] |**MSM5218RS (ADPCM)
[10801670] |*Toshiba T6721A
[10801680] |*Philips PCF8200
[10801690] |== Computer operating systems or outlets with speech synthesis == 
[10801700] |=== Apple === 
[10801710] |The first speech system integrated into an [[operating system]] was [[Apple Computer]]'s [[PlainTalk#The original MacInTalk|MacInTalk]] in 1984.
[10801720] |Since the 1980s Macintosh Computers offered text to speech capabilities through The MacinTalk software.
[10801730] |In the early 1990s Apple expanded its capabilities offering system wide text-to-speech support.
[10801740] |With the introduction of faster PowerPC based computers they included higher quality voice sampling.
[10801750] |Apple also introduced [[speech recognition]] into its systems which provided a fluid command set.
[10801760] |More recently, Apple has added sample-based voices.
[10801770] |Starting as a curiosity, the speech system of Apple [[Macintosh (computer)|Macintosh]] has evolved into a cutting edge fully-supported program, [[PlainTalk]], for people with vision problems.
[10801780] |[[VoiceOver]] was included in Mac OS Tiger and more recently Mac OS Leopard.
[10801790] |The voice shipping with Mac OS X 10.5 ("Leopard") is called "Alex" and features the taking of realistic-sounding breaths between sentences, as well as improved clarity at high read rates.
[10801800] |=== AmigaOS === 
[10801810] |The second operating system with advanced speech synthesis capabilities was [[AmigaOS]], introduced in 1985.
[10801820] |The voice synthesis was licensed by [[Commodore International]] from a third-party software house (Don't Ask Software, now Softvoice, Inc.) and it featured a complete system of voice emulation, with both male and female voices and "stress" indicator markers, made possible by advanced features of the [[Amiga]] hardware audio [[chipset]].
[10801830] |It was divided into a narrator device and a translator library.
[10801840] |Amiga [[AmigaOS#Speech synthesis|Speak Handler]] featured a text-to-speech translator.
[10801850] |AmigaOS considered speech synthesis a virtual hardware device, so the user could even redirect console output to it.
[10801860] |Some Amiga programs, such as word processors, made extensive use of the speech system.
[10801870] |=== Microsoft Windows === 
[10801880] |Modern [[Microsoft Windows|Windows]] systems use [[Speech Application Programming Interface#SAPI 1-4 API family|SAPI4]]- and [[Speech Application Programming Interface#SAPI 5 API family|SAPI5]]-based speech systems that include a [[speech recognition]] engine (SRE).
[10801890] |SAPI 4.0 was available on Microsoft-based operating systems as a third-party add-on for systems like [[Windows 95]] and [[Windows 98]].
[10801900] |[[Windows 2000]] added a speech synthesis program called [[Microsoft Narrator|Narrator]], directly available to users.
[10801910] |All Windows-compatible programs could make use of speech synthesis features, available through menus once installed on the system.
[10801920] |[[Microsoft Speech Server]] is a complete package for voice synthesis and recognition, for commercial applications such as [[call centers]].
[10801930] |=== Internet === 
[10801940] |Currently, there are a number of [[Application software|applications]], [[plugin]]s and [[gadget]]s that can read messages directly from an [[e-mail client]] and web pages from a [[web browser]].
[10801950] |Some specialized [[Computer software|software]] can narrate [[RSS|RSS-feeds]].
[10801960] |On one hand, online RSS-narrators simplify information delivery by allowing users to listen to their favourite news sources and to convert them to [[podcast]]s.
[10801970] |On the other hand, on-line RSS-readers are available on almost any [[Personal computer|PC]] connected to the Internet.
[10801980] |Users can download generated audio files to portable devices, e.g. with a help of [[podcast]] receiver, and listen to them while walking, jogging or commuting to work.
[10801990] |A growing field in internet based TTS technology is web-based assistive technology, e.g. Talklets.
[10802000] |This web based approach to a traditionally locally installed form of software application can afford many of those requiring software for accessibility reason, the ability to access web content from public machines, or those belonging to others.
[10802010] |While responsiveness is not as immediate as that of applications installed locally, the 'access anywhere' nature of it is the key benefit to this approach.
[10802020] |=== Others === 
[10802030] |* Some models of Texas Instruments home computers produced in 1979 and 1981 ([[TI-99/4A|Texas Instruments TI-99/4 and TI-99/4A]]) were capable of text-to-phoneme synthesis or reciting complete words and phrases (text-to-dictionary), using a very popular Speech Synthesizer peripheral.
[10802040] |TI used a proprietary [[codec]] to embed complete spoken phrases into applications, primarily video games.
[10802050] |* Systems that operate on free and open source software systems including [[Linux|GNU/Linux]] are various, and include [[open-source]] programs such as the [[Festival Speech Synthesis System]] which uses diphone-based synthesis (and can use a limited number of [[MBROLA]] voices), and gnuspeech which uses articulatory synthesis from the [[Free Software Foundation]].
[10802060] |Other commercial vendor software also runs on GNU/Linux.
[10802070] |* Several commercial companies are also developing speech synthesis systems (this list is reporting them just for the sake of information, not endorsing any specific product): [http://www.acapela-group.com Acapela Group], [[AT&T]], [[Cepstral]], [[DECtalk]], [[IBM ViaVoice]], [[IVONA|IVONA TTS]], [http://www.loquendo.com Loquendo TTS], [http://www.neospeech.com NeoSpeech TTS], [[Nuance Communications]], Rhetorical Systems, [http://www.svox.com SVOX] and [http://www.yakitome.com YAKiToMe!].
[10802080] |* Companies which developed speech synthesis systems but which are no longer in this business include BeST Speech (bought by L&H), [[Lernout & Hauspie]] (bankrupt), [[SpeechWorks]] (bought by Nuance)
[10802090] |== Speech synthesis markup languages == 
[10802100] |A number of [[markup language]]s have been established for the rendition of text as speech in an [[XML]]-compliant format.
[10802110] |The most recent is [[Speech Synthesis Markup Language]] (SSML), which became a [[W3C recommendation]] in 2004.
[10802120] |Older speech synthesis markup languages include Java Speech Markup Language ([[JSML]]) and [[SABLE]].
[10802130] |Although each of these was proposed as a standard, none of them has been widely adopted.
[10802140] |Speech synthesis markup languages are distinguished from dialogue markup languages.
[10802150] |[[VoiceXML]], for example, includes tags related to speech recognition, dialogue management and touchtone dialing, in addition to text-to-speech markup.
[10802160] |==Applications== 
[10802170] |===Accessibility=== 
[10802180] |Speech synthesis has long been a vital [[assistive technology]] tool and its application in this area is significant and widespread.
[10802190] |It allows environmental barriers to be removed for people with a wide range of disabilities.
[10802200] |The longest application has been in the use of [[screenreaders]] for people with [[visual impairment]], but text-to-speech systems are now commonly used by people with [[dyslexia]] and other reading difficulties as well as by pre-literate youngsters.
[10802210] |They are also frequently employed to aid those with severe [[speech impairment]] usually through a dedicated [[voice output communication aid]].
[10802220] |===News service=== 
[10802230] |Sites such as [[Ananova]] have used speech synthesis to convert written news to audio content, which can be used for mobile applications.
[10802240] |===Entertainment=== 
[10802250] |Speech synthesis techniques are used as well in the entertainment productions such as games, anime and similar.
[10802260] |In 2007, Animo Limited announced the development of a software application package based on its speech synthesis software FineSpeech, explicitly geared towards customers in the entertainment industries, able to generate narration and lines of dialogue according to user specifications.
[10802270] |Software such as [[Vocaloid]] can generate singing voices via lyrics and melody.
[10802280] |This is also the aim of the Singing Computer project (which uses the [[GNU General Public License|GPL]] software [[GNU LilyPond|Lilypond]] and [[Festival Speech Synthesis System|Festival]]) to help blind people check their lyric input.
[10810010] |<article>Statistical classification</article>
[10810020] |'''Statistical classification''' is a procedure in which individual items are placed into groups based on quantitative information on one or more characteristics inherent in the items (referred to as traits, variables, characters, etc) and based on a [[training set]] of previously labeled items.
[10810030] |Formally, the problem can be stated as follows: given training data <math>\{(\mathbf{x_1},y_1),\dots,(\mathbf{x_n}, y_n)\}</math> produce a classifier <math>h:\mathcal{X}\rightarrow\mathcal{Y}</math> which maps an object <math>\mathbf{x} \in \mathcal{X}</math> to its classification label <math>y \in \mathcal{Y}</math>.
[10810040] |For example, if the problem is filtering spam, then <math>\mathbf{x_i}</math> is some representation of an email and <math>y</math> is either "Spam" or "Non-Spam".
[10810050] |Statistical classification algorithms are typically used in [[pattern recognition]] systems.
[10810060] |'''Note:''' in [[community ecology]], the term "classification" is synonymous with what is commonly known (in [[machine learning]]) as [[data clustering|clustering]].
[10810070] |See that article for more information about purely [[unsupervised learning|unsupervised]] techniques.
[10810080] |* The second problem is to consider classification as an [[estimation]] problem, where the goal is to estimate a function of the form
[10810090] |:<math>P({\rm class}|{\vec x}) = f\left(\vec x;\vec \theta\right)</math> where the feature vector input is <math>\vec x</math>, and the function <i>f</i> is typically parameterized by some parameters <math>\vec \theta</math>.
[10810100] |In the [[Bayesian statistics|Bayesian]] approach to this problem, instead of choosing a single parameter vector <math>\vec \theta</math>, the result is integrated over all possible thetas, with the thetas weighted by how likely they are given the training data <i>D</i>: 
[10810110] |:<math>P({\rm class}|{\vec x}) = \int f\left(\vec x;\vec \theta\right)P(\vec \theta|D) d\vec \theta</math>
[10810120] |* The third problem is related to the second, but the problem is to estimate the [[conditional probability|class-conditional probabilities]] <math>P(\vec x|{\rm class})</math> and then use [[Bayes' rule]] to produce the class probability as in the second problem.
[10810130] |Examples of classification algorithms include: 
[10810140] |* [[Linear classifier]]s
[10810150] |** [[Fisher's linear discriminant]]
[10810160] |** [[Logistic regression]]
[10810170] |** [[Naive Bayes classifier]]
[10810180] |** [[Perceptron]]
[10810190] |** [[Support vector machine]]s
[10810200] |* [[Quadratic classifier]]s
[10810210] |* [[Nearest_neighbor_(pattern_recognition)|k-nearest neighbor]]
[10810220] |* [[Boosting]]
[10810230] |* [[Decision tree]]s
[10810240] |** [[Random forest]]s
[10810250] |* [[Artificial neural networks|Neural network]]s
[10810260] |* [[Bayesian network]]s
[10810270] |* [[Hidden Markov model]]s
[10810280] |An intriguing problem in pattern recognition yet to be solved is the relationship between the problem to be solved (data to be classified) and the performance of various pattern recognition algorithms (classifiers).
[10810290] |Van der Walt and Barnard (see reference section) investigated very specific artificial data sets to determine conditions under which certain classifiers perform better and worse than others.
[10810300] |Classifier performance depends greatly on the characteristics of the data to be classified.
[10810310] |There is no single classifier that works best on all given problems (a phenomenon that may be explained by the [[No free lunch in search and optimization|No-free-lunch theorem]]).
[10810320] |Various empirical tests have been performed to compare classifier performance and to find the characteristics of data that determine classifier performance.
[10810330] |Determining a suitable classifier for a given problem is however still more an art than a science.
[10810340] |The most widely used classifiers are the [[Neural Network]] (Multi-layer Perceptron), [[Support Vector Machines]], [[KNN|k-Nearest Neighbours]], Gaussian Mixture Model, Gaussian, [[Naive Bayes]], [[Decision Tree]] and [[Radial Basis Function|RBF]] classifiers.
[10810350] |== Evaluation == 
[10810360] |The measures [[Precision and Recall]] are popular metrics used to evaluate the quality of a classification system.
[10810370] |More recently, [[Receiver Operating Characteristic]] (ROC) curves have been used to evaluate the tradeoff between true- and false-positive rates of classification algorithms.
[10810380] |==Application domains== 
[10810390] |* [[Computer vision]]
[10810400] |** [[Medical Imaging]] and Medical Image Analysis
[10810410] |** [[Optical character recognition]]
[10810420] |* [[Geostatistics]]
[10810430] |* [[Speech recognition]]
[10810440] |* [[Handwriting recognition]]
[10810450] |* [[Biometric]] identification
[10810460] |* [[Natural language processing]]
[10810470] |* [[Document classification]]
[10810480] |* Internet [[search engines]]
[10810490] |* [[Credit scoring]]
[10820010] |<article>Statistical machine translation</article>
[10820020] |'''Statistical machine translation''' ('''SMT''') is a [[machine translation]] paradigm where translations are generated on the basis of statistical models whose parameters are derived from the analysis of bilingual [[text corpora]].
[10820030] |The statistical approach contrasts with the rule-based approaches to [[machine translation]] as well as with [[example-based machine translation]].
[10820040] |The first ideas of statistical machine translation were introduced by [[Warren Weaver]] in 1949, including the ideas of applying [[Claude Shannon]]'s [[information theory]].
[10820050] |Statistical machine translation was re-introduced in 1991 by researchers at [[IBM]]'s [[Thomas J. Watson Research Center]] and has contributed to the significant resurgence in interest in machine translation in recent years.
[10820060] |As of 2006, it is by far the most widely-studied machine translation paradigm.
[10820070] |==Benefits== 
[10820080] |The benefits of statistical machine translation over traditional paradigms that are most often cited are the following:
[10820090] |* '''Better use of resources'''
[10820100] |**There is a great deal of natural language in machine-readable format.
[10820110] |**Generally, SMT systems are not tailored to any specific pair of languages.
[10820120] |**Rule-based translation systems require the manual development of linguistic rules, which can be costly, and which often do not generalize to other languages.
[10820130] |* '''More natural translations'''
[10820140] |The ideas behind statistical machine translation come out of [[information theory]].
[10820150] |Essentially, the document is translated on the [[probability]] <math>p(e|f)</math> that a string <math>e</math> in native language (for example, English) is the translation of a string <math>f</math> in foreign language (for example, French).
[10820160] |Generally, these probabilities are estimated using techniques of [[parameter estimation]].
[10820170] |The [[Bayes Theorem]] is applied to <math>p(e|f)</math>, the probability that the foreign string produces the native string to get <math>p(e|f) \propto p(f|e) p(e)</math>, where the [[translation model]] <math>p(f|e)</math> is the probability that the native string is the translation of the foreign string, and the [[language model]] <math>p(e)</math> is the probability of seeing that native string.
[10820180] |Mathematically speaking, finding the best translation <math>\tilde{e}</math> is done by picking up the one that gives the highest probability: 
[10820190] |:<math> \tilde{e} = arg \max_{e \in e^*} p(e|f) = arg \max_{e\in e^*} p(f|e) p(e) </math>.
[10820200] |For a rigorous implementation of this one would have to perform an exhaustive search by going through all strings <math>e^*</math> in the native language.
[10820210] |Performing the search efficiently is the work of a [[machine translation decoder]] that uses the foreign string, heuristics and other methods to limit the search space and at the same time keeping acceptable quality.
[10820220] |This trade-off between quality and time usage can also be found in [[speech recognition]].
[10820230] |As the translation systems are not able to store all native strings and their translations, a document is typically translated sentence by sentence, but even this is not enough.
[10820240] |Language models are typically approximated by smoothed ''n''-gram models, and similar approaches have been applied to translation models, but there is additional complexity due to different sentence lengths and word orders in the languages.
[10820250] |The statistical translation models were initially [[word]] based (Models 1-5 from [[IBM]]), but significant advances were made with the introduction of [[phrase]] based models.
[10820260] |Recent work has incorporated [[syntax]] or quasi-syntactic structures.
[10820270] |==Word-based translation== 
[10820280] |In word-based translation, translated elements are words.
[10820290] |Typically, the number of words in translated sentences are different due to compound words, morphology and idioms.
[10820300] |The ratio of the lengths of sequences of translated words is called fertility, which tells how many foreign words each native word produces.
[10820310] |Simple word-based translation is not able to translate language pairs with fertility rates different from one.
[10820320] |To make word-based translation systems manage, for instance, high fertility rates, the system could be able to map a single word to multiple words, but not vice versa.
[10820330] |For instance, if we are translating from French to English, each word in English could produce zero or more French words.
[10820340] |But there's no way to group two English words producing a single French word.
[10820350] |An example of a word-based translation system is the freely available [[GIZA++]] package ([[GPL]]ed), which includes [[IBM]] models.
[10820360] |==Phrase-based translation== 
[10820370] |In phrase-based translation, the restrictions produced by word-based translation have been tried to reduce by translating sequences of words to sequences of words, where the lengths can differ.
[10820380] |The sequences of words are called, for instance, blocks or phrases, but typically are not linguistic [[phrase]]s but phrases found using statistical methods from the corpus.
[10820390] |Restricting the phrases to linguistic phrases has been shown to decrease translation quality.
[10820400] |==Syntax-based translation== 
[10820410] |==Challenges with statistical machine translation== 
[10820420] |Problems that statistical machine translation have to deal with include
[10820430] |=== Compound words === 
[10820440] |=== Idioms === 
[10820450] |=== Morphology === 
[10820460] |=== Different word orders === 
[10820470] |Word order in languages differ.
[10820480] |Some classification can be done by naming the typical order of subject (S), verb (V) and object (O) in a sentence and one can talk, for instance, of SVO or VSO languages.
[10820490] |There are also additional differences in word orders, for instance, where modifiers for nouns are located.
[10820500] |In [[Speech Recognition]], the speech signal and the corresponding textual representation can be mapped to each other in blocks in order.
[10820510] |This is not always the case with the same text in two languages.
[10820520] |For SMT, the translation model is only able to translate small sequences of words and word order has to be taken into account somehow.
[10820530] |Typical solution has been re-ordering models, where a distribution of location changes for each item of translation is approximated from aligned bi-text.
[10820540] |Different location changes can be ranked with the help of the language model and the best can be selected.
[10820550] |=== Syntax === 
[10820560] |=== Out of vocabulary (OOV) words === 
[10820570] |SMT systems store different word forms as separate symbols without any relation to each other and word forms or phrases that were not in the training data cannot be translated.
[10820580] |Main reasons for out of vocabulary words are the limitation of training data, domain changes and morphology.
[10830010] |<article>Statistics</article>
[10830020] |'''Statistics''' is a [[Mathematics|mathematical science]] pertaining to the collection, analysis, interpretation or explanation, and presentation of [[data]].
[10830030] |It is applicable to a wide variety of [[academic discipline]]s, from the [[Natural science|natural]] and [[social science]]s to the [[humanities]], government and business.
[10830040] |Statistical methods can be used to summarize or describe a collection of data; this is called '''[[descriptive statistics]]'''.
[10830050] |In addition, patterns in the data may be [[mathematical model|modeled]] in a way that accounts for [[random]]ness and uncertainty in the observations, and then used to draw inferences about the process or population being studied; this is called '''[[inferential statistics]]'''.
[10830060] |Both descriptive and inferential statistics comprise '''applied statistics'''.
[10830070] |There is also a discipline called '''[[mathematical statistics]]''', which is concerned with the theoretical basis of the subject.
[10830080] |The word '''''statistics''''' is also the plural of '''''[[statistic]]''''' (singular), which refers to the result of applying a statistical algorithm to a set of data, as in [[economic statistics]], [[crime statistics]], etc.
[10830090] |==History== 
[10830100] |:
[10830110] |''"Five men, [[Hermann Conring|Conring]],[[Gottfried Achenwall| Achenwall]], [[Johann Peter Süssmilch|Süssmilch]], [[John Graunt|Graunt]] and [[William Petty|Petty]] have been honored by different writers as the founder of statistics."'' claims one source (Willcox, Walter (1938) ''The Founder of Statistics''.
[10830120] |Review of the [[International Statistical Institute]] 5(4):321-328.)
[10830130] |Some scholars pinpoint the origin of statistics to 1662, with the publication of "[[Observations on the Bills of Mortality]]" by John Graunt.
[10830140] |Early applications of statistical thinking revolved around the needs of states to base policy on demographic and economic data.
[10830150] |The scope of the discipline of statistics broadened in the early 19th century to include the collection and analysis of data in general.
[10830160] |Today, statistics is widely employed in government, business, and the natural and social sciences.
[10830170] |Because of its empirical roots and its applications, statistics is generally considered not to be a subfield of pure mathematics, but rather a distinct branch of applied mathematics.
[10830180] |Its mathematical foundations were laid in the 17th century with the development of [[probability theory]] by [[Pascal]] and [[Fermat]].
[10830190] |Probability theory arose from the study of games of chance.
[10830200] |The [[method of least squares]] was first described by [[Carl Friedrich Gauss]] around 1794.
[10830210] |The use of modern [[computer]]s has expedited large-scale statistical computation, and has also made possible new methods that are impractical to perform manually.
[10830220] |==Overview== 
[10830230] |In applying statistics to a scientific, industrial, or societal problem, one begins with a process or [[statistical population|population]] to be studied.
[10830240] |This might be a population of people in a country, of crystal grains in a rock, or of goods manufactured by a particular factory during a given period.
[10830250] |It may instead be a process observed at various times; data collected about this kind of "population" constitute what is called a [[time series]].
[10830260] |For practical reasons, rather than compiling data about an entire population, one usually studies a chosen subset of the population, called a [[sampling (statistics)|sample]].
[10830270] |Data are collected about the sample in an observational or [[experiment]]al setting.
[10830280] |The data are then subjected to statistical analysis, which serves two related purposes: description and inference.
[10830290] |*[[Descriptive statistics]] can be used to summarize the data, either numerically or graphically, to describe the sample.
[10830300] |Basic examples of numerical descriptors include the [[mean]] and [[standard deviation]].
[10830310] |Graphical summarizations include various kinds of charts and graphs.
[10830320] |*[[Inferential statistics]] is used to model patterns in the data, accounting for randomness and drawing inferences about the larger population.
[10830330] |These inferences may take the form of answers to yes/no questions ([[hypothesis testing]]), estimates of numerical characteristics ([[estimation]]), descriptions of association ([[correlation]]), or modeling of relationships ([[regression analysis|regression]]).
[10830340] |Other [[mathematical model|modeling]] techniques include [[ANOVA]], [[time series]], and [[data mining]].
[10830350] |The concept of correlation is particularly noteworthy.
[10830360] |Statistical analysis of a [[data set]] may reveal that two variables (that is, two properties of the population under consideration) tend to vary together, as if they are connected.
[10830370] |For example, a study of annual income and age of death among people might find that poor people tend to have shorter lives than affluent people.
[10830380] |The two variables are said to be correlated (which is a positive correlation in this case).
[10830390] |However, one cannot immediately infer the existence of a causal relationship between the two variables.
[10830400] |(See [[Correlation does not imply causation]].)
[10830410] |The correlated phenomena could be caused by a third, previously unconsidered phenomenon, called a [[lurking variable]] or [[confounding variable]].
[10830420] |If the sample is representative of the population, then inferences and conclusions made from the sample can be extended to the population as a whole.
[10830430] |A major problem lies in determining the extent to which the chosen sample is representative.
[10830440] |Statistics offers methods to estimate and correct for randomness in the sample and in the data collection procedure, as well as methods for designing robust experiments in the first place.
[10830450] |(See [[experimental design]].)
[10830460] |The fundamental mathematical concept employed in understanding such randomness is [[probability]].
[10830470] |[[Mathematical statistics]] (also called [[statistical theory]]) is the branch of [[applied mathematics]] that uses probability theory and [[mathematical analysis|analysis]] to examine the theoretical basis of statistics.
[10830480] |The use of any statistical method is valid only when the system or population under consideration satisfies the basic mathematical assumptions of the method.
[10830490] |[[Misuse of statistics]] can produce subtle but serious errors in description and interpretation &mdash; subtle in the sense that even experienced professionals sometimes make such errors, serious in the sense that they may affect, for instance, social policy, medical practice and the reliability of structures such as bridges.
[10830500] |Even when statistics is correctly applied, the results can be difficult for the non-expert to interpret.
[10830510] |For example, the [[statistical significance]] of a trend in the data, which measures the extent to which the trend could be caused by random variation in the sample, may not agree with one's intuitive sense of its significance.
[10830520] |The set of basic statistical skills (and skepticism) needed by people to deal with information in their everyday lives is referred to as [[statistical literacy]].
[10830530] |==Statistical methods== 
[10830540] |===Experimental and observational studies=== 
[10830550] |A common goal for a statistical research project is to investigate [[causality]], and in particular to draw a conclusion on the effect of changes in the values of predictors or [[independent variable]]s on response or [[dependent variable]]s.
[10830560] |There are two major types of causal statistical studies, experimental studies and observational studies.
[10830570] |In both types of studies, the effect of differences of an independent variable (or variables) on the behavior of the dependent variable are observed.
[10830580] |The difference between the two types lies in how the study is actually conducted.
[10830590] |Each can be very effective.
[10830600] |An experimental study involves taking measurements of the system under study, manipulating the system, and then taking additional measurements using the same procedure to determine if the manipulation has modified the values of the measurements.
[10830610] |In contrast, an observational study does not involve experimental manipulation.
[10830620] |Instead, data are gathered and correlations between predictors and response are investigated.
[10830630] |An example of an experimental study is the famous [[Hawthorne studies]], which attempted to test the changes to the working environment at the Hawthorne plant of the Western Electric Company.
[10830640] |The researchers were interested in determining whether increased illumination would increase the productivity of the [[assembly line]] workers.
[10830650] |The researchers first measured the productivity in the plant, then modified the illumination in an area of the plant and checked if the changes in illumination affected the productivity.
[10830660] |It turned out that the productivity indeed improved (under the experimental conditions).
[10830663] |(See [[Hawthorne effect]].)
[10830665] |However, the study is heavily criticized today for errors in experimental procedures, specifically for the lack of a [[control group]] and [[double-blind|blindedness]].
[10830670] |An example of an observational study is a study which explores the correlation between smoking and lung cancer.
[10830680] |This type of study typically uses a survey to collect observations about the area of interest and then performs statistical analysis.
[10830690] |In this case, the researchers would collect observations of both smokers and non-smokers, perhaps through a [[case-control study]], and then look for the number of cases of lung cancer in each group.
[10830700] |The basic steps of an experiment are; 
[10830710] |# Planning the research, including determining information sources, research subject selection, and [[ethics|ethical]] considerations for the proposed research and method.
[10830720] |# [[Design of experiments]], concentrating on the system model and the interaction of independent and dependent variables.
[10830730] |# [[summary statistics|Summarizing a collection of observations]] to feature their commonality by suppressing details.
[10830740] |([[Descriptive statistics]])
[10830750] |# Reaching consensus about what [[statistical inference|the observations tell]] about the world being observed.
[10830760] |([[Statistical inference]])
[10830770] |# Documenting / presenting the results of the study.
[10830780] |===Levels of measurement=== 
[10830790] |:''See: [[Levels of measurement|Stanley Stevens' "Scales of measurement" (1946): nominal, ordinal, interval, ratio]]''
[10830800] |There are four types of measurements or [[level of measurement|levels of measurement]] or measurement scales used in statistics: nominal, ordinal, interval, and ratio.
[10830810] |They have different degrees of usefulness in statistical [[research]].
[10830820] |Ratio measurements have both a zero value defined and the distances between different measurements defined; they provide the greatest flexibility in statistical methods that can be used for analyzing the data.
[10830830] |Interval measurements have meaningful distances between measurements defined, but have no meaningful zero value defined (as in the case with IQ measurements or with temperature measurements in [[Fahrenheit]]).
[10830840] |Ordinal measurements have imprecise differences between consecutive values, but have a meaningful order to those values.
[10830850] |Nominal measurements have no meaningful rank order among values.
[10830860] |Since variables conforming only to nominal or ordinal measurements cannot be reasonably measured numerically, sometimes they are called together as categorical variables, whereas ratio and interval measurements are grouped together as quantitative or [[continuous variables]] due to their numerical nature.
[10830870] |===Statistical techniques=== 
[10830880] |Some well known statistical [[Statistical hypothesis testing|test]]s and [[procedure]]s for [[research]] [[observation]]s are: 
[10830890] |* [[Student's t-test]]
[10830900] |* [[chi-square test]]
[10830910] |* [[Analysis of variance]] (ANOVA)
[10830920] |* [[Mann-Whitney U]]
[10830930] |* [[Regression analysis]]
[10830940] |* [[Factor Analysis]]
[10830950] |* [[Correlation]]
[10830960] |* [[Pearson product-moment correlation coefficient]]
[10830970] |* [[Spearman's rank correlation coefficient]]
[10830980] |* [[Time Series Analysis]]
[10830990] |==Specialized disciplines== 
[10831000] |Some fields of inquiry use applied statistics so extensively that they have [[specialized terminology]].
[10831010] |These disciplines include: 
[10831020] |* [[Actuarial science]]
[10831030] |* [[Applied information economics]]
[10831040] |* [[Biostatistics]]
[10831050] |* [[Bootstrapping (statistics)|Bootstrap]] & [[Resampling (statistics)|Jackknife Resampling]]
[10831060] |* [[Business statistics]]
[10831070] |* [[Data analysis]]
[10831080] |* [[Data mining]] (applying statistics and [[pattern recognition]] to discover knowledge from data)
[10831090] |* [[Demography]]
[10831100] |* [[Economic statistics]] (Econometrics)
[10831110] |* [[Energy statistics]]
[10831120] |* [[Engineering statistics]]
[10831130] |* [[Environmental Statistics]]
[10831140] |* [[Epidemiology]]
[10831150] |* [[Geography]] and [[Geographic Information Systems]], more specifically in [[Spatial analysis]]
[10831160] |* [[Image processing]]
[10831170] |* [[Multivariate statistics|Multivariate Analysis]]
[10831180] |* [[Psychological statistics]]
[10831190] |* [[Quality]]
[10831200] |* [[Social statistics]]
[10831210] |* [[Statistical literacy]]
[10831220] |* [[Statistical modeling]]
[10831230] |* [[Statistical survey]]s
[10831240] |* Process analysis and [[chemometrics]] (for analysis of data from [[analytical chemistry]] and [[chemical engineering]])
[10831250] |* [[Structured data analysis (statistics)]]
[10831260] |* [[Survival analysis]]
[10831270] |* [[Reliability engineering]]
[10831280] |* Statistics in various sports, particularly [[Baseball statistics|baseball]] and [[Cricket statistics|cricket]]
[10831290] |Statistics form a key basis tool in business and manufacturing as well.
[10831300] |It is used to understand measurement systems variability, control processes (as in [[statistical process control]] or SPC), for summarizing data, and to make data-driven decisions.
[10831310] |In these roles, it is a key tool, and perhaps the only reliable tool.
[10831320] |==Statistical computing== 
[10831330] |The rapid and sustained increases in computing power starting from the second half of the 20th century have had a substantial impact on the practice of statistical science.
[10831340] |Early statistical models were almost always from the class of [[linear model]]s, but powerful computers, coupled with suitable numerical [[algorithms]], caused an increased interest in [[nonlinear regression|nonlinear models]] (especially [[neural networks]] and [[decision tree]]s) as well as the creation of new types, such as [[generalized linear model|generalised linear model]]s and [[multilevel model]]s.
[10831350] |Increased computing power has also led to the growing popularity of computationally-intensive methods based on [[resampling (statistics)|resampling]], such as permutation tests and the [[bootstrapping (statistics)|bootstrap]], while techniques such as [[Gibbs sampling]] have made Bayesian methods more feasible.
[10831360] |The computer revolution has implications for the future of statistics with new emphasis on "experimental" and "empirical" statistics.
[10831370] |A large number of both general and special purpose [[List of statistical packages|statistical software]] are now available.
[10831380] |== Misuse == 
[10831390] |:
[10831400] |There is a general perception that statistical knowledge is all-too-frequently intentionally [[Misuse of statistics|misused]] by finding ways to interpret only the data that are favorable to the presenter.
[10831410] |A famous saying attributed to [[Benjamin Disraeli]] is, "[[Lies, damned lies, and statistics|There are three kinds of lies: lies, damned lies, and statistics]]"; and Harvard President [[Lawrence Lowell]] wrote in 1909 that statistics, ''"like veal pies, are good if you know the person that made them, and are sure of the ingredients"''.
[10831420] |If various studies appear to contradict one another, then the public may come to distrust such studies.
[10831430] |For example, one study may suggest that a given diet or activity raises [[blood pressure]], while another may suggest that it lowers blood pressure.
[10831440] |The discrepancy can arise from subtle variations in experimental design, such as differences in the patient groups or research protocols, that are not easily understood by the non-expert.
[10831450] |(Media reports sometimes omit this vital contextual information entirely.)
[10831460] |By choosing (or rejecting, or modifying) a certain sample, results can be manipulated.
[10831470] |Such manipulations need not be malicious or devious; they can arise from unintentional biases of the researcher.
[10831480] |The graphs used to summarize data can also be misleading.
[10831490] |Deeper criticisms come from the fact that the hypothesis testing approach, widely used and in many cases required by law or regulation, forces one hypothesis (the [[null hypothesis]]) to be "favored", and can also seem to exaggerate the importance of minor differences in large studies.
[10831500] |A difference that is highly statistically significant can still be of no practical significance.
[10831510] |(See [[Hypothesis test#Criticism|criticism of hypothesis testing]] and [[Null hypothesis#Controversy|controversy over the null hypothesis]].)
[10831520] |One response is by giving a greater emphasis on the [[p-value|''p''-value]] than simply reporting whether a hypothesis is rejected at the given level of significance.
[10831530] |The ''p''-value, however, does not indicate the size of the effect.
[10831540] |Another increasingly common approach is to report [[confidence interval]]s.
[10831550] |Although these are produced from the same calculations as those of hypothesis tests or ''p''-values, they describe both the size of the effect and the uncertainty surrounding it.
[10840010] |<article>Syntax</article>
[10840020] |In [[linguistics]], '''syntax''' (from [[Ancient Greek]] {{lang|grc|συν-}} ''syn-'', "together", and {{lang|grc|τάξις}} ''táxis'', "arrangement") is the study of the principles and rules for constructing [[sentence]]s in [[natural language]]s.
[10840030] |In addition to referring to the discipline, the term ''syntax'' is also used to refer directly to the rules and principles that govern the sentence structure of any individual language, as in "the [[Irish syntax|syntax of Modern Irish]]".
[10840040] |Modern research in syntax attempts to [[descriptive linguistics|describe languages]] in terms of such rules.
[10840050] |Many professionals in this discipline attempt to find [[Universal Grammar|general rules]] that apply to all natural languages.
[10840060] |The term ''syntax'' is also sometimes used to refer to the rules governing the behavior of mathematical systems, such as [[logic]], artificial formal languages, and computer programming languages.
[10840070] |== Early history == 
[10840080] |Works on grammar were being written long before modern syntax came about; the ''Aṣṭādhyāyī'' of [[Pāṇini]] is often cited as an example of a pre-modern work that approaches the sophistication of a modern syntactic theory.
[10840090] |In the West, the school of thought that came to be known as "traditional grammar" began with the work of [[Dionysius Thrax]].
[10840100] |For centuries, work in syntax was dominated by a framework known as {{lang|fr|''grammaire générale''}}, first expounded in 1660 by [[Antoine Arnauld]] in a book of the same title.
[10840110] |This system took as its basic premise the assumption that language is a direct reflection of thought processes and therefore there is a single, most natural way to express a thought.
[10840120] |That way, coincidentally, was exactly the way it was expressed in French.
[10840130] |However, in the 19th century, with the development of [[historical-comparative linguistics]], linguists began to realize the sheer diversity of human language, and to question fundamental assumptions about the relationship between language and logic.
[10840140] |It became apparent that there was no such thing as a most natural way to express a thought, and therefore logic could no longer be relied upon as a basis for studying the structure of language.
[10840150] |The Port-Royal grammar modeled the study of syntax upon that of logic (indeed, large parts of the [[Port-Royal Logic]] were copied or adapted from the ''Grammaire générale'').
[10840160] |Syntactic categories were identified with logical ones, and all sentences were analyzed in terms of "Subject – Copula – Predicate".
[10840170] |Initially, this view was adopted even by the early comparative linguists such as [[Franz Bopp]].
[10840180] |The central role of syntax within theoretical linguistics became clear only in the 20th century, which could reasonably be called the "century of syntactic theory" as far as linguistics is concerned.
[10840190] |For a detailed and critical survey of the history of syntax in the last two centuries, see the monumental work by Graffi (2001).
[10840200] |==Modern theories== 
[10840210] |There are a number of theoretical approaches to the discipline of syntax.
[10840220] |Many linguists (e.g. [[Noam Chomsky]]) see syntax as a branch of biology, since they conceive of syntax as the study of linguistic knowledge as embodied in the human [[mind]].
[10840240] |Others (e.g. [[Gerald Gazdar]]) take a more [[Philosophy of mathematics#Platonism|Platonistic]] view, since they regard syntax to be the study of an abstract [[formal system]].
[10840260] |Yet others (e.g. [[Joseph Greenberg]]) consider grammar a taxonomical device to reach broad generalizations across languages.
[10840280] |Some of the major approaches to the discipline are listed below.
[10840290] |===Generative grammar=== 
[10840300] |The hypothesis of [[generative grammar]] is that language is a structure of the human mind.
[10840310] |The goal of generative grammar is to make a complete model of this inner language (known as ''[[i-language]]'').
[10840320] |This model could be used to describe all human language and to predict the [[grammaticality]] of any given utterance (that is, to predict whether the utterance would sound correct to native speakers of the language).
[10840330] |This approach to language was pioneered by [[Noam Chomsky]].
[10840340] |Most generative theories (although not all of them) assume that syntax is based upon the constituent structure of sentences.
[10840350] |Generative grammars are among the theories that focus primarily on the form of a sentence, rather than its communicative function.
[10840360] |Among the many generative theories of linguistics are: 
[10840370] |*[[Transformational Grammar]] (TG) (now largely out of date)
[10840380] |*[[Government and binding theory]] (GB) (common in the late 1970s and 1980s)
[10840390] |*[[Linguistic minimalism|Minimalism]] (MP) (the most recent Chomskyan version of generative grammar)
[10840400] |Other theories that find their origin in the generative paradigm are: 
[10840410] |*[[Generative semantics]] (now largely out of date)
[10840420] |*[[Relational grammar]] (RG) (now largely out of date)
[10840430] |*[[Arc Pair grammar]]
[10840440] |*[[Generalised phrase structure grammar|Generalized phrase structure grammar]] (GPSG; now largely out of date)
[10840450] |*[[Head-driven phrase structure grammar]] (HPSG)
[10840460] |*[[Lexical-functional grammar]] (LFG)
[10840470] |===Categorial grammar === 
[10840480] |[[Categorial grammar]] is an approach that attributes the syntactic structure not to rules of grammar, but to the properties of the [[syntactic categories]] themselves.
[10840490] |For example, rather than asserting that sentences are constructed by a rule that combines a noun phrase (NP) and a verb phrase (VP) (e.g. the [[phrase structure rule]] S → NP VP), in categorial grammar, such principles are embedded in the category of the [[head (linguistics)|head]] word itself.
[10840500] |So the syntactic category for an [[intransitive]] verb is a complex formula representing the fact that the verb acts as a [[functor]] which requires an NP as an input and produces a sentence level structure as an output.
[10840510] |This complex category is notated as (NP\S) instead of V.
[10840515] |NP\S is read as " a category that searches to the left (indicated by \) for a NP (the element on the left) and outputs a sentence (the element on the right)".
[10840520] |The category of [[transitive verb]] is defined as an element that requires two NPs (its subject and its direct object) to form a sentence.
[10840530] |This is notated as (NP/(NP\S)) which means "a category that searches to the right (indicated by /) for an NP (the object), and generates a function (equivalent to the VP) which is (NP\S), which in turn represents a function that searches to the left for an NP and produces a sentence).
[10840540] |[[Tree-adjoining grammar]] is a categorial grammar that adds in partial [[tree structure]]s to the categories.
[10840550] |===Dependency grammar=== 
[10840560] |[[Dependency grammar]] is a different type of approach in which structure is determined by the [[relation]]s (such as [[grammatical relation]]s) between a word (a ''[[head (linguistics)|head]]'') and its dependents, rather than being based in constituent structure.
[10840570] |For example, syntactic structure is described in terms of whether a particular [[noun]] is the [[subject]] or [[agent]] of the [[verb]], rather than describing the relations in terms of trees (one version of which is the [[parse tree]]) or other structural system.
[10840580] |Some dependency-based theories of syntax: 
[10840590] |*[[Algebraic syntax]]
[10840600] |*[[Word grammar]]
[10840610] |*[[Operator Grammar]]
[10840620] |===Stochastic/probabilistic grammars/network theories === 
[10840630] |Theoretical approaches to syntax that are based upon [[probability theory]] are known as [[stochastic grammar]]s.
[10840640] |One common implementation of such an approach makes use of a [[neural network]] or [[connectionism]].
[10840650] |Some theories based within this approach are: 
[10840660] |*[[Optimality theory]]
[10840670] |*[[Stochastic context-free grammar]]
[10840680] |===Functionalist grammars=== 
[10840690] |Functionalist theories, although focused upon form, are driven by explanation based upon the function of a sentence (i.e. its communicative function).
[10840700] |Some typical functionalist theories include: 
[10840710] |*[[Functional grammar]] (Dik)
[10840720] |*[[Prague Linguistic Circle]]
[10840730] |*[[Systemic functional grammar]]
[10840740] |*[[Cognitive grammar]]
[10840750] |*[[Construction grammar]] (CxG)
[10840760] |*[[Role and reference grammar]] (RRG)
[10850010] |<article>SYSTRAN</article>
[10850020] |'''SYSTRAN''', founded by Dr. [[Peter Toma]] in [[1968]], is one of the oldest [[machine translation]] companies.
[10850030] |SYSTRAN has done extensive work for the [[United States Department of Defense]] and the [[European Commission]].
[10850040] |SYSTRAN provides the technology for [[Yahoo!]] and [[AltaVista]]'s ([[Babel Fish (website)|Babel Fish]]) among others, but use of it was ended (circa 2007) for all of the language combinations offered by [[Google]]'s [[List of Google products#anchor_language_tools|language tools]].
[10850050] |Commercial versions of SYSTRAN operate with operating systems [[Microsoft Windows]] (including [[Windows Mobile]]), [[Linux]] and [[Solaris (operating system)|Solaris]].
[10850060] |== History == 
[10850070] |With its origin in the [[Georgetown-IBM experiment|Georgetown]] machine translation effort, SYSTRAN was one of the few machine translation systems to survive the major decrease of funding after the [[ALPAC|ALPAC Report]] of the mid-1960's.
[10850080] |The company was established in [[La Jolla, San Diego, California|La Jolla]], [[California]] to work on translation of Russian to English text for the [[United States Air Force]] during the "[[Cold War]]".
[10850090] |Large numbers of Russian scientific and technical documents were translated using SYSTRAN under the auspices of the USAF Foreign Technology Division (later the National Air and Space Intelligence Center) at [[Wright-Patterson Air Force Base]], Ohio.
[10850100] |The quality of the translations, although only approximate, was usually adequate for understanding content.
[10850110] |The company was sold during 1986 to the Gachot family, based in [[Paris]], [[France]], and is now traded publicly by the French stock exchange.
[10850120] |It has a main office at the [[Grande Arche]] in [[La Defense]] and maintains a secondary office in [[La Jolla, San Diego, California]].
[10850130] |== Languages == 
[10850140] |Here is a list of the source and target languages SYSTRAN works with.
[10850150] |Many of the pairs are to or from English or French.
[10850160] |* Russian into English (1968)
[10850170] |* English into Russian (1973) for the [[Apollo-Soyuz]] project
[10850180] |* English source (1975) for the [[European Commission]]
[10850190] |* Arabic
[10850200] |* Chinese
[10850210] |* Danish
[10850220] |* Dutch
[10850230] |* French
[10850240] |* German
[10850250] |* Greek
[10850260] |* Hindi
[10850270] |* Italian
[10850280] |* Japanese
[10850290] |* Korean
[10850300] |* Norwegian
[10850310] |* Serbo-Croatian
[10850320] |* Spanish
[10850330] |* Swedish
[10850340] |* Persian
[10850350] |* Polish
[10850360] |* Portuguese
[10850370] |* Ukrainian
[10850380] |* Urdu
[10860010] |<article>Text analytics</article>
[10860020] |The term '''text analytics''' describes a set of linguistic, lexical, pattern recognition, extraction, tagging/structuring, visualization, and predictive techniques.
[10860030] |The term also describes processes that apply these techniques, whether independently or in conjunction with query and analysis of fielded, numerical data, to solve business problems.
[10860040] |These techniques and processes discover and present knowledge – facts, business rules, and relationships – that is otherwise locked in textual form, impenetrable to automated processing.
[10860050] |A typical application is to scan a set of documents written in a [[natural language]] and either model the document set for predictive classification purposes or populate a database or search index with the information extracted.
[10860060] |Current approaches to text analytics use [[natural language processing]] techniques that focus on specialized domains.
[10860070] |Typical subtasks are:
[10860080] |* [[Named Entity Recognition]]: recognition of entity names (for people and organizations), place names, temporal expressions, and certain types of numerical expressions.
[10860090] |* [[Coreference]]: identification chains of [[noun phrase]]s that refer to the same object.
[10860100] |For example, [[Anaphora (linguistics)|anaphora]] is a type of coreference.
[10860110] |* [[Relationship Extraction]]: extraction of named relationships between entities in text
[10870010] |<article>Text corpus</article>
[10870020] |In [[linguistics]], a '''corpus''' (plural ''corpora'') or '''text corpus''' is a large and structured set of texts (now usually electronically stored and processed).
[10870030] |They are used to do statistical analysis, checking occurrences or validating linguistic rules on a specific universe.
[10870040] |A corpus may contain texts in a single language (''monolingual corpus'') or text data in multiple languages (''multilingual corpus'').
[10870050] |Multilingual corpora that have been specially formatted for side-by-side comparison are called ''aligned parallel corpora''.
[10870060] |In order to make the corpora more useful for doing linguistic research, they are often subjected to a process known as [[annotation]].
[10870070] |An example of annotating a corpus is [[part-of-speech tagging]], or ''POS-tagging'', in which information about each word's part of speech (verb, noun, adjective, etc.) is added to the corpus in the form of ''tags''.
[10870080] |Another example is indicating the [[lemma (linguistics)|lemma]] (base) form of each word.
[10870090] |When the language of the corpus is not a working language of the researchers who use it, interlinear [[gloss]]ing is used to make the annotation bilingual.
[10870100] |Corpora are the main knowledge base in [[corpus linguistics]].
[10870110] |The analysis and processing of various types of corpora are also the subject of much work in [[computational linguistics]], [[speech recognition]] and [[machine translation]], where they are often used to create [[hidden Markov model]]s for POS-tagging and other purposes.
[10870120] |Corpora and [[frequency list]]s derived from them are useful for [[language teaching]].
[10870130] |==Archaeological corpora== 
[10870140] |Text corpora. are also used in the study of [[historical document]]s, for example in attempts to [[decipherment|decipher]] ancient scripts, or in [[Biblical scholarship]].
[10870150] |Some archaeological corpora can be of such short duration that they provide a snapshot in time.
[10870160] |One of the shortest corpora in time, may be the 15-30 year [[Amarna letters]] texts-([[1350 BC]]).
[10870170] |The ''corpus'' of an ancient city, (for example the "[[Kültepe]] Texts" of Turkey), may go through a series of corpora, determined by their find site dates.
[10870180] |== Some notable text corpora == 
[10870190] |English language: 
[10870200] |* [[American National Corpus]]
[10870210] |* [[Bank of English]]
[10870220] |* [[British National Corpus]]
[10870230] |* [[Corpus Juris Secundum]]
[10870240] |* [[Corpus of Contemporary American English (COCA)]] 360 million words, 1990-2007.
[10870250] |Freely available online.
[10870260] |* [[Brown Corpus]], forming part of the "Brown Family" of corpora, together with LOB, Frown and F-LOB.
[10870270] |* [[Oxford English Corpus]]
[10870280] |* [[Scottish Corpus of Texts & Speech]]
[10870290] |Other languages: 
[10870300] |* [[Amarna letters]], (for [[Akkadian language|Akkadian]], Egyptian, [[Sumerogram]]'s, etc.)
[10870310] |* [[Bijankhan Corpus]] A Contemporary Persian Corpus for NLP researches
[10870320] |* [[Croatian National Corpus]]
[10870330] |* [[Hamshahri Corpus]] A Contemporary Persian Corpus for IR researches
[10870340] |* [[Neo-Assyrian Text Corpus Project]]
[10870350] |* [[Persian Today Corpus]]
[10870360] |* [[Thesaurus Linguae Graecae]] (Ancient Greek)
[10880010] |<article>Text mining</article>
[10880020] |'''Text mining''', sometimes alternately referred to as ''text [[data mining]]'', refers generally to the process of deriving high quality [[information]] from text.
[10880030] |High quality information is typically derived through the dividing of patterns and trends through means such as [[pattern recognition|statistical pattern learning]].
[10880040] |Text mining usually involves the process of structuring the input text (usually parsing, along with the addition of some derived linguistic features and the removal of others, and subsequent insertion into a [[database]]), deriving patterns within the structured data, and finally evaluation and interpretation of the output.
[10880050] |'High quality' in text mining usually refers to some combination of [[relevance (information retrieval)|relevance]], [[Novelty (patent)|novelty]], and interestingness.
[10880060] |Typical text mining tasks include [[text categorization]], [[text clustering]], [[concept mining|concept/entity extraction]], production of granular taxonomies, [[sentiment analysis]], [[document summarization]], and entity relation modeling (''i.e.'', learning relations between [[Named entity recognition|named entities]]).
[10880070] |==History== 
[10880080] |Labour-intensive manual text-mining approaches first surfaced in the mid-1980s, but technological advances have enabled the field to advance swiftly during the past decade.
[10880090] |Text mining is an [[interdisciplinary]] field which draws on [[information retrieval]], [[data mining]], [[machine learning]], [[statistics]], and [[computational linguistics]].
[10880100] |As most information (over 80%) is currently stored as text, text mining is believed to have a high commercial potential value.
[10880110] |Increasing interest is being paid to multilingual data mining: the ability to gain information across languages and cluster similar items from different linguistic sources according to their meaning.
[10880120] |== Sentiment analysis == 
[10880130] |[[Sentiment analysis]] may, for example, involve analysis of movie reviews for estimating how favorably a review is for a movie.
[10880140] |Such an analysis may require a labeled data set or labeling of the [[Affect_(psychology)|affectivity]] of words.
[10880150] |A resource for affectivity of words has been made for [[WordNet]].
[10880160] |==Applications== 
[10880170] |Recently, text mining has been receiving attention in many areas.
[10880180] |===Security applications=== 
[10880190] |One of the largest text mining applications that exists is probably the classified [[ECHELON]] surveillance system.
[10880200] |Additionally, many text mining software packages such as [[AeroText]], [[Attensity]], [[SPSS]] and [[Expert System]] are marketed towards security applications, particularly analysis of plain text sources such as Internet news.
[10880210] |In 2007, [[Europol]]'s Serious Crime division developed an analysis system in order to track transnational organized crime.
[10880220] |This Overall Analysis System for Intelligence Support (OASIS) integrates among the most advanced text analytics and text mining technologies available on today's market.
[10880230] |This system led Europol to make the most significant progress to support law enforcement objectives at the international level.
[10880240] |=== Biomedical applications === 
[10880250] |A range of applications of text mining of the biomedical literature has been described.
[10880260] |One example is [[PubGene]] ([http://www.pubgene.org pubgene.org]) that combines biomedical text mining with network visualization as an Internet service.
[10880270] |Another example, which uses ontologies with textmining is [http://www.gopubmed.org GoPubMed.org].
[10880280] |===Software and applications=== 
[10880290] |Research and development departments of major companies, including [[IBM]] and [[Microsoft]], are researching text mining techniques and developing programs to further automate the mining and analysis processes.
[10880300] |Text mining software is also being researched by different companies working in the area of search and indexing in general as a way to improve their results.
[10880310] |===Marketing applications=== 
[10880320] |Text mining is starting to be used in marketing as well, more specifically in analytical [[Customer relationship management]]. [http://www.textmining.UGent.be Coussement and Van den Poel] (2008) apply it to improve [[predictive analytics]] models for customer churn ([[Customer attrition]]). .
[10880330] |===Academic applications=== 
[10880340] |The issue of text mining is of importance to publishers who hold large [[databases]] of information requiring [[Index (database)|indexing]] for retrieval.
[10880350] |This is particularly true in scientific disciplines, in which highly specific information is often contained within written text.
[10880360] |Therefore, initiatives have been taken such as [[Nature (journal)|Nature's]] proposal for an Open Text Mining Interface (OTMI) and [[National Institutes of Health|NIH's]] common Journal Publishing [[Document Type Definition]] (DTD) that would provide semantic cues to machines to answer specific queries contained within text without removing publisher barriers to public access.
[10880370] |Academic institutions have also become involved in the text mining initiative: 
[10880380] |The [[National Centre for Text Mining]], a collaborative effort between the Universities of [[University of Manchester|Manchester]] and [[University of Liverpool|Liverpool]], provides customised tools, research facilities and offers advice to the academic community.
[10880390] |They are funded by the [[Joint Information Systems Committee]] (JISC) and two of the UK [[Research Council]]s.
[10880400] |With an initial focus on text mining in the [[biology|biological]] and [[biomedical]] sciences, research has since expanded into the areas of [[Social Science]].
[10880410] |In the United States, the [[UC Berkeley School of Information|School of Information]] at [[University of California, Berkeley]] is developing a program called BioText to assist bioscience researchers in text mining and analysis.
[10880420] |== Software and applications== 
[10880430] |Research and development departments of major companies, including [[IBM]] and [[Microsoft]], are researching text mining techniques and developing programs to further automate the mining and analysis processes.
[10880440] |Text mining software is also being researched by different companies working in the area of search and indexing in general as a way to improve their results.
[10880450] |There is a large number of companies that provide commercial computer programs:
[10880460] |* [[AeroText]] - provides a suite of text mining applications for content analysis.
[10880470] |Content used can be in multiple languages.
[10880480] |* [[Attensity]] - suite of text mining solutions that includes search, statistical and NLP based technologies for a variety of industries.
[10880490] |* [[Autonomy Corporation|Autonomy]] - suite of text mining, clustering and categorization solutions for a variety of industries.
[10880500] |* [[Endeca Technologies]] - provides software to analyze and cluster unstructured text.
[10880510] |* [[Expert System S.p.A.]] - suite of semantic technologies and products for developers and knowledge managers.
[10880520] |* [[Fair Isaac]] - leading provider of decision management solutions powered by advanced analytics (includes text analytics).
[10880530] |* [[LanguageWare]] [http://www.alphaworks.ibm.com/tech/lrw] - the IBM Tools and Runtime for Text Mining.
[10880540] |* [[Inxight]] - provider of text analytics, search, and unstructured visualization technologies.
[10880550] |(Inxight was sold to [[Business Objects (company)|Business Objects]] that was sold to [[SAP AG]] in 2007)
[10880560] |* Nstein Technologies [http://www.nstein.com] - provider of text mining, digital asset management, and web content management solutions
[10880570] |* [[Pervasive Data Integrator]] - includes Extract Schema Designer that allows the user to point and click identify structure patterns in reports, html, emails, etc. for extraction into any database
[10880580] |* [[RapidMiner|RapidMiner/YALE]] - open-source data and text mining software for scientific and commercial use.
[10880590] |* [[SPSS]] - provider of SPSS Text Analysis for Surveys, Text Mining for Clementine, LexiQuest Mine and LexiQuest Categorize, commercial text analytics software that can be used in conjunction with SPSS Predictive Analytics Solutions.
[10880600] |* [[Thomson Data Analyzer]] - Enables complex analysis on patent information, scientific publications and news.
[10880610] |* [[Clearforest Developer]] - A suite of tools for developing NLP (Natural Language Processing) based text mining applications to derive structure out of unstructured texts.
[10880620] |* VantagePoint [http://www.thevantagepoint.com] - Text mining software which includes tools for data cleanup, analysis, process automation, and reporting.
[10880630] |===Open-source software and applications=== 
[10880640] |* [[General Architecture for Text Engineering|GATE]] - natural language processing and language engineering tool.
[10880650] |* [[RapidMiner|YALE/RapidMiner]] with its Word Vector Tool plugin - data and text mining software.
[10880660] |* tm [http://cran.r-project.org/web/packages/tm/index.html] [http://www.jstatsoft.org/v25/i05] - text mining in the [[R programming language]]
[10880670] |==Implications== 
[10880680] |Until recently websites most often used text-based lexical searches; in other words, users could find documents only by the words that happened to occur in the documents.
[10880690] |Text mining may allow searches to be directly answered by the [[semantic web]]; users may be able to search for content based on its meaning and context, rather than just by a specific word.
[10880700] |Additionally, text mining software can be used to build large dossiers of information about specific people and events.
[10880710] |For example, by using software that extracts specifics facts about businesses and individuals from news reports, large datasets can be built to facilitate [[social networks analysis]] or [[counter-intelligence]].
[10880720] |In effect, the text mining software may act in a capacity similar to an [[intelligence analyst]] or [[research librarian]], albeit with a more limited scope of analysis.
[10880730] |Text mining is also used in some email [[spam filter]]s as a way of determining the characteristics of messages that are likely to be advertisements or other unwanted material.
[10890010] |<article>Translation</article>
[10890020] |'''Translation''' is the action of [[hermeneutics|interpretation]] of the [[Meaning (linguistic)|meaning]] of a text, and subsequent production of an [[Dynamic and formal equivalence|equivalent]] text, also called a '''translation''', that communicates the same [[message]] in another language.
[10890030] |The text to be translated is called the [[source text]], and the language it is to be translated into is called the [[target language]]; the final product is sometimes called the "target text."
[10890040] |Translation must take into account constraints that include [[wiktionary:context|context]], the rules of [[grammar]] of the two languages, their writing [[Convention (norm)|convention]]s, and their [[idiom]]s.
[10890050] |A common [[misconception]] is that there exists a simple [[literal translation|word-for-word]] correspondence between any two [[language]]s, and that translation is a straightforward [[mechanical]] process.
[10890060] |A word-for-word translation does not take into account context, grammar, conventions, and idioms.
[10890070] |Translation is fraught with the potential for "[[language contact|spilling over]]" of [[idiom]]s and [[style guide|usage]]s from one language into the other, since both languages repose within the single brain of the translator.
[10890080] |Such spilling-over easily produces [[mixed language|linguistic hybrids]] such as "[[Franglais]]" ([[French language|French]]-[[English language|English]]), "[[Spanglish]]" ([[Spanish language|Spanish]]-[[English language|English]]), "[[Poglish]]" ([[Polish language|Polish]]-[[English language|English]]) and "[[Portuñol/Portunhol|Portuñol]]" ([[Portuguese language|Portuguese]]-[[Spanish language|Spanish]]).
[10890090] |The art of translation is as old as written [[literature]].
[10890100] |Parts of the [[Sumer]]ian ''[[Epic of Gilgamesh]]'', among the oldest known literary works, have been found in translations into several [[Asia]]tic languages of the second millennium BCE.
[10890110] |The ''Epic of Gilgamesh'' may have been read, in their own languages, by early authors of the ''[[Bible]]'' and of the ''[[Iliad]]''.
[10890120] |With the advent of computers, attempts have been made to [[computer]]ize or otherwise [[automate]] the translation of [[natural language|natural-language]] texts ([[machine translation]]) or to use computers as an ''aid'' to translation ([[computer-assisted translation]]).
[10890130] |==The term== 
[10890140] |[[Etymology|Etymologically]], "translation" is a "carrying across" or "bringing across."
[10890150] |The [[Latin]] "''translatio''" derives from the [[perfect aspect|perfect]] [[grammatical voice|passive]] [[participle#Latin|participle]], "''translatum''," of "''transferre''" ("to transfer" — from "''trans''," "across" + "''ferre''," "to carry" or "to bring").
[10890160] |The modern [[Romance languages|Romance]], [[Germanic languages|Germanic]] and [[Slavic language|Slavic]] [[European languages]] have generally formed their own [[Formal and dynamic equivalence|equivalent]] terms for this concept after the Latin model — after "''transferre''" or after the kindred "''traducere''" ("to bring across" or "to lead across").
[10890170] |Additionally, the [[Greek language|Greek]] term for "translation," "''metaphrasis''" ("a speaking across"), has supplied [[English language|English]] with "[[Wiktionary:metaphrase|metaphrase]]" (a "[[literal translation]]," or "word-for-word" translation)—as contrasted with "[[paraphrase]]" ("a saying in other words," from the Greek "''paraphrasis''").
[10890180] |"Metaphrase" equates, in one of the more recent terminologies, to "[[Translation#Equivalence|formal equivalence]]," and "paraphrase"—to "[[Translation#Equivalence|dynamic equivalence]]."
[10890190] |==Misconceptions== 
[10890200] |Newcomers to translation sometimes proceed as if translation were an [[exact science]] — as if consistent, one-to-one [[correlation]]s existed between the words and phrases of different languages, rendering translations fixed and identically reproducible, much as in [[cryptography]].
[10890210] |Such [[novice]]s may assume that all that is needed to translate a text is to "[[encode]]" and "[[decode]]" equivalents between the two languages, using a [[translation dictionary]] as the "[[codebook]]."
[10890220] |On the contrary, such a fixed relationship would only exist were a new language [[constructed language|synthesized]] and simultaneously matched to a pre-existing language's scopes of [[meaning (linguistics)|meaning]], [[etymologies]], and [[lexicon|lexical]] [[ecological niche]]s.
[10890230] |If the new language were subsequently to take on a life apart from such cryptographic use, each word would spontaneously begin to assume new shades of meaning and cast off previous [[association (psychology)|association]]s, thereby vitiating any such artificial synchronization.
[10890240] |Henceforth translation would require the disciplines described in this article.
[10890250] |Another common misconception is that ''anyone'' who can speak a [[second language]] will make a good translator.
[10890260] |In the translation community, it is generally accepted that the best translations are produced by persons who are translating into their own [[native language]]s, as it is rare for someone who has learned a second language to have total fluency in that language.
[10890270] |A good translator understands the source language well, has specific experience in the subject matter of the text, and is a good writer in the target language.
[10890280] |Moreover, he is not only [[bilingual]] but [[bicultural]].
[10890290] |It has been debated whether translation is [[art]] or [[craft]].
[10890300] |Literary translators, such as [[Gregory Rabassa]] in ''If This Be Treason'', argue that translation is an art—a teachable one.
[10890310] |Other translators, mostly technical, commercial, and legal, regard their ''métier'' as a craft—again, a teachable one, subject to [[Discourse analysis|linguistic analysis]], that benefits from [[Academia|academic]] study.
[10890320] |As with other human activities, the distinction between art and craft may be largely a matter of degree.
[10890330] |Even a document which appears simple, e.g. a product [[brochure]], requires a certain level of linguistic skill that goes beyond mere technical terminology.
[10890340] |Any material used for marketing purposes reflects on the company that produces the product and the brochure.
[10890350] |The best translations are obtained through the combined application of good technical-terminology skills and good writing skills.
[10890360] |Translation has served as a writing school for many recognized writers.
[10890370] |Translators, including the early modern European translators of the ''[[Bible]]'', in the course of their work have shaped the very [[language]]s into which they have translated.
[10890380] |They have acted as bridges for conveying knowledge and ideas between [[culture]]s and [[civilization]]s.
[10890390] |Along with [[idea]]s, they have imported into their own languages, [[calque]]s of [[grammar|grammatical structures]] and of [[vocabulary]] from the [[source language]]s.
[10890400] |==Interpreting== 
[10890410] |Interpreting, or "interpretation," is the intellectual activity that consists of facilitating [[speech communication|oral]] or [[sign language|sign-language]] [[communication]], either simultaneously or consecutively, between two or among three or more speakers who are not speaking, or signing, the same language.
[10890420] |The words "interpreting" and "interpretation" both can be used to refer to this activity; the word "interpreting" is commonly used in the profession and in the translation-studies field to avoid confusion with other meanings of the word "[[Interpretation (disambiguation)|interpretation]]."
[10890430] |Not all languages employ, as [[English language|English]] does, two separate words to denote the activities of ''written'' and live-communication (''oral'' or ''sign-language'') translators.
[10890440] |==Fidelity vs. transparency== 
[10890450] |[[Fidelity]] (or "faithfulness") and [[transparency (linguistic)|transparency]] are two qualities that, for millennia, have been regarded as ideals to be striven for in translation, particularly [[literary]] translation.
[10890460] |These two ideals are often at odds.
[10890470] |Thus a 17th-century French critic coined the phrase, "''les belles infidèles''," to suggest that translations, like women, could be ''either'' faithful ''or'' beautiful, but not both at the same time.
[10890480] |Fidelity pertains to the extent to which a translation accurately renders the meaning of the [[source text]], without adding to or subtracting from it, without intensifying or weakening any part of the meaning, and otherwise without distorting it.
[10890490] |[[Transparency (linguistic)|Transparency]] pertains to the extent to which a translation appears to a native speaker of the target language to have originally been written in that language, and conforms to the language's grammatical, syntactic and idiomatic conventions.
[10890500] |A translation that meets the first criterion is said to be a "faithful translation"; a translation that meets the second criterion, an "[[idiomatic]] translation."
[10890510] |The two qualities are ''not necessarily'' mutually exclusive.
[10890520] |The criteria used to judge the faithfulness of a translation vary according to the subject, the precision of the original contents, the type, function and use of the text, its literary qualities, its social or historical context, and so forth.
[10890530] |The criteria for judging the [[transparency (linguistic)|transparency]] of a translation would appear more straightforward: an unidiomatic translation "sounds wrong," and in the extreme case of [[literal translation|word-for-word translation]]s generated by many [[machine translation|machine-translation]] systems, often results in patent nonsense with only a [[humor]]ous value (see "[[round-trip translation]]").
[10890540] |Nevertheless, in certain contexts a translator may consciously ''strive'' to produce a literal translation.
[10890550] |[[Literary]] translators and translators of [[religious]] or [[historic]] texts often adhere as closely as possible to the source text.
[10890560] |In doing so, they often deliberately stretch the boundaries of the target language to produce an unidiomatic text.
[10890570] |Similarly, a literary translator may wish to adopt words or expressions from the [[source language]] in order to provide "local color" in the translation.
[10890580] |In recent decades, prominent advocates of such "non-transparent" translation have included the French scholar [[Antoine Berman]], who identified twelve deforming tendencies inherent in most prose translations, and the American theorist Lawrence Venuti, who has called upon translators to apply "foreignizing" translation strategies instead of domesticating ones.
[10890590] |Many non-transparent-translation theories draw on concepts from [[German Romanticism]], the most obvious influence on latter-day theories of "foreignization" being the German theologian and philosopher [[Friedrich Schleiermacher]].
[10890600] |In his seminal lecture "On the Different Methods of Translation" (1813) he distinguished between translation methods that move "the writer toward [the reader]," i.e., [[transparency (linguistic)|transparency]], and those that move the "reader toward [the author]," i.e., an extreme [[fidelity]] to the foreignness of the [[source text]].
[10890610] |Schleiermacher clearly favored the latter approach.
[10890620] |His preference was motivated, however, not so much by a desire to embrace the foreign, as by a nationalist desire to oppose France's cultural domination and to promote [[German literature]].
[10890630] |For the most part, current Western practices in translation are dominated by the concepts of "fidelity" and "transparency."
[10890640] |This has not always been the case.
[10890650] |There have been periods, especially in pre-Classical Rome and in the 18th century, when many translators stepped beyond the bounds of translation proper into the realm of ''adaptation''.
[10890660] |Adapted translation retains currency in some non-Western traditions.
[10890670] |Thus the [[India]]n epic, the ''[[Ramayana]]'', appears in many versions in the various [[Languages of India|Indian languages]], and the stories are different in each.
[10890680] |If one considers the words used for translating into the Indian languages, whether those be [[Aryan]] or [[Dravidian]] languages, he is struck by the freedom that is granted to the translators.
[10890690] |This may relate to a devotion to [[prophecy|prophetic]] passages that strike a deep religious chord, or to a vocation to instruct [[unbeliever]]s.
[10890700] |Similar examples are to be found in [[medieval Christianity|medieval Christian]] literature, which adjusted the text to the customs and values of the audience.
[10890710] |==Equivalence== 
[10890720] |The question of [[fidelity]] vs. [[transparency (linguistic)|transparency]] has also been formulated in terms of, respectively, "''formal'' equivalence" and "''dynamic'' equivalence."
[10890730] |The latter two expressions are associated with the translator [[Eugene Nida]] and were originally coined to describe ways of translating the ''[[Bible]]'', but the two approaches are applicable to any translation.
[10890740] |"Formal equivalence" equates to "[[wiktionary:metaphrase|metaphrase]]," and "dynamic equivalence"—to "[[paraphrase]]."
[10890750] |"Dynamic equivalence" (or "''functional'' equivalence") conveys the essential ''[[thought]]'' expressed in a source text — if necessary, at the expense of [[literal]]ity, original [[sememe]] and [[word order]], the source text's active vs. passive [[voice (grammar)|voice]], etc.
[10890760] |By contrast, "formal equivalence" (sought via [[literal translation|"literal" translation]]) attempts to render the text "[[literal]]ly," or "word for word" (the latter expression being itself a word-for-word rendering of the [[classical Latin]] "''verbum pro verbo''") — if necessary, at the expense of features natural to the [[target language]].
[10890770] |There is, however, '''''no sharp boundary''''' between dynamic and formal equivalence.
[10890780] |On the contrary, they represent a ''spectrum'' of translation approaches.
[10890790] |Each is used at various times and in various contexts by the same translator, and at various points within the same text — sometimes simultaneously.
[10890800] |Competent translation entails the judicious blending of dynamic and formal [[Dynamic and formal equivalence|equivalents]].
[10890810] |==Back-translation== 
[10890820] |If one text is a translation of another, a '''back-translation''' is a translation of the translated text back into the language of the original text, made without reference to the original text.
[10890830] |In the context of [[machine translation]], this is also called a "'''round-trip translation'''."
[10890840] |Comparison of a back-translation to the original text is sometimes used as a [[quality control|quality check]] on the original translation, but it is certainly far from infallible and the reliability of this technique has been disputed.
[10890850] |==Literary translation== 
[10890860] |Translation of [[literature|literary works]] ([[novel]]s, [[short story|short stories]], [[theatre|plays]], [[poetry|poems]], etc.) is considered a literary pursuit in its own right.
[10890870] |Notable in [[Canadian literature]] ''specifically'' as translators are figures such as [[Sheila Fischman]], [[Robert Dickson (writer)|Robert Dickson]] and [[Linda Gaboriau]], and the [[Governor General's Awards]] present prizes for the year's best English-to-French and French-to-English literary translations.
[10890880] |Other writers, among many who have made a name for themselves as literary translators, include [[Vasily Zhukovsky]], [[Tadeusz Boy-Żeleński]], [[Vladimir Nabokov]], [[Jorge Luis Borges]], [[Robert Stiller]] and [[Haruki Murakami]].
[10890890] |===History=== 
[10890900] |The first important translation in the West was that of the ''[[Septuagint]]'', a collection of [[Jew]]ish Scriptures translated into [[Koine Greek]] in [[Alexandria]] between the 3rd and 1st centuries BCE.
[10890910] |The dispersed [[Jew]]s had forgotten their ancestral language and needed Greek versions (translations) of their Scriptures.
[10890920] |Throughout the [[Middle Ages]], [[Latin]] was the ''[[lingua franca]]'' of the western learned world.
[10890930] |The 9th-century [[Alfred the Great]], king of [[Wessex]] in [[England]], was far ahead of his time in commissioning [[vernacular]] [[Anglo-Saxon language|Anglo-Saxon]] translations of [[Bede]]'s ''[[Ecclesiastical History]]'' and [[Boethius]]' ''[[Consolation of Philosophy]]''.
[10890940] |Meanwhile the [[Christian Church]] frowned on even partial adaptations of the standard [[Latin]] ''[[Bible]]'', [[St. Jerome]]'s ''[[Vulgate Bible|Vulgate]]'' of ca. 384 CE.
[10890950] |In [[Asia]], the spread of [[Buddhism]] led to large-scale ongoing translation efforts spanning well over a thousand years.
[10890960] |The [[Tangut Empire]] was especially efficient in such efforts; exploiting the then newly-invented [[block printing]], and with the full support of the government (contemporary sources describe the Emperor and his mother personally contributing to the translation effort, alongside sages of various nationalities), the Tanguts took mere decades to translate volumes that had taken the [[China|Chinese]] centuries to render.
[10890970] |Large-scale efforts at translation were undertaken by the [[Arabs]].
[10890980] |Having conquered the Greek world, they made [[Arabic]] versions of its philosophical and scientific works.
[10890990] |During the [[Middle Ages]], some translations of these Arabic versions were made into Latin, chiefly at [[Córdoba, Spain|Córdoba]] in [[Spain]].
[10891000] |Such Latin translations of Greek and original Arab works of scholarship and science would help advance the development of European [[Scholasticism]].
[10891010] |The broad historic trends in Western translation practice may be illustrated on the example of translation into the [[English language]].
[10891020] |The first fine translations into English were made by England's first great poet, the 14th-century [[Geoffrey Chaucer]], who adapted from the [[Italian language|Italian]] of [[Giovanni Boccaccio]] in his own ''[[Knight's Tale]]'' and ''[[Troilus and Criseyde]]''; began a translation of the [[French-language]] ''[[Roman de la Rose]]''; and completed a translation of [[Boethius]] from the [[Latin]].
[10891030] |Chaucer founded an English [[poetry|poetic]] tradition on ''[[Literary adaptation|adaptation]]s'' and translations from those earlier-established [[literary language]]s.
[10891040] |The first great English translation was the ''[[Wycliffe Bible]]'' (ca. 1382), which showed the weaknesses of an underdeveloped English [[prose]].
[10891050] |Only at the end of the 15th century would the great age of English prose translation begin with [[Thomas Malory]]'s ''[[Le Morte Darthur]]''—an adaptation of [[Arthurian romance]]s so free that it can, in fact, hardly be called a true translation.
[10891060] |The first great [[Tudor period|Tudor]] translations are, accordingly, the ''[[Tyndale Bible|Tyndale New Testament]]'' (1525), which would influence the ''[[Authorized Version]]'' (1611), and [[Lord Berners]]' version of [[Jean Froissart]]'s ''Chronicles'' (1523–25).
[10891070] |Meanwhile, in [[Renaissance]] [[Italy]], a new period in the history of translation had opened in [[Florence]] with the arrival, at the court of [[Cosimo de' Medici]], of the [[Byzantine]] scholar [[Georgius Gemistus Pletho]] shortly before the fall of [[Constantinople]] to the Turks (1453).
[10891080] |A Latin translation of [[Plato]]'s works was undertaken by [[Marsilio Ficino]].
[10891090] |This and [[Erasmus]]' Latin edition of the ''[[New Testament]]'' led to a new attitude to translation.
[10891100] |For the first time, readers demanded rigor of rendering, as philosophical and religious beliefs depended on the exact words of [[Plato]], [[Aristotle]] and [[Jesus]].
[10891110] |Non-scholarly literature, however, continued to rely on ''adaptation''.
[10891120] |[[France]]'s ''[[Pléiade]]'', [[England]]'s [[Tudor period|Tudor]] poets, and the [[Elizabethan]] translators adapted themes by [[Horace]], [[Ovid]], [[Petrarch]] and modern Latin writers, forming a new poetic style on those models.
[10891130] |The English poets and translators sought to supply a new public, created by the rise of a [[middle class]] and the development of [[printing]], with works such as the original authors ''would have written'', had they been writing in England in that day.
[10891140] |The [[Elizabethan]] period of translation saw considerable progress beyond mere [[paraphrase]] toward an ideal of [[Stylistics (linguistics)|stylistic]] equivalence, but even to the end of this period—which actually reached to the middle of the 17th century—there was no concern for [[verbal]] [[accuracy]].
[10891150] |In the second half of the 17th century, the poet [[John Dryden]] sought to make [[Virgil]] speak "in words such as he would probably have written if he were living and an Englishman."
[10891160] |Dryden, however, discerned no need to emulate the Roman poet's subtlety and concision.
[10891170] |Similarly, [[Homer]] suffered from [[Alexander Pope]]'s endeavor to reduce the Greek poet's "wild paradise" to order.
[10891180] |Throughout the 18th century, the watchword of translators was ease of reading.
[10891190] |Whatever they did not understand in a text, or thought might bore readers, they omitted.
[10891200] |They cheerfully assumed that their own style of expression was the best, and that texts should be made to conform to it in translation.
[10891210] |For scholarship they cared no more than had their predecessors, and they did not shrink from making translations from translations in third languages, or from languages that they hardly knew, or—as in the case of [[James Macpherson]]'s "translations" of [[Ossian]]—from texts that were actually of the "translator's" own composition.
[10891220] |The 19th century brought new standards of accuracy and style.
[10891230] |In regard to accuracy, observes J.M. Cohen, the policy became "the text, the whole text, and nothing but the text," except for any [[bawdy]] passages and the addition of copious explanatory [[footnote]]s.
[10891240] |In regard to style, the [[Victorians]]' aim, achieved through far-reaching metaphrase (literality) or ''pseudo''-metaphrase, was to constantly remind readers that they were reading a ''foreign'' classic.
[10891250] |An exception was the outstanding translation in this period, [[Edward FitzGerald]]'s ''[[Rubaiyat]]'' of [[Omar Khayyam]] (1859), which achieved its Oriental flavor largely by using Persian names and discreet Biblical echoes and actually drew little of its material from the Persian original.
[10891260] |In advance of the 20th century, a new pattern was set in 1871 by [[Benjamin Jowett]], who translated [[Plato]] into simple, straightforward language.
[10891270] |Jowett's example was not followed, however, until well into the new century, when accuracy rather than style became the principal criterion.
[10891280] |===Poetry=== 
[10891290] |[[Poetry]] presents special challenges to translators, given the importance of a text's [[form]]al aspects, in addition to its content.
[10891300] |In his influential 1959 paper "On Linguistic Aspects of Translation," the [[Russia]]n-born [[linguist]] and [[semiotician]] [[Roman Jakobson]] went so far as to declare that "poetry by definition [is] untranslatable."
[10891310] |In 1974 the American poet [[James Merrill]] wrote a poem, "[[Lost in Translation (poem)|Lost in Translation]]," which in part explores this idea.
[10891320] |The question was also discussed in [[Douglas Hofstadter]]'s 1997 book, ''[[Le Ton beau de Marot]]''.
[10891330] |===Sung texts=== 
[10891340] |Translation of a text that is sung in vocal music for the purpose of singing in another language — sometimes called "singing translation" — is closely linked to translation of poetry because most [[vocal music]], at least in the Western tradition, is set to [[verse]], especially verse in regular patterns with [[rhyme]].
[10891350] |(Since the late 19th century, musical setting of [[prose]] and [[free verse]] has also been practiced in some [[art music]], though [[popular music]] tends to remain conservative in its retention of [[stanza]]ic forms with or without [[refrain]]s.
[10891360] |) A rudimentary example of translating poetry for singing is church [[hymn]]s, such as the German [[chorale]]s translated into English by [[Catherine Winkworth]].
[10891370] |Translation of sung texts is generally much more restrictive than translation of poetry, because in the former there is little or no freedom to choose between a versified translation and a translation that dispenses with verse structure.
[10891380] |One might modify or omit rhyme in a singing translation, but the assignment of syllables to specific notes in the original musical setting places great challenges on the translator.
[10891390] |There is the option in prose sung texts, less so in verse, of adding or deleting a syllable here and there by subdividing or combining notes, respectively, but even with prose the process is almost like strict verse translation because of the need to stick as closely as possible to the original prosody of the sung melodic line.
[10891400] |Other considerations in writing a singing translation include repetition of words and phrases, the placement of rests and/or punctuation, the quality of vowels sung on high notes, and rhythmic features of the vocal line that may be more natural to the original language than to the target language.
[10891410] |A sung translation may be considerably or completely different from the original, thus resulting in a [[contrafactum]].
[10891420] |Translations of sung texts — whether of the above type meant to be sung or of a more or less literal type meant to be read — are also used as aids to audiences, singers and conductors, when a work is being sung in a language not known to them.
[10891430] |The most familiar types are translations presented as subtitles projected during [[opera]] performances, those inserted into concert programs, and those that accompany commercial audio CDs of vocal music.
[10891440] |In addition, professional and amateur singers often sing works in languages they do not know (or do not know well), and translations are then used to enable them to understand the meaning of the words they are singing.
[10891450] |==History of theory== 
[10891460] |Discussions of the theory and practice of translation reach back into [[ancient history|antiquity]] and show remarkable [[Wiktionary:continuity|continuities]].
[10891470] |The distinction that had been drawn by the [[ancient Greeks]] between "[[Wiktionary:metaphrase|metaphrase]]" ("literal" translation) and "[[paraphrase]]" would be adopted by the English [[poet]] and [[translator]] [[John Dryden]] (1631-1700), who represented translation as the judicious blending of these two modes of phrasing when selecting, in the target language, "counterparts," or [[Dynamic and formal equivalence|equivalents]], for the expressions used in the source language:
[10891480] |Dryden cautioned, however, against the license of "imitation," i.e. of adapted translation: "When a painter copies from the life... he has no privilege to alter features and lineaments..."
[10891490] |This general formulation of the central concept of translation — [[Dynamic and formal equivalence|equivalence]] — is probably as adequate as any that has been proposed ever since [[Cicero]] and [[Horace]], in first-century-BCE [[Ancient Rome|Rome]], famously and literally cautioned against translating "word for word" ("''verbum pro verbo''").
[10891500] |Despite occasional theoretical diversities, the actual ''practice'' of translators has hardly changed since [[ancient history|antiquity]].
[10891510] |Except for some extreme [[Wiktionary:metaphrase|metaphrasers]] in the early [[Christian]] period and the [[Middle Ages]], and adapters in various periods (especially pre-Classical Rome, and the 18th century), translators have generally shown prudent flexibility in seeking [[Dynamic and formal equivalence|equivalents]] — "literal" where possible, [[paraphrase|paraphrastic]] where necessary — for the original [[meaning (linguistics)|meaning]] and other crucial "values" (e.g., style, [[verse form]], concordance with [[music]]al accompaniment or, in [[film]]s, with speech [[Manner of articulation|articulatory]] movements) as determined from context.
[10891520] |In general, translators have sought to preserve the context itself by reproducing the original order of [[sememe]]s, and hence [[word order]] — when necessary, reinterpreting the actual [[grammatical]] structure.
[10891530] |The grammatical differences between "fixed-word-order" [[language]]s (e.g., [[English language|English]], [[French language|French]], [[German language|German]]) and "free-word-order" languages (e.g., [[Greek language|Greek]], [[Latin]], [[Polish language|Polish]], [[Russian language|Russian]]) have been no impediment in this regard.
[10891540] |When a target language has lacked [[terminology|term]]s that are found in a source language, translators have borrowed them, thereby enriching the target language.
[10891550] |Thanks in great measure to the exchange of "''[[calque]]s''" (French for "[[tracing paper|tracings]]") between languages, and to their importation from Greek, Latin, [[Hebrew language|Hebrew]], [[Arabic language|Arabic]] and other languages, there are few [[concept]]s that are "[[untranslatability|untranslatable]]" among the modern European languages.
[10891560] |In general, the greater the contact and exchange that has existed between two languages, or between both and a third one, the greater is the ratio of [[Wiktionary:metaphrase|metaphrase]] to [[paraphrase]] that may be used in translating between them.
[10891570] |However, due to shifts in "[[ecological niche]]s" of words, a common [[etymology]] is sometimes misleading as a guide to current meaning in one or the other language.
[10891580] |The [[English language|English]] "actual," for example, should not be confused with the [[cognate]] [[French language|French]] "''actuel''" (meaning "present," "current") or the [[Polish language|Polish]] "''aktualny''" ("present," "current").
[10891590] |For the translation of [[Buddhist]] texts into [[Chinese language|Chinese]], the monk [[Xuanzang]] (602–64) proposed the idea of 五不翻 ("five occasions when terms are left untranslated"): 
[10891600] |# 秘密故—terms carry secrecy, e.g., chants and spells;
[10891610] |# 含多义故—terms carry multiple meanings;
[10891620] |# 此无故—no corresponding term exists;
[10891630] |# 顺古故—out of respect for earlier translations;
[10891640] |# 生善故—
[10891650] |The translator's role as a [[bridge]] for "carrying across" values between [[culture]]s has been discussed at least since [[Terence]], Roman adapter of Greek comedies, in the second century BCE.
[10891660] |The translator's role is, however, by no means a passive and mechanical one, and so has also been compared to that of an [[artist]].
[10891670] |The main ground seems to be the concept of parallel creation found in critics as early as [[Cicero]].
[10891680] |[[John Dryden|Dryden]] observed that "Translation is a type of drawing after life..."
[10891690] |Comparison of the translator with a [[musician]] or [[actor]] goes back at least to [[Samuel Johnson]]'s remark about [[Alexander Pope]] playing [[Homer]] on a [[flageolet]], while Homer himself used a [[bassoon]].
[10891700] |If translation be an art, it is no easy one.
[10891710] |In the 13th century, [[Roger Bacon]] wrote that if a translation is to be true, the translator must know both [[language]]s, as well as the [[science]] that he is to translate; and finding that few translators did, he wanted to do away with translation and translators altogether.
[10891720] |The first [[Europe]]an to assume that one translates satisfactorily only toward his own language may have been [[Martin Luther]], translator of the ''[[Bible]]'' into [[German language|German]].
[10891730] |According to L.G. Kelly, since [[Johann Gottfried Herder]] in the 18th century, "it has been axiomatic" that one works only toward his own language.
[10891740] |Compounding these demands upon the translator is the fact that not even the most complete [[dictionary]] or [[thesaurus]] can ever be a fully adequate guide in translation.
[10891750] |[[Alexander Tytler]], in his ''Essay on the Principles of Translation'' (1790), emphasized that assiduous [[reading (activity)|reading]] is a more comprehensive guide to a language than are dictionaries.
[10891760] |The same point, but also including [[listening]] to the [[spoken language]], had earlier been made in 1783 by [[Onufry Andrzej Kopczyński]], member of [[Poland]]'s Society for Elementary Books, who was called "the last Latin poet."
[10891770] |The special role of the translator in society was well described in an essay, published posthumously in 1803, by [[Ignacy Krasicki]] — "Poland's [[La Fontaine]]", [[Primate of Poland]], poet, encyclopedist, author of the first Polish novel, and translator from French and Greek:
[10891780] |==Religious texts== 
[10891790] |Translation of religious works has played an important role in history.
[10891800] |Buddhist monks who translated the [[India]]n [[sutra]]s into [[Chinese language|Chinese]] often skewed their translations to better reflect [[China]]'s very different [[culture]], emphasizing notions such as [[filial piety]].
[10891810] |A famous mistranslation of the ''[[Bible]]'' is the rendering of the [[Hebrew language|Hebrew]] word "''keren''," which has several meanings, as "horn" in a context where it actually means "beam of light."
[10891820] |As a result, artists have for centuries depicted [[Moses the Lawgiver]] with horns growing out of his forehead.
[10891830] |An example is [[Michelangelo]]'s famous sculpture.
[10891840] |[[Christian]] [[anti-Semite]]s used such depictions to spread hatred of the [[Jews]], claiming that they were [[devil]]s with horns.
[10891850] |One of the first recorded instances of translation in the West was the rendering of the [[Old Testament]] into [[Greek language|Greek]] in the third century B.C.E.
[10891860] |The resulting translation is known as the ''[[Septuagint]]'', a name that alludes to the "seventy" translators (seventy-two in some versions) who were commissioned to translate the ''[[Bible]]'' in [[Alexandria]].
[10891870] |Each translator worked in solitary confinement in a separate cell, and legend has it that all seventy versions were identical.
[10891880] |The ''Septuagint'' became the [[source text]] for later translations into many languages, including [[Latin]], [[Coptic language|Coptic]], [[Armenian language|Armenian]] and [[Georgian language|Georgian]].
[10891890] |[[Jerome|Saint Jerome]], the [[patron saint]] of translation, is still considered one of the greatest translators in history for rendering the ''[[Bible]]'' into [[Latin]].
[10891900] |The [[Roman Catholic Church]] used his translation (known as the [[Vulgate]]) for centuries, but even this translation at first stirred much controversy.
[10891910] |The period preceding and contemporary with the [[Protestant Reformation]] saw the translation of the ''[[Bible]]'' into local European languages, a development that greatly affected [[Western Christianity]]'s split into [[Roman Catholic Church|Roman Catholicism]] and [[Protestantism]], due to disparities between Catholic and Protestant versions of crucial words and passages.
[10891920] |[[Martin Luther]]'s ''[[Bible]]'' in [[German language|German]], [[Jakub Wujek]]'s in [[Polish language|Polish]], and the ''[[King James Bible]]'' in [[English language|English]] had lasting effects on the religions, cultures and languages of those countries.
[10891930] |==Machine translation== 
[10891940] |[[Machine translation]] (MT) is a procedure whereby a computer program analyzes a [[source text]] and produces a target text ''without further human intervention''.
[10891950] |In reality, however, machine translation typically ''does'' involve human intervention, in the form of '''pre-editing''' and '''post-editing'''.
[10891960] |An exception to that rule might be, e.g., the translation of technical specifications (strings of [[terminology|technical terms]] and adjectives), using a [[dictionary-based machine translation|dictionary-based machine-translation]] system.
[10891970] |To date, machine translation—a major goal of [[natural language processing|natural-language processing]]—has met with limited success.
[10891980] |A [[November 6]], [[2007]], example illustrates the hazards of uncritical reliance on [[machine translation]].
[10891990] |Machine translation has been brought to a large public by tools available on the Internet, such as [[Yahoo!]]'s [[Babel Fish (website)|Babel Fish]], [[Babylon translator|Babylon]], and [[StarDict]].
[10892000] |These tools produce a "gisting translation" — a rough translation that, with luck, "gives the gist" of the source text.
[10892010] |With proper [[terminology|terminology work]], with preparation of the source text for machine translation (pre-editing), and with re-working of the machine translation by a professional human translator (post-editing), commercial machine-translation tools can produce useful results, especially if the machine-translation system is integrated with a [[translation memory|translation-memory]] or [[Globalization Management System|globalization-management system]].
[10892020] |In regard to texts (e.g., [[meteorology|weather reports]]) with limited ranges of [[vocabulary]] and simple [[sentence (linguistics)|sentence]] [[structure]], machine translation can deliver results that do not require much human intervention to be useful.
[10892030] |Also, the use of a [[controlled language]], combined with a machine-translation tool, will typically generate largely comprehensible translations.
[10892040] |Relying on machine translation exclusively ignores the fact that communication in [[natural language|human language]] is [[wiktionary:context|context]]-embedded and that it takes a person to comprehend the context of the original text with a reasonable degree of probability.
[10892050] |It is certainly true that even purely human-generated translations are prone to error.
[10892060] |Therefore, to ensure that a machine-generated translation will be useful to a human being and that publishable-quality translation is achieved, such translations must be reviewed and edited by a human.
[10892070] |== CAT == 
[10892080] |[[Computer-assisted translation]] (CAT), also called "computer-''aided'' translation," "machine-aided human translation (MAHT)" and "interactive translation," is a form of translation wherein a human translator creates a target text with the assistance of a computer program.
[10892090] |The '''machine''' supports a human '''translator'''.
[10892100] |Computer-assisted translation can include standard [[dictionary]] and grammar software.
[10892110] |The term, however, normally refers to a range of specialized programs available to the translator, including [[translation memory|translation-memory]], [[terminology|terminology-management]], [[concordancer|concordance]], and alignment programs.
[10892120] |With the internet, translation software can help non-native-speaking individuals understand web pages published in other languages.
[10892130] |Whole-page translation tools are of limited utility, however, since they offer only a limited potential understanding of the original author's intent and context; translated pages tend to be more humorous and confusing than enlightening.
[10892140] |Interactive translations with pop-up windows are becoming more popular.
[10892150] |These tools show several possible translations of each word or phrase.
[10892160] |Human operators merely need to select the correct translation as the mouse glides over the foreign-language text.
[10892170] |Possible definitions can be grouped by pronunciation.
[10900010] |<article>Translation memory</article>
[10900020] |A '''translation memory''', or '''TM''', is a type of database that is used in software programs designed to aid human [[translator]]s.
[10900030] |Some software programs that use translation memories are known as '''translation memory managers''' ('''TMM''').
[10900040] |Translation memories are typically used in conjunction with a dedicated [[computer assisted translation]] (CAT) tool, [[wordprocessor|word processing]] program, [[terminology management systems]], multilingual dictionary, or even raw [[machine translation]] output.
[10900050] |A translation memory consists of text segments in a source language and their translations into one or more target languages.
[10900060] |These segments can be blocks, paragraphs, sentences, or phrases.
[10900070] |Individual words are handled by terminology bases and are not within the domain of TM.
[10900080] |Research indicates that many companies producing multilingual documentation are using translation memory systems.
[10900090] |In a survey of language professionals in 2006, 82.5 % out of 874 replies confirmed the use of a TM.
[10900100] |Usage of TM correlated with text type characterised by technical terms and simple sentence structure (technical, to a lesser degree marketing and financial), computing skills, and repetitiveness of content
[10900110] |== Using translation memories == 
[10900120] |The program breaks the '''source text''' (the text to be translated) into segments, looks for matches between segments and the source half of previously translated source-target pairs stored in a '''translation memory''', and presents such matching pairs as translation '''candidates'''.
[10900130] |The translator can accept a candidate, replace it with a fresh translation, or modify it to match the source.
[10900140] |In the last two cases, the new or modified translation goes into the database.
[10900150] |Some translation memories systems search for 100% matches only, that is to say that they can only retrieve segments of text that match entries in the database exactly, while others employ [[Fuzzy string searching|fuzzy matching]] algorithms to retrieve similar segments, which are presented to the translator with differences flagged.
[10900160] |It is important to note that typical translation memory systems only search for text in the source segment.
[10900170] |The flexibility and robustness of the matching algorithm largely determine the performance of the translation memory, although for some applications the recall rate of exact matches can be high enough to justify the 100%-match approach.
[10900180] |Segments where no match is found will have to be translated by the translator manually.
[10900190] |These newly translated segments are stored in the database where they can be used for future translations as well as repetitions of that segment in the current text.
[10900200] |Translation memories work best on texts which are highly repetitive, such as technical manuals.
[10900210] |They are also helpful for translating incremental changes in a previously translated document, corresponding, for example, to minor changes in a new version of a user manual.
[10900220] |Traditionally, translation memories have not been considered appropriate for literary or creative texts, for the simple reason that there is so little repetition in the language used.
[10900230] |However, others find them of value even for non-repetitive texts, because the database resources created have value for concordance searches to determine appropriate usage of terms, for quality assurance (no empty segments), and the simplification of the review process (source and target segment are always displayed together while translators have to work with two documents in a traditional review environment).
[10900240] |If a translation memory system is used consistently on appropriate texts over a period of time, it can save translators considerable work.
[10900250] |=== Main benefits === 
[10900260] |Translation memory managers are most suitable for translating technical documentation and documents containing specialized vocabularies.
[10900270] |Their benefits include:
[10900280] |* Ensuring that the document is completely translated (translation memories do not accept empty target segments) 
[10900290] |* Ensuring that the translated documents are consistent, including common definitions, phrasings and terminology.
[10900300] |This is important when different translators are working on a single project.
[10900310] |* Enabling translators to translate documents in a wide variety of formats without having to own the software typically required to process these formats.
[10900320] |* Accelerating the overall translation process; since translation memories "remember" previously translated material, translators have to translate it only once.
[10900330] |* Reducing costs of long-term translation projects; for example the text of manuals, warning messages or series of documents needs to be translated only once and can be used several times.
[10900340] |* For large documentation projects, savings (in time or money) thanks to the use of a TM package may already be apparent even for the first translation of a new project, but normally such savings are only apparent when translating subsequent versions of a project that was translated before using translation memory.
[10900350] |=== Main obstacles === 
[10900360] |The main problems hindering wider use of translation memory managers include:
[10900370] |* The concept of "translation memories" is based on the premise that sentences used in previous translations can be "recycled".
[10900380] |However, a guiding principle of translation is that the translator must translate the ''message'' of the text, and not its component ''[[Sentence (linguistics)|sentences]]''.
[10900390] |* Translation memory managers do not easily fit into existing translation or localization processes.
[10900400] |In order to take advantages of TM technology, the [[translation process]]es must be redesigned.
[10900410] |* Translation memory managers do not presently support all documentation formats, and filters may not exist to support all file types.
[10900420] |* There is a learning curve associated with using translation memory managers, and the programs must be customized for greatest effectiveness.
[10900430] |* In cases where all or part of the translation process is outsourced or handled by freelance translators working off-site, the off-site workers require special tools to be able to work with the texts generated by the translation memory manager.
[10900440] |* Full versions of many translation memory managers can cost from [[US dollar|US$]]500 to US$2,500 per seat, which can represent a considerable investment (although lower cost programs are also available).
[10900450] |However, some developers produce free or low-cost versions of their tools with reduced feature sets that individual translators can use to work on projects set up with full versions of those tools.
[10900460] |(Note that there are freeware and shareware TM packages available, but none of these has yet gained a large market share.)
[10900470] |* The costs involved in importing the user's past translations into the translation memory database, training, as well as any add-on products may also represent a considerable investment.
[10900480] |* Maintenance of translation memory databases still tends to be a manual process in most cases, and failure to maintain them can result in significantly decreased usability and quality of TM matches.
[10900490] |* As stated previously, translation memory managers may not be suitable for text that lacks internal repetition or which does not contain unchanged portions between revisions.
[10900500] |Technical text is generally best suited for translation memory, while marketing or creative texts will be less suitable.
[10900510] |* The quality of the text recorded in the translation memory is not guaranteed; if the translation for particular segment is incorrect, it is in fact more likely that the incorrect translation will be reused the next time the same source text, or a similar source text, is translated, thereby perpetuating the error.
[10900520] |* There is also a potential, and, if present, probably an unconscious effect on the translated text.
[10900530] |Different languages use different sequences for the logical elements within a sentence and a translator presented with a multiple clause sentence that is half translated is less likely to completely rebuild a sentence.
[10900540] |* There is also a potential for the translator to deal with the text mechanically sentence-by-sentence, instead of focusing on how each sentence relates to those around it and to the text as a whole.
[10900550] |* Translation memories also raise certain industrial relations issues as they make exploitation of human translators easier.
[10900560] |==Functions of a translation memory== 
[10900570] |The following is a summary of the main functions of a Translation Memory.
[10900580] |=== Off-line functions === 
[10900590] |==== Import ==== 
[10900600] |This function is used to transfer a text and its translation from a text file to the TM.
[10900610] |[[Import]] can be done from a ''raw format'', in which an external source text is available for importing into a TM along with its translation.
[10900620] |Sometimes the texts have to be reprocessed by the user.
[10900630] |There is another format that can be used to import: the ''native format''.
[10900640] |This format is the one that uses the TM to save translation memories in a file.
[10900650] |==== Analysis ==== 
[10900660] |The process of analysis is developed through the following steps: 
[10900670] |; '''Textual parsing'''
[10900680] |: It is very important to recognize punctuation in order to distinguish for example the end of sentence from abbreviation.
[10900690] |Thus, mark-up is a kind of pre-editing.
[10900700] |Usually, the materials which have been processed through translators' aid programs contain mark-up, as the translation stage is embedded in a multilingual document production line.
[10900710] |Other special text elements may be set off by mark-up.
[10900720] |There are special elements which do not need to be translated, such as proper names and codes, while others may need to be converted to native format.
[10900730] |; '''Linguistic parsing'''
[10900740] |: The base form reduction is used to prepare lists of words and a text for automatic retrieval of terms from a term bank.
[10900750] |On the other hand, syntactic parsing may be used to extract multi-word terms or phraseology from a source text.
[10900760] |So parsing is used to normalise word order variation of phraseology, this is which words can form a phrase.
[10900770] |; '''Segmentation'''
[10900780] |: Its purpose is to choose the most useful translation units.
[10900790] |Segmentation is like a type of parsing.
[10900800] |It is done monolingually using superficial parsing and alignment is based on segmentation.
[10900810] |If the translators correct the segmentations manually, later versions of the document will not find matches against the TM based on the corrected segmentation because the program will repeat its own errors.
[10900820] |Translators usually proceed sentence by sentence, although the translation of one sentence may depend on the translation of the surrounding ones.
[10900830] |; '''Alignment'''
[10900840] |: It is the task of defining translation correspondences between source and target texts.
[10900850] |There should be feedback from alignment to segmentation and a good alignment algorithm should be able to correct initial segmentation.
[10900860] |; '''Term extraction'''
[10900870] |: It can have as input a previous dictionary.
[10900880] |Moreover, when extracting unknown terms, it can use parsing based on text statistics.
[10900890] |These are used to estimate the amount of work involved in a translation job.
[10900900] |This is very useful for planning and scheduling the work.
[10900910] |Translation statistics usually count the words and estimate the amount of repetition in the text.
[10900920] |==== Export ==== 
[10900930] |Export transfers the text from the TM into an external text file.
[10900940] |Import and export should be inverses.
[10900950] |=== Online functions === 
[10900960] |When translating, one of the main purposes of the TM is to retrieve the most useful matches in the memory so that the translator can choose the best one.
[10900970] |The TM must show both the source and target text pointing out the identities and differences.
[10900980] |==== Retrieval ==== 
[10900990] |It is possible to retrieve from the TM one or more types of matches.
[10901000] |; '''Exact match'''
[10901010] |: Exact matches appear when the match between the current source segment and the stored one has been a character by character match.
[10901020] |When translating a sentence, an exact match means the same sentence has been translated before.
[10901030] |Exact matches are also called "100% matches".
[10901040] |; '''In Context Exact (ICE) match'''
[10901050] |: An ICE match is an exact match that occurs in exactly the same context, that is, the same location in a paragraph.
[10901060] |Context is often defined by the surrounding sentences and attributes such as document file name, date, and permissions.
[10901070] |; '''Fuzzy match'''
[10901080] |: When the match has not been exact, it is a "fuzzy" match.
[10901090] |Some systems assign percentages to these kinds of matches, in which case a fuzzy match is greater than 0% and less than 100%.
[10901100] |Those figures are not comparable across systems unless the method of scoring is specified.
[10901110] |; '''Concordance'''
[10901120] |: This feature allows translators to select one or more words in the source segment and the system retrieves segment pairs that match the search criteria.
[10901130] |This feature is helpful for finding translations of terms and idioms in the absence of a terminology database.
[10901140] |==== Updating ==== 
[10901150] |A TM is updated with a new translation when it has been accepted by the translator.
[10901160] |As always in updating a database, there is the question what to do with the previous contents of the database.
[10901170] |A TM can be modified by changing or deleting entries in the TM.
[10901180] |Some systems allow translators to save multiple translations of the same source segment.
[10901190] |==== Automatic translation ==== 
[10901200] |Translation memories can do retrieval and substitution automatically without the help of the translator.
[10901210] |If so.
[10901220] |; '''Automatic retrieval'''
[10901230] |: A TM features automatic retrieval and evaluation of translation correspondences in a translator's workbench.
[10901240] |; '''Automatic substitution'''
[10901250] |: Exact matches come up in translating new versions of a document.
[10901260] |During automatic substitution, the translator does check the translation against the original, so if there are any mistakes in the previous translation, they will carry over.
[10901270] |==== Networking ==== 
[10901280] |When networking during the translation it is possible to translate a text efficiently together with a group of translators.
[10901290] |This way, the translations entered by one translator are available to the others.
[10901300] |Moreover, if translation memories are shared before the final translation, there is a chance that mistakes made by one translator will be corrected by other team members.
[10901310] |=== Text memory === 
[10901320] |"Text memory" is the basis of the proposed [http://www.xml-intl.com/docs/specification/xml-tm.html Lisa OSCAR xml:tm standard].
[10901330] |Text memory comprises author memory and translation memory.
[10901340] |===== Translation memory ===== 
[10901350] |The unique identifiers are remembered during translation so that the target language document is 'exactly' aligned at the text unit level.
[10901360] |If the source document is subsequently modified, then those text units that have not changed can be directly transferred to the new target version of the document without the need for any translator interaction.
[10901370] |This is the concept of 'exact' or 'perfect' matching to the translation memory. xml:tm can also provide mechanisms for in-document leveraged and fuzzy matching.
[10901380] |==History of translation memories== 
[10901390] |The concept behind translation memories is not recent &mdash; university research into the concept began in the late 1970s, and the earliest commercializations became available in the late 1980s &mdash; but they became commercially viable only in the late 1990s.
[10901400] |Originally translation memory systems stored aligned source and target sentences in a database, from which they could be recalled during translation.
[10901410] |The problem with this 'leveraged' approach is that there is no guarantee if the new source language sentence is from the same context as the original database sentence.
[10901420] |Therefore all 'leveraged' matches require that a translator reviews the memory match for relevance in the new document.
[10901430] |Although cheaper than outright translation, this review still carries a cost.
[10901440] |==Support for new languages== 
[10901450] |Translation memory tools from majority of the companies do not support many upcoming languages.
[10901460] |Recently Asian countries like India also jumped in to language computing and there is high scope for Translation memories in such developing countries.
[10901470] |As most of the CAT software companies are concentrating on legacy languages, nothing much is happening on Asian languages.
[10901480] |===Recent trends=== 
[10901490] |One recent development is the concept of 'text memory' in contrast to translation memory (see [http://www.xml.com/pub/a/2004/01/07/xmltm.html Translating XML Documents with xml:tm]).
[10901500] |This is also the basis of the proposed LISA OSCAR [http://www.xml.com/pub/a/2004/01/07/xmltm.html xml:tm] standard.
[10901510] |Text memory within xml:tm comprises 'author memory' and 'translation memory'.
[10901520] |Author memory is used to keep track of changes during the authoring cycle.
[10901530] |Translation memory uses the information from author memory to implement translation memory matching.
[10901540] |Although primarily targeted at XML documents, xml:tm can be used on any document that can be converted to [http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=xliff XLIFF] format.
[10901550] |===Second generation translation memories=== 
[10901560] |Much more powerful than first-generation TMs, they include a [[linguistic analysis]] engine, use chunk technology to break down segments into intelligent terminological groups, and automatically generate specific glossaries.
[10901570] |==Translation memory and related standards== 
[10901580] |===TMX=== 
[10901590] |[http://www.lisa.org/tmx/ Translation Memory Exchange format].
[10901600] |This standard enables the interchange of translation memories between translation suppliers.
[10901610] |TMX has been adopted by the translation community as the best way of importing and exporting translation memories.
[10901620] |The current version is 1.4b - it allows for the recreation of the original source and target documents from the TMX data.
[10901630] |An updated version, 2.0, is due to be released in 2008.
[10901640] |===TBX=== 
[10901650] |[http://www.lisa.org/tbx/ Termbase Exchange format].
[10901660] |This LISA standard, which is currently being revised and republished as ISO 30042, allows for the interchange of terminology data including detailed lexical information.
[10901670] |The framework for TBX is provided by three ISO standards: ISO 12620, ISO 12200 and ISO 16642.
[10901680] |ISO 12620 provides an inventory of well-defined “data categories” with standardized names that function as data element types or as predefined values.
[10901690] |ISO 12200 (also known as MARTIF) provides the basis for the core structure of TBX.
[10901700] |ISO 16642 (also known as Terminological Markup Framework) includes a structural metamodel for Terminology Markup Languages in general.
[10901710] |===SRX=== 
[10901720] |[http://www.lisa.org/standards/srx/ Segmentation Rules Exchange format].
[10901730] |SRX is intended to enhance the TMX standard so that translation memory data that is exchanged between applications can be used more effectively.
[10901740] |The ability to specify the segmentation rules that were used in the previous translation increases the leveraging that can be achieved.
[10901750] |===GMX=== 
[10901760] |[http://www.lisa.org/oscar/seg/ GILT Metrics].
[10901770] |GILT stands for (Globalization, Internationalization, Localization, and Translation).
[10901780] |The GILT Metrics standard comprises three parts: GMX-V for volume metrics, GMX-C for complexity metrics and GMX-Q for quality metrics.
[10901790] |The proposed GILT Metrics standard is tasked with quantifying the workload and quality requirements for any given GILT task.
[10901800] |===OLIF=== 
[10901810] |[http://www.olif.net/ Open Lexicon Interchange Format].
[10901820] |OLIF is an open, XML-compliant standard for the exchange of terminological and lexical data.
[10901830] |Although originally intended as a means for the exchange of lexical data between proprietary machine translation lexicons, it has evolved into a more general standard for terminology exchange.
[10901840] |<span id="anchor_xliff"></span> 
[10901850] |===XLIFF=== 
[10901860] |[http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=xliff XML Localisation Interchange File Format].
[10901870] |It is intended to provide a single interchange file format that can be understood by any localization provider.
[10901880] |XLIFF is the preferred way of exchanging data in XML format in the translation industry.
[10901890] |===TransWS=== 
[10901900] |[http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=trans-ws Translation Web Services].
[10901910] |TransWS specifies the calls needed to use Web services for the submission and retrieval of files and messages relating to localization projects.
[10901920] |It is intended as a detailed framework for the automation of much of the current localization process by the use of Web Services.
[10901930] |===[[xml:tm]]=== 
[10901940] |[[xml:tm]] This approach to translation memory is based on the concept of text memory which comprises author and translation memory. [[xml:tm]] has been donated to Lisa OSCAR by [http://xml-intl.com/ XML-INTL].
[10901950] |===PO=== 
[10901960] |[[Gettext| Gettext Portable Object format]].
[10901970] |Though often not regarded as a translation memory format, Gettext PO files are bilingual files that are also used in translation memory processes in the same way translation memories are used.
[10901980] |Typically, a PO translsation memory system will consist of various separate files in a director tree structure.
[10901990] |Common tools that work with PO files include the [http://gnuwin32.sourceforge.net/packages/gettext.htm GNU Gettext Tools] and the [http://translate.sourceforge.net/wiki/toolkit/index Translate Toolkit].
[10902000] |Several tools and programs also exist that edit PO files as if they are mere source text files.
[10910010] |<article>Turing test</article>
[10910020] |The '''Turing test''' is a proposal for a test of a [[machine]]'s capability to demonstrate intelligence.
[10910030] |Described by [[Alan Turing]] in the 1950 paper "[[Computing Machinery and Intelligence]]," it proceeds as follows: a human judge engages in a natural language conversation with one human and one machine, each of which try to appear human; if the judge cannot reliably tell which is which, then the machine is said to pass the test.
[10910040] |In order to test the machine's intelligence rather than its ability to render words into audio, the conversation is limited to a text-only channel such as a computer keyboard and screen (Turing originally suggested a [[Teleprinter|teletype machine]], one of the few text-only communication systems available in 1950).
[10910050] |==History== 
[10910060] |While the field of [[artificial intelligence]] is said to have been founded in 1956, its roots extend back considerably further.
[10910070] |The question as to whether or not it is possible for machines to think has a long history, firmly entrenched in the distinction between [[Dualism (philosophy of mind)|dualist]] and [[materialism|materialist]] views of the mind.
[10910080] |From the perspective of dualism, the [[mind]] is [[Non-physical entity|non-physical]] (or, at the very least, has [[Property dualism|non-physical properties]]), and therefore cannot be explained in purely physical terms.
[10910090] |The materialist perspective, on the other hand, argues that the mind can be explained physically, and thus leaves open the possibility of minds that are artificially produced.
[10910100] |===Alan Turing=== 
[10910110] |In more practical terms, researchers in Britain had been exploring "machine intelligence" for up to ten years prior to 1956.
[10910120] |Alan Turing in particular had been tackling the notion of machine intelligence since at least 1941, and one of the earliest known mentions of "computer intelligence" was made by Turing in 1947.
[10910130] |In Turing's report, "Intelligent Machinery", he investigated "the question of whether or not it is possible for machinery to show intelligent behaviour", and as part of that investigation proposed what may be considered the forerunner to his later tests:
[10910140] |Thus by the time Turing published "Computing Machinery and Intelligence", he had been considering the possibility of machine intelligence for many years.
[10910150] |This, however, was the first published paper by Turing to focus exclusively on the notion.
[10910160] |Turing began his 1950 paper with the claim: "I propose to consider the question, 'Can machines think?'"
[10910170] |As Turing highlighted, the traditional approach to such a question is to start with definitions, defining both the terms [[machine]] and [[intelligence]].
[10910180] |Nevertheless, Turing chose not to do so.
[10910190] |Instead he replaced the question with a new question, "which is closely related to it and is expressed in relatively unambiguous words".
[10910200] |In essence, Turing proposed to change the question from "Do machines think?" into "Can machines do what we (as thinking entities) can do?"
[10910210] |The advantage of the new question, Turing argued, was that it "drew a fairly sharp line between the physical and intellectual capacities of a man.
[10910220] |To demonstrate this approach, Turing proposed a test that was inspired by a [[party game]] known as the "Imitation Game", in which a man and a woman go into separate rooms, and guests try to tell them apart by writing a series of questions and reading the typewritten answers sent back.
[10910230] |In this game, both the man and the woman aim to convince the guests that they are the other.
[10910240] |Turing proposed recreating the imitation game as follows: 
[10910250] |Later in the paper he suggested an "equivalent" alternative formulation involving a judge conversing only with a computer and a man.
[10910260] |While neither of these two formulations precisely match the version of the Turing Test that is more generally known today, a third version was proposed by Turing in 1952.
[10910270] |In this version, which Turing discussed in a [[BBC]] radio broadcast, Turing proposes a jury which asks questions of a computer, and where the role of the computer is to make a significant proportion of the jury believe that it is really a man.
[10910280] |Turing's paper considered nine common objections, which include all the major arguments against artificial intelligence that have been raised in the years since his paper was first published.
[10910290] |(See ''[[Computing Machinery and Intelligence]]''.)
[10910300] |===ELIZA, PARRY and the Chinese room=== 
[10910310] |Blay Whitby lists four major turning points in the history of the Turing Test: the publication of "Computing Machinery and Intelligence" in 1950; the announcement of [[Joseph Weizenbaum]]'s [[ELIZA]] in 1966; Kenneth Colby's creation of [[PARRY]], which was first described in 1972; and the Turing Colloquium in 1990.
[10910320] |ELIZA works by examining a user's typed comments for keywords.
[10910330] |If a word is found a rule is applied which transforms the user's comments, and the resulting sentence is then returned.
[10910340] |If a keyword is not found, ELIZA responds with either a generic response or by repeating one of the earlier comments.
[10910350] |In addition, Weizenbaum developed ELIZA to replicate the behavior of a [[Person-centered psychotherapy|Rogerian psychotherapist]], allowing ELIZA to be "free to assume the pose of knowing almost nothing of the real world."
[10910360] |Due to these techniques, Weizenbaum's program was able to fool some people into believing that they were talking to a real person, with some subjects being "very hard to convince that ELIZA ... is ''not'' human."
[10910370] |Thus ELIZA is claimed by many to be one of the programs (perhaps the first) that are able to pass the Turing Test.
[10910380] |Colby's PARRY has been described as "ELIZA with attitude" - it attempts to model the behavior of a [[Paranoia|paranoid]] [[Schizophrenic|schizophrenic]], using a similar (if more advanced) approach to that employed by Weizenbaum.
[10910390] |In order to help validate the work, PARRY was tested in the early 1970s using a variation of the Turing Test.
[10910400] |A group of experienced psychiatrists analyzed a combination of real patients and computers running PARRY through [[teletype]] machines.
[10910410] |Another group of 33 psychiatrists were shown transcripts of the conversations.
[10910420] |The two groups were then asked to identify which of the "patients" were human, and which were computer programs.
[10910430] |The psychiatrists were only able to make the correct identification 48% of the time - a figure consistent with random guessing.
[10910440] |While neither ELIZA nor PARRY were able to pass a strict Turing Test, they - and software like them - suggested that software might be written that was able to do so.
[10910450] |More importantly, they suggested that such software might involve little more than databases and the application of simple rules.
[10910460] |This led to [[John Searle]]'s 1980 paper, "Minds, Brains, and Programs", in which he proposed an argument against the Turing Test.
[10910470] |Searle described a [[thought experiment]] known as the [[Chinese room]] that highlighted what he saw as a fundamental misinterpretation of what the Turing Test could and could not prove: while software such as ELIZA might be able to pass the Turing Test, they might do so by simply manipulating symbols of which they have no understanding.
[10910480] |And without understanding, they could not be described as "thinking" in the same sense people do.
[10910490] |Searle concludes that the Turing Test can not prove that a machine can think, contrary to Turing's original proposal.
[10910500] |Arguments such as that proposed by Searle and others working in the [[philosophy of mind]] sparked off a more intense debate about the nature of intelligence, the possibility of intelligent machines and the value of the Turing test that continued through the 1980s and 1990s.
[10910510] |===1990s and beyond=== 
[10910520] |1990 was the 40th anniversary of the first publication of Turing's "Computing Machinery and Intelligence" paper, and thus saw renewed interest in the test.
[10910530] |Two significant events occurred in that year.
[10910540] |The first with the Turing Colloquium, which was held at the [[University of Sussex]] in April, and brought together academics and researchers from a wide variety of disciplines to discuss the Turing Test in terms of its past, present and future.
[10910550] |The second significant event was the formation of the annual [[Loebner prize]] competition.
[10910560] |The Loebner prize was instigated by [[Hugh Loebner]] under the auspices of the Cambridge Center for Behavioral Studies of [[Massachusetts]], [[United States]], with the first competition held in November, 1991.
[10910570] |As Loebner describes it, the competition was created to advance the state of AI research, at least in part because while the Turing Test had been discussed for many years, "no one had taken steps to implement it."
[10910580] |The Loebner prize has three awards: the first prize of $100,000 and a gold medal, to be awarded to the first program that passes the "unrestricted" Turing test; the second prize of $25,000, to be awarded to the first program that passes the "restricted" version of the test; and a sum of $2000 (now $3000) to the "most human-like" program that was entered each year.
[10910590] |[[As of 2007]], neither the first nor second prizes have been awarded.
[10910600] |The running of the Loebner prize led to renewed discussion of both the viability of the Turing Test and the aim of developing artificial intelligences that could pass it.
[10910610] |''[[The Economist]]'', in an article entitled "Artificial Stupidity", commented that the winning entry from the first Loebner prize won, at least in part, because it was able to "imitate human typing errors".
[10910620] |(Turing had considered the possibility that computers could be identified by their ''lack'' of errors, and had suggested that the computers should be programmed to add errors into their output, so as to be better "players" of the game).
[10910630] |The issue that ''The Economist'' raised was one that was already well established in the literature: perhaps we don't really ''need'' the types of computers that could pass the Turing Test, and perhaps trying to pass the Turing Test is nothing more than a distraction from more fruitful lines of research.
[10910640] |Equally, a second issue became apparent - by providing rules which restricted the abilities of the interrogators to ask questions, and by using comparatively "unsophisticated" interrogators, the Turing Test can be passed through the use of "trickery" rather than intelligence.
[10910650] |==Versions of the Turing test== 
[10910660] |There are at least three primary versions of the Turing test - two offered by Turing in "Computing Machinery and Intelligence" and one which Saul Traiger describes as the "Standard Interpretation".
[10910670] |While there is some debate as to whether or not the "Standard Interpretation" is described by Turing or is, instead, based on a misreading of his paper, these three versions are not regarded as being equivalent, and are seen as having different strengths and weaknesses.
[10910680] |As [[empirical]] tests they conform to a proposal published in 1936 by [[A J Ayer]] on how to distinguish between a conscious man and an unconscious machine.
[10910690] |In his book ''[[Language, Truth and Logic]]'' Ayer states that 'The only ground I can have for asserting that an object which appears to be conscious is not really a conscious being, but only a dummy or a machine, is that it fails to satisfy one of the empirical tests by which the presence or absence of consciousness is determined'.
[10910700] |===The imitation game=== 
[10910710] |Turing described a simple party game which involves three players.
[10910720] |Player A is a man, player B is a woman, and player C (who plays the role of the interrogator) can be of either gender.
[10910730] |In the imitation game, player C - the interrogator - is unable to see either player A or player B, and can only communicate with them through written notes.
[10910740] |By asking questions of player A and player B, player C tries to determine which of the two is the man, and which of the two is the woman.
[10910750] |Player A's role is to trick the interrogator into making the wrong decision, while player B attempts to assist the interrogator.
[10910760] |In what Sterret refers to as the "Original Imitation Game Test", Turing proposed that the role of player A be replaced with a computer.
[10910770] |The computer's task is therefore to pretend to be a woman and to attempt to trick the interrogator into making an incorrect evaluation.
[10910780] |The success of the computer is determined by comparing the outcome of the game when player A is a computer against the outcome when player A is a man.
[10910790] |If, as Turing puts it, "the interrogator decide[s] wrongly as often when the game is played [with the computer] as he does when the game is played between a man and a woman", then it can be argued that the computer is intelligent.
[10910800] |The second version comes later in Turing's 1950 paper.
[10910810] |As with the Original Imitation Game Test, the role of player A is performed by a computer.
[10910820] |The difference is that now the role of player B is to be performed by a man, rather than by a woman.
[10910830] |In this version both player A (the computer) and player B are trying to trick the interrogator into making an incorrect decision.
[10910840] |===The standard interpretation=== 
[10910850] |A common understanding of the Turing test is that the purpose was not specifically to test if a computer is able to fool an interrogator into believing that it is a woman, but to test whether or not a computer could ''imitate'' a human.
[10910860] |While there is some dispute as to whether or not this interpretation was intended by Turing (for example, Sterrett believes that it was, and thus conflates the second version with this one, while others, such as Traiger, do not), this has nevertheless led to what can be viewed as the "standard interpretation".
[10910870] |In this version, player A is a computer, and player B is a person of either gender.
[10910880] |The role of the interrogator is not to determine which is male and which is female, but to determine which is a computer and which is a human.
[10910890] |===Imitation game vs. standard Turing test=== 
[10910900] |There has been some controversy over which of the alternative formulations of the test Turing intended.
[10910910] |Sterret argues that two distinct tests can be extracted from Turing's 1950 paper, and that, ''pace'' Turing's remark, they are not equivalent.
[10910920] |The test that employs the party game and compares frequencies of success in the game is referred to as the "Original Imitation Game Test" whereas the test consisting of a human judge conversing with a human and a machine is referred to as the "Standard Turing Test", noting that Sterret equates this with the "standard interpretation" rather than the second version of the imitation game.
[10910930] |Sterrett agrees that the Standard Turing Test (STT) has the problems its critics cite, but argues that, in contrast, the Original Imitation Game Test (OIG Test) so defined is immune to many of them, due to a crucial difference: the OIG Test, unlike the STT, does not make similarity to a human performance the criterion of the test, even though it employs a human performance in setting a criterion for machine intelligence.
[10910940] |A man can fail the OIG Test, but it is argued that this is a virtue of a test of intelligence if failure indicates a lack of resourcefulness.
[10910950] |It is argued that the OIG Test requires the resourcefulness associated with intelligence and not merely "simulation of human conversational behaviour".
[10910960] |The general structure of the OIG Test could even be used with nonverbal versions of imitation games.
[10910970] |Still other writers have interpreted Turing to be proposing that the imitation game itself is the test, without specifying how to take into account Turing's statement that the test he proposed using the party version of the imitation game is based upon a criterion of comparative frequency of success in that imitation game, rather than a capacity to succeed at one round of the game.
[10910980] |===Should the interrogator know about the computer?=== 
[10910990] |Turing never makes it clear as to whether or not the interrogator in his tests is aware that one of the participants is a computer.
[10911000] |To return to the Original Imitation Game, Turing states only that Player A is to be replaced with a machine, not that player C is to be made aware of this replacement.
[10911010] |When Colby, Hilf, Weber and Kramer tested PARRY, they did so by assuming that the interrogators did not need to know that one or more of those being interviewed was a computer during the interrogation.
[10911020] |But, as Saygin and others highlight, this makes a big difference to the implementation and outcome of the test.
[10911030] |==Strengths of the test == 
[10911040] |The power of the Turing test derives from the fact that it is possible to talk about anything.
[10911050] |Turing wrote "the question and answer method seems to be suitable for introducing almost any one of the fields of human endeavor that we wish to include."
[10911060] |[[John Haugeland]] adds that "understanding the words is not enough; you have to understand the ''topic'' as well."
[10911070] |In order to pass a well designed Turing test, the machine would have to use [[natural language processing|natural language]], to [[commonsense reasoning|reason]], to have [[knowledge representation|knowledge]] and to [[machine learning|learn]].
[10911080] |The test can be extended to include video input, as well as a "hatch" through which objects can be passed, and this would force the machine to demonstrate the skill of [[computer vision|vision]] and [[robotics]] as well.
[10911090] |Together these represent almost all the major problems of [[artificial intelligence]].
[10911100] |==Weaknesses of the test == 
[10911110] |The test has been criticized on several grounds.
[10911120] |===Human intelligence vs. intelligence in general=== 
[10911130] |The test is explicitly [[anthropomorphic]].
[10911140] |It only tests if the subject ''resembles'' a human being.
[10911150] |It will fail to test for intelligence under two circumstances: 
[10911160] |* It tests for many behaviors that we may not consider intelligent, such as the susceptibility to insults or the temptation to lie.
[10911170] |A machine may very well be intelligent without being able to chat ''exactly'' like a human.
[10911180] |* It fails to capture the ''general'' properties of intelligence, such as the ability to solve difficult problems or come up with original insights.
[10911190] |If a machine can solve a difficult problem that no person could solve, it would, in principle, fail the test.
[10911200] |[[Stuart J. Russell]] and [[Peter Norvig]] argue that the anthropomorphism of the test prevents it from being truly useful for the task of engineering intelligent machines.
[10911210] |They write: "Aeronautical engineering texts do not define the goal of their field as 'making machines that fly so exactly like pigeons that they can fool other pigeons.'"
[10911220] |The test is also vulnerable to naivete on the part of the test subjects.
[10911230] |If the testers have little experience with [[chatterbot]]s they may be more likely to judge a computer program to be responding coherently than someone who is aware of the various tricks that chatterbots use, such as changing the subject or answering a question with another question.
[10911240] |Such tricks may be misinterpreted as "playfulness" and therefore evidence of a human participant by uninformed testers, especially during brief sessions in which a chatterbot's inherent repetitiveness does not have a chance to become evident.
[10911250] |===Real intelligence vs. simulated intelligence=== 
[10911260] |The test is also explicitly [[behaviorist]] or [[functionalist]]: it only tests how the subject ''acts.''
[10911270] |A machine passing the Turing test may be able to ''simulate human conversational behaviour'' but the machine might just follow some cleverly devised rules.
[10911280] |Two famous examples of this line of argument against the Turing test are [[John Searle]]'s [[Chinese room]] argument and [[Ned Block]]'s [[Blockhead (computer system)|Blockhead]] argument.
[10911290] |Even if the Turing test is a good operational definition of intelligence, it may not indicate that the machine has [[consciousness]], or that it has [[intentionality]].
[10911300] |Perhaps intelligence and consciousness, for example, are such that neither one necessarily implies the other.
[10911310] |In that case, the Turing test might fail to capture one of the key differences between intelligent machines and intelligent people.
[10911320] |== Predictions and tests == 
[10911330] |Turing predicted that machines would eventually be able to pass the test.
[10911340] |In fact, he estimated that by the year 2000, machines with 10<sup>9</sup> [[bit]]s (about 119.2 [[mebibyte|MiB]]) of memory would be able to fool 30% of human judges during a 5-minute test.
[10911350] |He also predicted that people would then no longer consider the phrase "thinking machine" contradictory.
[10911360] |He further predicted that [[machine learning]] would be an important part of building powerful machines, a claim which is considered to be plausible by contemporary researchers in [[Artificial intelligence]].
[10911370] |By extrapolating an [[Technological singularity#Accelerating change|exponential growth]] of technology over several decades, [[Future Studies|futurist]] [[Ray Kurzweil]] predicted that Turing-test-capable computers would be manufactured around the year 2020, roughly speaking.
[10911380] |See the [[Moore's Law]] article and the references therein for discussions of the plausibility of this argument.
[10911390] |[[As of 2008]], no computer has passed the Turing test as such.
[10911400] |Simple conversational programs such as [[ELIZA]] have fooled people into believing they are talking to another human being, such as in an informal experiment termed [[AOLiza]].
[10911410] |However, such "successes" are not the same as a Turing Test.
[10911420] |Most obviously, the human party in the conversation has no reason to suspect they are talking to anything other than a human, whereas in a real Turing test the questioner is actively trying to determine the nature of the entity they are chatting with.
[10911430] |Documented cases are usually in environments such as [[Internet Relay Chat]] where conversation is sometimes stilted and meaningless, and in which no understanding of a conversation is necessary.
[10911440] |Additionally, many internet relay chat participants use English as a second or third language, thus making it even more likely that they would assume that an unintelligent comment by the conversational program is simply something they have misunderstood, and do not recognize the very non-human errors they make.
[10911450] |See [[ELIZA effect]].
[10911460] |The [[Loebner prize]] is an annual competition to determine the best Turing test competitors.
[10911470] |Although they award an annual prize for the computer system that, in the judges' opinions, demonstrates the "most human" conversational behaviour (with learning AI [[Jabberwacky]] winning in [[2005]] and [[2006]], and [[Artificial Linguistic Internet Computer Entity|A.L.I.C.E.]] before that), they have an additional prize for a system that in their opinion passes a Turing test.
[10911480] |This second prize has not yet been awarded.
[10911490] |The creators of Jabberwacky have proposed a personal Turing Test: the ability to pass the imitation test while attempting to specifically imitate the human player, with whom the AI will have conversed at length before the test.
[10911500] |In [[2008]] the competition for the [[Loebner prize]] is being co-organised by [[Kevin Warwick]] and held at the [[University of Reading]] on [[October 12]].
[10911510] |The directive for the competition is to stay as close as possible to Turing's original statements made in his 1950 paper, such that it can be ascertained if any machines are presently close to 'passing the test'.
[10911520] |An academic meeting discussing the Turing Test, organised by the [[Society for the Study of Artificial Intelligence and the Simulation of Behaviour]], is being held in parallel at the same venue.
[10911530] |Trying to pass the Turing test in its full generality is not, as of 2005, an active focus of much mainstream academic or commercial effort.
[10911540] |Current research in AI-related fields is aimed at more modest and specific goals.
[10911550] |The first bet of the [[Long Bet Project]] is a [[United States dollar|$]]10,000 one between [[Mitch Kapor]] (pessimist) and [[Ray Kurzweil]] (optimist) about whether a computer will pass a Turing Test by the year [[2029]].
[10911560] |The bet specifies the conditions in some detail.
[10911570] |==Variations of the Turing test== 
[10911580] |A modification of the Turing test, where the objective or one or more of the roles have been reversed between computers and humans, is termed a [[reverse Turing test]].
[10911590] |Another variation of the Turing test is described as the [[Subject matter expert Turing test]] where a computer's response cannot be distinguished from an expert in a given field.
[10911600] |As brain and body scanning techniques improve it may also be possible to replicate the essential [[data element]]s of a person to a computer system.
[10911610] |The [[Immortality test]] variation of the Turing test would determine if a person's essential character is reproduced with enough fidelity to make it impossible to distinguish a reproduction of a person from the original person.
[10911620] |The [[Minimum Intelligent Signal Test]] proposed by [[Chris McKinstry]], is another variation of Turing's test, but where only binary responses are permitted.
[10911630] |It is typically used to gather statistical data against which the performance of [[artificial intelligence]] programs may be measured.
[10911640] |Another variation of the reverse Turing test is implied in the work of psychoanalyst Wilfred Bion, who was particularly fascinated by the "storm" that resulted from the encounter of one mind by another.
[10911650] |Carrying this idea forward, R. D. Hinshelwood described the mind as a "mind recognizing apparatus", noting that this might be some sort of "supplement" to the Turing test.
[10911660] |To make this more explicit, the challenge would be for the computer to be able to determine if it were interacting with a human or another computer.
[10911670] |This is an extension of the original question Turing was attempting to answer, but would, perhaps, be a high enough standard to define a machine that could "think" in a way we typically define as characteristically human.
[10911680] |Another variation is the Meta Turing test, in which the subject being tested (for example a computer) is classified as intelligent if it itself has created something that the subject itself wants to test for intelligence.
[10911690] |==Practical applications== 
[10911700] |[[Stuart J. Russell]] and [[Peter Norvig]] note that "AI researchers have devoted little attention to passing the Turing Test",
[10911710] |Real Turing tests, such as the [[Loebner prize]], do not usually force programs to demonstrate the full range of intelligence and are reserved for testing [[chatterbot]] programs.
[10911720] |However, even in this limited form these tests are still very rigorous.
[10911730] |The 2008 [[Loebner prize]] however is sticking closely to Turing's original concepts - for example conversations will be for 5 minutes only.
[10911740] |[[CAPTCHA]] is a form of [[reverse Turing test]].
[10911750] |Before being allowed to do some action on a [[website]], the user is presented with alphanumerical characters in a distorted graphic image and asked to recognise it.
[10911760] |This is intended to prevent automated systems from abusing the site.
[10911770] |The rationale is that software sufficiently sophisticated to read the distorted image accurately does not exist (or is not available to the average user), so any system able to do so is likely to be a human being.
[10911780] |== In popular culture == 
[10911790] |In the ''[[Dilbert]]'' comic strip on Sunday [[30 March]] [[2008]],, Dilbert says, "The security audit accidentally locked all of the developers out of the system", and his boss responds with only meaningless, [[tautology (rhetoric)|tautological]] [[thought-terminating cliché]]s, "Well, it is what it is." Dilbert asks "How does that help" and his boss responds with another cliche, "You don't know what you don't know."
[10911800] |Dilbert replies, "Congratulations.
[10911810] |You're the first human to fail the Turing Test."
[10911820] |For that day, "turing test" was the 43<sup>rd</sup> most popular [[Google]] search.
[10911830] |The character of [[Ghostwheel]] in [[Roger Zelazny]]'s [[The Chronicles of Amber]] is mentioned to be capable of passing the Turing Test.
[10911840] |The webcomic [[xkcd]] has referred to Turing and the Turing test.
[10911850] |[[Rick Deckard]],in the movie [[Blade Runner]], used a Turing Test to determine if Rachael was a [[Replicant]].
[10920010] |<article>United States</article>
[10920020] |The '''United States of America''', usually referred to as the '''United States''', the '''U.S.''' or '''America''', is a [[constitutional republic|constitutional]] [[federal republic]] comprising [[U.S. state|fifty states]] and a [[federal district]], as well as [[Territories of the United States|several territories]], or [[insular area]]s, scattered around the [[Caribbean]] and Pacific.
[10920030] |The [[country]] is situated mostly in central [[North America]], where its [[Continental United States|forty-eight contiguous states]] and [[Washington, D.C.]], the capital district, lie between the [[Pacific Ocean|Pacific]] and [[Atlantic Ocean]]s, bordered by [[Canada]] to the [[Canada – United States border|north]] and [[Mexico]] to the [[United States–Mexico border|south]].
[10920040] |The state of [[Alaska]] is in the northwest of the continent, with Canada to its east and [[Russia]] to the west across the [[Bering Strait]], and the state of [[Hawaii]] is an [[archipelago]] in the mid-Pacific.
[10920050] |At 3.79 million square miles (9.83 million km²) and with more than 300 million people, the United States is the [[List of countries and outlying territories by total area|third or fourth]] largest country by total area, and third largest by land area and [[List of countries by population|by population]].
[10920060] |The United States is one of the world's most [[Multiculturalism|ethnically diverse]] nations, the product of large-scale [[immigration to the United States|immigration from many countries]].
[10920070] |The [[Economy of the United States|U.S. economy]] is the largest national economy in the world, with a nominal 2006 [[gross domestic product]] (GDP) of more than [[United States dollar|US$]]13 trillion (over 25% of the world total based on [[nominal GDP]] and almost 20% by [[purchasing power parity]]).
[10920080] |The nation was founded by [[Thirteen Colonies|thirteen colonies]] of [[Kingdom of Great Britain|Great Britain]] located along the [[East Coast of the United States|Atlantic seaboard]].
[10920090] |Proclaiming themselves "states," they issued the [[United States Declaration of Independence|Declaration of Independence]] on [[July 4]], [[1776]].
[10920100] |The rebellious states defeated Great Britain in the [[American Revolutionary War]], the first successful [[History of colonialism|colonial war of independence]].
[10920110] |A [[Philadelphia Convention|federal convention]] adopted the current [[United States Constitution]] on [[September 17]], [[1787]]; its ratification the following year made the states part of a single republic.
[10920120] |The [[United States Bill of Rights|Bill of Rights]], comprising ten [[List of amendments to the United States Constitution|constitutional amendments]], was ratified in 1791.
[10920130] |In the nineteenth century, the United States acquired land from [[Louisiana Purchase|France]], [[Adams-Onís Treaty|Spain]], the [[Oregon Country|United Kingdom]], [[Mexican-American War|Mexico]], and [[Alaska purchase|Russia]], and [[Texas Annexation|annexed]] the [[Republic of Texas]] and the [[Republic of Hawaii]].
[10920140] |Disputes between the [[Southern United States|agrarian South]] and [[Northern United States|industrial North]] over [[states' rights]] and the expansion of the [[slavery in the United States|institution of slavery]] provoked the [[American Civil War]] of the 1860s.
[10920150] |The North's victory prevented a permanent split of the country and led to the [[Thirteenth Amendment to the United States Constitution|end of legal slavery]] in the United States.
[10920160] |The [[Spanish-American War]] and [[World War I]] confirmed the nation's status as a military power.
[10920170] |In 1945, the United States emerged from [[World War II]] as the [[Nuclear weapons and the United States|first country with nuclear weapons]], a permanent member of the [[United Nations Security Council]], and a founding member of [[NATO]].
[10920180] |In the post–[[Cold War]] era, the United States is the only remaining [[superpower]]—accounting for [[List of countries by military expenditures|approximately 50% of global military spending]]—and a dominant economic, political, and cultural force in the world.
[10920190] |==Etymology== 
[10920200] |The term ''[[Americas#Naming|America]]'', for the lands of the [[Western Hemisphere|western hemisphere]], was coined in 1507 after [[Amerigo Vespucci]], an Italian explorer and cartographer.
[10920210] |The full name of the country was first used officially in the [[United States Declaration of Independence|Declaration of Independence]], which was the "unanimous Declaration of the thirteen united States of America" adopted by the "Representatives of the united States of America" on [[July 4]], [[1776]].
[10920220] |The current name was finalized on [[November 15]], [[1777]], when the [[Second Continental Congress]] adopted the [[Articles of Confederation]], the first of which states, "The Stile of this Confederacy shall be 'The United States of America.'"
[10920230] |Common short forms and abbreviations of the United States of America include the ''United States,'' the ''U.S.'', the ''U.S.A.'', and ''America''.
[10920240] |Colloquial names for the country include the ''U.S. of A.'' and ''the States''.
[10920250] |''[[Columbia (name)|Columbia]]'', a once popular name for the Americas and the United States, was derived from [[Christopher Columbus]].
[10920260] |It appears in the name "[[Washington, D.C.|District of Columbia]]".
[10920270] |A female personification of Columbia appears on some official documents, including certain prints of [[United States dollar|U.S. currency]].
[10920280] |The standard way to refer to a citizen of the United States is as an ''[[American (word)|American]].''
[10920290] |Though ''United States'' is the formal adjective, ''American'' and ''U.S.'' are the most common adjectives used to refer to the country ("American values," "U.S. forces").
[10920300] |''American'' is rarely used in English to refer to people not connected to the United States.
[10920310] |The phrase "the United States" was originally treated as plural—e.g, "the United States are"—including in the [[Thirteenth Amendment to the United States Constitution|Thirteenth Amendment]] to the Constitution, ratified in 1865.
[10920320] |However, it became increasingly common to treat the name as singular—e.g., "the United States is"—after the end of the Civil War.
[10920330] |The singular form is now standard, while the plural form is retained in the set idiom "these United States."
[10920340] |==Geography== 
[10920350] |The United States is situated almost entirely in the [[Western Hemisphere|western hemisphere]]: the [[continental United States|contiguous United States]] stretches from the [[Pacific Ocean|Pacific]] on the west to the [[Atlantic Ocean|Atlantic]] on the east, with the [[Gulf of Mexico]] to the southeast, and bordered by [[Canada]] on the north and [[Mexico]] on the south.
[10920360] |[[Alaska]] is the largest state in area; separated from the contiguous U.S. by Canada, it touches the Pacific on the south and [[Arctic Ocean]] on the north.
[10920370] |[[Hawaii]] occupies an [[archipelago]] in the central Pacific, southwest of North America.
[10920380] |The United States is the world's third or fourth [[List of countries and outlying territories by total area|largest nation by total area]], before or after [[People's Republic of China|China]].
[10920390] |The ranking varies depending on (a) how two territories disputed by China and [[India]] are counted and (b) how the total size of the United States is calculated: the CIA ''World Factbook'' gives , the United Nations Statistics Division gives , and the ''Encyclopedia Britannica'' gives .
[10920400] |Including only land area, the United States is third in size behind Russia and China, just ahead of Canada.
[10920410] |The United States also possesses several [[Territories of the United States|insular territories]] scattered around the [[Caribbean|West Indies]] (e.g., the [[Commonwealth (United States insular area)|commonwealth]] of [[Puerto Rico]]) and the Pacific (e.g., [[Guam]]).
[10920420] |The coastal plain of the Atlantic seaboard gives way further inland to [[deciduous]] forests and the rolling hills of the [[Piedmont (United States)|Piedmont]].
[10920430] |The [[Appalachian Mountains]] divide the eastern seaboard from the [[Great Lakes]] and the grasslands of the [[Midwestern United States|Midwest]].
[10920440] |The [[Mississippi River|Mississippi]]&ndash;[[Missouri River]], the world's [[List of rivers by length|fourth longest river system]], runs mainly north-south through the heart of the country.
[10920450] |The flat, fertile prairie land of the [[Great Plains]] stretches to the west, interrupted by [[U.S. Interior Highlands|a highland region]] along its southeastern portion.
[10920460] |The [[Rocky Mountains]], at the western edge of the Great Plains, extend north to south across the continental United States, reaching altitudes higher than 14,000&nbsp;feet (4,300&nbsp;m) in [[Colorado]].
[10920470] |The area to the west of the Rocky Mountains is dominated by the rocky [[Great Basin]] and deserts such as the [[Mojave Desert|Mojave]].
[10920480] |The [[Sierra Nevada (U.S.)|Sierra Nevada]] range runs parallel to the Rockies, relatively close to the [[West Coast of the United States|Pacific coast]].
[10920490] |At 20,320&nbsp;feet (6,194&nbsp;m), Alaska's [[Mount McKinley]] is the country's tallest peak.
[10920500] |Active [[volcano]]es are common throughout the [[Alexander Archipelago|Alexander]] and [[Aleutian Islands]], and the entire state of Hawaii is built upon tropical volcanic islands.
[10920510] |The [[supervolcano]] underlying [[Yellowstone National Park]] in the Rockies is the continent's largest volcanic feature.
[10920520] |Because of the United States' large size and wide range of geographic features, nearly every type of [[climate]] is represented.
[10920530] |The climate is [[temperate]] in most areas, [[Tropics|tropical]] in Hawaii and southern [[Florida]], [[Polar climate|polar]] in Alaska, [[Semi-arid climate|semi-arid]] in the Great Plains west of the [[100th meridian west|100th meridian]], desert in the Southwest, [[Mediterranean climate|Mediterranean]] in [[Coastal California]], and [[arid]] in the Great Basin.
[10920540] |Extreme weather is not uncommon—the states bordering the [[Gulf of Mexico]] are prone to [[hurricane]]s, and most of the world's [[tornado]]es occur within the continental United States, primarily in the Midwest's [[Tornado Alley]].
[10920550] |==Environment== 
[10920560] |U.S. plant life is very diverse; the country has more than 17,000 identified native species of [[flora]].
[10920570] |More than 400 mammal, 700 bird, 500 reptile and amphibian, and 90,000 insect species have been documented.
[10920580] |The [[Endangered Species Act]] of 1973 protects threatened and endangered species and their habitats, which are monitored by the [[United States Fish and Wildlife Service|U.S. Fish and Wildlife Service]].
[10920590] |The U.S. has fifty-eight [[List of areas in the United States National Park System|national parks]] and hundreds of other federally managed parks, forests, and [[wilderness area]]s.
[10920600] |Altogether, the U.S. government regulates 28.8% of the country's total land area.
[10920610] |Most such public land comprises protected parks and forestland, though some federal land is leased for oil and gas drilling, mining, or cattle ranching.
[10920620] |The [[energy policy of the United States]] is widely debated; many call on the country to take a leading role in fighting [[global warming]].
[10920630] |The United States is currently the second largest emitter, after the People's Republic of China, of [[carbon dioxide]] from the burning of [[fossil fuel]]s.
[10920640] |==History== 
[10920650] |===Native Americans and European settlers=== 
[10920660] |The [[Indigenous peoples of the Americas|indigenous peoples]] of the U.S. mainland, including [[Alaska Natives]], are thought to have [[Models of migration to the New World|migrated from Asia]].
[10920670] |They began arriving at least 12,000 and as many as 40,000 years ago.
[10920680] |Several indigenous communities in the [[pre-Columbian]] era developed advanced agriculture, grand architecture, and state-level societies.
[10920690] |In 1492, Genoese explorer [[Christopher Columbus]], under contract to the Spanish crown, reached several Caribbean islands, making [[First contact (anthropology)|first contact]] with the indigenous population.
[10920700] |In the years that followed, the majority of the indigenous American peoples were killed by epidemics of [[Eurasia]]n diseases.
[10920710] |On [[April 2]], [[1513]], Spanish [[conquistador]] [[Juan Ponce de León]] landed on what he called "[[History of Florida|La Florida]]"—the first documented European arrival on what would become the U.S. mainland.
[10920720] |Of the colonies Spain established in the region, only [[St. Augustine, Florida|St. Augustine]], founded in 1565, remains.
[10920730] |Later Spanish settlements in the present-day [[southwestern United States]] drew thousands through Mexico.
[10920740] |French [[fur trade]]rs established outposts of [[New France]] around the [[Great Lakes]]; France eventually claimed much of the North American interior as far south as the Gulf of Mexico.
[10920750] |The first successful English settlements were the [[Colony of Virginia|Virginia Colony]] in [[Jamestown, Virginia|Jamestown]] in 1607 and the [[Pilgrim]]s' [[Plymouth Colony]] in 1620.
[10920760] |The 1628 chartering of the [[Massachusetts Bay Colony]] resulted in a wave of migration; by 1634, [[New England]] had been settled by some 10,000 [[Puritan]]s.
[10920770] |Between the late 1610s and the American Revolution, an estimated 50,000 convicts were shipped to England's, and later Great Britain's, American colonies.
[10920780] |Beginning in 1614, the Dutch established settlements along the lower [[Hudson River]], including [[New Amsterdam]] on [[Manhattan|Manhattan Island]].
[10920790] |The small settlement of [[New Sweden]], founded along the [[Delaware River]] in 1638, was taken over by the Dutch in 1655.
[10920800] |By 1674, English forces had won the former Dutch colonies in the [[Anglo-Dutch Wars|Anglo–Dutch Wars]]; the province of [[New Netherland]] was renamed [[New York]].
[10920810] |Many new immigrants, especially to [[History of the Southern United States|the South]], were [[indentured servants]]—some two-thirds of all Virginia immigrants between 1630 and 1680.
[10920820] |By the turn of the century, [[Slavery in the colonial United States|African slaves]] were becoming the primary source of bonded labor.
[10920830] |With the 1729 division of [[the Carolinas]] and the 1732 colonization of [[Georgia (U.S. state)|Georgia]], the thirteen British colonies that would become the United States of America were established.
[10920840] |All had active local and colonial governments with elections open to most free men, with a growing devotion to the ancient [[rights of Englishmen]] and a sense of self government that stimulated support for [[republicanism]].
[10920850] |All had legalized the [[African slave trade]].
[10920860] |With high birth rates, low death rates, and steady immigration, the colonies doubled in population every twenty-five years.
[10920870] |The Christian [[Revivalism|revivalist]] movement of the 1730s and 1740s known as the [[First Great Awakening|Great Awakening]] fueled interest in both religion and religious liberty.
[10920880] |In the [[French and Indian War]], British forces seized Canada from the French, but the [[francophone]] population remained politically isolated from the southern colonies.
[10920890] |By 1770, those thirteen colonies had an increasingly [[Anglicisation|Anglicized]] population of three million, approximately half that of Britain.
[10920900] |Though [[No taxation without representation|subject to British taxation]], they were given no representation in the [[Parliament of Great Britain]].
[10920910] |===Independence and expansion=== 
[10920920] |Tensions between American colonials and the British during the [[American Revolution|revolutionary period]] of the 1760s and early 1770s led to the [[American Revolutionary War]], fought from 1775 through 1781.
[10920930] |On [[June 14]], [[1775]], the [[Second Continental Congress|Continental Congress]], convening in [[Philadelphia]], established a [[Continental Army]] under the command of [[George Washington]].
[10920940] |Proclaiming that "[[all men are created equal]]" and endowed with "certain [[inalienable rights|unalienable Rights]]," the Congress adopted the [[United States Declaration of Independence|Declaration of Independence]] on [[July 4]], [[1776]].
[10920950] |The Declaration, drafted largely by [[Thomas Jefferson]], pronounced the colonies [[sovereignty|sovereign]] "[[state]]s.
[10920960] |" In 1777, the [[Articles of Confederation]] were adopted, uniting the states under a weak federal government that operated until 1788.
[10920970] |Some 70,000–80,000 [[Loyalist (American Revolution)|loyalists]] to the British Crown fled the rebellious states, many to [[Nova Scotia]] and the new [[Canada under British Imperial control (1764-1867)|British holdings in Canada]].
[10920980] |Native Americans, with divided allegiances, fought on both sides of [[Western theater of the American Revolutionary War|the war's western front]].
[10920990] |After the [[Siege of Yorktown|defeat of the British army]] by American forces who were [[France in the American Revolutionary War|assisted by the French]], Great Britain [[Treaty of Paris (1783)|recognized the sovereignty]] of the thirteen states in 1783.
[10921000] |A [[Philadelphia Convention|constitutional convention]] was organized in 1787 by those who wished to establish a strong national government with power over the states.
[10921010] |By June 1788, nine states had ratified the [[United States Constitution]], sufficient to establish the new government; the republic's [[1st United States Congress|first Senate, House of Representatives]], and [[President of the United States|president]]—George Washington—took office in 1789.
[10921020] |[[New York City]] was the federal capital for a year, before the government relocated to Philadelphia.
[10921030] |In 1791, the states ratified the [[United States Bill of Rights|Bill of Rights]], ten amendments to the Constitution forbidding federal restriction of personal freedoms and guaranteeing a range of legal protections.
[10921040] |Attitudes toward [[Slavery in the United States|slavery]] were shifting; a [[Article One of the United States Constitution#Section 9: Limits on Congress|clause in the Constitution]] protected the African slave trade only until 1808.
[10921050] |The Northern states abolished slavery between 1780 and 1804, leaving the [[slave state]]s of the South as defenders of the "[[peculiar institution]]."
[10921060] |In 1800, the federal government moved to the newly founded [[History of Washington, D.C.|Washington, D.C.]] The [[Second Great Awakening]] made [[evangelicalism]] a force behind various social [[reform movement]]s.
[10921070] |Americans' eagerness to [[Territorial acquisitions of the United States|expand westward]] began a cycle of [[Indian Wars]] that stretched to the end of the nineteenth century, as Native Americans were stripped of their land.
[10921080] |The [[Louisiana Purchase]] of French-claimed territory under President Thomas Jefferson in 1803 virtually doubled the nation's size.
[10921090] |The [[War of 1812]], declared against Britain over various grievances and fought to a draw, strengthened American [[nationalism]].
[10921100] |A series of U.S. military incursions into Florida led [[Spanish Cession|Spain to cede]] it and other Gulf Coast territory in 1819.
[10921110] |The country annexed the [[Republic of Texas]] in 1845.
[10921120] |The concept of [[Manifest Destiny]] was popularized during this time.
[10921130] |The 1846 [[Oregon Treaty]] with Britain led to U.S. control of the present-day [[Northwestern United States|American Northwest]].
[10921140] |The U.S. victory in the [[Mexican-American War]] resulted in the 1848 [[Mexican Cession|cession]] of [[California]] and much of the present-day [[Southwestern United States|American Southwest]].
[10921150] |The [[California Gold Rush]] of 1848–49 further spurred western migration.
[10921160] |[[Rail transport in the United States#History|New railways]] made relocation much less arduous for settlers and increased conflicts with Native Americans.
[10921170] |Over a half-century, up to 40 million [[American Bison|American bison]], commonly called buffalo, were slaughtered for skins and meat and to ease the railways' spread.
[10921180] |The loss of the bison, a primary economic resource for the [[plains Indians]], was an existential blow to many native cultures.
[10921190] |===Civil War and industrialization=== 
[10921200] |[[Origins of the American Civil War|Tensions]] between slave and [[Free state (United States)|free states]] mounted with increasing disagreements over the relationship between the [[states' rights|state and federal governments]] and [[Bleeding Kansas|violent conflicts]] over the expansion of slavery into new states. [[Abraham Lincoln]], candidate of the largely antislavery [[Republican Party (United States)|Republican Party]], was elected president in 1860.
[10921210] |Before he took office, seven slave states declared their [[secession]] from the United States, forming the [[Confederate States of America]].
[10921220] |The federal government maintained secession was illegal, and with the Confederate [[Battle of Fort Sumter|attack upon Fort Sumter]], the [[American Civil War]] began and four more slave states joined the Confederacy.
[10921230] |The [[Union (American Civil War)|Union]] [[Emancipation Proclamation|freed Confederate slaves]] as its [[Union Army|army]] advanced through the South.
[10921240] |Following the Union victory in 1865, three amendments to the U.S. Constitution [[Thirteenth Amendment to the United States Constitution|ensured freedom]] for the nearly four million African Americans who had been slaves, [[Fourteenth Amendment to the United States Constitution|made them citizens]], and [[Fifteenth Amendment to the United States Constitution|gave them voting rights]].
[10921250] |The war and its resolution led to a substantial increase in [[Federalism|federal power]].
[10921260] |After the war, the [[Abraham Lincoln assassination|assassination of President Lincoln]] [[Radical Republican (USA)|radicalized Republican]] [[Reconstruction era of the United States|Reconstruction]] policies aimed at reintegrating and rebuilding the Southern states while ensuring the rights of the newly freed slaves.
[10921270] |The resolution of the disputed [[United States presidential election, 1876|1876 presidential election]] by the [[Compromise of 1877]] ended Reconstruction; [[Jim Crow laws]] soon [[Disfranchisement after the Civil War|disenfranchised many African Americans]].
[10921280] |In the North, urbanization and an unprecedented [[Immigration to the United States#Immigration 1850 to 1930|influx of immigrants]] hastened the [[United States technological and industrial history#Technological systems and infrastructure|country's industrialization]].
[10921290] |The wave of immigration, which lasted until 1929, provided labor for U.S. businesses and transformed American culture.
[10921300] |High tariff protections, national infrastructure building, and new banking regulations encouraged industrial growth.
[10921310] |The 1867 [[Alaska purchase]] from Russia completed the country's mainland expansion.
[10921320] |The [[Wounded Knee Massacre|Wounded Knee massacre]] in 1890 was the last major armed conflict of the [[Indian Wars]].
[10921330] |In 1893, the [[Ancient Hawaii|indigenous monarchy]] of the Pacific [[Kingdom of Hawaii]] was overthrown in a coup led by American residents; the archipelago was annexed by the United States in 1898.
[10921340] |Victory in the [[Spanish-American War]] that same year demonstrated that the United States was a [[Great power|major world power]] and resulted in the annexation of Puerto Rico and the [[Philippines]].
[10921350] |The Philippines gained independence a half-century later; Puerto Rico remains a [[Commonwealth (United States insular area)|commonwealth]] of the United States.
[10921360] |===World War I, Great Depression, and World War II=== 
[10921370] |At the outbreak of [[World War I]] in 1914, the United States remained neutral.
[10921380] |Americans sympathized with the British and French, although many citizens, mostly Irish and German, opposed intervention.
[10921390] |In 1917, the United States joined the [[Allies of World War I|Allies]], turning the tide against the [[Central Powers]].
[10921400] |Reluctant to be involved in European affairs, the Senate did not ratify the [[Treaty of Versailles (1919)|Treaty of Versailles]], which established the [[League of Nations]].
[10921410] |The country pursued a policy of [[unilateralism]], verging on [[isolationism]].
[10921420] |In 1920, the [[women's rights]] movement won passage of a [[Nineteenth Amendment to the United States Constitution|constitutional amendment]] granting [[History of women's suffrage in the United States|women's suffrage]].
[10921430] |Partly because of the service of many in the war, Native Americans gained [[United States nationality law|U.S. citizenship]] in the [[Indian Citizenship Act of 1924]].
[10921440] |During [[Roaring Twenties|most of the 1920s]], the United States enjoyed a period of unbalanced prosperity as farm profits fell while industrial profits grew.
[10921450] |A rise in debt and an inflated [[stock market]] culminated in the [[Wall Street Crash of 1929|1929 crash]] that triggered the [[Great Depression in the United States|Great Depression]].
[10921460] |After his election as president in 1932, [[Franklin D. Roosevelt]] responded with the [[New Deal]], a range of policies increasing government intervention in the economy.
[10921470] |The [[Dust Bowl]] of the mid-1930s impoverished many farming communities and spurred a new wave of western migration.
[10921480] |The nation would not fully recover from the economic depression until the industrial mobilization spurred by its entrance into [[World War II]].
[10921490] |The United States, effectively neutral during the war's early stages after the [[Invasion of Poland (1939)|Nazi invasion of Poland]] in September 1939, began supplying [[materiel]] to the [[Allies of World War II|Allies]] in March 1941 through the [[Lend-Lease]] program.
[10921500] |On [[December 7]], [[1941]], the United States joined the Allies against the [[Axis powers]] after a surprise [[attack on Pearl Harbor]] by [[Japan]].
[10921510] |World War II cost far more money than any other war in American history, but it boosted the economy by providing capital investment and jobs, while bringing many women into the labor market.
[10921520] |Among the major combatants, the United States was the only nation to become richer—indeed, far richer—instead of poorer because of the war.
[10921530] |Allied conferences at [[United Nations Monetary and Financial Conference|Bretton Woods]] and [[Yalta Conference|Yalta]] outlined a new system of [[international organization]]s that placed the [[United States and the United Nations|United States]] and [[Soviet Union and the United Nations|Soviet Union]] at the center of world affairs.
[10921540] |As [[Victory in Europe Day|victory was achieved in Europe]], a 1945 [[United Nations Conference on International Organization|international conference]] held in [[San Francisco, California|San Francisco]] produced the [[United Nations Charter]], which became active after the war.
[10921550] |The United States, having [[Manhattan Project|developed the first nuclear weapons]], used them on the Japanese cities of [[atomic bombings of Hiroshima and Nagasaki|Hiroshima and Nagasaki]] in August.
[10921560] |[[surrender of Japan|Japan surrendered]] on [[September 2]], ending the war.
[10921570] |===Cold War and civil rights=== 
[10921580] |The United States and Soviet Union jockeyed for power after World War II during the Cold War, dominating the military affairs of Europe through [[NATO]] and the [[Warsaw Pact]].
[10921590] |The United States promoted [[liberal democracy]] and [[capitalism]], while the Soviet Union promoted [[communism]] and a centrally [[planned economy]].
[10921600] |Both the United States and the Soviet Union supported dictatorships, and both engaged in [[proxy war]]s.
[10921610] |United States troops fought [[People's Republic of China|Communist Chinese]] forces in the [[Korean War]] of 1950–53.
[10921620] |The [[House Un-American Activities Committee]] pursued a series of investigations into suspected leftist subversion, while Senator [[Joseph McCarthy]] became the figurehead of anticommunist sentiment.
[10921630] |The Soviet Union launched the first manned spacecraft in 1961, prompting U.S. efforts to raise proficiency in mathematics and science and President [[John F. Kennedy]]'s call for the country to be first to land "a man on the moon," achieved in 1969.
[10921640] |Kennedy also faced a [[Cuban Missile Crisis|tense nuclear showdown]] with Soviet forces in Cuba.
[10921650] |Meanwhile, America experienced sustained economic expansion.
[10921660] |A growing [[African-American Civil Rights Movement (1955–1968)|civil rights movement]] headed by prominent African Americans, such as [[Martin Luther King, Jr.]], fought segregation and discrimination, leading to the abolition of [[Jim Crow laws]].
[10921670] |Following [[John F. Kennedy assassination|Kennedy's assassination]] in 1963, the [[Civil Rights Act of 1964]] was passed under President [[Lyndon B. Johnson]].
[10921680] |Johnson and his successor, [[Richard Nixon]], expanded a proxy war in Southeast Asia into the unsuccessful [[Vietnam War]].
[10921690] |As a result of the [[Watergate scandal]], in 1974 Nixon became the first U.S. president to [[resignation|resign]], rather than be [[impeachment|impeached]] on charges including [[obstruction of justice]] and [[political power|abuse of power]]; he was [[United States presidential line of succession|succeeded]] by Vice President [[Gerald Ford]].
[10921700] |During the [[Jimmy Carter]] administration in the late 1970s, the U.S. economy experienced [[stagflation]].
[10921710] |The election of [[Ronald Reagan]] as president in 1980 marked a significant [[Conservatism in the United States#Nixon, Reagan, and Bush|rightward shift in American politics]], reflected in major changes in [[Reaganomics|taxation and spending priorities]].
[10921720] |In the late 1980s and 1990s, the [[History of the Soviet Union (1985–1991)|Soviet Union's power diminished]], leading to its collapse and effectively ending the Cold War.
[10921730] |===Contemporary era=== 
[10921740] |The leadership role taken by the United States and its allies in the United Nations–sanctioned [[Gulf War]], under President [[George H. W. Bush]], and later the [[Yugoslav wars]] helped to preserve its position as the world's last remaining superpower.
[10921750] |The longest economic expansion in modern U.S. history—from March 1991 to March 2001—encompassed the administrations of Presidents [[George H.W. Bush]], [[Bill Clinton]], and [[George W. Bush]].
[10921760] |In 1998, Clinton was [[Impeachment of Bill Clinton|impeached by the House]] on charges relating to a [[Paula Jones|civil lawsuit]] and a [[Lewinsky scandal|sexual scandal]], but he was acquitted by the Senate and remained in office.
[10921770] |The 1990s also saw a rise in [[Islamic Terrorism]] against Americans from [[al-Qaeda]] and other groups, including an [[1993 World Trade Center bombing|attack on the World Trade Center in 1993]], an [[Battle of Mogadishu (1993)|attack on U.S. forces in Somalia]], the 1996 [[Khobar Towers bombing]], the [[1998 United States embassy bombings]] in Tanzania and Kenya, the [[2000 millennium attack plots]], and the [[USS Cole bombing]] in Yemen in October 2000.
[10921780] |In [[Iraq]], the regime of [[Saddam Hussein]] proved a continuing problem for the UN and its neighbors, prompting a variety of [[Iraq sanctions|UN sanctions]], Anglo-American patrolling of [[Iraqi no-fly zones]], [[Bombing of Iraq (December 1998)|Operation Desert Fox]], and the [[Iraq Liberation Act]] of 1998 which called for the removal of the Hussein regime and its replacement by a democratic system.
[10921790] |The [[United States presidential election, 2000|presidential election of 2000]] was one of the closest in U.S. history and saw [[George W. Bush]] become President of the United States.
[10921800] |[[September 11, 2001 attacks|On September 11, 2001]], [[al-Qaeda]] terrorists struck the [[World Trade Center]] in New York City and [[The Pentagon]] near Washington, D.C., killing nearly three thousand people.
[10921810] |In the aftermath, President Bush urged support from the international community for what was dubbed the [[War on Terrorism]].
[10921820] |In late 2001, U.S. forces launched [[Operation Enduring Freedom]] removing the [[Taliban]] government and [[al-Qaeda]] training camps.
[10921830] |Taliban insurgents continue to fight a [[Guerrilla warfare|guerrilla war]] against a NATO-led force.
[10921840] |Controversies arose regarding the conduct of the [[War on Terror]].
[10921850] |Using language from the 1998 [[Iraq Liberation Act]] and the [[Clinton Administration]], in 2002 the Bush Administration began to [[Rationale for the Iraq War|press]] for [[regime change]] in Iraq.
[10921860] |With [[Iraq Resolution|broad bipartisan support in the U.S. Congress]], Bush formed an international [[Coalition of the Willing]] and in March 2003 ordered [[Operation Iraqi Freedom]], removing [[Saddam Hussein]] from power.
[10921870] |Although facing pressure to withdraw, the U.S.-led coalition maintains a [[Iraq War troop surge of 2007|presence in Iraq]] and continues to train and mentor a [[Iraqi security forces|new Iraqi military]] as well as lead [[Reconstruction of Iraq|economic and infrastructure development]].
[10921880] |In the upcoming [[United States presidential election, 2008|2008 presidential election]], the [[Republican Party (United States)|Republican Party]] candidate, four-term Senator [[John McCain]] of [[Arizona]] – a former U.S. [[prisoner of war]] who served in the [[Vietnam War]] – will face the [[Democratic Party (United States)|Democratic Party]] candidate, freshman Senator [[Barack Obama]] of [[Illinois]], the first African American to head a major political party's presidential ticket.
[10921890] |==Government and elections== 
[10921900] |The United States is the world's oldest surviving [[federation]].
[10921910] |It is a [[constitutional republic]], "in which [[majority rule]] is tempered by [[minority rights]] protected by [[Law of the United States|law]]."
[10921920] |It is fundamentally structured as a [[representative democracy]], though U.S. citizens residing in the territories are excluded from voting for federal officials.
[10921930] |The government is regulated by a system of [[separation of powers|checks and balances]] defined by the United States Constitution, which serves as the country's supreme legal document and as a [[social contract]] for the people of the United States.
[10921940] |In the [[Federalism#United States|American federalist system]], citizens are usually subject to [[Political divisions of the United States|three levels of government]], federal, state, and local; the [[Local government in the United States|local government's]] duties are commonly split between [[County (United States)|county]] and municipal governments.
[10921950] |In almost all cases, executive and legislative officials are elected by a [[plurality voting system|plurality vote]] of citizens by district.
[10921960] |There is no [[proportional representation]] at the federal level, and it is very rare at lower levels.
[10921970] |Federal and state judicial and [[cabinet]] officials are typically nominated by the executive branch and approved by the legislature, although some state judges and officials are elected by popular vote.
[10921980] |The federal government is composed of three branches: 
[10921990] |* [[legislature|Legislative]]: The [[bicameralism|bicameral]] [[United States Congress|Congress]], made up of the [[United States Senate|Senate]] and the [[United States House of Representatives|House of Representatives]], makes [[federal law]], [[declaration of war|declares war]], approves treaties, has the [[power of the purse]], and has the power of [[impeachment]], by which it can remove sitting members of the government.
[10922000] |* [[Executive (government)|Executive]]: The [[President of the United States|president]] is the [[commander-in-chief]] of the military, can veto [[Bill (proposed law)|legislative bills]] before they become law, and appoints the [[United States Cabinet|Cabinet]] and other officers, who administer and enforce federal laws and policies.
[10922010] |* [[Judiciary|Judicial]]: The [[Supreme Court of the United States|Supreme Court]] and lower [[United States federal courts|federal courts]], whose judges are appointed by the president with Senate approval, interpret laws and can overturn laws they deem [[constitutionality|unconstitutional]].
[10922020] |The House of Representatives has 435 members, each representing a [[congressional district]] for a two-year term.
[10922030] |House seats are [[United States congressional apportionment|apportioned]] among the fifty states by population every tenth year.
[10922040] |As of the [[United States Census, 2000|2000 census]], seven states have the minimum of one representative, while California, the most populous state, has fifty-three.
[10922050] |Each state has two senators, elected [[at-large]] to six-year terms; one third of Senate seats are up for election every second year.
[10922060] |The president serves a four-year term and may be elected to the office [[Term limits in the United States|no more than twice]].
[10922070] |The president is [[United States presidential election|not elected by direct vote]], but by an indirect [[United States Electoral College|electoral college]] system in which the determining votes are apportioned by state.
[10922080] |The Supreme Court, led by the [[Chief Justice of the United States]], has nine members, who serve for life.
[10922090] |All laws and procedures of both state and federal governments are subject to review, and any law ruled in violation of the Constitution by the judicial branch is overturned.
[10922100] |The original text of the Constitution establishes the structure and responsibilities of the federal government, the relationship between it and the individual states, and essential matters of military and economic authority.
[10922110] |[[Article One of the United States Constitution|Article One]] protects the right to the "great writ" of [[Habeas corpus in the United States|habeas corpus]], and [[Article Three of the United States Constitution|Article Three]] guarantees the [[Jury trial#The United States|right to a jury trial]] in all criminal cases.
[10922120] |[[Article Five of the United States Constitution|Amendments to the Constitution]] require the approval of three-fourths of the states. The Constitution has been amended twenty-seven times; the first ten amendments, which make up the [[United States Bill of Rights|Bill of Rights]], and the [[Fourteenth Amendment to the United States Constitution|Fourteenth Amendment]] form the central basis of individual rights in the United States.
[10922130] |===Parties and politics=== 
[10922140] |Politics in the United States have operated under a [[two-party system]] for virtually all of the country's history.
[10922150] |For elective offices at all levels, state-administered [[primary election]]s are held to choose the major party nominees for subsequent [[general election]]s.
[10922160] |Since the [[United States presidential election, 1856|general election of 1856]], the two dominant parties have been the [[Democratic Party (United States)|Democratic Party]], [[History of the United States Democratic Party|founded in 1824]] (though its [[Democratic-Republican Party|roots trace back to 1792]]), and the [[Republican Party (United States)|Republican Party]], [[History of the United States Republican Party|founded in 1854]].
[10922170] |Since the Civil War, only one [[Third party (United States)|third-party]] presidential candidate—former president [[Theodore Roosevelt]], running as a [[Progressive Party (United States, 1912)|Progressive]] in [[United States presidential election, 1912|1912]]—has won as much as 20% of the popular vote.
[10922180] |The incumbent president, Republican [[George W. Bush]], is the [[List of Presidents of the United States|43rd president in the country's history]].
[10922190] |All U.S. presidents to date have been white men.
[10922200] |If Democrat [[Barack Obama]] wins the [[United States presidential election, 2008|forthcoming presidential election]], he will become the first African-American president.
[10922210] |Following the [[United States general elections, 2006|2006 midterm elections]], the Democratic Party controls both the House and the Senate.
[10922220] |Every member of the U.S. Congress is a Democrat or a Republican except two [[Independent (politician)|independent]] members of the Senate—one a former Democratic incumbent, the other a self-described [[socialism|socialist]].
[10922230] |An [[Political party strength in U.S. states|overwhelming majority]] of state and local officials are also either Democrats or Republicans.
[10922240] |Within American [[political culture]], the Republican Party is considered "center-right" or [[Conservatism in the United States|conservative]] and the Democratic Party is considered "center-left" or [[Modern liberalism in the United States|liberal]], but members of both parties have a wide range of views.
[10922250] |In a May 2008 poll, 44% of Americans described themselves as "conservative," 27% as "moderate," and 21% as "liberal."
[10922260] |On the other hand, that same month a plurality of adults, 41.7%, identified as Democrats, 31.6% as Republicans, and 26.6% as independents.
[10922270] |The states of the [[Northeastern United States#Politics|Northeast]] and [[Western United States#Politics|West Coast]] and some of the [[Great Lakes]] states are relatively liberal-leaning&mdash;they are known in political parlance as "[[Red states and blue states|blue states]]."
[10922280] |The "[[red states]]" of the [[Politics of the Southern United States|South]] and the [[Western United States#Politics|Rocky Mountains]] lean conservative.
[10922290] |==States== 
[10922300] |The United States is a [[federation|federal union]] of fifty states.
[10922310] |The original thirteen states were the successors of the [[Thirteen Colonies|thirteen colonies]] that rebelled against [[Great Britain|British]] rule.
[10922320] |Most of the rest have been carved from territory obtained through war or purchase by the U.S. government.
[10922330] |The exceptions are [[Vermont]], [[Texas]], and [[Hawaii]]; each was an independent republic before joining the union.
[10922340] |Early in the country's history, three states were created out of the territory of existing ones: [[Kentucky]] from [[Virginia]]; [[Tennessee]] from [[North Carolina]]; and [[Maine]] from [[Massachusetts]].
[10922350] |[[West Virginia]] broke away from Virginia during the [[American Civil War]].
[10922360] |The most recent state—Hawaii—achieved statehood on [[August 21]], [[1959]].
[10922370] |The [[Supreme Court of the United States|U.S. Supreme Court]] [[Texas v. White|has ruled]] that the states do not have the right to [[secession|secede]] from the union.
[10922380] |The states compose the vast bulk of the U.S. land mass; the only other areas considered integral parts of the country are the District of Columbia, the [[Capital districts and territories|federal district]] where the capital, Washington, is located; and [[Palmyra Atoll]], an uninhabited but [[territories of the United States|incorporated territory]] in the Pacific Ocean.
[10922390] |The United States possesses five major territories with indigenous populations: [[Puerto Rico]] and the [[United States Virgin Islands]] in the Caribbean; and [[American Samoa]], [[Guam]], and the [[Northern Mariana Islands]] in the Pacific.
[10922400] |Those born in the territories (except for American Samoa) possess [[Birthright citizenship in the United States of America|U.S. citizenship]].
[10922410] |==Foreign relations and military== 
[10922420] |The United States has vast economic, political, and military influence on a global scale, which makes its foreign policy a subject of great interest around the world.
[10922430] |Almost all countries have [[List of diplomatic missions in the United States|embassies]] in Washington, D.C., and many host [[Consul (representative)|consulates]] around the country.
[10922440] |Likewise, nearly all nations host [[Diplomatic missions of the United States|American diplomatic missions]].
[10922450] |However, [[Cuba-United States relations|Cuba]], [[United States-Iran relations|Iran]], [[North Korea-United States relations|North Korea]], [[Bhutan]], [[Sudan]], and the [[Republic of China]] (Taiwan) do not have formal diplomatic relations with the United States.
[10922460] |American [[isolationism|isolationists]] have often been at odds with internationalists, as anti-imperialists have been with promoters of [[Manifest Destiny]] and [[American Empire]].
[10922470] |American [[Philippine-American War|imperialism in the Philippines]] drew sharp rebukes from [[Mark Twain]], philosopher [[William James]], and many others.
[10922480] |Later, President [[Woodrow Wilson]] played a key role in creating the [[League of Nations]], but the Senate prohibited American membership in it.
[10922490] |Isolationism became a thing of the past when the United States took a lead role in founding the United Nations, becoming a permanent member of the [[United Nations Security Council|Security Council]] and host to the [[United Nations Headquarters]].
[10922500] |The United States enjoys a [[Special Relationship (US-UK)|special relationship]] with the [[Anglo-American relations|United Kingdom]] and strong ties with [[United States-Australia relations|Australia]], [[New Zealand-United States relations|New Zealand]], [[Japan-United States relations|Japan]], [[Israel-United States relations|Israel]], and fellow NATO members.
[10922510] |It also works closely with its neighbors through the [[Organization of American States]] and [[United States free trade agreements|free trade agreements]] such as the trilateral [[North American Free Trade Agreement]] with [[Canada – United States relations|Canada]] and [[United States-Mexico relations|Mexico]].
[10922520] |In 2005, the United States spent $27.3 billion on [[official development assistance]], the most in the world; however, as a share of [[Gross National Income|gross national income]] (GNI), the U.S. contribution of 0.22% ranked twentieth of twenty-two donor states.
[10922530] |On the other hand, nongovernmental sources such as private foundations, corporations, and educational and religious institutions donated $95.5 billion.
[10922540] |The total of $122.8 billion is again the most in the world and seventh in terms of GNI percentage.
[10922550] |The president holds the title of commander-in-chief of the nation's armed forces and appoints its leaders, the [[United States Secretary of Defense|secretary of defense]] and the [[Joint Chiefs of Staff]].
[10922560] |The [[United States Department of Defense]] administers the armed forces, including the [[United States Army|Army]], the [[United States Navy|Navy]], the [[United States Marine Corps|Marine Corps]], and the [[United States Air Force|Air Force]].
[10922570] |The [[United States Coast Guard|Coast Guard]] falls under the jurisdiction of the [[United States Department of Homeland Security|Department of Homeland Security]] in peacetime and the [[United States Department of the Navy|Department of the Navy]] in times of war.
[10922580] |In 2005, the military had 1.38 million personnel on active duty, along with several hundred thousand each in the [[Reserve component of the Armed Forces of the United States|Reserves]] and the [[National Guard of the United States|National Guard]] for a total of [[List of countries by number of total troops|2.3 million troops]].
[10922590] |The Department of Defense also employs approximately 700,000 civilians, disregarding contractors.
[10922600] |Military service is voluntary, though [[Conscription in the United States|conscription]] may occur in wartime through the [[Selective Service System]].
[10922610] |The rapid deployment of American forces is facilitated by the Air Force's large fleet of transportation aircraft and aerial refueling tankers, the Navy's fleet of eleven active aircraft carriers, and [[Marine Expeditionary Unit]]s at sea in the Navy's [[United States Fleet Forces Command|Atlantic and]] [[Commander United States Pacific Fleet|Pacific fleets]].
[10922620] |Outside of the American homeland, the U.S. military is [[Deployments of the United States Military|deployed to 770 bases and facilities]], on every continent [[Military activity in the Antarctic|except Antarctica]].
[10922630] |Because of the extent of its global military presence, scholars describe the United States as maintaining an "empire of bases."
[10922640] |Total U.S. military spending in 2006, over $528 billion, was 46% of the entire military spending in the world and greater than the next fourteen largest national military expenditures combined.
[10922650] |(In [[purchasing power parity]] terms, it was larger than the next six such expenditures combined.)
[10922660] |The per capita spending of $1,756 was approximately ten times the world average.
[10922670] |At 4.06% of GDP, U.S. military spending is ranked 27th out of 172 nations.
[10922680] |The proposed base [[military budget of the United States|Department of Defense budget]] for 2009, $515.4 billion, is a 7% increase over 2008 and a nearly 74% increase over 2001.
[10922690] |The estimated total cost of the [[Iraq War]] to the United States through 2016 is $2.267 trillion.
[10922700] |As of [[June 6]], [[2008]], the United States had suffered 4,092 military fatalities during the war and nearly 30,000 wounded.
[10922710] |==Economy== 
[10922720] |The United States has a [[capitalism|capitalist]] [[mixed economy]], which is fueled by abundant [[natural resource]]s, a well-developed infrastructure, and high productivity.
[10922730] |According to the [[International Monetary Fund]], the United States GDP of more than $13 trillion constitutes over 25.5% of the [[gross world product]] at market exchange rates and over 19% of the gross world product at [[purchasing power parity]] (PPP).
[10922740] |The largest national GDP in the world, it was slightly less than the combined GDP of the [[European Union]] at PPP in 2006.
[10922750] |The country ranks eighth in the world in [[List of countries by GDP (nominal) per capita|nominal GDP per capita]] and fourth in [[List of countries by GDP (PPP) per capita|GDP per capita at PPP]].
[10922760] |The United States is the largest importer of goods and third largest exporter, though [[List of countries by exports per capita|exports per capita]] are relatively low.
[10922770] |Canada, China, Mexico, Japan, and Germany are its top trading partners.
[10922780] |The leading export commodity is electrical machinery, while vehicles constitute the leading import.
[10922790] |The private sector constitutes the bulk of the economy, with government activity accounting for 12.4% of GDP.
[10922800] |The economy is [[post-industrial society|postindustrial]], with the [[Tertiary sector of economic activity|service sector]] contributing 67.8% of GDP.
[10922810] |The leading business field by gross business receipts is wholesale and retail trade; by net income it is finance and insurance.
[10922820] |The United States remains an industrial power, with chemical products the leading manufacturing field.
[10922830] |The United States is the third largest producer of oil in the world.
[10922840] |It is the world's number one producer of electrical and nuclear energy, as well as liquid natural gas, sulfur, phosphates, and salt.
[10922850] |While [[Agriculture in the United States|agriculture]] accounts for just under 1% of GDP, the United States is the world's top producer of corn and soybeans.
[10922860] |The country's leading cash crop is [[Legal history of marijuana in the United States|marijuana]], despite federal laws making its [[Legality of cannabis#United States|cultivation and sale illegal]].
[10922870] |The [[New York Stock Exchange]] is the world's largest by dollar volume.
[10922880] |[[Coca-Cola]] and [[McDonald's]] are the two most recognized brands in the world.
[10922890] |In 2005, 155 million persons were employed with earnings, of whom 80% worked in full-time jobs.
[10922900] |The majority, 79%, were employed in the service sector.
[10922910] |With approximately 15.5 million people, health care and social assistance is the leading field of employment.
[10922920] |About 12% of American workers are [[Labor unions in the United States|unionized]], compared to 30% in Western Europe.
[10922930] |The U.S. ranks number one in the ease of hiring and firing workers, according to the World Bank.
[10922940] |Between 1973 and 2003, a year's work for the average American grew by 199 hours.
[10922950] |Partly as a result, the United States maintains the highest labor productivity in the world.
[10922960] |However, it no longer leads the world in productivity per hour as it did from the 1950s through the early 1990s; workers in [[Norway]], France, [[Belgium]], and [[Luxembourg]] are now more productive per hour.
[10922970] |The United States ranks third in the [[World Bank Group|World Bank's]] [[Ease of Doing Business Index]].
[10922980] |Compared to Europe, U.S. property and corporate [[Taxation in the United States|income taxes]] are generally higher, while labor and, particularly, consumption taxes are lower.
[10922990] |===Income and human development=== 
[10923000] |According to the [[United States Census Bureau|Census Bureau]], the pretax [[median household income]] in 2006 was $48,201.
[10923010] |The two-year average ranged from $66,752 in [[New Jersey]] to $34,343 in [[Mississippi]].
[10923020] |Using [[purchasing power parity]] exchange rates, the overall median is similar to the most affluent cluster of [[Household income in the United States#International comparison|developed nations]].
[10923030] |After having declined sharply throughout the mid 20<sup>th</sup> century, [[Poverty in the United States|poverty rates]] have plateaued since the early 1970s, with roughly 12.3% or 13.3% of Americans below the federally designated [[poverty threshold|poverty line]] in any given year.
[10923040] |Owing to lackluster expansion since the late 1970s, the U.S. welfare state is now among the most austere in the developed world, reducing [[relative poverty]] by roughly 30% and [[absolute poverty]] by roughly 40%; considerably less than the mean for rich nations.
[10923050] |While the American welfare state preforms well in reducing poverty among the elderly, from an estimated 50% to 10%, it lacks extensive programs geared towards the well-being of the young.
[10923060] |A 2007 [[United Nations Children's Fund|UNICEF]] study of children's well-being in twenty-one industrialized nations, covering a broad range of factors, ranked the U.S. next to last.
[10923070] |Between 1947 and 1979, [[Real income|real median income]] rose by over 80% for all classes, more so for the poor than the rich.
[10923080] |While [[median household income]] has increased for all classes since 1980, largely owing to more dual earner households, the closing of the gender gap and longer work hours, growth has been slower and strongly titled towards the very top (see graph).
[10923090] |As a result the share of income of the top 1% has doubbled since 1979, leaving the U.S. with the highest level of income inequality among developed nations.
[10923100] |While some economists do not see inequality as a considerable problem, most see it as a problem requiring government action.
[10923110] |Wealth is highly concentrated: The richest 10% of the adult population possesses 69.8% of the country's household wealth, the second-highest share of any democratic developed nation.
[10923120] |The top 1% possesses 33.4% of net wealth.
[10923130] |===Science and technology=== 
[10923140] |The United States has been a leader in scientific research and technological innovation since the late nineteenth century.
[10923150] |In 1876, [[Alexander Graham Bell]] was awarded the first U.S. [[Invention of the telephone|patent for the telephone]].
[10923160] |The [[Edison, New Jersey|laboratory]] of [[Thomas Edison]] developed the [[Phonograph#The first phonograph|phonograph]], the first [[Incandescent light bulb#History of the light bulb|long-lasting light bulb]], and the first viable [[Kinetoscope|movie camera]].
[10923170] |In the early twentieth century, the automobile companies of [[Ransom E. Olds]] and [[Henry Ford]] pioneered [[assembly line]] manufacturing.
[10923180] |The [[Wright brothers]], in 1903, made what is recognized as the "[[first flying machine|first sustained and controlled heavier-than-air powered flight]]."
[10923190] |The rise of [[Nazism]] in the 1930s led many important European scientists, including [[Albert Einstein]] and [[Enrico Fermi]], to immigrate to the United States.
[10923200] |During World War II, the U.S.-based [[Manhattan Project]] developed nuclear weapons, ushering in the [[Atomic Age]].
[10923210] |The [[Space Race]] produced rapid advances in rocketry, [[materials science]], and computers.
[10923220] |The United States largely developed the [[ARPANET]] and its successor, the [[Internet]].
[10923230] |Today, the bulk of [[research and development]] funding, 64%, comes from the private sector.
[10923240] |The United States leads the world in scientific research papers and [[impact factor]].
[10923250] |Americans enjoy high levels of access to technological consumer goods, and almost half of U.S. households have [[Broadband Internet access|broadband Internet service]].
[10923260] |The country is the primary developer and grower of [[genetically modified food]]; more than half of the world's land planted with biotech crops is in the United States.
[10923270] |===Transportation=== 
[10923280] |As of 2003, there were 759 automobiles per 1,000 Americans, compared to 472 per 1,000 inhabitants of the European Union the following year.
[10923290] |Approximately 39% of [[Passenger vehicles in the United States|personal vehicles]] are vans, [[Sport utility vehicle|SUVs]], or light trucks.
[10923300] |The average American adult (accounting for all drivers and nondrivers) spends 55 minutes behind the wheel every day, driving .
[10923310] |The U.S. intercity passenger rail system is relatively weak.
[10923320] |Only 9% of total U.S. work trips employ [[public transport|mass transit]], compared to 38.8% in Europe.
[10923330] |Bicycle usage is minimal, well below European levels.
[10923340] |The civil airline industry is entirely privatized, while most major airports are publicly owned.
[10923350] |The five largest airlines in the world by passengers carried are all American; [[American Airlines]] is number one.
[10923360] |Of the world's thirty busiest passenger airports, sixteen are in the United States, including the busiest, [[Hartsfield-Jackson Atlanta International Airport]] (ATL).
[10923370] |===Energy=== 
[10923380] |The United States energy market is 29,000 [[terawatt]] hours per year.
[10923390] |[[List of countries by energy consumption per capita|Energy consumption per capita]] is 7.8 tons of oil equivalent per year, compared to Germany's 4.2 tons and Canada's 8.3 tons.
[10923400] |In 2005, 40% of the nation's energy came from petroleum, 23% from coal, and 22% from natural gas.
[10923410] |The remainder was supplied by nuclear power and various [[renewable energy]] sources.
[10923420] |The United States is the world's largest consumer of petroleum.
[10923430] |For decades, nuclear power has played a limited role relative to many other developed countries.
[10923440] |Recently, applications for new nuclear plants have been filed.
[10923450] |==Demographics== 
[10923460] |As of 2008, the United States population was estimated by the U.S. Census Bureau to be 304,516,000.
[10923470] |The U.S. population included an estimated 12 million [[Illegal immigration to the United States|unauthorized migrants]], of whom an estimated 1 million were uncounted by the Census Bureau.
[10923480] |The overall [[Population growth|growth rate]] is 0.89%, compared to 0.16% in the European Union.
[10923490] |The [[birth rate]] of 14.16 per 1,000 is 30% below the world average, while higher than any European country except for [[Albania]] and [[Republic of Ireland|Ireland]].
[10923500] |In 2006, 1.27 million immigrants were granted [[United States Permanent Resident Card|legal residence]].
[10923510] |Mexico has been the leading source of new U.S. residents for over two decades; since 1998, China, India, and the Philippines have been in the top four sending countries every year.
[10923520] |The United States is the only industrialized nation in which large population increases are projected.
[10923530] |The United States has a very [[multiethnic society|diverse population]]—thirty-one [[maps of American ancestries|ancestry groups]] have more than a million members.
[10923540] |[[White American|Whites]] are the largest [[racial group]], with [[German American]]s, [[Irish American]]s, and [[English American]]s constituting three of the country's four largest ancestry groups.
[10923550] |[[African American]]s constitute the nation's largest [[Minority group|racial minority]] and third largest ancestry group.
[10923560] |[[Asian American]]s are the country's second largest racial minority; the two largest Asian American ancestry groups are [[Chinese American|Chinese]] and [[Filipino American|Filipino]].
[10923570] |In 2006, the U.S. population included an estimated 4.5 million people with some [[Native Americans in the United States|American Indian]] or [[Alaska Native|Alaskan native]] ancestry (2.9 million exclusively of such ancestry) and over 1 million with some [[Native Hawaiians|native Hawaiian]] or [[Pacific Islander|Pacific island]] ancestry (0.5 million exclusively).
[10923580] |The population growth of [[Hispanic and Latino Americans]] has been a major [[Demographic transition|demographic trend]].
[10923590] |Approximately 44 million Americans are of Hispanic descent, with about 64% possessing [[Mexican]] ancestry.
[10923600] |Between 2000 and 2006, the country's Hispanic population increased 25.5% while the non-Hispanic population rose just 3.5%.
[10923610] |Much of this growth is from immigration; as of 2004, 12% of the U.S. population was foreign-born, over half that number from [[Latin America]].
[10923620] |Fertility is also a factor; the average Hispanic woman gives birth to three children in her lifetime.
[10923630] |The comparable fertility rate is 2.2 for non-Hispanic black women and 1.8 for non-Hispanic white women (below the [[Total fertility rate#Replacement rates|replacement rate]] of 2.1).
[10923640] |Hispanics and Latinos accounted for nearly half of the national population growth of 2.9 million between July 2005 and July 2006.
[10923650] |About 83% of the population lives in one of the country's 363 [[Table of United States Metropolitan Statistical Areas|metropolitan areas]].
[10923660] |In 2006, 254 [[incorporated place]]s in the United States had populations over 100,000, nine cities had more than 1 million residents, and four [[global city|global cities]] had over 2 million ([[New York City]], [[Los Angeles, California|Los Angeles]], [[Chicago]], and [[Houston, Texas|Houston]]).
[10923670] |The United States has fifty [[Table of United States Metropolitan Statistical Areas|metropolitan areas]] with populations greater than 1 million.
[10923680] |Of the fifty fastest-growing metro areas, twenty-three are in the West and twenty-five in the South.
[10923690] |Among the country's twenty most populous metro areas, those of [[Dallas, Texas|Dallas]] (the fourth largest), Houston (sixth), and [[Atlanta, Georgia|Atlanta]] (ninth) saw the largest numerical gains between 2000 and 2006, while that of [[Phoenix, Arizona|Phoenix]] (thirteenth) grew the largest in percentage terms.
[10923700] |===Language=== 
[10923710] |[[American English|English]] is the de facto [[national language]].
[10923720] |Although there is no [[official language]] at the federal level, some laws—such as [[United_States_nationality_law#Naturalization|U.S. naturalization requirements]]—standardize English.
[10923730] |In 2003, about 215 million, or 82% of the population aged five years and older, spoke only English at home.
[10923740] |[[Spanish language|Spanish]], spoken by over 10% of the population at home, is the second most common language and the most widely taught [[foreign language]].
[10923750] |Some Americans advocate making English the country's official language, as it is in at least twenty-eight states.
[10923760] |Both [[Hawaiian language|Hawaiian]] and English are official languages in Hawaii by state law.
[10923770] |While neither has an official language, [[New Mexico]] has laws providing for the use of both English and Spanish, as [[Louisiana]] does for English and [[French language|French]].
[10923780] |Other states, such as [[California]], mandate the publication of Spanish versions of certain government documents including court forms.
[10923790] |Several insular territories grant official recognition to their native languages, along with English: [[Samoan language|Samoan]] and [[Chamorro language|Chamorro]] are recognized by Samoa and Guam, respectively; [[Carolinian language|Carolinian]] and Chamorro are recognized by the Northern Mariana Islands; Spanish is an official language of Puerto Rico.
[10923800] |===Religion=== 
[10923810] |The United States government does not audit Americans' religious beliefs.
[10923820] |In a private survey conducted in 2001, 76.5% of American adults identified themselves as [[Christianity in the United States|Christian]], down from 86.4% in 1990.
[10923830] |[[Protestantism|Protestant]] denominations accounted for 52% of adult Americans, while [[Roman Catholicism in the United States|Roman Catholics]], at 24.5%, were the largest individual denomination.
[10923840] |A different study describes white [[evangelicalism|evangelicals]], 26.3% of the population, as the country's largest religious cohort; evangelicals of all races are estimated at 30–35%.
[10923850] |The total reporting non-Christian religions in 2001 was 3.7%, up from 3.3% in 1990.
[10923860] |The leading non-Christian faiths were [[American Jews|Judaism]] (1.4%), [[Islam in the United States|Islam]] (0.5%), [[Buddhism in the United States|Buddhism]] (0.5%), [[Hinduism in the United States|Hinduism]] (0.4%), and [[Unitarian Universalism]] (0.3%).
[10923870] |Between 1990 and 2001, the number of Muslims and Buddhists more than doubled.
[10923880] |From 8.2% in 1990, 14.1% in 2001 described themselves as [[agnosticism|agnostic]], [[atheism|atheist]], or simply having [[irreligion|no religion]], still significantly less than in other postindustrial countries such as Britain (2005:44%) and [[Sweden]] (2001:69%, 2005:85%).
[10923890] |===Education=== 
[10923900] |American [[public education]] is operated by state and local governments, regulated by the [[United States Department of Education]] through restrictions on federal grants.
[10923910] |Children are required in most states to attend school from the age of six or seven (generally, [[kindergarten]] or [[first grade]]) until they turn eighteen (generally bringing them through [[Twelfth grade|12th grade]], the end of [[high school]]); some states allow students to leave school at sixteen or seventeen.
[10923920] |About 12% of children are enrolled in [[parochial school|parochial]] or [[nonsectarian]] [[private school]]s.
[10923930] |Just over 2% of children are [[homeschooling|homeschooled]].
[10923940] |The United States has many competitive private and public [[List of American institutions of higher education|institutions of higher education]], as well as local [[community college]]s of varying quality with open admission policies.
[10923950] |Of Americans twenty-five and older, 84.6% graduated from high school, 52.6% attended some college, 27.2% earned a [[bachelor's degree]], and 9.6% earned graduate degrees.
[10923960] |The basic [[literacy#United States|literacy rate]] is approximately 99%.
[10923970] |The United Nations assigns the United States an Education Index of 0.97, tying it for twelfth-best in the world.
[10923980] |===Health=== 
[10923990] |The American [[life expectancy]] of 77.8 years at birth is a year shorter than the overall figure in Western Europe, and three to four years lower than that of [[Norway]], [[Switzerland]], and [[Canada]].
[10924000] |Over the past two decades, the country's rank in life expectancy has dropped from 11th to 42nd place in the world.
[10924010] |The [[infant mortality|infant mortality rate]] of 6.37 per thousand likewise places the United States 42nd out of 221 countries, behind all of Western Europe.
[10924020] |U.S. cancer survival rates are the highest in the world.
[10924030] |Approximately one-third of the adult population is [[obesity|obese]] and an additional third is overweight; the obesity rate, the highest in the industrialized world, has more than doubled in the last quarter-century.
[10924040] |Obesity-related [[diabetes mellitus type 2|type 2 diabetes]] is considered [[epidemic]] by healthcare professionals.
[10924050] |The U.S. adolescent pregnancy rate, 79.8 per 1,000 women, is nearly four times that of France and five times that of Germany.
[10924060] |[[Abortion in the United States]], legal on demand, is a source of great political controversy.
[10924070] |Many states ban public funding of the procedure and have laws to restrict late-term abortions, require parental notification for minors, and mandate a waiting period prior to treatment.
[10924080] |While the incidence of abortion is in decline, the U.S. abortion ratio of 241 per 1,000 live births and abortion rate of 15 per 1,000 women aged 15–44 remain higher than those of most Western nations.
[10924090] |The United States healthcare system far outspends any other nation's, measured in both per capita spending and percentage of GDP.
[10924100] |Unlike most developed countries, the U.S. healthcare system is not [[Universal health care|universal]], and relies on a higher proportion of private funding.
[10924110] |In 2004, private insurance paid for 36% of personal health expenditure, private out-of-pocket payments covered 15%, and federal, state, and local governments paid for 44%.
[10924120] |The [[World Health Organization]] ranked the U.S. healthcare system in 2000 as first in responsiveness, but 37th in overall performance.
[10924130] |The United States is a leader in medical innovation.
[10924140] |In 2004, the U.S. nonindustrial sector spent three times as much as Europe per capita on biomedical research.
[10924150] |Medical bills are the most common reason for personal [[bankruptcy]] in the United States.
[10924160] |In 2005, 46.6 million Americans, or 15.9% of the population, were uninsured, 5.4 million more than in 2001.
[10924170] |The primary cause of the decline in coverage is the drop in the number of Americans with employer-sponsored health insurance, which fell from 62.6% in 2001 to 59.5% in 2005.
[10924180] |Approximately one third of the uninsured lived in households with annual incomes greater than $50,000, with half of those having an income over $75,000.
[10924190] |Another third were eligible but not registered for public health insurance.
[10924200] |In 2006, Massachusetts became the first state to mandate health insurance; California is considering similar legislation.
[10924210] |===Crime and punishment=== 
[10924220] |Law enforcement in the United States is primarily the responsibility of local police and [[sheriff]]'s departments, with [[state police]] providing broader services.
[10924230] |Federal agencies such as the [[Federal Bureau of Investigation]] (FBI) and the [[United States Marshals Service|U.S. Marshals Service]] have specialized duties.
[10924240] |At the federal level and in almost every state, jurisprudence operates on a [[common law]] system.
[10924250] |State courts conduct most criminal trials; [[United States federal courts|federal courts]] handle certain designated crimes as well as [[appeal]]s from state systems.
[10924260] |Among [[developed country|developed nations]], the United States has above-average levels of violent crime and particularly high levels of [[Gun violence in the United States|gun violence]] and homicide.
[10924270] |In 2006, there were 5.7 murders per 100,000 persons, three times the rate in neighboring Canada.
[10924280] |The U.S. homicide rate, which decreased by 42% between 1991 and 1999, has been roughly steady since.
[10924290] |Some scholars have associated the high rate of homicide with the country's high rates of [[Gun politics in the United States|gun ownership]], in turn associated with [[Gun law in the United States|U.S. gun laws]] which are very permissive compared to those of other developed countries.
[10924300] |The United States has the highest documented [[incarceration]] rate and total prison population in the world and by far the highest figures among democratic, developed nations.
[10924310] |At the start of 2008, more than 2.3 million people were held in American prisons or jails, more than one in every 100 adults.
[10924320] |The current rate is almost seven times the 1980 figure.
[10924330] |African American males are jailed at over six times the rate of white males and three times the rate of Hispanic males.
[10924340] |In the latest comparable data, from 2006, the U.S. incarceration rate was more than three times the figure in Poland, the [[Organisation for Economic Co-operation and Development]] (OECD) country with the next highest rate.
[10924350] |The country's extraordinary rate of incarceration is largely caused by changes in [[Federal Sentencing Guidelines|sentencing]] and [[Drug policy of the United States|drug]] policies.
[10924360] |Though it has been abolished in most Western nations, [[capital punishment]] is sanctioned in the United States for certain federal and military crimes, and in thirty-seven states.
[10924370] |Since 1976, when the U.S. Supreme Court [[Gregg v. Georgia|reinstated the death penalty]] after a four-year moratorium, there have been over 1,000 executions in the United States.
[10924380] |In 2006, the country had the sixth highest number of executions in the world, following China, Iran, Pakistan, Iraq, and Sudan.
[10924390] |In December 2007, New Jersey became the first state to abolish the death penalty since the 1976 Supreme Court decision.
[10924400] |==Culture== 
[10924410] |The United States is a [[multicultural]] nation, home to a wide variety of ethnic groups, traditions, and values.
[10924420] |There is no "American" ethnicity; aside from the now relatively small [[Native Americans in the United States|Native American]] population, nearly all Americans or their ancestors immigrated within the past five centuries.
[10924430] |The culture held in common by the majority of Americans is referred to as mainstream American culture, a [[Western culture]] largely derived from the traditions of [[Western Europe]]an migrants, beginning with the early [[culture of England|English]] and [[Dutch American|Dutch]] settlers.
[10924440] |[[German_American#German_American_influence|German]], [[Irish American|Irish]], and [[Scottish American|Scottish]] cultures have also been very influential.
[10924450] |Certain cultural attributes of [[Mandé peoples|Mandé]] and [[Wolof people|Wolof]] slaves from West Africa were adopted by the American mainstream; based more on the traditions of Central African [[Bantu peoples|Bantu]] slaves, a distinct [[African American culture]] developed that would eventually have a major effect on the mainstream as well.
[10924460] |Westward expansion integrated the [[Louisiana Creole people|Creoles]] and [[Cajun]]s of Louisiana and the [[Hispanos]] of the Southwest and brought close contact with the [[culture of Mexico]].
[10924470] |Large-scale immigration in the late nineteenth and early twentieth centuries from [[Southern Europe|Southern]] and [[Eastern Europe]] introduced many new cultural elements.
[10924480] |More recent immigration from [[Asian American|Asia]] and especially [[Latin American culture|Latin America]] has had broad impact.
[10924490] |The resulting mix of cultures may be characterized as a homogeneous [[melting pot]] or as a pluralistic [[Salad bowl (cultural idea)|salad bowl]] in which immigrants and their descendants retain distinctive cultural characteristics.
[10924500] |While American culture maintains that the United States is a [[classless society]], economists and sociologists have identified cultural differences between the country's social classes, affecting [[socialization]], language, and values.
[10924510] |The American [[American middle class|middle]] and [[American middle class#The professional/managerial middle class|professional class]] has been the source of many contemporary social trends such as [[feminism]], [[environmentalism]], and [[multiculturalism]].
[10924520] |Americans' self-images, social viewpoints, and cultural expectations are associated with their occupations to an unusually close degree.
[10924530] |While Americans tend greatly to value socioeconomic achievement, being [[Average Joe|ordinary or average]] is generally seen as a positive attribute.
[10924540] |Though the [[American Dream]], or the perception that Americans enjoy high [[social mobility]], played a key role in attracting immigrants, particularly in the late 1800s, some analysts find that the United States has less social mobility than Western Europe and Canada.
[10924550] |Women, many of whom were formerly more limited to domestic roles, now mostly work outside the home and receive a majority of [[Educational attainment in the United States|bachelor's degrees]].
[10924560] |The changing role of women has also changed [[Society of the United States#Household arrangements|the American family]].
[10924570] |In 2005, no household arrangement defined more than 30% of households; married childless couples were most common, at 28%.
[10924580] |The extension of marital rights to homosexual persons is an issue of debate; several more liberal states permit [[Civil union in the United States|civil union]]s in lieu of marriage.
[10924590] |In 2003, the [[Massachusetts Supreme Judicial Court]] [[Goodridge v. Department of Public Health|ruled]] that state's [[Same-sex marriage in Massachusetts|ban on same-sex marriage]] unconstitutional; the [[Supreme Court of California]] [[In re Marriage Cases|ruled]] [[Same-sex marriage in California|similarly]] in 2008.
[10924600] |Forty-three states still legally restrict marriage to the traditional man-and-woman model.
[10924610] |===Popular media=== 
[10924620] |In 1878, [[Eadweard Muybridge]] demonstrated the power of photography to capture motion.
[10924630] |In 1894, the world's first commercial motion picture exhibition was given in New York City, using [[Thomas Edison]]'s [[Kinetoscope]].
[10924640] |The next year saw the first commercial screening of a projected film, also in New York, and the United States was in the forefront of [[sound film]]'s development in the following decades.
[10924650] |Since the early twentieth century, the U.S. film industry has largely been based in and around [[Hollywood, Los Angeles, California|Hollywood, California]].
[10924660] |Director [[D. W. Griffith]] was central to the development of [[film grammar]] and [[Orson Welles]]'s ''[[Citizen Kane]]'' (1941) is frequently cited in critics' polls as the greatest film of all time.
[10924670] |American screen actors like [[John Wayne]] and [[Marilyn Monroe]] have become iconic figures, while producer/entrepreneur [[Walt Disney]] was a leader in both [[Animation|animated film]] and movie [[merchandising]].
[10924680] |The [[major film studio]]s of Hollywood are the primary source of the most commercially successful movies in the world, such as ''[[Star Wars Episode IV: A New Hope|Star Wars]]'' (1977) and ''[[Titanic (1997 film)|Titanic]]'' (1997), and the products of Hollywood today dominate the global film industry.
[10924690] |Americans are the heaviest television viewers in the world, and the average time spent in front of the screen continues to rise, hitting five hours a day in 2006.
[10924700] |The four major broadcast networks are all commercial entities.
[10924710] |Americans listen to radio programming, also largely commercialized, on average just over two-and-a-half hours a day.
[10924720] |Aside from [[web portal]]s and [[web search engine]]s, the most popular websites are [[eBay]], [[MySpace]], [[Amazon.com]], [[The New York Times]], and [[Apple Inc.|Apple]].
[10924730] |Twelve million Americans keep a blog.
[10924740] |The rhythmic and lyrical styles of [[African American music]] have deeply influenced [[Music of the United States|American music]] at large, distinguishing it from European traditions.
[10924750] |Elements from [[Folk music|folk]] idioms such as the [[blues]] and what is now known as [[old-time music]] were adopted and transformed into [[popular music|popular genres]] with global audiences.
[10924760] |[[Jazz]] was developed by innovators such as [[Louis Armstrong]] and [[Duke Ellington]] early in the twentieth century.
[10924770] |[[Country music]], [[rhythm and blues]], and [[rock and roll]] emerged between the 1920s and 1950s.
[10924780] |In the 1960s, [[Bob Dylan]] emerged from the [[American folk music revival|folk revival]] to become one of America's greatest songwriters and [[James Brown]] led the development of [[funk]].
[10924790] |More recent American creations include [[hip hop music|hip hop]] and [[house music]].
[10924800] |American pop stars such as [[Elvis Presley]], [[Michael Jackson]], and [[Madonna (entertainer)|Madonna]] have become global celebrities.
[10924810] |===Literature, philosophy, and the arts=== 
[10924820] |In the eighteenth and early nineteenth centuries, American art and literature took most of its cues from Europe.
[10924830] |Writers such as [[Nathaniel Hawthorne]], [[Edgar Allan Poe]], and [[Henry David Thoreau]] established a distinctive American literary voice by the middle of the nineteenth century.
[10924840] |[[Mark Twain]] and poet [[Walt Whitman]] were major figures in the century's second half; [[Emily Dickinson]], virtually unknown during her lifetime, is recognized as another essential American poet.
[10924850] |Eleven U.S. citizens have won the [[Nobel Prize in Literature]], most recently [[Toni Morrison]] in 1993.
[10924860] |[[Ernest Hemingway]], the 1954 Nobel laureate, is often named as one of the most influential writers of the twentieth century.
[10924870] |A work seen as capturing fundamental aspects of the national experience and character—such as [[Herman Melville]]'s ''[[Moby-Dick]]'' (1851), Twain's ''[[Adventures of Huckleberry Finn|The Adventures of Huckleberry Finn]]'' (1885), and [[F. Scott Fitzgerald]]'s ''[[The Great Gatsby]]'' (1925)—may be dubbed the "[[Great American Novel]]."
[10924880] |Popular literary genres such as the [[Western fiction|Western]] and [[Hardboiled|hardboiled crime fiction]] developed in the United States. [[postmodern literature|Postmodernism]] is the most recent major literary movement in the world, and though on the [[literary criticism|theory]] side postmodernism began with French writers like [[Jacques Derrida]] and [[Alain Robbe-Grillet]], and was transitioned into largely by Irish writer [[Samuel Beckett]], it has since been dominated by American writers such as [[Thomas Pynchon]], [[Don DeLillo]], [[William S. Burroughs]], [[Jack Kerouac]], [[John Barth]], [[E.L. Doctorow]], [[Kurt Vonnegut]] and many others.
[10924890] |The [[transcendentalism|transcendentalists]], led by [[Ralph Waldo Emerson]] and Thoreau, established the first major American [[philosophical movement]].
[10924900] |After the Civil War, [[Charles Peirce]] and then [[William James]] and [[John Dewey]] were leaders in the development of [[pragmatism]].
[10924910] |In the twentieth century, the work of [[Willard Van Orman Quine|W. V. Quine]] and [[Richard Rorty]] helped bring [[analytic philosophy]] to the fore in U.S. academic circles.
[10924920] |In the visual arts, the [[Hudson River School]] was an important mid-nineteenth-century movement in the tradition of European [[Naturalism (arts)|naturalism]].
[10924930] |The 1913 [[Armory Show]] in New York City, an exhibition of European [[Modern art|modernist art]], shocked the public and transformed the U.S. art scene.
[10924940] |[[Georgia O'Keeffe]], [[Marsden Hartley]], and others experimented with new styles, displaying a highly individualistic sensibility.
[10924950] |Major artistic movements such as the [[abstract expressionism]] of [[Jackson Pollock]] and [[Willem de Kooning]] and the [[pop art]] of [[Andy Warhol]] and [[Roy Lichtenstein]] have developed largely in the United States.
[10924960] |The tide of modernism and then [[postmodernism]] has also brought American architects such as [[Frank Lloyd Wright]], [[Philip Johnson]], and [[Frank Gehry]] to the top of their field.
[10924970] |One of the first notable promoters of the nascent American theater was impresario [[P. T. Barnum]], who began operating a lower [[Manhattan]] entertainment complex in 1841.
[10924980] |The team of [[Edward Harrigan|Harrigan and Hart]] produced a series of popular [[musical theatre|musical]] comedies in New York starting in the late 1870s.
[10924990] |In the twentieth century, the modern musical form emerged on [[Broadway theatre|Broadway]]; the songs of musical theater composers such as [[Irving Berlin]], [[Cole Porter]], and [[Stephen Sondheim]] have become [[Traditional pop music|pop standards]].
[10925000] |Playwright [[Eugene O'Neill]] won the Nobel literature prize in 1936; other acclaimed U.S. dramatists include multiple [[Pulitzer Prize for Drama|Pulitzer Prize]] winners [[Tennessee Williams]], [[Edward Albee]], and [[August Wilson]].
[10925010] |Though largely overlooked at the time, [[Charles Ives]]'s work of the 1910s established him as the first major U.S. composer in the classical tradition; other experimentalists such as [[Henry Cowell]] and [[John Cage]] created an identifiably American approach to classical composition.
[10925020] |[[Aaron Copland]] and [[George Gershwin]] developed a unique American synthesis of popular and classical music.
[10925030] |[[Choreography|Choreographers]] [[Isadora Duncan]] and [[Martha Graham]] were central figures in the creation of [[modern dance]]; [[George Balanchine]] and [[Jerome Robbins]] were leaders in twentieth-century ballet.
[10925040] |The United States has long been at the fore in the relatively modern artistic medium of [[photography]], with major practitioners such as [[Alfred Stieglitz]], [[Edward Steichen]], [[Ansel Adams]], and many others.
[10925050] |The newspaper [[comic strip]] and the [[American comic book|comic book]] are both U.S. innovations.
[10925060] |[[Superman]], the quintessential comic book [[superhero]], has become an American icon.
[10925070] |===Food=== 
[10925080] |Mainstream American culinary arts are similar to those in other Western countries.
[10925090] |[[Wheat]] is the primary [[cereal]] grain.
[10925100] |Traditional American cuisine uses ingredients such as [[Turkey (bird)|turkey]], [[white-tailed deer]] [[venison]], [[potato]]es, [[sweet potato]]es, [[maize|corn]], [[squash (plant)|squash]], and [[maple syrup]], indigenous foods employed by Native Americans and early European settlers.
[10925110] |Slow-cooked pork and beef [[barbecue]], [[crab cake]]s, [[potato chip]]s, and [[chocolate chip cookie]]s are distinctively American styles.
[10925120] |[[Soul food]], developed by African slaves, is popular around the South and among many African Americans elsewhere.
[10925130] |[[Syncretism|Syncretic]] cuisines such as [[Louisiana Creole cuisine|Louisiana creole]], [[Cajun cuisine|Cajun]], and [[Tex-Mex cuisine|Tex-Mex]] are regionally important.
[10925140] |Characteristic dishes such as [[apple pie]], [[fried chicken]], [[pizza]], [[hamburger]]s, and [[hot dog]]s derive from the recipes of various immigrants.
[10925150] |[[French fried potatoes|French fries]], Mexican dishes such as [[burrito]]s and [[taco]]s, and [[pasta]] dishes freely adapted from Italian sources are widely consumed.
[10925160] |Americans generally prefer coffee to tea.
[10925170] |Marketing by U.S. industries is largely responsible for making [[orange juice]] and [[milk]] ubiquitous breakfast beverages.
[10925180] |During the 1980s and 1990s, Americans' caloric intake rose 24%; frequent dining at [[fast food]] outlets is associated with what health officials call the American "obesity epidemic."
[10925190] |Highly sweetened [[soft drink]]s are widely popular; sugared beverages account for 9% of the average American's caloric intake.
[10925200] |===Sports=== 
[10925210] |Since the late nineteenth century, [[baseball]] has been regarded as the [[national sport]]; [[American football|football]], [[basketball]], and [[ice hockey]] are the country's three other leading professional team sports.
[10925220] |[[College football]] and [[College basketball|basketball]] also attract large audiences.
[10925230] |Football is now by several measures the most popular [[spectator sport]] in the United States.
[10925240] |[[Boxing]] and [[horse racing]] were once the most watched individual sports, but they have been eclipsed by [[golf]] and [[auto racing]], particularly [[NASCAR]].
[10925250] |[[Association football|Soccer]], though not a leading professional sport in the country, is played widely at the youth and amateur levels.
[10925260] |[[Tennis]] and many outdoor sports are also popular.
[10925270] |While most major U.S. sports have evolved out of European practices, basketball, [[volleyball]], [[skateboarding]], and [[snowboarding]] are American inventions.
[10925280] |[[Lacrosse]] and [[surfing]] arose from Native American and Native Hawaiian activities that predate Western contact.
[10925290] |Eight [[Olympic Games]] have [[United States at the Olympics|taken place in the United States]].
[10925300] |The United States has won 2,191 medals at the [[Summer Olympic Games]], more than any other country, and 216 in the [[Winter Olympic Games]], the second most.
[10930010] |<article>Verb</article>
[10930020] |For English usage of verbs see the wiki article [[English verbs]].
[10930030] |In [[syntax]], a '''verb''' is a [[word]] ([[part of speech]]) that usually denotes an action (''bring'', ''read''), an occurrence (''decompose'', ''glitter''), or a state of being (''exist'', ''stand'').
[10930040] |Depending on the [[language]], a verb may vary in form according to many factors, possibly including its [[grammatical tense|tense]], [[grammatical aspect|aspect]], [[grammatical mood|mood]] and [[grammatical voice|voice]].
[10930050] |It may also agree with the [[grammatical person|person]], [[grammatical gender|gender]], and/or [[grammatical number|number]] of some of its arguments ([[subject (grammar)|subject]], [[object (grammar)|object]], etc.).
[10930060] |==Valency== 
[10930070] |The number of arguments that a verb takes is called its ''valency'' or ''valence''.
[10930080] |Verbs can be classified according to their valency:
[10930090] |* '''[[Intransitive verb|Intransitive]]''' (valency = 1): the verb only has a [[subject (grammar)|subject]].
[10930100] |For example: "he runs", "it falls".
[10930110] |* [[transitive verb|'''Transitive''']] (valency = 2): the verb has a subject and a [[direct object]].
[10930120] |For example: "she eats fish", "Mike hunts deer".
[10930130] |* '''[[Copula|Linking]]''' (valency = 3): State of being; does not require an action.
[10930140] |The subject complements are related to subject rather than the verb.
[10930150] |It simply reports a condition or asks a questions about a condition.
[10930160] |It is impossible to have verbs with zero valency.
[10930170] |Weather verbs are often [[impersonal verb|impersonal]] (subjectless) in [[null-subject language]]s like [[Spanish language|Spanish]], where the verb ''llueve'' means "It rains".
[10930180] |In English, they require a [[dummy pronoun]], and therefore formally have a valency of 1.
[10930190] |The intransitive and transitive are typical, but the impersonal and objective are somewhat different from the norm.
[10930200] |In this sense you can see that a verb is a person, place, or thing.
[10930210] |In the objective the verb takes an object but no subject, the nonreferent subject in some uses may be marked in the verb by an incorporated dummy pronoun similar to the English weather verb (see below).
[10930220] |Impersonal verbs take neither subject nor object, as with other null subject languages, but again the verb may show incorporated dummy pronouns despite the lack of subject and object phrases.
[10930230] |Tlingit lacks a ditransitive, so the indirect object is described by a separate, extraposed clause.
[10930240] |English verbs are often flexible with regard to valency.
[10930250] |A transitive verb can often drop its object and become intransitive; or an intransitive verb can take an object and become transitive.
[10930260] |Compare:
[10930270] |* ''I moved.'' (intransitive)
[10930280] |* ''I moved the book.'' (transitive)
[10930290] |In the first example, the verb ''move'' has no grammatical object.
[10930300] |(In this case, there may be an object understood - the subject (I/myself).
[10930310] |The verb is then possibly reflexive, rather than intransitive); in the second the subject and object are distinct.
[10930320] |The verb has a different valency, but the form remains exactly the same.
[10930330] |In many languages other than English, such valency changes are not possible like this; the verb must instead be inflected for voice in order to change the valency.
[10930340] |== Copula == 
[10930350] |A [[copula]] is a word that is used to describe its subject, or to equate or liken the subject with its predicate.
[10930360] |In many languages, copulas are a special kind of verb, sometimes called ''copulative verbs'' or ''linking verbs''.
[10930370] |Because copulas do not describe actions being performed, they are usually analyzed outside the transitive/intransitive distinction.
[10930380] |The most basic copula in English is ''to be''; there are others (''remain'', ''seem'', ''grow'', ''become'', etc.).
[10930390] |Some languages (the [[Semitic language|Semitic]] and [[Slavic languages|Slavic]] families, [[Chinese language|Chinese]], [[Sanskrit language|Sanskrit]], and others) can omit or do not have the simple copula equivalent of "to be", especially in the present tense.
[10930400] |In these languages a [[noun]] and [[adjective]] pair (or two nouns) can constitute a complete sentence.
[10930410] |This construction is called ''[[zero copula]]''.
[10930420] |== Verbal noun and verbal adjective == 
[10930430] |Most languages have a number of [[verbal noun]]s that describe the action of the verb.
[10930440] |In [[Indo-European languages]], there are several kinds of verbal nouns, including [[gerund]]s, [[infinitive]]s, and [[supine]]s.
[10930450] |English has gerunds, such as ''seeing'', and infinitives such as ''to see''; they both can function as nouns; ''seeing is believing'' is roughly equivalent in meaning with ''to see is to believe.''
[10930460] |These terms are sometimes applied to verbal nouns of non-Indo-European languages.
[10930470] |In the Indo-European languages, verbal adjectives are generally called [[participle]]s.
[10930480] |English has an [[active voice|active]] participle, also called a present participle; and a [[passive voice|passive]] participle, also called a past participle.
[10930490] |The active participle of ''play'' is ''playing'', and the passive participle is ''played''.
[10930500] |The active participle describes [[noun]]s that perform the action given in the verb, e.g.
[10930510] |''I saw the playing children.''.
[10930520] |The passive participle describes nouns that have been the object of the action of the verb, e.g.
[10930530] |''I saw the played game scattered across the floor.''.
[10930540] |Other languages apply tense and aspect to participles, and possess a larger number of them with more distinct shades of meaning.
[10930550] |==Agreement== 
[10930560] |In languages where the verb is inflected, it often agrees with its primary argument (what we tend to call the subject) in person, number and/or gender.
[10930570] |English only shows distinctive agreement in the third person singular, present tense form of verbs (which is marked by adding "-s"); the rest of the persons are not distinguished in the verb.
[10930580] |Spanish inflects verbs for tense/mood/aspect and they agree in person and number (but not gender) with the subject.
[10930590] |[[Japanese language|Japanese]], in turn, inflects verbs for many more categories, but shows absolutely no agreement with the subject.
[10930600] |[[Basque language|Basque]], [[Georgian language|Georgian]], and some other languages, have ''[[polypersonal agreement]]'': the verb agrees with the subject, the direct object and even the secondary object if present.
[10940010] |<article>Web application</article>
[10940020] |In [[software engineering]], a '''Web application''' is an [[Application software|application]] that is accessed via [[Web browser]] over a network such as the [[Internet]] or an [[intranet]].
[10940030] |It is also a computer software application that is coded in a browser-supported language (such as [[HTML]], [[JavaScript]], [[Java (programming language)|Java]], etc.) and reliant on a common web browser to render the application [[executable]].
[10940040] |Web applications are popular due to the ubiquity of a [[client (computing)|client]], sometimes called a [[thin client]].
[10940050] |The ability to update and maintain Web applications without distributing and installing software on potentially thousands of client computers is a key reason for their popularity.
[10940060] |Common Web applications include [[Webmail]], online [[retail sales]], [[online auction]]s, [[wiki]]s, [[Internet forum|discussion boards]], [[Weblog]]s, [[MMORPG]]s and many other functions.
[10940070] |==History== 
[10940080] |In earlier types of [[client-server]] computing, each application had its own client program which served as its [[user interface]] and had to be separately installed on each user's [[personal computer]].
[10940090] |An upgrade to the server part of the application would typically require an upgrade to the clients installed on each user workstation, adding to the [[technical support|support]] cost and decreasing [[productivity]].
[10940100] |In contrast, Web applications dynamically generate a series of [[Web document]]s in a standard format supported by common browsers such as [[HTML]]/[[XHTML]].
[10940110] |[[Client-side scripting]] in a standard language such as [[JavaScript]] is commonly included to add dynamic elements to the user interface.
[10940120] |Generally, each individual Web page is delivered to the client as a static document, but the sequence of pages can provide an interactive experience, as user input is returned through Web [[form]] elements embedded in the page markup.
[10940130] |During the session, the Web browser interprets and displays the pages, and acts as the ''universal'' client for any Web application.
[10940140] |==Interface== 
[10940150] |The Web interface places very few limits on client functionality.
[10940160] |Through [[Java (Sun)|Java]], [[JavaScript]], [[DHTML]], [[Adobe Flash|Flash]] and other technologies, application-specific methods such as drawing on the screen, playing audio, and access to the keyboard and mouse are all possible.
[10940170] |Many services have worked to combine all of these into a more familiar interface that adopts the appearance of an operating system.
[10940180] |General purpose techniques such as [[drag and drop]] are also supported by these technologies.
[10940190] |Web developers often use client-side scripting to add functionality, especially to create an interactive experience that does not require page reloading (which many users find disruptive).
[10940200] |Recently, technologies have been developed to coordinate client-side scripting with server-side technologies such as [[PHP]].
[10940210] |[[Ajax (programming)|Ajax]], a web development technique using a combination of various technologies, is an example of technology which creates a more interactive experience.
[10940220] |==Technical considerations== 
[10940230] |A significant advantage of building Web applications to support standard browser features is that they should perform as specified regardless of the operating system or OS version installed on a given client.
[10940240] |Rather than creating clients for [[Microsoft Windows|MS Windows]], [[Mac OS X]], [[Linux|GNU/Linux]], and other [[operating system]]s, the application can be written once and deployed almost anywhere.
[10940250] |However, inconsistent implementations of the [[HyperText Markup Language|HTML]], [[Cascading Style Sheets|CSS]], [[Document Object Model|DOM]] and other browser specifications can cause problems in web application development and support.
[10940260] |Additionally, the ability of users to customize many of the display settings of their browser (such as selecting different font sizes, colors, and typefaces, or disabling scripting support) can interfere with consistent implementation of a Web application.
[10940270] |Another approach is to use [[Adobe Flash]] or [[Java applet]]s to provide some or all of the user interface.
[10940280] |Since most Web browsers include support for these technologies (usually through plug-ins), Flash- or Java-based applications can be implemented with much of the same ease of deployment.
[10940290] |Because they allow the programmer greater control over the interface, they bypass many browser-configuration issues, although incompatibilities between Java or Flash implementations on the client can introduce different complications.
[10940300] |Because of their architectural similarities to traditional client-server applications, with a somewhat "thick" client, there is some dispute over whether to call systems of this sort "Web applications"; an alternative term is "[[Rich Internet Application]]" (RIA).
[10940310] |==Structure== 
[10940320] |Though many variations are possible, a Web application is commonly structured as a [[Three-tier (computing)|three-tiered]] application.
[10940330] |In its most common form, a Web browser is the first tier, an engine using some dynamic Web content technology (such as [[Active Server Pages|ASP]], [[ASP.NET]], [[Common Gateway Interface|CGI]], [[ColdFusion]], [[Java Servlet|JSP/Java]], [[PHP]],[[embPerl]], [[Python (programming language)|Python]], or [[Ruby on Rails]]) is the middle tier, and a database is the third tier.
[10940340] |The Web browser sends requests to the middle tier, which services them by making queries and updates against the database and generates a user interface.
[10940350] |But there are some who view a web application as a Two-Tier architecture.
[10940360] |==Business use== 
[10940370] |An emerging strategy for application software companies is to provide Web access to software previously distributed as local applications.
[10940380] |Depending on the type of application, it may require the development of an entirely different browser-based interface, or merely adapting an existing application to use different presentation technology.
[10940390] |These programs allow the user to pay a monthly or yearly fee for use of a software application without having to install it on a local hard drive.
[10940400] |A company which follows this strategy is known as an [[application service provider]] (ASP), and ASPs are currently receiving much attention in the software industry.
[10940410] |==Writing Web applications== 
[10940420] |There are many [[Web application framework]]s which facilitate rapid application development by allowing the programmer to define a high-level description of the program.
[10940430] |In addition, there is potential for the development of applications on [[Internet operating system]]s, although currently there are not many viable platforms that fit this model.
[10940440] |The use of Web application frameworks can often reduce the number of errors in a program, both by making the code more simple, and by allowing one team to concentrate just on the framework.
[10940450] |In applications which are exposed to constant [[Hacker (computing)#Hacker: Intruder and criminal|hacking]] attempts on the Internet, security-related problems caused by errors in the program are a big issue.
[10940460] |Frameworks may also promote the use of best practices such as [[Post/Redirect/Get|GET after POST]].
[10940470] |==Web Application Security== 
[10940480] |The [[Web Application Security Consortium]] (WASC) and [[OWASP]] are projects developed with the intention of documenting how to avoid security problems in Web applications.
[10940490] |A [[Web Application Security Scanner]] is specialized software for detecting security problems in web applications.
[10940500] |== Applications == 
[10940510] |Browser applications typically include simple office software (word processors, spreadsheets, and presentation tools) and can also include more advanced application such as project management software, [[CAD]] Design Software, and point-of-sale applications.
[10940520] |'''Examples''' 
[10940530] |*Word processor and Spreadsheet: [http://docs.google.com Google Docs & Spreadsheets] 
[10940540] |*CRM Software: [http://www.salesforce.com/ SalesForce.com]
[10940550] |== Benefits == 
[10940560] |Browser Applications typically require little or no disk space, upgrade automatically with new features, integrate easily into other web procedures, such as email and searching.
[10940570] |They also provide cross-platform compatibility (i.e Mac or Windows) because they operate within a web browser window.
[10940580] |== Disadvantages == 
[10940590] |Standards compliance is an issue with any non-typical office document creator, which causes problems when file sharing and collaboration becomes critical.
[10940600] |Also, Browser Applications rely on application files accessed on remote servers through the internet.
[10940610] |Therefore, when connection is interrupted, the application is no longer usable.
[10940620] |[[Google Gears]] is a beta platform to combat this issue and improve the usability of Browser Applications.
[10950010] |<article>Word</article>
[10950020] |A '''word''' is a unit of [[language]] that carries [[Meaning (linguistic)|meaning]] and consists of one or more [[morpheme]]s which are linked more or less tightly together, and has a [[phonetic]]al value.
[10950030] |Typically a word will consist of a [[root (linguistics)|root]] or [[stem (linguistics)|stem]] and zero or more [[affix]]es.
[10950040] |Words can be combined to create [[phrase]]s, [[clause]]s, and [[sentence (linguistics)|sentences]].
[10950050] |A word consisting of two or more stems joined together form a [[compound (linguistics)|compound]].
[10950060] |A word combined with another word or part of a word form a [[portmanteau]].
[10950070] |==Etymology== 
[10950080] |English ''[[:wikt:word|word]]'' is directly from [[Old English]] ''word'', and has cognates in all branches of [[Germanic languages|Germanic]] ([[Old High German]] ''wort'', [[Old Norse]] ''orð'', [[Gothic language|Gothic]] ''waurd''), deriving from [[Proto-Germanic]] ''*wurđa'', continuing a virtual [[PIE]] .
[10950090] |Cognates outside Germanic include [[Baltic languages|Baltic]] ([[Old Prussian]] ''wīrds'' "word", and with different [[ablaut]] [[Lithuanian language|Lithuanian]] '' var̃das'' "name", [[Latvian language|Latvian]] ''vàrds'' "word, name") and Latin ''[[:wikt:verbum|verbum]]''.
[10950100] |The PIE stem is also found in Greek ερθει (φθεγγεται "speaks, utters" [[Hesychius of Alexandria|Hes.]] ).
[10950110] |The PIE root is "say, speak" (also found in Greek ειρω, [[rhetor|ρητωρ]]).
[10950120] |The original meaning of ''word'' is "[[utterance]], [[speech]], verbal expression".
[10950130] |Until [[Early Modern English]], it could more specifically refer to a name or title.
[10950140] |The technical meaning of "an element of speech" first arises in discussion of [[grammar]] (particularly Latin grammar), as in the prologue to [[Wyclif]]'s Bible (ca. 1400): 
[10950150] |:"This word ''autem'', either ''vero'', mai stonde for ''forsothe'', either for ''but''."
[10950160] |==Definitions== 
[10950170] |Depending on the language, words can be difficult to identify or delimit.
[10950180] |[[Dictionaries]] take upon themselves the task of categorizing a language's [[lexicon]] into [[Lemma (linguistics)|lemmas]].
[10950190] |These can be taken as an indication of what constitutes a "word" in the opinion of the authors.
[10950200] |===Word boundaries=== 
[10950210] |In [[spoken language]], the distinction of individual words is usually given by rhythm or accent, but short words are often run together.
[10950220] |See [[clitic]] for [[phonologic]]ally dependent words.
[10950230] |Spoken [[French language|French]] has some of the features of a [[polysynthetic language]]: ''il y est allé'' ("He went there") is pronounced /{{IPA|i.ljɛ.ta.le}}/.
[10950240] |As the majority of the world's languages are not written, the scientific determination of word boundaries becomes important.
[10950250] |There are five ways to determine where the word boundaries of spoken language should be placed: 
[10950260] |;Potential pause
[10950270] |:A speaker is told to repeat a given sentence slowly, allowing for pauses.
[10950280] |The speaker will tend to insert pauses at the word boundaries.
[10950290] |However, this method is not foolproof: the speaker could easily break up polysyllabic words.
[10950300] |;Indivisibility
[10950310] |:A speaker is told to say a [[Sentence (linguistics)|sentence]] out loud, and then is told to say the sentence again with extra words added to it.
[10950320] |Thus, ''I have lived in this village for ten years'' might become ''I and my family have lived in this little village for about ten or so years''.
[10950330] |These extra words will tend to be added in the word boundaries of the original sentence.
[10950340] |However, some languages have [[infix]]es, which are put inside a word.
[10950350] |Similarly, some have [[separable affix]]es; in the [[German language|German]] sentence "Ich '''komme''' gut zu Hause '''an'''," the verb ''ankommen'' is separated.
[10950360] |;Minimal free forms
[10950370] |:This concept was proposed by [[Leonard Bloomfield]].
[10950380] |Words are thought of as the smallest meaningful unit of speech that can stand by themselves.
[10950390] |This correlates phonemes (units of sound) to [[lexeme]]s (units of meaning).
[10950400] |However, some written words are not minimal free forms, as they make no sense by themselves (for example, ''the'' and ''of'').
[10950410] |;Phonetic boundaries
[10950420] |:Some languages have particular rules of [[pronunciation]] that make it easy to spot where a word boundary should be.
[10950430] |For example, in a language that regularly [[lexical stress|stresses]] the last syllable of a word, a word boundary is likely to fall after each stressed syllable.
[10950440] |Another example can be seen in a language that has [[vowel harmony]] (like [[Turkish language|Turkish]]): the vowels within a given word share the same ''quality'', so a word boundary is likely to occur whenever the vowel quality changes.
[10950450] |However, not all languages have such convenient phonetic rules, and even those that do present the occasional exceptions.
[10950460] |;Semantic units
[10950470] |:Much like the above mentioned minimal free forms, this method breaks down a sentence into its smallest [[semantics|semantic]] units.
[10950480] |However, language often contains words that have little semantic value (and often play a more grammatical role), or semantic units that are compound words.
[10950490] |;A further criterion.
[10950500] |Pragmatics.
[10950510] |As Plag suggests, the idea of a lexical item being considered a word should also adjust to pragmatic criteria.
[10950520] |The word "hello, for example, does not exist outside of the realm of greetings being difficult to assign a meaning out of it.
[10950530] |This is a little more complex if we consider "how do you do?": is it a word, a phrase, or an idiom?
[10950540] |In practice, linguists apply a mixture of all these methods to determine the word boundaries of any given sentence.
[10950550] |Even with the careful application of these methods, the exact definition of a word is often still very elusive.
[10950560] |There are some words that seem very general but may truly have a technical definition, such as the word "soon," usually meaning within a week.
[10950570] |===Orthography=== 
[10950580] |In languages with a [[writing|literary tradition]], there is interrelation between [[orthography]] and the question of what is considered a single word.
[10950590] |[[Word separator]]s (typically [[space (punctuation)|space marks]]) are common in modern orthography of languages using [[alphabetic script]]s, but these are (excepting isolated precedents) a modern development (see also [[history of writing]]).
[10950600] |In [[English orthography]], words may contain spaces if they are [[compound (linguistics)|compounds]] or [[proper noun]]s such as ''ice cream'' or ''air raid shelter''.
[10950610] |[[Vietnamese language|Vietnamese]] orthography, although using the [[Latin alphabet]], delimits monosyllabic morphemes, not words.
[10950620] |Conversely, [[synthetic language]]s often combine many lexical morphemes into single words, making it difficult to boil them down to the traditional sense of words found more easily in [[analytic language]]s; this is especially difficult for [[polysynthetic language]]s such as [[Inuktitut]] and [[Ubykh language|Ubykh]], where entire sentences may consist of single such words.
[10950630] |[[Logographic script]]s use single signs ([[character (sign)|characters]]) to express a word.
[10950640] |Most ''de facto'' existing scripts are however partly logographic, and combine logographic with phonetic signs.
[10950650] |The most widespread logographic script in modern use is the [[Chinese script]].
[10950660] |While the Chinese script has some true logographs, the largest class of characters used in modern Chinese (some 90%) are so-called pictophonetic compounds ({{lang|zh|形声字}}, {{lang|pny|Xíngshēngzì}}).
[10950670] |Characters of this sort are composed of two parts: a pictograph, which suggests the general meaning of the character, and a phonetic part, which is derived from a character pronounced in the same way as the word the new character represents.
[10950680] |In this sense, the character for most Chinese words consists of a determiner and a syllabogram, similar to the approach used by [[cuneiform script]] and [[Egyptian hieroglyphs]].
[10950690] |There is a tendency informed by orthography to identify a single Chinese character as corresponding to a single word in the Chinese language, parallel to the tendency to identify the letters between two space marks as a single word in the English language.
[10950700] |In both cases, this leads to the identification of [[compounds|compound members]] as individual words, while e.g. in [[German orthography]], compound members are not separated by space marks and the tendency is thus to identify the entire compound as a single word.
[10950710] |Compare e.g. English ''capital city'' with German ''Hauptstadt'' and Chinese 首都 (lit. [[:wikt:首|chief]] [[:wikt:都|metropolis]]): all three are equivalent compounds, in the English case consisting of "two words" separated by a space mark, in the German case written as a "single word" without space mark, and in the Chinese case consisting of two logographic characters.
[10950720] |==Morphology== 
[10950730] |In [[synthetic language]]s, a single [[word stem]] (for example, ''love'') may have a number of different forms (for example, ''loves'', ''loving'', and ''loved'').
[10950740] |However, these are not usually considered to be different words, but different forms of the same word.
[10950750] |In these languages, words may be considered to be constructed from a number of [[morpheme]]s.
[10950760] |In [[Indo-European languages]] in particular, the morphemes distinguished are 
[10950770] |*the [[root (linguistics)|root]]
[10950780] |*optional [[suffixes]]
[10950790] |*a [[desinence]].
[10950800] |Thus, the Proto-Indo-European would be analysed as consisting of 
[10950810] |#, the [[zero grade]] of the root 
[10950820] |#a root-extension (diachronically a suffix), resulting in a complex root 
[10950830] |#The [[thematic suffix]] 
[10950840] |#the [[neuter gender]] nominative or accusative singular desinence .
[10950850] |==Classes== 
[10950860] |[[Grammar]] classifies a language's lexicon into several groups of words.
[10950870] |The basic bipartite division possible for virtually every [[natural language]] is that of [[noun]]s vs. [[verb]]s.
[10950880] |The classification into such classes is in the tradition of [[Dionysius Thrax]], who distinguished eight categories: noun, verb, [[adjective]], [[pronoun]], [[preposition]], [[adverb]], [[conjunction]], [[interjection]].
[10950890] |In Indian grammatical tradition, [[Panini]] introduced a similar fundamental classification into a nominal (nāma, suP) and a verbal (ākhyāta, tiN) class, based on the set of desinences taken by the word.
[10960010] |<article>WordNet</article>
[10960020] |'''WordNet''' is a [[semantic lexicon]] for the [[English language]].
[10960030] |It groups English words into sets of synonyms called ''[[synsets]]'', provides short, general definitions, and records the various [[semantic]] relations between these [[synonym]] sets.
[10960040] |The purpose is twofold: to produce a combination of [[dictionary]] and [[thesaurus]] that is more intuitively usable, and to support automatic text analysis and [[artificial intelligence]] applications.
[10960050] |The database and software tools have been released under a [[BSD License|BSD style license]] and can be downloaded and used freely.
[10960060] |The [[database]] can also be browsed [[online]].
[10960070] |WordNet was created and is being maintained at the Cognitive Science Laboratory of [[Princeton University]] under the direction of [[psychology]] [[professor]] [[George Armitage Miller|George A. Miller]].
[10960080] |Development began in [[1985]].
[10960090] |Over the years, the project received about $3 million of funding, mainly from government agencies interested in [[machine translation]].
[10960100] |In recent years, Dr. [[Christiane Fellbaum]] has overseen the development of WordNet.
[10960110] |== Database contents == 
[10960120] |[[As of 2006]], the database contains about 150,000 words organized in over 115,000 [[synsets]] for a total of 207,000 word-sense pairs; in [[data compression|compressed]] form, it is about 12 [[megabyte]]s in size.
[10960130] |WordNet distinguishes between [[noun]]s, [[verb]]s, [[adjective]]s and [[adverb]]s because they follow different grammatical rules.
[10960140] |Every synset contains a group of synonymous words or [[collocation]]s (a ''collocation'' is a sequence of words that go together to form a specific meaning, such as "[[carpool|car pool]]"); different senses of a word are in different synsets.
[10960150] |The meaning of the synsets is further clarified with short defining ''glosses'' (Definitions and/or example sentences).
[10960160] |A typical example synset with gloss is:
[10960170] |: good, right, ripe -- (most suitable or right for a particular purpose; "a good time to plant tomatoes"; "the right time to act"; "the time is ripe for great sociological changes")
[10960180] |Most synsets are connected to other synsets via a number of semantic relations.
[10960190] |These relations vary based on the type of word, and include: 
[10960200] |* [[Noun]]s
[10960210] |**''[[hypernym]]s'': ''Y'' is a hypernym of ''X'' if every ''X'' is a (kind of) ''Y'' (''canine'' is a hypernym of ''dog'')
[10960220] |**''[[hyponym]]s'': ''Y'' is a hyponym of ''X'' if every ''Y'' is a (kind of) ''X'' (''dog'' is a hyponym of ''canine'')
[10960230] |**''coordinate terms'': ''Y'' is a coordinate term of ''X'' if ''X'' and ''Y'' share a hypernym (''wolf'' is a coordinate term of ''dog'', and ''dog'' is a coordinate term of ''wolf'')
[10960240] |**''[[holonymy|holonym]]'': ''Y'' is a holonym of ''X'' if ''X'' is a part of ''Y'' (''building'' is a holonym of ''window'')
[10960250] |**''[[meronymy|meronym]]'': ''Y'' is a meronym of ''X'' if ''Y'' is a part of ''X'' (''window'' is a meronym of ''building'')
[10960260] |* [[Verb]]s
[10960270] |**''hypernym'': the verb ''Y'' is a hypernym of the verb ''X'' if the activity ''X'' is a (kind of) ''Y'' (''travel'' is an hypernym of ''movement'')
[10960280] |**''troponym'': the verb ''Y'' is a troponym of the verb ''X'' if the activity ''Y'' is doing ''X'' in some manner (''to lisp'' is a troponym of ''to talk'')
[10960290] |**''entailment'': the verb ''Y'' is entailed by ''X'' if by doing ''X'' you must be doing ''Y'' (''to sleep'' is entailed by ''to snore'')
[10960300] |**''coordinate terms'': those verbs sharing a common hypernym (''to lisp'' and ''to yell'')
[10960310] |* [[Adjective]]s
[10960320] |**''related nouns''
[10960330] |**''similar to''
[10960340] |**''participle of verb''
[10960350] |* [[Adverb]]s
[10960360] |**''root adjectives''
[10960370] |While semantic relations apply to all members of a synset because they share a meaning but are all mutually [[synonym]]s, words can also be connected to other words through lexical relations, including [[antonym]]s (opposites of each other) and derivationally related, as well.
[10960380] |WordNet also provides the ''polysemy count'' of a word: the number of synsets that contain the word.
[10960390] |If a word participates in several synsets (i.e. has several senses) then typically some senses are much more common than others.
[10960400] |WordNet quantifies this by the ''frequency score'': in which several sample texts have all words semantically tagged with the corresponding synset, and then a count provided indicating how often a word appears in a specific sense.
[10960410] |The morphology functions of the software distributed with the database try to deduce the [[lemma (linguistics)|lemma]] or [[root (linguistics)|root]] form of a [[word]] from the user's input; only the root form is stored in the database unless it has irregular inflected forms.
[10960420] |== Knowledge structure == 
[10960430] |Both nouns and verbs are organized into hierarchies, defined by hypernym or ''IS A'' relationships.
[10960440] |For instance, the first sense of the word ''dog'' would have the following hypernym hierarchy; the words at the same level are synonyms of each other: some sense of ''dog'' is synonymous with some other senses of ''domestic dog'' and ''Canis familiaris'', and so on.
[10960450] |Each set of synonyms (''synset''), has a unique index and shares its properties, such as a gloss (or dictionary) definition.
[10960460] |dog, domestic dog, Canis familiaris => canine, canid => carnivore => placental, placental mammal, eutherian, eutherian mammal => mammal => vertebrate, craniate => chordate => animal, animate being, beast, brute, creature, fauna => ...
[10960470] |At the top level, these hierarchies are organized into [[base types]], 25 primitive groups for nouns, and 15 for verbs.
[10960480] |These groups form ''lexicographic files'' at a maintenance level.
[10960490] |These primitive groups are connected to an abstract root node that have, for some time, been assumed by various applications that use WordNet.
[10960500] |In the case of adjectives, the organization is different.
[10960510] |Two opposite 'head' senses work as binary poles, while 'satellite' synonyms connect to each of the heads via synonymy relations.
[10960520] |Thus, the hierarchies, and the concept involved with lexicographic files, do not apply here the same way they do for nouns and verbs.
[10960530] |The network of nouns is far deeper than that of the other parts of speech.
[10960540] |Verbs have a far ''bushier'' structure, and adjectives are organized into many distinct clusters.
[10960550] |Adverbs are defined in terms of the adjectives they are derived from, and thus inherit their structure from that of the adjectives.
[10960560] |== Psychological justification == 
[10960570] |The goal of WordNet was to develop a system that would be consistent with the knowledge acquired over the years about how human beings process language.
[10960580] |[[Anomic aphasia]], for example, creates a condition that seems to selectively encumber individuals' ability to name objects; this makes the decision to partition the parts of speech into distinct hierarchies more of a principled decision than an arbitrary one.
[10960590] |In the case of [[hyponym]]y, psychological experiments revealed that individuals can access properties of nouns more quickly depending on when a characteristic becomes a defining property.
[10960600] |That is, individuals can quickly verify that ''canaries can sing'' because a canary is a songbird (only one level of hyponymy), but requires slightly more time to verify that ''canaries can fly'' (two levels of hyponymy) and even more time to verify ''canaries have skin'' (multiple levels of hyponymy).
[10960610] |This suggests that we too store semantic information in a way that is much like WordNet, because we only retain the most specific information needed to differentiate one particular concept from similar concepts.
[10960620] |== WordNet as an ontology == 
[10960630] |The hypernym/hyponym relationships among the noun synsets can be interpreted as specialization relations between conceptual categories.
[10960640] |In other words, WordNet can be interpreted and used as a lexical [[ontology (computer science)|ontology]] in the [[computer science]] sense.
[10960650] |However, such an ontology should normally be corrected before being used since it contains hundreds of basic semantic inconsistencies such as (i) the existence of common specializations for exclusive categories and (ii) redundancies in the specialization hierarchy.
[10960660] |Furthermore, transforming WordNet into a lexical ontology usable for knowledge representation should normally also involve (i)&nbsp;distinguishing the specialization relations into subtypeOf and instanceOf relations, and (ii)&nbsp;associating intuitive unique identifiers to each category.
[10960670] |Although such corrections and transformations have been performed and documented as part of the [http://www.webkb.org/doc/wn/ integration of WordNet&nbsp;1.7 into the cooperatively updatable knowledge base of WebKB-2], most projects claiming to re-use WordNet for knowledge-based applications (typically, knowledge-oriented information retrieval) simply re-use it directly.
[10960680] |== Limitations == 
[10960690] |Unlike other dictionaries, WordNet does not include information about [[etymology]], pronunciation and the forms of [[irregular verb]]s and contains only limited information about usage.
[10960700] |The actual lexicographical and semantical information is maintained in ''lexicographer files'', which are then processed by a tool called ''grind'' to produce the distributed database.
[10960710] |Both grind and the lexicographer files are freely available in a separate distribution, but modifying and maintaining the database requires expertise.
[10960720] |Though WordNet contains a sufficient wide range of common words, it does not cover special domain vocabulary.
[10960730] |Since it is primarily designed to act as an underlying database for different applications, those applications cannot be used in specific domains that are not covered by WordNet.
[10960740] |== Applications in Information Systems == 
[10960750] |WordNet has been used for a number of different purposes in information systems, including word sense disambiguation, information retrieval, automatic text classification, automatic text summarization, and even automatic crossword puzzle generation.
[10960760] |A project at [[Brown University]] started by [[Jeff Stibel]], [[James A. Anderson]], [[Steve Reiss]] and others called [[Applied Cognition Lab]] created a disambiguator using WordNet in 1998.
[10960770] |The project later morphed into a company called [[Simpli]], which is now owned by [[ValueClick]].
[10960780] |George Miller joined the Company as a member of the Advisory Board.
[10960790] |Simpli built an Internet search engine that utilized a knowledgebase principally based on WordNet to disambiguate and expand keywords and synsets to help retrieve information online.
[10960800] |WordNet was expanded upon to add increased dimensionality, such as intentionality (used for x), people ([[Albert Einstein]]) and colloquial terminology more relevant to Internet search (i.e., blogging, ecommerce).
[10960810] |[[Neural network]] algorithms searched the expanded WordNet for related terms to disambiguate search keywords (Java, in the sense of coffee) and expand the search synset (Coffee, Drink, Joe) to improve search engine results.
[10960820] |Before the company was acquired, it performed searches across search engines such as [[Google]], [[Yahoo]]!, [[Ask.com]] and others.
[10960830] |Another prominent example of the use of WordNet is to determine the [[semantic similarity|similarity]] between words.
[10960840] |Various algorithms have been proposed, and these include considering the distance between the conceptual categories of words, as well as considering the hierarchical structure of the WordNet ontology.
[10960850] |A number of these WordNet-based word similarity algorithms are implemented in a [[Perl]] package called [http://www.d.umn.edu/~tpederse/similarity.html WordNet::Similarity].
[10960860] |== Interfaces == 
[10960870] |Princeton maintains a list of [http://wordnet.princeton.edu/links related projects] that includes links to some of the widely used [[application programming interface]]s available for accessing WordNet using various programming languages and environments.
[10960880] |Other interfaces include the following: 
[10960890] |* [http://www.defineitfast.com/find/ WordNet on Ajax::DefineItFast.com] allows users to browse Wordnet 3.0 using an [[Ajax (programming)|ajax]] interface.
[10960900] |* The [http://mfwallace.googlepages.com/jawbone.html Jawbone] project provides a [[Java (programming language)|Java]] API to the WordNet 2.1 and 3.0 data.
[10960910] |The source code is released under the [[MIT license]].
[10960920] |* The [http://nltk.sourceforge.net/ Natural Language Toolkit] provides a [[Python (programming language)|Python]] API to the WordNet 3.0.
[10960930] |* [http://search.cpan.org/perldoc?Lingua::Wordnet Lingua::Wordnet] provides a [[Perl]] interface to WordNet.
[10960940] |* [http://search.cpan.org/perldoc?WordNet::Similarity WordNet::Similarity] Perl module for computing measures of semantic relatedness.
[10960950] |* [http://www.cozyenglish.com/dictionary Dictionary::CozyEnglish] implemented a WordNet 3.0 interface that integrates with [[WordPress]].
[10960960] |Blog and website owners can embed this API via a set of HTML code.
[10960970] |* The [http://www.visualthesaurus.com/ Visual Thesaurus] is a subscription-based commercial application that presents WordNet data through an innovative and user-friendly interface.
[10960980] |* [[WordWeb]] is an extended dictionary based on WordNet, also available commercially as [http://wordweb.info/developer/SQL.html SQL tables] for use in other applications.
[10960990] |Includes many additional terms, derived forms and pronunciations.
[10961000] |* [http://www.ug.it.usyd.edu.au/~smer3502/assignment3/form.html Visual representation of WordNet] - interface which attempts to visualise the relations.
[10961010] |== Related projects == 
[10961020] |The [[EuroWordNet]] project has produced WordNets for several European languages and linked them together; these are not freely available however.
[10961030] |The [[Global Wordnet]] project attempts to coordinate the production and linking of "wordnets" for all languages.
[10961040] |[[Oxford University Press]], the publisher of the [[Oxford English Dictionary]], has voiced plans to produce their own online competitor to WordNet.
[10961050] |The [[eXtended WordNet]] is a project at the [[University of Texas at Dallas]] which aims to improve WordNet by semantically parsing the glosses, thus making the information contained in these definitions available for automatic knowledge processing systems.
[10961060] |It is also freely available under a license similar to WordNet's.
[10961070] |The [[GCIDE]] project produces a dictionary by combining a [[public domain]] ''[[Webster's Dictionary]]'' from [[1913]] with some WordNet definitions and material provided by volunteers.
[10961080] |It is released under the [[copyleft]] license [[GNU General Public License|GPL]].
[10961090] |WordNet is also commonly re-used via mappings between the WordNet categories and the categories from other ontologies.
[10961100] |Most often, only the top-level categories of WordNet are mapped.
[10961110] |However, the authors of the [[Suggested Upper Merged Ontology|SUMO]] ontology have produced a mapping between all of the WordNet synsets, (including nouns, verbs, adjectives and adverbs), and [[SUMO class]]es.
[10961120] |The most recent addition of the mappings provides links to all of the more specific terms in the MId-Level Ontology (MILO), which extends SUMO.
[10961130] |[[OpenCyc]] has 12,000 terms linked to WordNet synonym sets.
[10961140] |In most works that claim to have integrated WordNet into other ontologies, the content of WordNet has not simply been corrected when semantic problems have been encountered; instead, WordNet has been used as an inspiration source but heavily re-interpreted and updated whenever suitable.
[10961150] |This was the case when, for example, the [http://citeseer.ist.psu.edu/oltramari02restructuring.html top-level ontology of WordNet was re-structured] according to the [[OntoClean]] based approach or when WordNet was used as a primary source for constructing the lower classes of the SENSUS ontology.
[10961160] |[[FrameNet]] is a project similar to WordNet.
[10961170] |It consists of a lexicon which is based on annotating over 100,000 sentences with their semantic properties.
[10961180] |The unit in focus is the ''lexical frame'', a type of state or event together with the properties associated with it.
[10961190] |An independent project titled [http://wordnet.cemetech.net wordNet] with an initial lowercase w is an ongoing project to links words and phrases via a custom [[Web crawler]].
[10961200] |[[Lexical markup framework]] (LMF) is a work in progress within [[ISO/TC37]] in order to define a common standardized framework for the construction of lexicons, including WordNet.
[10961210] |The [http://www.ceid.upatras.gr/Balkanet/ BalkaNet] project has produced WordNets for six European languages (Bulgarian, Czech, Greek, Romanian, Turkish and Serbian).
[10961220] |For this project, freely available XML-based WordNet editor was developed.
[10961230] |This editor - [http://nlp.fi.muni.cz/projekty/visdic/ VisDic] - is not in active development anymore, but is still used for the creation of various WordNets.
[10961240] |Its successor, [http://deb.fi.muni.cz DEBVisDic], is client-server application and is currently used for the editing of several WordNets (Dutch in Cornetto project, Polish, Hungarian, several African languages, Chinese).
[10970010] |<article>WordPerfect</article>
[10970020] |'''WordPerfect''' is a [[proprietary software|proprietary]] [[word processing]] application.
[10970030] |At the height of its popularity in the late 1980s and early 1990s, it was the ''[[de facto]]'' standard word processor, but has since been eclipsed in sales by [[Microsoft Office Word|Microsoft Word]].
[10970040] |Although the [[MS-DOS]] and [[Microsoft Windows]] versions are best known, its popularity was based on the fact that it had been available for a wide variety of computers and operating systems, including [[Mac OS]], [[Linux]], the [[Apple IIe]], a separate version for the [[Apple IIgs]], most popular versions of [[Unix]], [[OpenVMS|VMS]], [[Data General]], [[System/370]], [[AmigaOS]], [[Atari ST]], [[OS/2]], and [[Nextstep|NeXTSTEP]].
[10970050] |==WordPerfect for DOS== 
[10970060] |WordPerfect was originally produced by [[Bruce Bastian]] and Dr. [[Alan Ashton (executive)|Alan Ashton]] who founded Satellite Software International, Inc. of [[Orem]], [[Utah]], which later renamed itself WordPerfect Corporation.
[10970070] |Originally written for [[Data General]] minicomputers, in 1982 the developers ported the program to the IBM PC as WordPerfect 2.20, continuing the version numbering of the Data General series.
[10970080] |The program's popularity took off with the introduction of WordPerfect 4.2 in 1986, with automatic paragraph numbering (important to the law office market), and the splitting of a lengthy footnote and its partial overflow to the bottom of the next page, as if it had been professionally typeset (valuable to both the law office and academic markets).
[10970090] |WordPerfect 4.2 became the first program to overtake the original microcomputer word processor market leader, [[WordStar]], in a major application category on the [[DOS]] platform.
[10970100] |In 1989, WordPerfect Corporation released the program's most successful version ever, WordPerfect 5.1 for DOS, which was the first version to include [[Macintosh]] style pull-down menus to supplement the traditional F-key combinations, as well as support for tables, a spreadsheet-like feature.
[10970110] |The data format used by WordPerfect 5.1 was, for years, the most portable format in the world.
[10970120] |All word processors could read (and convert) that format.
[10970130] |Many conferences and magazines insisted that you shipped your documents in 5.1 format.
[10970140] |Unlike previous DOS versions, WordPerfect 6.0 for DOS could switch between its traditional text-based editing mode and a graphical editing mode that [[WYSIWYG|showed the document as it would print out]], including fonts and text effects like bold, underline, and italics.
[10970150] |The previous text-based versions used different colors or text color inversions to indicate various markups, and (starting with version 5.0) used a graphic mode only for an uneditable print preview that used generic fonts rather than the actual fonts that appeared on the printed page.
[10970160] |===Key characteristics=== 
[10970170] |To this day, WordPerfect's three major characteristics that have differentiated from other market-leading word processors are its streaming code architecture, its Reveal Codes feature, and its unusually user-friendly macro/scripting language, PerfectScript.
[10970180] |====Streaming code architecture==== 
[10970190] |A key to WordPerfect's design is its streaming code architecture that parallels the formatting features of [[HTML]] and [[Cascading Style Sheets]].
[10970200] |Documents are created much the same way that raw HTML pages are written, with text interspersed by tags that trigger treatment of data until a corresponding closing tag is encountered, at which point the settings active to the point of the opening tag resume control.
[10970210] |As with HTML, tags can be nested.
[10970220] |Some data structures are treated as objects within the stream as with HTML's treatment of graphic images, e.g., footnotes and styles, but the bulk of a WordPerfect document's data and formatting codes appear as a single continuous stream.
[10970230] |====Styles and style libraries==== 
[10970240] |The addition of styles and style libraries in WP 5.0 provided greatly increased power and flexibility in formatting documents, while maintaining the streaming-code architecture of earlier versions.
[10970250] |Prior to that, WordPerfect's only use of styles (a particular type of programming object) is the Opening Style, which contains the default settings for a document.
[10970260] |====Reveal codes==== 
[10970270] |The Reveal Codes feature is a second editing screen that can be toggled open and closed at the bottom of the main editing screen.
[10970280] |Text is displayed in Reveal Codes interspersed with tags and the occasional objects, with the tags and objects represented by named tokens.
[10970290] |The scheme makes it far easier to untangle coding messes than with styles-based word processors, and object tokens can be clicked with a pointing device to directly open the configuration editor for the particular object type, e.g. clicking on a style token brings up the style editor with the particular style type displayed.
[10970300] |WordPerfect users forced to change word processors by employers frequently complain on WordPerfect online forums that they are lost without Reveal Codes.
[10970310] |Because of their style dependencies, efforts to create the equivalent of Reveal Codes in other word processors have produced disappointing results.
[10970320] |Note that WordPerfect had this feature already in its DOS incarnations: it could be brought forward by pressing the keys 'Alt' and 'F3' together.
[10970330] |====Macro languages==== 
[10970340] |WordPerfect for DOS was notable for its Alt-keystroke macro facility, which was expanded with the addition of macro libraries in WP 5.0 that also allowed for Ctrl-keystroke macros, and remapping of any key as a macro.
[10970350] |This enabled any sequence of keystrokes to be recorded, saved, edited, and recalled.
[10970360] |Macros could examine system data, make decisions, be chained together, and operate recursively until a defined 'stop' condition was met.
[10970370] |This capability provided an amazingly powerful way to rearrange data and formatting codes within a document, where the same sequence of actions needed to be performed repetitively e.g. for tabular data.
[10970380] |Macros can also be edited using WordPerfect Program Editor.
[10970390] |Unfortunately, this facility could not easily be ported to the subsequent Windows versions.
[10970400] |A new and even more powerful interpreted token-based macro recording and scripting language was introduced for both DOS and Windows 6.0 versions, and that became the basis of the language named PerfectScript in later versions.
[10970410] |PerfectScript has remained the mainstay scripting language for WordPerfect users ever since.
[10970420] |PerfectScript was specifically designed to be user-friendly, thus avoiding far less user-friendly methods of scripting languages implemented on other word processing programs that require education in advanced programming concepts such as Object Oriented Programming in order to produce useful yet sophisticated and powerful macros.
[10970430] |===Function keys=== 
[10970440] |Like its mid-1980s competitor, [[MultiMate]], WordPerfect used almost every possible combination of [[function key]]s with Ctrl, Alt, and Shift modifiers.
[10970450] |([[WordPerfect 4.1|See example help screen on this page]].)
[10970460] |This was in contrast to [[WordStar]], which used only Ctrl, in conjunction with traditional typing keys.
[10970470] |Many people still know and use the [[function key]] combinations from the DOS version, which were originally designed for Data General Dasher VDUs that supported 2 groups of 5 plain, shift, control, and control shift function keys.
[10970480] |This was translated to the layout of the 1981 [[IBM PC keyboard]], with two columns of function keys at the left end of the keyboard, but worked even better with the 1984 PC AT keyboard with 3 groups of 4 function keys across the top of the keyboard.
[10970490] |With the 1981 PC keyboard, the Tab key and the related F4 (''Indent'') functions were adjacent.
[10970500] |This plethora of keystroke possibilities, combined with the developers' wish to keep the user interface free of "clutter" such as on-screen menus, made it necessary for most users to use a keyboard template showing each function.
[10970510] |Infamously, WordPerfect used F3 instead of F1 for ''Help'', F1 instead of Esc for ''Cancel'', and Esc for ''Repeat'' (though a configuration option in later versions allowed these functions to be rotated to locations that later became more standard).
[10970520] |===Printer drivers=== 
[10970530] |WordPerfect for DOS shipped with an impressive array of printer drivers - a feature that played an important role in its adoption - and also shipped with a [[printer driver]] editor called PTR, which features a flexible [[Macro (computer science)|macro language]] and allows technically-inclined users to customize and create printer drivers.
[10970540] |Internally, WordPerfect used an extensive WordPerfect [[character set]] as its [[internal code]].
[10970550] |The precise meaning of the characters, although clearly defined and documented, can be overridden in its customizable printer drivers with PTR.
[10970560] |The relationship between different type faces and styles, and between them and the various sections in the WordPerfect character set, were also described in the printer drivers and can be customized through PTR.
[10970570] |===WordPerfect Library/Office=== 
[10970580] |WordPerfect Corporation produced a variety of ancillary and spin-off products.
[10970590] |WordPerfect Library (introduced in 1986 and later renamed WordPerfect Office) was a package of network and stand-alone utilities for use with WordPerfect, primarily developed for offices running [[Novell NetWare]].
[10970600] |WordPerfect Library/Office included the DOS antecedents of what is now known as [[Novell GroupWise]], a shareable package of contact management, calendaring, and related word processing utilities.
[10970610] |WordPerfect Library/Office a brand name later revived by Corel after it acquired ownership of WordPerfect and other programs still bundled under that product name as of this writing – included amongst other utilities a local area network (LAN) email facility and was the most popular such package in its day.
[10970620] |====WordPerfect Shell==== 
[10970630] |The Library/Office bundle also included a noteworthy task-switching program that ran as a shell atop DOS, branded as WordPerfect Shell.
[10970640] |Task-switchers were a popular application type for the DOS operating system because of its lack of multi-tasking, making it impractical to have many applications running at once.
[10970650] |Task-switchers were programs that allocated available memory between open applications, allowing fast switching between open applications whose actions were suspended when the user switched to a different program.
[10970660] |WordPerfect Shell 4.0, which was also bundled with the WordPerfect 6.x versions, had most functionality of the Windows 3.x shell but was far more versatile.
[10970670] |Its automated memory management was superior to that of the Microsoft Windows shell, and Microsoft's product generally performed with far less frequent memory glitches when Windows was run as a program under Shell 4.0.
[10970680] |The user interface for Shell is based on a hierarchical menu metaphor rather than the windows/folders/icons metaphor used by Microsoft.
[10970690] |Shell 4.0's menu structures could be individually hot-keyed as pop-ups and its powerful menu editor allowed fast creation and editing of menu structures and menu items, with each menu item quickly configurable for entry of command lines and menu names.
[10970700] |Shell 4.0 included 80 programmable clipboards, and the menu structures and menu items were also programmable using a scripting language whose scripts could themselves be chained to and from WordPerfect macros.
[10970710] |The scripting language also included a keyboard buffer stuffing tool for control and operation of non-WordPerfect applications.
[10970720] |Microsoft Windows had no answer to such powerful features other than a glitz of windows, icons, pointing devices, and an overwhelming marketing strategy.
[10970730] |WordPerfect Shell was laid to rest along with many other popular DOS character-based tools inundated by Microsoft's marketing of Windows 95.
[10970740] |Novell later licensed Shell 3.0 and 4.0 for free distribution.
[10970750] |As of this writing it is still downloadable from the DataPerfect Users Group.
[10970760] |WordPerfect Library/Office also included a Calculator, a flat-file database called Notebook that could be used by itself or in WordPerfect document merges, an exceptionally powerful relational database - [[DataPerfect]] - that retains a small but dedicated following despite having been dropped by WordPerfect Corporation in favour of Borland's Paradox as a companion of WP for Windows.
[10970770] |Additional features continue to be added from time to time by DataPerfect's author, Lew Bastian - Bruce Bastian's older brother - a brilliant programmer who had written some of IBM's earliest disk-caching patents, and DataPerfect can now run as web server.
[10970780] |LetterPerfect was a scaled down version of WordPerfect with the more advanced features removed but with file and (for the most part) keystroke compatibility.
[10970790] |An implementation of Microsoft Visual Basic for Applications (VBA), introduced with WordPerfect for Windows 9.0, provides a full-featured development environment for building advanced custom WordPerfect solutions.
[10970800] |These solutions are often created by corporate developers or programmers and may not be easily accessible to the typical WordPerfect user.
[10970810] |For these users, PerfectScript is the better option.
[10970820] |People who code scripts for WordPerfect use the Macros & Merges forum at WordPerfect Universe as their primary meeting ground.
[10970830] |That site is a collaboration among other WordPerfect-related web site operators and others and functions as a portal to WordPerfect resources on the web.
[10970840] |The site also maintains an extensive clip library for use in PerfectScript programming, has the Web's largest metalink library for locating online WordPerfect resources, and has the only peer-to-peer forum on the Web for DOS WordPerfect.
[10970850] |The WordPerfect template and document file formats have remained remarkably stable since the WordPerfect 6.x DOS and Windows versions.
[10970860] |Complete backward compatibility has been maintained and all WordPerfect versions since 6.0 have included a feature that stores any unrecognized codes in stream location represented in Reveal Codes by an "Unknown" token.
[10970870] |Documents generated on newer versions can thus be edited in older versions with the codes retained.
[10970880] |Then, upon being reopened in a newer version of WordPerfect, the "unknown" tokens regain their functionality.
[10970890] |None of the newer WordPerfect features reflected in the file formats cause data loss when opened in older versions.
[10970900] |==WordPerfect for Windows== 
[10970910] |===History=== 
[10970920] |WordPerfect was late in coming to market with a Windows version.
[10970930] |The first mature version, WordPerfect 5.2 for Windows, was released in November [[1992]].
[10970940] |Prior to that, there was a WordPerfect 5.1 for Windows, introduced a year earlier.
[10970950] |That version had to be installed from DOS and was largely unpopular due to serious stability issues.
[10970960] |By the time WordPerfect 5.2 for Windows was introduced, [[Microsoft Word|Microsoft Word for Windows]] version 2 had been on the market for over a year and had received its third interim release, v2.0c. WordPerfect's function-key-centered user interface did not adapt well to the new paradigm of mouse and pull-down menus, especially with many of WordPerfect's standard key combinations pre-empted by incompatible keyboard shortcuts that Windows itself used (e.g. Alt-F4 became ''Exit Program'' as opposed to WordPerfect's ''Block Text'').
[10970970] |The DOS version's impressive arsenal of finely tuned printer drivers was also rendered obsolete by Windows' use of its own printer device drivers.
[10970980] |Internally, WordPerfect for Windows still used the WordPerfect character set as its internal code.
[10970990] |This caused WordPerfect for Windows to be unable to support some languages — for example [[Chinese language|Chinese]] — that were natively supported by Windows.
[10971000] |WordPerfect became part of an [[office suite]] when the company entered into a co-licensing agreement with [[Borland|Borland Software Corporation]] in 1993.
[10971010] |The offerings were marketed as Borland Office, containing Windows versions of WordPerfect, [[Quattro Pro]], [[Borland Paradox]], and a LAN-based groupware package called WordPerfect Office (not to be confused with the complete applications suite of the same name later marketed by Corel) based on the WordPerfect Library for DOS.
[10971020] |The WordPerfect product line was sold twice, first to [[Novell]] in June [[1994]], who then sold it to [[Corel]] in January [[1996]].
[10971030] |However, Novell kept the WordPerfect Office technology, incorporating it into its [[GroupWise]] messaging and collaboration product.
[10971040] |Compounding WordPerfect's troubles were issues associated with the release of the first [[32-bit application|32-bit]] version, WordPerfect 7, intended for use on [[Windows 95]].
[10971050] |While it contained notable improvements over the [[16-bit application|16-bit]] WordPerfect for Windows 6.1, it was released in May [[1996]], nine months after the introduction of Windows 95 and Microsoft Office 95 (including [[Word for Windows|Word 95]]).
[10971060] |The initial release suffered from notable stability problems.
[10971070] |WordPerfect 7 also didn't have a Microsoft "Designed for Windows 95" logo.
[10971080] |This was important to Windows 95 software purchasers as Microsoft set standards for application design, behavior, and interaction with the operating system.
[10971090] |To make matters worse, the original release of WordPerfect 7 was incompatible with [[Windows NT]], hindering its adoption in academia.
[10971100] |The "NT Enabled" version of WordPerfect 7, which Corel considered to be Service Pack 2, wasn't available until Q1-[[1997]], over 6 months after the introduction of [[Windows NT 4.0]], a year and a half after the introduction of Office 95 (which supported Windows NT out of the box), and shortly after the introduction of Office 97.
[10971110] |Corel charged its customers to receive, what amounted to, a bug fix.
[10971120] |While WordPerfect retained a majority of the retail shelf sales of word processors, Microsoft gained marketshare by including [[Microsoft Word|Word for Windows]] in its Windows product on new PCs.
[10971130] |Microsoft gave discounts for Windows to OEMs who included Word on their PCs.
[10971140] |When new PC buyers found Word installed on their new PC, Word began to dominate marketshare of desktop word processing.
[10971150] |Amongst the remaining avid users of WordPerfect are many law firms and academics who favor the WordPerfect features such as macros and reveal codes.
[10971160] |Corel now caters to these markets, with, for example, a major sale to the [[United States Department of Justice]] in 2005 .
[10971170] |In November 2004, Novell filed an antitrust lawsuit against Microsoft for alleged anticompetitive behavior (viz, tying Word to sales of Windows) that Novell claims led to loss of WordPerfect market share .
[10971180] |===Corel WordPerfect=== 
[10971190] |Since its acquisition by [[Corel]], WordPerfect for Windows has officially been known as '''Corel WordPerfect'''.
[10971200] |== Unicode and Asian language editing == 
[10971210] |WordPerfect also lacks support for [[Unicode]].
[10971220] |The absence of support for [[Unicode]] limits its usefulness in many markets outside North America and Western Europe.
[10971230] |Despite pleas from longtime users, this feature has not been implemented as of yet.
[10971240] |For users in WordPerfect's traditional markets, the inability to deal with complex character sets, such as Asian language scripts, can cause difficulty when working on documents containing those characters.
[10971250] |However, later versions have provided better compliance with interface conventions, file compatibility, and even Word interface emulation.
[10971260] |== "Classic Mode" == 
[10971270] |Corel added "Classic Mode" in WordPerfect 11.
[10971280] |==WordPerfect for Macintosh== 
[10971290] |Development of WordPerfect for Macintosh did not run parallel to versions for other operating systems, and used version numbers unconnected to contemporary releases for DOS, Windows, etc.
[10971300] |The first release reminded users and reviewers of the DOS version, and was not especially successful in the marketplace.
[10971310] |Version 2 was a total re-write, adhering more closely to Apple's UI guidelines.
[10971320] |Version 3 took this further, making extensive use of the technologies Apple introduced in Systems 7.0&ndash;7.5, while remaining fast and capable of running well on older machines.
[10971330] |Corel released version 3.5 in 1996, followed by the improved version 3.5e.
[10971340] |It was never updated beyond that, and the product was eventually discontinued.
[10971350] |[[As of 2004]], Corel has reiterated that the company has no plans to further develop WordPerfect for Macintosh (such as creating a native Mac OS X version).
[10971360] |For several years, Corel allowed Mac users to download version 3.5e from their website free of charge, and some Mac users still use this version.
[10971370] |The download is still available, along with the necessary OS 8/9/Classic Updater that slows scroll speed and restores functionality to the Style and Window menus.
[10971380] |Like other Mac OS applications of its age, it requires the Classic environment on [[PowerPC]] Macs.
[10971390] |While Intel Macs do not support Classic, emulators such as [[SheepShaver]], and [[vMac]] allow users to run WordPerfect and other Mac OS applications.
[10971400] |Users wishing to use an up to date version of WordPerfect can run the Windows version through [[Boot Camp (software)|Boot Camp]] or a Windows emulator, and through [[Darwine]] or [[CrossOver Mac]] with mixed results.
[10971410] |==WordPerfect for Linux== 
[10971420] |In 1995, WordPerfect 6.0 was made available for [[Linux]] as part of [[SCO Group|Caldera]]'s internet office package.
[10971430] |In late 1997, a newer version was made available for download, but had to be purchased to be activated.
[10971440] |Hoping to establish themselves in the nascent commercial Linux market, Corel also developed their [[Corel Linux|own distribution]] of Linux.
[10971450] |Although the Linux distribution was fairly well-received, the response to WordPerfect for Linux was varied.
[10971460] |Some Linux promoters appreciated the availability of a well-known, mainstream application for the OS. Developers of other Linux-compatible word processors questioned the need for another application in the category.
[10971470] |Advocates of [[open-source software]] scoffed at its proprietary, closed-source nature, and questioned the viability of a commercial application in a market dominated by free software, such as [[OpenOffice.org]] and numerous others.
[10971480] |The performance and stability of WordPerfect 9.0 (not a native Linux application like WP 6-8, but derived from the Windows version using the [[Wine (software)|Wine]] compatibility library) was highly criticized.
[10971490] |WordPerfect failed to gain a large user base, and as part of Corel's change of strategic direction following a (non-voting) investment by Microsoft, WordPerfect for Linux was discontinued and their Linux distribution was sold to [[Xandros]].
[10971500] |In April 2004, Corel re-released WordPerfect 8.1 (the last Linux-native version) with some updates, as a "proof of concept" and to test the Linux market.
[10971510] |[[As of 2005]], WordPerfect for Linux is not available for purchase.
[10971520] |==Versions==
[10971530] |(* - Part of [[WordPerfect Office]])
[10971540] |Known versions for VAX/VMS include 5.1, 5.3 and 7.1 , year of release unknown.
[10971550] |Known versions for SUN include 6.0, requiring SunOS or Solaris 2, year of release unknown.
[10971560] |Known versions for IBM System/370 include 4.2, released 1988.
[10971570] |Known versions for OS/2 include 5.0, released 1989.
[10971580] |Known versions for the DEC Rainbow 100 include version (?), released November 1983.
[10971590] |In addition, versions of WordPerfect have also been available for Apricot, Atari ST, DEC Rainbow, Tandy 2000, TI Professional, Victor 9000, and Zenith Z-100 systems, as well as around 30 flavors of unix, including AT&T, NCR, SCO Xenix, Microport Unix, DEC Ultrix, Pyramid Tech Unix, Tru64, AIX, Motorola 8000, and HP9000 and SUN 3.
[10971600] |==Current versions== 
[10971610] |On [[January 17]], [[2006]], Corel announced WordPerfect X3, the newest version of this office package.
[10971620] |Corel is an original member of the [[OASIS (organization)|OASIS]] Technical Committee on the [[OpenDocument|Open Document Format]], and Paul Langille, a senior Corel developer, is one of the original four authors of the OpenDocument specification.
[10971630] |In January 2006, subscribers to Corel's electronic newsletter were informed that WordPerfect 13 was scheduled for release later in 2006.
[10971640] |The subsequent release of X3 (identified as "13" internally and in registry entries) has been met with generally positive reviews, due to new features including a unique PDF import capability, metadata removal tools, integrated search and online resources and other features.
[10971650] |Version X3 was described by [[CNET]] in January, 2006 as a "winner", "a feature-packed productivity suite that's just as easy to use – and in many ways more innovative than – industry-goliath Microsoft Office 2003."
[10971660] |CNET went on to describe X3 as "a solid upgrade for longtime users", but that "Die-hard Microsoft fans may want to wait to see what Redmond has up its sleeve with the radical changes expected within the upcoming Microsoft Office 12."
[10971670] |While the notable if incremental enhancements of WordPerfect Office X3 have been well received by reviewers, a number of online forums have voiced concern about the future direction of WordPerfect, with longtime users complaining about certain usability and functionality issues that users have been asking to have fixed for the last few release versions.
[10971680] |Although the released version of X3 does not support the [[Office Open XML|OOXML]] or [[OpenDocument]] formats, a beta has been released that supports both.
[10971690] |Reports surfaced late in January 2006 that Apple's [[iWork]] had leapfrogged WordPerfect Office as the leading alternative to Microsoft Office.
[10971700] |This claim was soon debunked after industry analyst Joe Wilcox described JupiterResearch usage surveys that showed WordPerfect as the No. 2 office suite behind Microsoft Office in the consumer, small and medium businesses, and enterprise markets with a roughly 15 percent share in each market.
[10971710] |In April [[2008]] Corel released their WordPerfect Office X4 [[office suite]] containing the new X4 version of WordPerfect which includes support for [[PDF]], [[OpenDocument]] and [[Office Open XML]].
[10980010] |<article>Word sense disambiguation</article>
[10980020] |In [[computational linguistics]], '''word sense disambiguation''' (WSD) is the process of identifying which [[word sense|sense]] of a [[word]] (having a number of distinct senses) is used in a given [[Sentence (linguistics)|sentence]].
[10980030] |For example, consider the word ''bass'', two distinct senses of which are: 
[10980040] |#a type of fish
[10980050] |#tones of low frequency
[10980060] |and the sentences: 
[10980070] |#''I went fishing for some sea bass'' 
[10980080] |#''The bass line of the song is very moving'' 
[10980090] |Explanation
[10980100] |To a human it is obvious that the first sentence is using the word ''bass'' in the first sense above, and that in the second sentence it is being used in the second sense.
[10980110] |Although this seems obvious to a human, developing [[algorithm]]s to replicate this human ability is a difficult task.
[10980120] |==Difficulties== 
[10980130] |One problem with word sense disambiguation is deciding what the senses are.
[10980140] |In cases like the word ''bass'' above, at least some senses are obviously different.
[10980150] |In other cases, however, the different senses can be closely related (one meaning being a [[metaphor]]ical or [[metonymy|metonymic]] extension of another), and in such cases division of words into senses becomes much more difficult.
[10980160] |Different dictionaries will provide different divisions of words into senses.
[10980170] |One solution some researchers have used is to choose a particular dictionary, and just use its set of senses.
[10980180] |Generally, however, research results using broad distinctions in senses have been much better than those using narrow, so most researchers ignore the fine-grained distinctions in their work.
[10980190] |Another problem is inter-judge [[variance]].
[10980200] |WSD systems are normally tested by having their results on a task compared against those of a human.
[10980210] |However, humans do not agree on the task at hand — give a list of senses and sentences, and humans will not always agree on which word belongs in which sense.
[10980220] |A computer cannot be expected to give better performance on such a task than a human (indeed, since the human serves as the standard, the computer being better than the human is incoherent), so the human performance serves as an upper bound.
[10980230] |Human performance, however, is much better on coarse-grained than fine-grained distinctions, so this again is why research on coarse-grained distinctions is most useful.
[10980240] |==Approaches== 
[10980250] |As in all [[natural language processing]], there are two main approaches to WSD — deep approaches and shallow approaches.
[10980260] |Deep approaches presume access to a comprehensive body of [[commonsense knowledge|world knowledge]].
[10980270] |Knowledge such as "you can go fishing for a type of fish, but not for low frequency sounds" and "songs have low frequency sounds as parts, but not types of fish" is then used to determine in which sense the word is used.
[10980280] |These approaches are not very successful in practice, mainly because such a body of knowledge does not exist in computer-readable format outside of very limited domains.
[10980290] |But if such knowledge did exist, they would be much more accurate than the shallow approaches.
[10980300] |However, there is a long tradition in Computational Linguistics of trying such approaches in terms of coded knowledge, and in some cases it is hard to say clearly whether the knowledge involved is linguistic or world knowledge.
[10980310] |The first attempt was that by Margaret Masterman and her colleagues at Cambridge Language Research Unit in England in the 1950s.
[10980320] |This used as data a punched-card version of Roget's Thesaurus and its numbered "heads" as indicators of topics and looked for their repetitions in text, using a set intersection algorithm: it was not very successful (and is described in some detail in (Wilks, Y. et al., 1996) but had strong relationships to later work, especially Yarowsky's machine learning optimisation of a thesaurus method in the 1990s (see below).
[10980330] |Shallow approaches don't try to understand the text.
[10980340] |They just consider the surrounding words, using information like "if ''bass'' has words ''sea'' or ''fishing'' nearby, it probably is in the fish sense; if ''bass'' has the words ''music'' or ''song'' nearby, it is probably in the music sense."
[10980350] |These rules can be automatically derived by the computer, using a training corpus of words tagged with their word senses.
[10980360] |This approach, while theoretically not as powerful as deep approaches, gives superior results in practice, due to computers' limited world knowledge.
[10980370] |It can, though, be confused by sentences like ''The dogs bark at the tree'', which contains the word ''bark'' near both ''tree'' and ''dogs''.
[10980380] |These approaches normally work by defining a window of ''N'' content words around each word to be disambiguated in the corpus, and statistically analyzing those ''N'' surrounding words.
[10980390] |Two shallow approaches used to train and then disambiguate are ''[[Naïve Bayes classifier]]s'' and ''[[decision tree]]s''.
[10980400] |In recent research, kernel based methods such as [[support vector machine]]s have shown superior performance in [[supervised learning]].
[10980410] |But over the last few years, there hasn't been any major improvement in performance of any of these methods.
[10980420] |It is instructive to compare the word sense disambiguation problem with the problem of [[part-of-speech tagging]].
[10980430] |Both involve disambiguating or tagging with words, be it with senses or parts of speech.
[10980440] |However, algorithms used for one do not tend to work well for the other, mainly because the part of speech of a word is primarily determined by the immediately adjacent one to three words, whereas the sense of a word may be determined by words further away.
[10980450] |The success rate for part-of-speech tagging algorithms is at present much higher than that for WSD, state-of-the art being around 95% accuracy or better, as compared to less than 75% accuracy in word sense disambiguation with supervised learning.
[10980460] |These figures are typical for English, and may be very different from those for other languages.
[10980470] |Another aspect of word sense disambiguation that differentiates it from part-of-speech tagging is the availability of training data.
[10980480] |While it is relatively easy to assign parts of speech to text, training people to tag senses is far more difficult .
[10980490] |While users can memorize all of the possible parts of speech a word can take, it is impossible for individuals to memorize all of the senses a word can take.
[10980500] |Thus, many word sense disambiguation algorithms use [[semi-supervised learning]], which allows both labeled and unlabeled data.
[10980510] |The [[Yarowsky algorithm]] was an early example of such an algorithm.
[10980520] |Yarowsky’s [[Unsupervised learning|unsupervised algorithm]] uses the ‘One sense per collocation’ and the ‘One sense per discourse’ properties of human languages for word sense disambiguation.
[10980530] |From observation, words tend to exhibit only one sense in most given discourse and in a given collocation.
[10980540] |The corpus is initially untagged.
[10980550] |The algorithm starts with a large corpus, in which it identifies examples of the given polysemous word, and stores all the relevant sentences as lines.
[10980560] |For instance, Yarowsky uses the word ‘plant’ in his 1995 paper to demonstrate the algorithm.
[10980570] |Assume that there are two possible senses of the word, the next step is to identify a small number of seed collocations representative of each sense, give each sense a label, i.e. sense A and B, then assign the appropriate label to all training examples containing the seed collocations.
[10980580] |In this case, the words ‘life’ and ‘manufacturing’ are chosen as initial seed collocations for sense A and B respectively.
[10980590] |The residual examples (85% - 98% according to Yarowsky) remain untagged.
[10980600] |The algorithm should initially choose seed collocations representative that will distinguish sense A and B accurately and productively.
[10980610] |This can be done by selecting seed words from a dictionary’s entry for that sense.
[10980620] |The collocations tend to have stronger effect if they are adjacent to the target word, the effect weakens with distance.
[10980630] |According to the criteria given in Yarowsky (1993), seed words that appear in the most reliable collocational relationships with the target word will be selected.
[10980640] |The effect is much stronger for words in a predicate-argument relationship than for arbitrary associations at the same distance to the target word, and is much stronger for collocations with content words than with function words.
[10980650] |Having said this, a collocation word can have several collocational relationships with the target word throughout the corpus.
[10980660] |This could give the word different rankings or even different classifications.
[10980670] |Alternatively, it can be done by identifying a single defining collocate for each class, and using for seeds only those contexts containing one of these defining words.
[10980680] |A publicly available database called WordNet can be used as an automatic source for such defining terms.
[10980690] |In addition, words that occur near the target word in great frequency can be selected as seed collocations representative.
[10980700] |This approach is not fully automatic, a human judge must decide which word will be selected for each target word’s sense, the outputs will be reliable indicators of the senses.
[10980710] |A decision-list algorithm is then used to identify other reliable collocations.
[10980720] |This training algorithm calculates the probability P(Sense | Collocation), and the decision list is ranked by the log-likelihood ratio: '''Log( P(Sense<sub>A</sub> | Collocation<sub>i</sub>) / P(Sense<sub>B</sub> | Collocation<sub>i</sub>) )'''
[10980730] |A [[smoothing]] algorithm will then be used to avoid 0 values.
[10980740] |The decision-list algorithm resolves many problems in a large set of non-independent evidence source by using only the most reliable piece of evidence rather than the whole matching collocation set.
[10980750] |The new resulting classifier will then be applied to the whole sample set.
[10980760] |Add those examples in the residual that are tagged as A or B with probability above a reasonable threshold to the seed sets.
[10980770] |Apply the decision-list algorithm and the above adding step iteratively.
[10980780] |As more newly-learned collocations are added to the seed sets, the sense A or sense B set will grow, and the original residual will shrink.
[10980790] |However, these collocations stay in the seed sets only if their probability of classification remains above the threshold, otherwise they are returned to the residual for later classification.
[10980800] |At the end of each iteration, the ‘One sense per discourse’ property can be used to help preventing initially mistagged collocates and hence improving the purity of the seed sets.
[10980810] |In order to avoid strong collocates becoming indicators for the wrong class, the class-inclusion threshold needs to be randomly altered.
[10980820] |For the same purpose, after intermediate convergence the algorithm will also need to increase the width of the context window.
[10980830] |The algorithm will continue to iterate until no more reliable collocations are found.
[10980840] |The ‘One sense per discourse’ property can be used here for error correction.
[10980850] |For a target word that has a binary sense partition, if the occurrences of the majority sense A exceed that of the minor sense B by a certain threshold, the minority ones will be relabeled as A. According to Yarowsky, for any sense to be clearly dominant, the occurrences of the target word should not be less than 4.
[10980860] |When the algorithm converges on a stable residual set, a final decision list of the target word is obtained.
[10980870] |The most reliable collocations are at the top of the new list instead of the original seed words.
[10980880] |The original untagged corpus is then tagged with sense labels and probabilities.
[10980890] |The final decision list may now be applied to new data, the collocation with the highest rank in the list is used to classify the new data.
[10980900] |For example, if the highest ranking collocation of the target word in the new data set is of sense A, then the target word is classified as sense A.
[10990010] |<article>XHTML</article>
[10990020] |The '''''Extensible [[Hypertext]] Markup Language''''', or '''XHTML''', is a [[markup language]] that has the same depth of expression as [[HTML]], but also conforms to [[XML]] syntax.
[10990030] |While HTML is an application of [[Standard Generalized Markup Language]] (SGML), a very flexible markup language, XHTML is an application of [[XML]], a more restrictive subset of SGML.
[10990040] |Because they need to be [[XML#Well-formed_documents|well-formed]], true XHTML documents allow for automated processing to be performed using standard XML tools—unlike HTML, which requires a relatively complex, lenient, and generally custom [[parsing|parser]].
[10990050] |XHTML can be thought of as the intersection of HTML and XML in many respects, since it is a reformulation of HTML in XML.
[10990060] |XHTML 1.0 became a [[World Wide Web Consortium]] (W3C) [[W3C recommendation|Recommendation]] on [[January 26]], [[2000]].
[10990070] |XHTML 1.1 became a W3C Recommendation on [[May 31]], [[2001]].
[10990080] |== Overview == 
[10990090] |XHTML is "a reformulation of the three HTML 4 document types as applications of XML 1.0".
[10990100] |The [[W3C]] also continues to maintain the HTML 4.01 Recommendation and the specifications for [[HTML5]] and XHTML5 are being actively developed.
[10990110] |In the current XHTML 1.0 Recommendation document, as published and revised to August 2002, the W3C comments that, "The XHTML family is the next step in the evolution of the Internet.
[10990120] |By migrating to XHTML today, content developers can enter the XML world with all of its attendant benefits, while still remaining confident in their content's backward and future compatibility."
[10990130] |=== Motivation === 
[10990140] |The need for a reformulated version of HTML was felt primarily because [[World Wide Web]] content now needs to be delivered to many devices (like [[Mobile computing|mobile device]]s) apart from traditional desktop [[computer]]s, where extra resources cannot be devoted to support the additional complexity of HTML syntax.
[10990150] |In practice, however, HTML-supporting browsers for such constrained devices have emerged faster than XHTML support has been added to the desktop browser with the largest market share, [[Internet Explorer]].
[10990160] |Another goal for XHTML and XML was to reduce the demands on parsers and [[user agent]]s in general.
[10990170] |With HTML, user agents increasingly took on the burden of "correcting" errant documents.
[10990180] |Instead, XML requires user agents to give a "fatal" error when encountering malformed XML.
[10990190] |In theory, this allows for vendors to produce leaner browsers, without the obligation to work around author errors.
[10990200] |A side effect of this behavior is that those authoring XHTML documents and testing in conformant browsers should be more readily alerted to errors that may have gone otherwise unnoticed if the browser had attempted to render or ignore the malformed markup.
[10990210] |A feature XHTML inherits from its XML underpinnings is XML [[Namespace (computer science)|namespaces]].
[10990220] |With namespaces, authors or communities of authors can define their own XML elements, attributes and content models to mix within XHTML documents.
[10990230] |This is similar to the semantic flexibility of the <code>class</code> attribute in an [[HTML element]], but with fewer restrictions.
[10990240] |Some W3C XML namespaces/schema that can be mixed with XHTML include [[MathML]] for semantic math markup, [[Scalable Vector Graphics]] for markup of vector graphics, and [[RDFa]] for embedding [[Resource Description Framework|RDF]] data.
[10990250] |=== Relationship to HTML === 
[10990260] |HTML is the [[antecedent]] technology to XHTML.
[10990270] |The changes from HTML to first-generation XHTML 1.0 are minor and are mainly to achieve conformance with XML.
[10990280] |The most important change is the requirement that the document must be [[well-formed element|well-formed]] and that all [[HTML element|elements]] must be explicitly closed as required in XML.
[10990290] |In XML, all element and attribute names are [[case-sensitive]], so the XHTML approach has been to define all tag names to be lowercase.
[10990300] |This contrasts with some earlier established traditions which began around the time of HTML 2.0, when many used uppercase tags.
[10990310] |In XHTML, all attribute values must be enclosed by quotes; either single (<code>'</code>) or double (<code>"</code>) quotes may be used.
[10990320] |In contrast, this was sometimes optional in SGML-based HTML, where numeric or boolean attributes can omit quotes.
[10990330] |All elements must also be explicitly closed, including empty (aka [[singleton]]) elements such as <code>img</code> and <code>br</code>.
[10990340] |This can be done by adding a closing slash to the start tag, ''e.g.'', <code>&lt;img /&gt;</code> and <code>&lt;br /&gt;</code>.
[10990350] |Attribute minimization (e.g., <code>&lt;option selected&gt;</code>) is also prohibited, as the attribute <code>selected</code> contains no explicit value; instead this would be written as <code>&lt;option selected="selected"&gt;</code>.
[10990360] |HTML elements which are optional in the content model will not appear in the [[Document Object Model|DOM]] tree unless they are explicitly specified.
[10990370] |For example, an XHTML page ''must'' have a <code>&lt;body&gt;</code> element, and a table will not have a <code>&lt;tbody&gt;</code> element unless the author specifies one.
[10990380] |The XHTML 1.0 recommendation devotes a section to differences between HTML and XHTML..
[10990390] |The WHATWG wiki similarly considers differences that arise with the use of (X)HTML5..
[10990400] |Because XHTML and HTML are closely related technologies, sometimes they are written about and documented in parallel.
[10990410] |In such circumstances, some authors conflate the two names by using a parenthetical notation, such as (X)HTML.
[10990420] |This indicates that the documentation and principles can be considered to apply generally to both standards.
[10990430] |=== Adoption === 
[10990440] |The similarities between HTML 4.01 and XHTML 1.0 led many web sites and content management systems to adopt the initial W3C XHTML 1.0 Recommendation.
[10990450] |To aid authors in the transition, the W3C provided guidance on how to publish XHTML 1.0 documents in an HTML-compatible manner, and serve them to browsers that were not designed for XHTML.
[10990460] |Such "HTML-compatible" content is sent using the HTML media type (<code>text/html</code>) rather than the official Internet media type for XHTML (<code>application/xhtml+xml</code>).
[10990470] |When measuring the adoption of XHTML to that of regular HTML, therefore, it is important to distinguish whether it is media type usage or actual document contents that is being compared.
[10990480] |Most web browsers have mature support for all of the possible XHTML media types.
[10990490] |The notable exception is [[Internet Explorer]] by [[Microsoft]]; rather than rendering <code>application/xhtml+xml</code> content, a dialog box invites the user to save the content to disk instead.
[10990500] |Both Internet Explorer 7 (released in 2006) and the initial beta version of Internet Explorer 8 (released in March 2008) exhibit this behaviour, and it is unclear whether this will be resolved in a future release.
[10990510] |Whilst this remains the case, most web developers avoid using XHTML that isn’t HTML-compatible, so advantages of XML such as namespaces, faster parsing and smaller-footprint browsers do not benefit the user.
[10990520] |Microsoft developer Chris Wilson explained in 2005 that IE7’s priorities were improved security and [[Cascading Style Sheet|CSS]] support, and that proper XHTML support would be difficult to graft onto IE’s compatibility-oriented HTML parser.
[10990530] |Recently, notable developers have begun to question why Web authors ever made the leap into authoring in XHTML.
[10990540] |In October 2006, HTML inventor and W3C chair [[Tim Berners-Lee]], explaining the motivation for the resumption of HTML (not XHTML) development, posted in his blog: "The attempt to get the world to switch to XML, including quotes around attribute values and slashes in empty tags and namespaces all at once didn't work.
[10990550] |The large HTML-generating public did not move, largely because the browsers didn't complain."
[10990560] |== Versions of XHTML == 
[10990570] |=== XHTML 1.0 === 
[10990580] |December 1998 saw the publication of a W3C Working Draft entitled ''Reformulating HTML in XML''.
[10990590] |This introduced Voyager, the codename for a new markup language based on HTML 4 but adhering to the stricter syntax rules of XML.
[10990600] |By February 1999 the specification had changed name to ''XHTML™ 1.0: The Extensible HyperText Markup Language'', and in January 2000 it was officially adopted as a W3C Recommendation.
[10990610] |There are three formal [[Document Type Definition|DTDs]] for XHTML 1.0, corresponding to the three different versions of HTML 4.01: 
[10990620] |* '''XHTML 1.0 Strict''' is the equivalent to strict HTML 4.01, and includes elements and attributes that have not been marked deprecated in the HTML 4.01 specification.
[10990630] |* '''XHTML 1.0 Transitional''' is the equivalent of HTML 4.01 Transitional, and includes the presentational elements (such as <code>center</code>, <code>font</code> and <code>strike</code>) excluded from the strict version.
[10990640] |* '''XHTML 1.0 Frameset''' is the equivalent of HTML 4.01 Frameset, and allows for the definition of [[frameset|frameset documents]]—a common Web feature in the late 1990s.
[10990650] |The second edition of XHTML 1.0 became a W3C Recommendation in August 2002.
[10990660] |=== Modularization of XHTML === 
[10990670] |The initial draft of ''Modularization of XHTML'' became available in April 1999, and reached Recommendation status in April 2001.
[10990680] |[[XHTML Modularization|Modularization]] provides an abstract collection of components through which XHTML can be subsetted and extended.
[10990690] |The feature is intended to help XHTML extend it’s reach onto emerging platforms, such as mobile devices and Web-enabled televisions.
[10990700] |The first XHTML Family Markup Languages to be developed with this technique were XHTML 1.1 and XHTML Basic 1.0.
[10990710] |Another example is XHTML-Print (W3C Recommendation, September 2006), a language designed for printing from mobile devices to low-cost printers.
[10990720] |In 2008 ''Modularization of XHTML'' is expected to be superseded by ''XHTML Modularization 1.1'', which adds an [[XML Schema (W3C)|XML Schema]] implementation.
[10990730] |=== XHTML 1.1—Module-based XHTML === 
[10990740] |XHTML 1.1 evolved out of the work surrounding the initial ''Modularization of XHTML'' specification.
[10990750] |The W3C released a first draft in September 1999; Recommendation status was reached in May 2001.
[10990760] |The modules combined within XHTML 1.1 effectively recreate XHTML 1.0 Strict, with the addition of [[ruby character|ruby annotation]] elements (<code>ruby</code>, <code>rbc</code>, <code>rtc</code>, <code>rb</code>, <code>rt</code> and <code>rp</code>) to better support East-Asian languages.
[10990770] |Other changes include removal of the <code>lang</code> attribute (in favour of <code>xml:lang</code>), and removal of the <code>name</code> attribute from the <code>a</code> and <code>map</code> elements.
[10990780] |Although XHTML 1.1 is largely compatible with XHTML 1.0 and HTML 4, in August 2002 the W3C issued a formal Note advising that it should not be transmitted with the HTML media type.
[10990790] |With limited browser support for the alternate <code>application/xhtml+xml</code> media type, XHTML 1.1 has so far proven unable to gain widespread use.
[10990800] |XHTML 1.1 Second Edition is expected in the third quarter of 2008.
[10990810] |=== XHTML Basic and XHTML-MP === 
[10990820] |To support constrained devices, ''[[XHTML Basic]]'' was created by the W3C; it reached Recommendation status in December 2000.
[10990830] |XHTML Basic 1.0 is the most restrictive version of XHTML, providing a minimal set of features that even the most limited devices can be expected to support.
[10990840] |The [[Open Mobile Alliance]] and it’s predecessor the WAP Forum released three specifications between 2001 and 2006 that extended XHTML Basic 1.0.
[10990850] |Known as [[XHTML Mobile Profile]] or XHTML-MP, they were strongly focussed on uniting the differing markup languages used on [[mobile phone|mobile handsets]] at the time.
[10990860] |All provide richer form controls than XHTML Basic 1.0, along with varying levels of scripting support.
[10990870] |''XHTML Basic 1.1'' became a W3C Proposed Recommendation in June 2008, superseding XHTML-MP 1.2.
[10990880] |XHTML Basic 1.1 is almost but not quite a subset of regular XHTML 1.1.
[10990890] |The most notable addition over XHTML 1.1 is the <code>inputmode</code> attribute—also found in XHTML-MP 1.2—which provides hints to help browsers improve form entry.
[10990900] |=== XHTML 1.2 === 
[10990910] |The XHTML 2 Working Group is considering the creation a new language based on XHTML 1.1.
[10990920] |If XHTML 1.2 is created, it will include [[WAI-ARIA]] and <code>role</code> attributes to better support accessible web applications, and improved [[Semantic Web]] support through [[RDFa]].
[10990930] |The <code>inputmode</code> attribute from XHTML Basic 1.1, along with the <code>target</code> attribute (for specifying [[Framing (World Wide Web)|frame]] targets) may also be present.
[10990940] |=== XHTML 2.0 === 
[10990950] |Between August 2002 and July 2006 the W3C released the first eight Working Drafts of XHTML 2.0, a new version of XHTML able to make a clean break from the past by discarding the requirement of backward compatibility.
[10990960] |This lack of compatibility with XHTML 1.x and HTML 4 caused some early controversy in the web developer community.
[10990970] |Some parts of the language (such as the <code>role</code> and RDFa attributes) were subsequently split out of the specification and worked on as separate modules, partially to help make the transition from XHTML 1.x to XHTML 2.0 smoother.
[10990980] |A ninth draft of XHTML 2.0 is expected to appear in 2008.
[10990990] |New features introduced by XHTML 2.0 include: 
[10991000] |* HTML forms will be replaced by [[XForms]], an XML-based user input specification allowing forms to be displayed appropriately for different rendering devices.
[10991010] |* HTML frames will be replaced by [[XFrames]].
[10991020] |* The [[DOM Events]] will be replaced by [[XML Events]], which uses the XML [[Document Object Model]].
[10991030] |* A new list element type, the <code>nl</code> element type, will be included to specifically designate a list as a navigation list.
[10991040] |This will be useful in creating nested menus, which are currently created by a wide variety of means like nested unordered lists or nested definition lists.
[10991050] |* Any element will be able to act as a [[hyperlink]], e.g., <code><nowiki><li href="articles.html">Articles</li></nowiki></code>, similar to [[XLink]].
[10991060] |However, XLink itself is not compatible with XHTML due to design differences.
[10991070] |* Any element will be able to reference alternative media with the <code><nowiki>src</nowiki></code> attribute, e.g., <code><nowiki><p src="lbridge.jpg" type="image/jpeg">London Bridge</p></nowiki></code> is the same as <code><nowiki><object src="lbridge.jpg" type="image/jpeg"><p>London Bridge</p></object></nowiki></code>.
[10991080] |* The <code>alt</code> attribute of the <code>img</code> element has been removed: alternative text will be given in the content of the <code>img</code> element, much like the <code>object</code> element, e.g., <code><nowiki><img src="hms_audacious.jpg">HMS <em>Audacious</em></img></nowiki></code>.
[10991090] |* A single heading element (<code>h</code>) will be added.
[10991100] |The level of these headings are determined by the depth of the nesting.
[10991110] |This allows the use of headings to be infinite, rather than limiting use to six levels deep.
[10991120] |* The remaining presentational elements <code>i</code>, <code>b</code> and <code>tt</code>, still allowed in XHTML 1.x (even Strict), will be absent from XHTML 2.0.
[10991130] |The only somewhat presentational elements remaining will be <code>sup</code> and <code>sub</code> for superscript and subscript respectively, because they have significant non-presentational uses and are required by certain languages.
[10991140] |All other tags are meant to be [[semantic]] instead (e.g. <code><nowiki><strong></nowiki></code> for <strong>strong or bolded</strong> text) while allowing the user agent to control the presentation of elements via CSS.
[10991150] |* The addition of RDF triple with the <code>property</code> and <code>about</code> attributes to facilitate the conversion from XHTML to RDF/XML.
[10991160] |=== HTML 5—Vocabulary and APIs for HTML and XHTML === 
[10991170] |[[HTML 5]] initially grew independently of the W3C, through a loose group of browser manufacturers and other interested parties calling themselves the [[WHATWG]], or Web Hypertext Application Technology Working Group.
[10991180] |The WHATWG announced the existence of an open mailing list in June 2004, along with a website bearing the strapline “Maintaining and evolving HTML since 2004.”
[10991190] |The key motive of the group was to create a platform for dynamic web applications; they considered XHTML 2.0 to be too document-centric, and not suitable for the creation of forum sites or online shops.
[10991200] |In April 2007, the Mozilla Foundation and Opera Software joined Apple in requesting that the newly rechartered HTML Working Group of the W3C adopt the work, under the name of HTML 5.
[10991210] |The group resolved to do this the following month, and the First Public Working Draft of HTML 5 was issued by the W3C in January 2008.
[10991220] |The most recent W3C Working Draft was published in June 2008.
[10991230] |HTML 5 has both a regular <code>text/html</code> serialization and an XML serialization, which is known as XHTML 5.
[10991240] |In addition to the markup language, the specification includes a number of [[application programming interfaces]].
[10991250] |The [[Document Object Model]] is extended with APIs for editing, drag-and-drop, data storage and network communication.
[10991260] |The language can be considered more compatible with HTML 4 and XHTML 1.x than XHTML 2.0, due to the decision to keep the existing HTML form elements and events model.
[10991270] |It adds many new elements not found in XHTML 1.x, however, such as <code>section</code> and <code>aside</code>.
[10991280] |(The XHTML 1.2 equivalent of these structural elements would be <code><nowiki></nowiki></code> and <code><nowiki></nowiki></code>.)
[10991290] |The specification is expected to add WAI-ARIA support in a future draft.
[10991300] |There is currently no indication as to whether HTML 5 will support RDFa, or be limited just to [[microformats]].
[10991310] |== Valid XHTML documents == 
[10991320] |An XHTML document that conforms to an XHTML specification is said to be ''valid''.
[10991330] |Validity assures consistency in document code, which in turn eases processing, but does not necessarily ensure consistent rendering by browsers.
[10991340] |A document can be checked for validity with the [[W3C Markup Validation Service]].
[10991350] |In practice, many web development programs such as [[Dreamweaver]] provide code validation based on the [[W3C]] standards.
[10991360] |=== DOCTYPEs === 
[10991370] |In order to validate an XHTML document, a [[Document Type Declaration]], or ''DOCTYPE'', may be used.
[10991380] |A DOCTYPE declares to the browser which [[Document Type Definition]] (DTD) the document conforms to.
[10991390] |A Document Type Declaration should be placed before the [[root element]].
[10991400] |The [[system identifier]] part of the DOCTYPE, which in these examples is the [[Uniform Resource Locator|URL]] that begins with ''http://'', need only point to a copy of the DTD to use if the validator cannot locate one based on the [[public identifier]] (the other quoted string).
[10991410] |It does not need to be the specific URL that is in these examples; in fact, authors are encouraged to use local copies of the DTD files when possible.
[10991420] |The public identifier, however, must be character-for-character the same as in the examples.
[10991430] |These are the most common XHTML Document Type Declarations:
[10991440] |;XHTML 1.0 Strict
[10991450] |:<code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN""<nowiki>http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</nowiki>"&gt;</code>
[10991460] |;XHTML 1.0 Transitional
[10991470] |:<code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN""<nowiki>http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd</nowiki>"&gt;</code>
[10991480] |;XHTML 1.0 Frameset
[10991490] |:<code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN""<nowiki>http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd</nowiki>"&gt;</code>
[10991500] |;XHTML 1.1
[10991510] |:<code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN""<nowiki>http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd</nowiki>"&gt;</code>
[10991520] |;HTML 5
[10991530] |HTML5 does not require a doctype, and HTML 5 validation is not DTD-based.
[10991540] |;XHTML 2.0
[10991550] |XHTML 2.0, [[As of April 2008]], is in a draft phase.
[10991560] |If an XHTML 2.0 Recommendation is published with the same document type declaration as in the current Working Draft, the declaration will appear as: 
[10991570] |:<code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 2.0//EN"<br/>"<nowiki>http://www.w3.org/MarkUp/DTD/xhtml2.dtd</nowiki>"&gt;</code>
[10991580] |A placeholder DTD schema exists at the corresponding URI, though it currently only includes the character reference entities from previous recommendations.
[10991590] |XHTML 2 contemplates both a <code>version</code> attribute and an <code>xsi:schemalocation</code> attribute on the root HTML element that could possibly serve as a substitute for any DOCTYPE declaration.
[10991600] |==== XML namespaces and schemas ==== 
[10991610] |In addition to the DOCTYPE, all XHTML elements must be in the appropriate [[XML namespace]] for the version being used.
[10991620] |This is usually done by declaring a default namespace on the root element using <code>xmlns="namespace"</code> as in the example below.
[10991630] |For XHTML 1.0, XHTML 1.1 and HTML5, this is 
[10991640] |:<code>&lt;<nowiki>html xmlns="http://www.w3.org/1999/xhtml"</nowiki>&gt;</code>
[10991650] |XHTML 2.0 requires both a namespace and an [[W3C XML Schema|XML Schema]] instance declaration.
[10991660] |These might be declared as 
[10991670] |:<code>&lt;html xmlns="<nowiki>http://www.w3.org/2002/06/xhtml2/</nowiki>"<br/>xmlns:xsi="<nowiki>http://www.w3.org/2001/XMLSchema-instance</nowiki>"xsi:schemaLocation="<nowiki>http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd</nowiki>"&gt;</code>
[10991680] |This example for XHTML 2.0 also demonstrates the use of multiple namespaces within a document.
[10991690] |The first <code>xmlns</code> default namespace declaration indicates that elements and attributes whose names have no XML namespace prefix fall within the XHTML 2.0 namespace.
[10991700] |The second namespace prefix declaration <code>xmlns:xsi</code> indicates that any elements or attributes prefixed with the <code>xsi:</code> refer to the XMLSchema-Instance namespace.
[10991710] |Through this namespace mechanism XML documents allow the use of a mixture of elements and attributes taken from various XML vocabularies while avoiding the potential for clashes of naming between items from independently developed vocabularies.
[10991720] |Similar to the case of DOCTYPE above, the actual URL to the [[W3C XML Schema|XML Schema]] file can be changed, as long as the [[Universal Resource Identifier]] (URI) before it (which indicates the XHTML 2.0 namespace) remains the same.
[10991730] |The namespace URI is intended to be a persistent and universally unique identifier for the particular version of the specification.
[10991740] |If treated as a URL, the actual content located at the site is of no significance.
[10991750] |==== XML Declaration ==== 
[10991760] |A [[character encoding]] may be specified at the beginning of an XHTML document in the XML declaration when the document is served using the <code>application/xhtml+xml</code> MIME type.
[10991770] |(If an XML document lacks encoding specification, an XML parser assumes that the encoding is [[UTF-8]] or [[UTF-16]], unless the encoding has already been determined by a higher protocol.)
[10991780] |For example:
[10991790] |: <code><?xml version="1.0" encoding="UTF-8"?></code>
[10991800] |The declaration may be optionally omitted because it declares as its encoding the default encoding.
[10991810] |However, if the document instead makes use of XML 1.1 or another character encoding, a declaration is necessary.
[10991820] |[[Internet Explorer]] prior to version 7 enters [[quirks mode]] if it encounters an XML declaration in a document served as <code>text/html</code>.
[10991830] |=== Common errors === 
[10991840] |Some of the most common errors in the usage of XHTML are: 
[10991850] |* Failing to realize that documents won’t be treated as XHTML unless they are served with an appropriate XML [[Internet media type|MIME type]]
[10991860] |* Not closing empty elements (elements without closing tags in HTML4)
[10991870] |** Incorrect: <code><nowiki></nowiki></code>
[10991880] |** Correct: <code><nowiki></nowiki></code>
[10991890] |Note that any of these are acceptable in XHTML: <code>&lt;br&gt;&lt;/br&gt;</code>, <code>&lt;br/&gt;</code> and <code>&lt;br&nbsp;/&gt;</code>.
[10991900] |Older HTML-only browsers interpreting it as HTML will generally accept <code>&lt;br&gt;</code> and <code>&lt;br&nbsp;/&gt;</code>.
[10991910] |* Not closing non-empty elements
[10991920] |** Incorrect: <code><nowiki><p>This is a paragraph.<p>This is another paragraph.</nowiki></code>
[10991930] |** Correct: <code><nowiki><p>This is a paragraph.</p><p>This is another paragraph.</p></nowiki></code>
[10991940] |* Improperly nesting elements (Note that this would also be invalid in [[HTML]])
[10991950] |** Incorrect: <code><nowiki><em><strong>This is some text.</em></strong></nowiki></code>
[10991960] |** Correct: <code><nowiki><em><strong>This is some text.</strong></em></nowiki></code>
[10991970] |* Not putting quotation marks around attribute values
[10991980] |** Incorrect: <code><nowiki><td rowspan=3></nowiki></code>
[10991990] |** Correct: <code><nowiki><td rowspan="3"></nowiki></code>
[10992000] |** Correct: <code><nowiki><td rowspan='3'></nowiki></code>
[10992010] |* Using the ampersand character outside of entities
[10992020] |** Incorrect: <code><nowiki><title>Cars &amp; Trucks</title></nowiki></code>
[10992030] |** Correct: <code><nowiki><title>Cars &amp;amp; Trucks</title></nowiki></code>
[10992040] |* Using the ampersand outside of entities in [[Uniform Resource Locator|URL]]s (Note that this would also be invalid in [[HTML]])
[10992050] |** Incorrect: <code><nowiki><a href="index.php?page=news&amp;style=5">News</a></nowiki></code>
[10992060] |** Correct: <code><nowiki><a href="index.php?page=news&amp;amp;style=5">News</a></nowiki></code>
[10992070] |* Failing to recognize that XHTML elements and attributes are case sensitive
[10992080] |** Incorrect: <code><nowiki><BODY><P ID="ONE">The Best Page Ever</P></BODY></nowiki></code>
[10992090] |** Correct: <code><nowiki><body><p id="ONE">The Best Page Ever</p></body></nowiki></code>
[10992100] |* Using attribute minimization
[10992110] |** Incorrect: <code><nowiki><textarea readonly>READ-ONLY</textarea></nowiki></code>
[10992120] |** Correct: <code><nowiki><textarea readonly="readonly">READ-ONLY</textarea></nowiki></code>
[10992130] |* Mis-using CDATA, script-comments and xml-comments when embedding scripts and stylesheets.
[10992140] |** This problem can be avoided altogether by putting all script and stylesheet information into separate files and referring to them as follows in the XHTML <code>head</code> element.
[10992150] |<pre> &lt;link rel="stylesheet" href="/style/screen.css" type="text/css" /&gt; &lt;script type="text/javascript" src="/script/site.js"&gt;&lt;/script&gt; </pre>
[10992160] |::Note: The format <code>&lt;script …&gt;&lt;/script&gt;</code>, rather than the more concise <code>&lt;script … /&gt;</code>, is required for HTML compatibility when served as MIME type <code>text/html</code>.
[10992170] |** If an author chooses to include script or style data inline within an XHTML document, different approaches are recommended depending whether the author intends to serve the page as <code>application/xhtml+xml</code> and target only fully conformant browsers, or serve the page as <code>text/html</code> and try to obtain usability in Internet Explorer 6 and other non-conformant browsers.
[10992180] |== Backward compatibility == 
[10992190] |XHTML 1.x documents are mostly backward compatible with HTML 4 user agents when the appropriate guidelines are followed.
[10992200] |XHTML 1.1 is essentially compatible, although the elements for [[ruby character|ruby annotiation]] are not part of the HTML 4 specification and thus generally ignored by HTML 4 browsers.
[10992210] |Later XHTML 1.x modules such as those for the <code>role</code> attribute, [[RDFa]] and [[WAI-ARIA]] degrade gracefully in a similar manner.
[10992220] |HTML 5 and XHTML 2 are significantly less compatible, although this can be mitigated to some degree through the use of scripting.
[10992230] |(This can be simple one-liners, such as the use of “<code>document.createElement()</code>” to register a new HTML element within Internet Explorer, or complete JavaScript frameworks, such as the [[FormFaces]] implementation of [[XForms]].)
[10992240] |=== Examples === 
[10992250] |The followings are examples of XHTML 1.0 Strict.
[10992260] |Both of them have the same visual output.
[10992270] |The former one follows the [http://www.w3.org/TR/xhtml1/#guidelines HTML Compatibility Guidelines] in Appendix C of the XHTML 1.0 Specification while the latter one breaks backward compatibility but provides cleaner codes.
[10992280] |Example 1. <source lang="xml"> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"> <head> <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> <title>XHTML 1.0 Example</title> <script type="text/javascript"> <![CDATA[//><!]]> </script> </head> <body onload="loadpdf()"> <p>This is an example of an <abbr title="Extensible HyperText Markup Language">XHTML</abbr> 1.0 Strict document.<img id="validation-icon" src="http://www.w3.org/Icons/valid-xhtml10" alt="Valid XHTML 1.0 Strict" /><object id="pdf-object" name="pdf-object" type="application/pdf" data="http://www.w3.org/TR/xhtml1/xhtml1.pdf" width="100%" height="500"> </object> </p> </body> </html> </source>
[10992290] |Example 2. <source lang="xml"> <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"> <head> <title>XHTML 1.0 Example</title> <script type="application/javascript"> <![CDATA[ function loadpdf() { document.getElementById("pdf-object").src="http://www.w3.org/TR/xhtml1/xhtml1.pdf"; } ]]> </script> </head> <body onload="loadpdf()"> <p>This is an example of an <abbr title="Extensible HyperText Markup Language">XHTML</abbr> 1.0 Strict document.<img id="validation-icon" src="http://www.w3.org/Icons/valid-xhtml10" alt="Valid XHTML 1.0 Strict"/><object id="pdf-object" name="pdf-object" type="application/pdf" data="http://www.w3.org/TR/xhtml1/xhtml1.pdf" width="100%" height="500"/> </p> </body> </html> </source>
[10992300] |Notes: 
[10992310] |# For further information on the media type recommendation, please refer to [http://www.w3.org/TR/2002/NOTE-xhtml-media-types-20020801/ XHTML Media Types], a W3C Note issued on 2002-08-01.
[10992320] |# The "loadpdf" function is actually a workaround for Internet Explorer.
[10992330] |It can be replaced by adding <code><nowiki><param name="src" value="http://www.w3.org/TR/xhtml1/xhtml1.pdf" /></nowiki></code> within <code><nowiki><object></nowiki></code>.
[10992340] |# The <code>img</code> element does not get a <code>name</code> attribute in the [http://www.w3.org/TR/xhtml1/dtds.html#a_dtd_XHTML-1.0-Strict XHTML 1.0 Strict DTD].
[10992350] |Use <code>id</code> instead.
[11000010] |<article>XML</article>
[11000020] |The '''Extensible Markup Language''' ('''XML''') is a general-purpose ''specification'' for creating custom [[markup language]]s.
[11000030] |It is classified as an [[extensible language]] because it allows its users to define their own elements.
[11000040] |Its primary purpose is to facilitate the sharing of structured data across different information systems, particularly via the [[Internet]], and it is used both to encode documents and to [[Serialization|serialize]] data.
[11000050] |In the latter context, it is comparable with other text-based serialization languages such as [[JSON]] and [[YAML]].
[11000060] |It started as a simplified subset of the [[Standard Generalized Markup Language]] (SGML), and is designed to be relatively human-legible.
[11000070] |By adding [[semantics|semantic]] constraints, application languages can be implemented in XML.
[11000080] |These include [[XHTML]], [[RSS (file format)|RSS]], [[MathML]], [[GraphML]], [[Scalable Vector Graphics]], [[MusicXML]], and thousands of others.
[11000090] |Moreover, XML is sometimes used as the [[specification language]] for such application languages.
[11000100] |XML is [[W3C recommendation|recommended]] by the [[World Wide Web Consortium]] (W3C).
[11000110] |It is a fee-free [[open standard]].
[11000120] |The recommendation specifies both the [[lexical grammar]] and the requirements for [[parsing]].
[11000130] |==Well-formed and valid XML documents== 
[11000140] |There are two levels of correctness of an XML document: 
[11000150] |* '''Well-formed'''.
[11000160] |A well-formed document conforms to all of XML's syntax rules.
[11000170] |For example, if a start-tag appears without a corresponding end-tag, it is not ''well-formed''.
[11000180] |A document that is not well-formed is not considered to be XML; a ''conforming parser'' is not allowed to process it.
[11000190] |* '''Valid'''.
[11000200] |A valid document additionally conforms to some semantic rules.
[11000210] |These rules are either user-defined, or included as an [[XML schema]] or [[Document Type Definition|DTD]].
[11000220] |For example, if a document contains an undefined element, then it is not ''valid''; a ''validating parser'' is not allowed to process it.
[11000230] |==Well-formed documents: XML syntax== 
[11000240] |As long as only [[well-formed element|well-formedness]] is required, XML is a generic framework for storing any amount of text or any data whose structure can be represented as a [[Tree (data structure)|tree]].
[11000250] |The only indispensable syntactical requirement is that the document has exactly one '''root element''' (alternatively called the '''document element''').
[11000260] |This means that the text must be enclosed between a root start-tag and a corresponding end-tag.
[11000270] |The following is a "well-formed" XML document: <source lang="xml"><book>This is a book.... </book> </source>
[11000280] |The root element can be preceded by an optional '''XML declaration'''.
[11000290] |This element states what version of XML is in use (normally 1.0); it may also contain information about [[character encoding]] and external dependencies. <source lang="xml"> <?xml version="1.0" encoding="UTF-8"?> </source>
[11000300] |The specification ''requires'' that [[Data Processor|processors]] of XML support the pan-[[Unicode]] [[character encoding]]s [[UTF-8]] and [[UTF-16/UCS-2|UTF-16]] ([[UTF-32/UCS-4|UTF-32]] is not mandatory).
[11000310] |The use of more limited encodings, such as those based on [[ISO/IEC 8859]], is acknowledged and is widely used and supported.
[11000320] |'''Comments''' can be placed anywhere in the tree, including in the text if the content of the element is text or #PCDATA.
[11000330] |XML comments start with '''&lt;!--''' and end with '''--&gt;'''.
[11000340] |Two dashes (--) may not appear anywhere in the text of the comment.
[11000350] |<source lang="xml"></source>
[11000360] |In any meaningful application, additional markup is used to structure the contents of the XML document.
[11000370] |The text enclosed by the root tags may contain an arbitrary number of XML elements.
[11000380] |The basic syntax for one '''element''' is: <source lang="xml"> <name attribute="value">Content</name> </source> The two instances of »name« are referred to as the '''start-tag''' and '''end-tag''', respectively.
[11000390] |Here, »content« is some text which may again contain XML elements.
[11000400] |So, a generic XML document contains a [[tree (data structure)|tree-based data structure]].
[11000410] |Here is an example of a structured XML document:
[11000420] |<source lang="xml"> <recipe name="bread" prep_time="5 mins" cook_time="3 hours"> <title>Basic bread</title> <ingredient amount="8" unit="dL">Flour</ingredient> <ingredient amount="10" unit="grams">Yeast</ingredient> <ingredient amount="4" unit="dL" state="warm">Water</ingredient> <ingredient amount="1" unit="teaspoon">Salt</ingredient> <instructions> <step>Mix all ingredients together.</step> <step>Knead thoroughly.</step> <step>Cover with a cloth, and leave for one hour in warm room.</step> <step>Knead again.</step> <step>Place in a bread baking tin.</step> <step>Cover with a cloth, and leave for one hour in warm room.</step> <step>Bake in the oven at 180(degrees)C for 30 minutes.</step> </instructions> </recipe> </source>
[11000430] |Attribute values must always be quoted, using single or double quotes; and each attribute name must appear only once in any element.
[11000440] |XML requires that elements be properly nested &mdash; elements may never overlap, and so must be closed in the opposite order to which they are opened.
[11000450] |For example, this fragment of code below cannot be part of a well-formed XML document because the ''title'' and ''author'' elements are closed in the wrong order: <source lang="xml"><title>Book on Logic<author>Aristotle</title></author> </source> One way of writing the same information in a way which could be incorporated into a well-formed XML document is as follows: <source lang="xml"><title>Book on Logic</title> <author>Aristotle</author> </source>
[11000460] |XML provides special syntax for representing an element with empty content.
[11000470] |Instead of writing a start-tag followed immediately by an end-tag, a document may contain an empty-element tag.
[11000480] |An empty-element tag resembles a start-tag but contains a slash just before the closing angle bracket.
[11000490] |The following three examples are equivalent in XML: <source lang="xml"> <foo></foo> <foo /> <foo/> </source> An empty-element may contain attributes: <source lang="xml"> <info author="John Smith" genre="science-fiction" date="2009-Jan-01" /> </source>
[11000500] |===Entity references=== 
[11000510] |An [[SGML entity|entity]] in XML is a named body of data, usually text.
[11000520] |Entities are often used to represent single characters that cannot easily be entered on the keyboard; they are also used to represent pieces of standard ("boilerplate") text that occur in many documents, especially if there is a need to allow such text to be changed in one place only.
[11000530] |Special characters can be represented either using [[SGML entity|entity]] references, or by means of [[numeric character reference]]s.
[11000540] |An example of a numeric character reference is "<code>&amp;#x20AC;</code>", which refers to the [[Euro symbol]] by means of its [[Unicode]] codepoint in [[hexadecimal]].
[11000550] |An entity reference is a [[placeholder]] that represents that entity.
[11000560] |It consists of the entity's name preceded by an [[ampersand]] ("<code>&amp;</code>") and followed by a [[semicolon]] ("<code>;</code>").
[11000570] |XML has five [[predeclared]] entities:
[11000580] |* <code>&amp;amp;</code> (& or "ampersand")
[11000590] |* <code>&amp;lt;</code> (&lt; or "less than")
[11000600] |* <code>&amp;gt;</code> (&gt; or "greater than")
[11000610] |* <code>&amp;apos;</code> (' or "apostrophe")
[11000620] |* <code>&amp;quot;</code> (" or "quotation mark")
[11000630] |Here is an example using a predeclared XML entity to represent the ampersand in the name "AT&amp;T": <source lang="xml"> <company_name>AT&amp;T</company_name> </source> Additional entities (beyond the predefined ones) can be declared in the document's [[XML#DTD|Document Type Definition (DTD)]].
[11000640] |A basic example of doing so in a minimal internal DTD follows.
[11000650] |Declared entities can describe single characters or pieces of text, and can reference each other. <source lang="xml"> <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE example [ <!ENTITY copy "&#xA9;"> <!ENTITY copyright-notice "Copyright &copy; 2006, XYZ Enterprises"> ]> <example> &copyright-notice; </example> </source>
[11000660] |When viewed in a suitable browser, the XML document above appears as:
[11000670] |Copyright © 2006, XYZ Enterprises 
[11000680] |====Numeric character references==== 
[11000690] |Numeric character references look like entity references, but instead of a name, they contain the "<code>[[number sign|#]]</code>" character followed by a number.
[11000700] |The number (in decimal or "<code>x</code>"-prefixed [[hexadecimal]]) represents a Unicode code point.
[11000710] |Unlike entity references, they are neither predeclared nor do they need to be declared in the document's DTD.
[11000720] |They have typically been used to represent characters that are not easily encodable, such as an [[Arabic language|Arabic]] character in a document produced on a European computer.
[11000730] |The ampersand in the "AT&amp;T" example could also be [[escape character|escaped]] like this (decimal 38 and hexadecimal 26 both represent the Unicode code point for the "&amp;" character): <source lang="xml"> <company_name>AT&#38;T</company_name> <company_name>AT&#x26;T</company_name> </source>
[11000740] |Similarly, in the previous example, notice that “&#xA9” is used to generate the “©” symbol.
[11000750] |See also [[numeric character reference]]s.
[11000760] |===Well-formed documents=== 
[11000770] |In XML, a [[well-formed element|well-formed]] document must conform to the following rules, among others:
[11000780] |* Non-empty elements are [[delimiter|delimited]] by both a start-tag and an end-tag.
[11000790] |* Empty elements may be marked with an empty-element (self-closing) tag, such as <code>&lt;IAmEmpty /></code>.
[11000800] |This is equal to <code>&lt;IAmEmpty&gt;&lt;/IAmEmpty&gt;</code>.
[11000810] |* All attribute values are quoted with either single (') or double (") quotes.
[11000820] |Single quotes close a single quote and double quotes close a double quote.
[11000830] |* Tags may be nested but must not overlap.
[11000840] |Each non-root element must be completely contained in another element.
[11000850] |* The document complies with its declared character encoding.
[11000860] |The encoding may be declared or implied externally, such as in "Content-Type" headers when a document is transported via [[Hypertext Transfer Protocol|HTTP]], or internally, using explicit markup at the very beginning of the document.
[11000870] |When no such declaration exists, a Unicode encoding is assumed, as defined by a Unicode [[Byte-order mark|Byte Order Mark]] before the document's first character.
[11000880] |If the mark does not exist, UTF-8 encoding is assumed.
[11000890] |Element names are case-sensitive.
[11000900] |For example, the following is a well-formed matching pair: 
[11000910] |:<code>&lt;Step></code> ... <code>&lt;/Step></code>
[11000920] |whereas this is not 
[11000930] |:<code>&lt;Step></code> ... <code>&lt;/step></code>
[11000940] |By carefully choosing the names of the XML elements one may convey the meaning of the data in the [[Markup language|markup]].
[11000950] |This increases human readability while retaining the rigor needed for software parsing.
[11000960] |Choosing meaningful names implies the [[semantics]] of elements and attributes to a human reader without reference to external documentation.
[11000970] |However, this can lead to verbosity, which complicates [[authoring]] and increases [[file size]].
[11000980] |===Automatic verification=== 
[11000990] |It is relatively simple to verify that a document is well-formed or validated XML, because the rules of well-formedness and validation of XML are designed for portability of tools.
[11001000] |The idea is that any tool designed to work with XML files will be able to work with XML files written in any XML language (or XML application).
[11001010] |Here are some examples of ways to verify XML documents: 
[11001020] |* load it into an XML-capable browser, such as [[Mozilla Firefox|Firefox]] or [[Internet Explorer]]
[11001030] |* use a tool like xmlwf (usually bundled with [[Expat (XML)|expat]])
[11001040] |* parse the document, for instance in [[Ruby programming language|Ruby]]:
[11001050] |irb> require "rexml/document" irb> include REXML irb> doc = Document.new(File.new("test.xml")).root
[11001060] |==Valid documents: XML semantics== 
[11001070] |By leaving the names, allowable hierarchy, and meanings of the elements and attributes open and definable by a customizable ''[[XML schema|schema]] or [[Document Type Definition|DTD]]'', XML provides a syntactic foundation for the creation of purpose-specific, XML-based markup languages.
[11001080] |The general syntax of such languages is rigid &mdash; documents must adhere to the general rules of XML, ensuring that all XML-aware software can at least read and understand the relative arrangement of information within them.
[11001090] |The schema merely supplements the syntax rules with a set of constraints.
[11001100] |Schemas typically restrict element and attribute names and their allowable containment hierarchies, such as only allowing an element named 'birthday' to contain one element named 'month' and one element named 'day', each of which has to contain only character data.
[11001110] |The constraints in a schema may also include [[data type]] assignments that affect how information is processed; for example, the 'month' element's character data may be defined as being a month according to a particular schema language's conventions, perhaps meaning that it must not only be formatted a certain way, but also must not be processed as if it were some other type of data.
[11001120] |An XML document that complies with a particular schema/DTD, in addition to being well-formed, is said to be '''valid'''.
[11001130] |An XML schema is a description of a type of XML document, typically expressed in terms of [[constraints]] on the structure and content of documents of that type, above and beyond the basic constraints imposed by XML itself.
[11001140] |A number of standard and proprietary XML schema languages have emerged for the purpose of formally expressing such schemas, and some of these languages are XML-based, themselves.
[11001150] |Before the advent of generalised data description languages such as SGML and XML, software designers had to define special [[file format]]s or small languages to share data between programs.
[11001160] |This required writing detailed [[specifications]] and special-purpose parsers and [[writer]]s.
[11001170] |XML's regular structure and strict parsing rules allow software designers to leave parsing to standard tools, and since XML provides a general, [[data model]]-oriented framework for the development of application-specific languages, software designers need only concentrate on the development of rules for their data, at relatively high levels of abstraction.
[11001180] |Well-tested tools exist to [[validate]] an XML document "against" a schema: the tool automatically [[verify|verifies]] whether the document conforms to constraints expressed in the schema.
[11001190] |Some of these validation tools are included in XML parsers, and some are packaged separately.
[11001200] |Other usages of schemas exist: XML editors, for instance, can use schemas to support the editing process (by suggesting valid elements and attributes names, etc).
[11001210] |====DTD==== 
[11001220] |The oldest schema format for XML is the [[Document Type Definition]] (DTD), inherited from SGML.
[11001230] |While DTD support is ubiquitous due to its inclusion in the XML 1.0 standard, it is seen as limited for the following reasons:
[11001240] |* It has no support for newer [[feature]]s of XML, most importantly [[XML Namespace|namespaces]].
[11001250] |* It lacks expressiveness.
[11001260] |Certain formal aspects of an XML document cannot be captured in a DTD.
[11001270] |* It uses a custom non-XML syntax, inherited from [[SGML]], to describe the schema.
[11001280] |DTD is still used in many applications because it is considered the easiest to read and write.
[11001290] |====XML Schema==== 
[11001300] |A newer [[XML schema]] language, described by the W3C as the successor of DTDs, is [[XML Schema (W3C)|XML Schema]], or more informally referred to by the [[acronym and initialism|initialism]] for XML Schema instances, XSD (XML Schema Definition).
[11001310] |XSDs are far more powerful than DTDs in describing XML languages.
[11001320] |They use a rich [[datatype|datatyping]] system, allow for more detailed constraints on an XML document's logical structure, and must be processed in a more robust validation framework.
[11001330] |XSDs also use an XML-based format, which makes it possible to use ordinary XML tools to help process them, although XSD implementations require much more than just the ability to read XML.
[11001340] |Criticisms of XSD include the following: 
[11001350] |*The specification is very large, which makes it difficult to understand and implement.
[11001360] |*The XML-based syntax leads to verbosity in schema descriptions, which makes XSDs harder to read and write.
[11001370] |*Schema validation can be an expensive addition to XML parsing, especially for high volume systems.
[11001380] |*The modeling capabilities are very limited, with no ability to allow attributes to influence [[content model]]s.
[11001390] |*The [[type derivation model]] is very limited, in particular that derivation by extension is rarely useful.
[11001400] |*Database-related [[data transfer]] is supported with ideas such as [[nillability]], but the requirements of industrial publishing are under-supported.
[11001410] |*The key/[[keyref]]/[[uniqueness]] mechanisms are not type-aware.
[11001420] |*The [[PSVI]] concept (Post Schema Validation Infoset) does not have a standard XML representation or [[Application Programming Interface]], thus it works against [[vendor independence]] unless revalidation is performed.
[11001430] |====RELAX NG==== 
[11001440] |Another popular schema language for XML is [[RELAX NG]].
[11001450] |Initially specified by [[OASIS (organization)|OASIS]], RELAX NG is now also an ISO international standard (as part of [[DSDL]]).
[11001460] |It has two formats: an XML based syntax and a non-XML compact syntax.
[11001470] |The compact syntax aims to increase readability and writability but, since there is a well-defined way to translate the compact syntax to the XML syntax and back again by means of [[James Clark (XML expert)|James Clark]]'s [http://www.thaiopensource.com/relaxng/trang.html Trang conversion tool], the advantage of using standard XML tools is not lost.
[11001480] |RELAX NG has a simpler definition and validation framework than XML Schema, making it easier to use and implement.
[11001490] |It also has the ability to use [[datatype]] framework [[plug-in]]s; a RELAX NG schema author, for example, can require values in an XML document to conform to definitions in XML Schema Datatypes.
[11001500] |====ISO DSDL and other schema languages==== 
[11001510] |The ISO [[DSDL]] (Document Schema Description Languages) standard brings together a comprehensive set of small schema languages, each targeted at specific problems.
[11001520] |DSDL includes [[RELAX NG]] full and compact syntax, [[Schematron]] assertion language, and languages for defining datatypes, character repertoire constraints, renaming and entity expansion, and namespace-based [[routing]] of document fragments to different validators.
[11001530] |DSDL schema languages do not have the vendor support of XML Schemas yet, and are to some extent a grassroots reaction of industrial publishers to the lack of utility of XML Schemas for [[publishing]].
[11001540] |Some schema languages not only describe the structure of a particular XML format but also offer limited facilities to influence processing of individual XML files that conform to this format.
[11001550] |DTDs and XSDs both have this ability; they can for instance provide attribute defaults.
[11001560] |RELAX NG and Schematron intentionally do not provide these; for example the [[infoset]] augmentation facility.
[11001570] |=== International use === 
[11001580] |XML supports the direct use of almost any Unicode character in element names, attributes, comments, character data, and processing instructions (other than the ones that have special symbolic meaning in XML itself, such as the open corner bracket, "<").
[11001590] |Therefore, the following is a well-formed XML document, even though it includes both [[Chinese character|Chinese]] and [[Cyrillic alphabet|Cyrillic]] characters: <source lang="xml"> <?xml version="1.0" encoding="UTF-8"?> <俄語>Данные</俄語> </source>
[11001600] |== Displaying XML on the web == 
[11001610] |XML documents do not carry information about how to display the data.
[11001620] |Without using [[Cascading Style Sheets|CSS]] or [[Extensible Stylesheet Language|XSL]], a generic XML document is rendered as raw XML text by most [[web browser]]s.
[11001630] |Some display it with 'handles' (e.g. + and - signs in the margin) that allow parts of the structure to be expanded or collapsed with mouse-clicks.
[11001640] |In order to style the rendering in a browser with CSS, the XML document must include a reference to the [[stylesheet]]: <source lang="xml"> <?xml-stylesheet type="text/css" href="myStyleSheet.css"?> </source>
[11001650] |Note that this is different from specifying such a stylesheet in HTML, which uses the <code>&lt;link></code> element.
[11001660] |[[Extensible Stylesheet Language]] (XSL) can be used to alter the format of XML data, either into HTML or other formats that are suitable for a browser to display.
[11001670] |To specify [[client-side]] [[XSL Transformations|XSL Transformation]] (XSLT), the following processing instruction is required in the XML: <source lang="xml"> <?xml-stylesheet type="text/xsl" href="myTransform.xslt"?> </source>
[11001680] |Client-side XSLT is supported by many [[web browser]]s.
[11001690] |Alternatively, one may use XSL to convert XML into a displayable format ''on the [[Server (computing)|server]]'' rather than being dependent on the [[end-user]]'s browser capabilities.
[11001700] |The end-user is not aware of what has gone on 'behind the scenes'; all they see is well-formatted, displayable data.
[11001710] |See the XSLT article for [[XSL Transformations#XSLT examples|an example of server-side XSLT in action]].
[11001720] |== XML extensions == 
[11001730] |* '''[[XPath]]''' makes it possible to refer to individual parts of an XML document.
[11001740] |This provides random access to XML data for other technologies, including XSLT, XSL-FO, XQuery etc.
[11001750] |XPath expressions can refer to all or part of the text, data and values in XML elements, attributes, processing instructions, comments etc.
[11001760] |They can also access the names of elements and attributes.
[11001770] |XPaths can be used in both valid and well-formed XML, with and without defined namespaces.
[11001780] |*'''[[XInclude]]''' defines the ability for XML files to include all or part of an external file.
[11001790] |When processing is complete, the final XML infoset has no XInclude elements, but instead has copied the documents or parts thereof into the final infoset.
[11001800] |It uses XPath to refer to a portion of the document for partial inclusions.
[11001810] |*'''[[XQuery]]''' is to XML and [[XML database|XML Databases]] what [[SQL]] and [[PL/SQL]] are to [[relational databases]]: ways to access, manipulate and return XML.
[11001820] |*'''[[XML Namespace]]s''' enable the same document to contain XML elements and attributes taken from different vocabularies, without any [[naming collision]]s occurring.
[11001830] |*'''[[XML Signature]]''' defines the syntax and processing rules for creating [[digital signatures]] on XML content.
[11001840] |*'''[[XML Encryption]]''' defines the syntax and processing rules for [[encryption|encrypting]] XML content.
[11001850] |* '''[[XPointer]]''' is a system for addressing components of XML-based internet media.
[11001860] |XML files may be served with a variety of [[MIME|Media types]].
[11001870] |RFC 3023 defines the types "application/xml" and "text/xml", which say only that the data is in XML, and nothing about its semantics.
[11001880] |The use of "text/xml" has been criticized as a potential source of encoding problems but is now in the process of being deprecated.
[11001890] |RFC 3023 also recommends that XML-based languages be given media types beginning in "application/" and ending in "+xml"; for example "application/atom+xml" for [[Atom (standard)|Atom]].
[11001900] |This page discusses further [[XML and MIME]].
[11001910] |== Processing XML files == 
[11001920] |Three traditional techniques for processing XML files are: 
[11001930] |* Using a programming language and the [[Simple API for XML|SAX]] [[Application programming interface|API]].
[11001940] |* Using a programming language and the [[DOM (XML API)|DOM]] [[Application programming interface|API]].
[11001950] |* Using a transformation engine and a filter
[11001960] |More recent and emerging techniques for processing XML files are: 
[11001970] |* Pull Parsing
[11001980] |* Non-Extractive Parsing (i.e. in-situ parsing)
[11001990] |* Data binding
[11002000] |=== Simple API for XML (SAX)=== 
[11002010] |[[Simple API for XML|SAX]] is a [[lexical analysis|lexical]], [[Event-driven programming|event-driven]] interface in which a document is read serially and its contents are reported as "[[callback]]s" to various [[method (computer science)|method]]s on a [[event handler|handler object]] of the user's design.
[11002020] |SAX is fast and efficient to implement, but difficult to use for extracting information at random from the XML, since it tends to burden the application author with keeping track of what part of the document is being processed.
[11002030] |It is better suited to situations in which certain types of information are always handled the same way, no matter where they occur in the document.
[11002040] |=== DOM === 
[11002050] |[[Document Object Model|DOM]] is an [[interface]]-oriented [[Application Programming Interface]] that allows for navigation of the entire document as if it were a tree of "[[Node (computer science)|Node]]" [[Object (computer science)|object]]s representing the document's contents.
[11002060] |A DOM document can be created by a parser, or can be generated manually by users (with limitations).
[11002070] |Data types in DOM Nodes are abstract; implementations provide their own [[programming]] language-specific [[binding]]s.
[11002080] |DOM implementations tend to be [[memory]] intensive, as they generally require the entire document to be loaded into memory and constructed as a tree of objects before access is allowed.
[11002090] |DOM is supported in Java by several packages that usually come with the standard libraries.
[11002100] |As the DOM specification is regulated by the [[World Wide Web Consortium]], the main interfaces (Node, Document, etc.) are in the package org.w3c.dom.*, as well as some of the events and interfaces for other capabilities like serialization (output).
[11002110] |The package com.sun.org.apache.xml.internal.serialize.* provides the serialization (output capacities) by implementing the appropriate interfaces, while the javax.xml.parsers.* package parses data to create DOM XML documents for manipulation.
[11002120] |=== Non-extractive XML Processing API === 
[11002130] |Non-extractive XML Processing API is a new and emerging category of parsers that aim to overcome the fundamental limitations of DOM and SAX.
[11002140] |The most representative is VTD-XML, which abolishes the object-oriented modeling of XML hierarchy and instead uses 64-bit Virtual Token Descriptors (encoding offsets, lengths, depths, and types) of XML tokens.
[11002150] |VTD-XML's approach enables a number of interesting features/enhancements, such as high performance, low memory usage [8], ASIC implementation [9], incremental update [10], and native XML indexing [11] [12].
[11002160] |=== Transformation engines and filters === 
[11002170] |A [[filter (software)|filter]] in the [[Extensible Stylesheet Language]] (XSL) family can transform an XML file for [[display]]ing or [[Computer printer|print]]ing.
[11002180] |* '''[[XSL-FO]]''' is a declarative, XML-based [[page layout]] language.
[11002190] |An XSL-FO processor can be used to convert an XSL-FO document into another non-XML format, such as [[PDF]].
[11002200] |* '''[[XSLT]]''' is a declarative, XML-based document transformation language.
[11002210] |An XSLT processor can use an XSLT ''stylesheet'' as a guide for the conversion of the data tree represented by one XML document into another tree that can then be [[serialize]]d as XML, HTML, plain text, or any other format supported by the processor.
[11002220] |* '''[[XQuery]]''' is a W3C language for [[query]]ing, constructing and transforming XML data.
[11002230] |* '''[[XPath]]''' is a DOM-like node tree [[data model]] and [[path expression]] language for selecting data within XML documents.
[11002240] |XSL-FO, XSLT and XQuery all make use of XPath.
[11002250] |XPath also includes a useful [[function library]].
[11002260] |=== Pull parsing === 
[11002270] |Pull parsing treats the document as a series of items which are read in sequence using the Iterator design pattern.
[11002280] |This allows for writing of [[recursive descent parser|recursive-descent parsers]] in which the structure of the code performing the parsing mirrors the structure of the XML being parsed, and intermediate parsed results can be used and accessed as local variables within the methods performing the parsing, or passed down (as method parameters) into lower-level methods, or returned (as method return values) to higher-level methods.
[11002290] |Examples of pull parsers include [[StAX]] in the [[Java (programming language)|Java]] programming language, SimpleXML in PHP and System.Xml.XmlReader in .NET.
[11002300] |A pull parser creates an iterator that sequentially visits the various elements, attributes, and data in an XML document.
[11002310] |Code which uses this 'iterator' can test the current item (to tell, for example, whether it is a start or end element, or text), and inspect its attributes (local name, namespace, values of XML attributes, value of text, etc.), and can also move the iterator to the 'next' item.
[11002320] |The code can thus extract information from the document as it traverses it.
[11002330] |The recursive-descent approach tends to lend itself to keeping data as typed local variables in the code doing the parsing, while SAX, for instance, typically requires a parser to manually maintain intermediate data within a stack of elements which are parent elements of the element being parsed.
[11002340] |Pull-parsing code can be more straightforward to understand and maintain than SAX parsing code.
[11002350] |=== Non-extractive XML Processing API === 
[11002360] |Non-extractive XML Processing API is a new and emerging category of parsers that aim to overcome the fundamental limitations of DOM and SAX.
[11002370] |The most representative is [[VTD-XML]], which abolishes the object-oriented modeling of XML hierarchy and instead uses 64-bit Virtual Token Descriptors (encoding offsets, lengths, depths, and types) of XML tokens.
[11002380] |VTD-XML's approach enables a number of interesting features/enhancements, such as high performance, low memory usage , ASIC implementation , incremental update , and native XML indexing .
[11002390] |=== Data binding === 
[11002400] |Another form of XML Processing API is [[XML data binding|data binding]], where XML data is made available as a custom, strongly typed programming language data structure, in contrast to the interface-oriented DOM.
[11002410] |Example data binding systems include the [[Java (programming language)|Java]] [[Architecture]] for XML Binding ([[JAXB]]).
[11002420] |=== Specific XML applications and editors === 
[11002430] |The [[Native and foreign format|native file format]] of [[OpenOffice.org]], [[AbiWord]], and [[Apple Computer|Apple]]'s [[iWork]] applications is XML.
[11002440] |Some parts of [[Microsoft Office]] 2007 are also able to edit XML files with a user-supplied schema (but not a DTD), and Microsoft has released a file format compatibility kit for Office 2003 that allows previous versions of Office to save in the new XML based format.
[11002450] |There are dozens of other [[XML editor]]s available.
[11002460] |==History== 
[11002470] |The versatility of [[SGML]] for dynamic information display was understood by early digital media publishers in the late 1980s prior to the rise of the Internet.
[11002480] |By the mid-1990s some practitioners of SGML had gained experience with the then-new [[World Wide Web]], and believed that SGML offered solutions to some of the problems the Web was likely to face as it grew.
[11002490] |[[Dan Connolly]] added SGML to the list of W3C's activities when he joined the staff in 1995; work began in mid-1996 when [[Jon Bosak]] developed a charter and recruited collaborators.
[11002500] |Bosak was well connected in the small community of people who had experience both in SGML and the Web.
[11002510] |He received support in his efforts from [[Microsoft]].
[11002520] |XML was compiled by a [[working group]] of eleven members, supported by an (approximately) 150-member Interest Group.
[11002530] |Technical debate took place on the Interest Group mailing list and issues were resolved by consensus or, when that failed, majority vote of the Working Group.
[11002540] |A record of design decisions and their rationales was compiled by [[Michael Sperberg-McQueen]] on December 4th 1997.
[11002550] |[[James Clark (XML expert)|James Clark]] served as Technical Lead of the Working Group, notably contributing the empty-element "<empty/>" syntax and the name "XML".
[11002560] |Other names that had been put forward for consideration included "MAGMA" (Minimal Architecture for Generalized Markup Applications), "SLIM" (Structured Language for Internet Markup) and "MGML" (Minimal Generalized Markup Language).
[11002570] |The co-editors of the specification were originally [[Tim Bray]] and [[Michael Sperberg-McQueen]].
[11002580] |Halfway through the project Bray accepted a consulting engagement with [[Netscape Communications Corporation|Netscape]], provoking vociferous protests from Microsoft.
[11002590] |Bray was temporarily asked to resign the editorship.
[11002600] |This led to intense dispute in the Working Group, eventually solved by the appointment of Microsoft's [[Jean Paoli]] as a third co-editor.
[11002610] |The XML Working Group never met face-to-face; the design was accomplished using a combination of email and weekly teleconferences.
[11002620] |The major design decisions were reached in twenty weeks of intense work between July and November of 1996, when the first Working Draft of an XML specification was published.
[11002630] |Further design work continued through [[1997]], and XML 1.0 became a [[W3C]] Recommendation on [[February 10]], [[1998]].
[11002640] |XML 1.0 achieved the Working Group's goals of Internet usability, general-purpose usability, SGML compatibility, facilitation of easy development of processing software, minimization of optional features, legibility, formality, conciseness, and ease of authoring.
[11002650] |Like its antecedent SGML, XML allows for some redundant syntactic constructs and includes repetition of element identifiers.
[11002660] |In these respects, terseness was not considered essential in its structure.
[11002670] |===Sources=== 
[11002680] |XML is a profile of an ISO standard [[SGML]], and most of XML comes from SGML unchanged.
[11002690] |From SGML comes the separation of logical and physical structures (elements and entities), the availability of grammar-based validation (DTDs), the separation of data and metadata (elements and attributes), mixed content, the separation of processing from representation (processing instructions), and the default angle-bracket syntax.
[11002700] |Removed were the SGML Declaration (XML has a fixed delimiter set and adopts [[Unicode]] as the document [[Character encoding|character set]]).
[11002710] |Other sources of technology for XML were the [[Text Encoding Initiative]] (TEI), which defined a profile of SGML for use as a 'transfer syntax'; [[HTML]], in which elements were synchronous with their resource, the separation of document character set from resource encoding, the xml:lang attribute, and the [[HTTP]] notion that metadata accompanied the resource rather than being needed at the declaration of a link; and the Extended Reference Concrete Syntax (ERCS), from which XML 1.0's naming rules were taken, and which had introduced hexadecimal numeric character references and the concept of references to make available all Unicode characters.
[11002720] |Ideas that developed during discussion which were novel in XML, were the algorithm for encoding detection and the encoding header, the processing instruction target, the xml:space attribute, and the new close delimiter for empty-element tags.
[11002730] |===Versions=== 
[11002740] |There are two current versions of XML.
[11002750] |The first, ''XML 1.0'', was initially defined in [[1998]].
[11002760] |It has undergone minor revisions since then, without being given a new version number, and is currently in its fourth edition, as published on [[August 16]], [[2006]].
[11002770] |It is widely implemented and still recommended for general use.
[11002780] |The second, ''XML 1.1'', was initially published on [[February 4]], [[2004]], the same day as XML 1.0 Third Edition, and is currently in its second edition, as published on [[August 16]], [[2006]].
[11002790] |It contains features &mdash; some contentious &mdash; that are intended to make XML easier to use in certain cases - mainly enabling the use of line-ending characters used on [[EBCDIC]] platforms, and the use of scripts and characters absent from Unicode 2.0.
[11002800] |XML 1.1 is not very widely implemented and is recommended for use only by those who need its unique features.
[11002810] |XML 1.0 and XML 1.1 differ in the requirements of characters used for element and attribute names: XML 1.0 only allows characters which are defined in Unicode 2.0, which includes most world scripts, but excludes those which were added in later Unicode versions.
[11002820] |Among the excluded scripts are [[Mongolian language|Mongolian]], [[Cambodian language|Cambodian]], [[Amharic]], [[Burmese language|Burmese]], and others.
[11002830] |Almost any Unicode character can be used in the character data and attribute values of an XML 1.1 document, even if the character is not defined, aside from having a code point, in the current version of Unicode.
[11002840] |The approach in XML 1.1 is that only certain characters are forbidden, and everything else is allowed, whereas in XML 1.0, only certain characters are explicitly allowed, thus XML 1.0 cannot accommodate the addition of characters in future versions of Unicode.
[11002850] |In character data and attribute values, XML 1.1 allows the use of more [[control character]]s than XML 1.0, but, for "robustness", most of the control characters introduced in XML 1.1 must be expressed as numeric character references.
[11002860] |Among the supported control characters in XML 1.1 are two line break codes that must be treated as whitespace.
[11002870] |Whitespace characters are the only control codes that can be written directly.
[11002880] |There are also discussions on an XML 2.0, although it remains to be seen if such will ever come about. [http://www.textuality.com/xml/xmlSW.html XML-SW] (SW for [[skunk works]]), written by one of the original developers of XML, contains some proposals for what an XML 2.0 might look like: elimination of DTDs from syntax, integration of [[namespace (computer science)#XML|namespace]]s, [[XML Base]] and [[XML Information Set]] (''infoset'') into the base standard.
[11002890] |The World Wide Web Consortium also has an XML Binary Characterization Working Group doing preliminary research into use cases and properties for a binary encoding of the XML infoset.
[11002900] |The working group is not chartered to produce any official standards.
[11002910] |Since XML is by definition text-based, ITU-T and ISO are using the name ''[[Fast Infoset]][http://asn1.elibel.tm.fr/xml/finf.htm]'' for their own binary infoset to avoid confusion (see ITU-T Rec. X.891 | ISO/IEC 24824-1).
[11002920] |===Patent claims=== 
[11002930] |In October 2005 the small company [[Scientigo]] publicly asserted that two of its patents, and , apply to the use of XML.
[11002940] |The patents cover the "modeling, storage and transfer [of data] in a particular ''non-hierarchical'', non-integrated neutral form", according to their applications, which were filed in 1997 and 1999.
[11002950] |Scientigo CEO [[Doyal Bryant]] expressed a desire to "monetize" the patents but stated that the company was "not interested in having us against the world."
[11002960] |He said that Scientigo was discussing the patents with several large corporations.
[11002970] |XML users and independent experts responded to Scientigo's claims with widespread skepticism and criticism.
[11002980] |Some derided the company as a [[patent troll]].
[11002990] |[[Tim Bray]] described any claims that the patents covered XML as "ridiculous on the face of it".
[11003000] |== Critique of XML == 
[11003010] |Commentators have offered various critiques of XML, suggesting circumstances where XML provides both advantages and potential disadvantages.
[11003020] |===Advantages of XML=== 
[11003030] |* It is text-based.
[11003040] |* It supports [[Unicode]], allowing almost any information in any written human language to be communicated.
[11003050] |* It can represent common [[computer science]] [[data structure]]s: [[record (computer science)|record]]s, [[List (computing)|list]]s and [[tree data structure|tree]]s.
[11003060] |* Its [[self-documenting]] format describes [[structure]] and [[field name]]s as well as specific values.
[11003070] |* The strict [[syntax]] and [[parsing]] requirements make the necessary [[parser|parsing algorithms]] extremely simple, efficient, and consistent.
[11003080] |* XML is heavily used as a format for [[document storage]] and processing, both online and offline.
[11003090] |* It is based on [[international standards]].
[11003100] |* It can be updated incrementally.
[11003110] |* It allows validation using schema languages such as [[XSD]] and [[Schematron]], which makes effective unit-testing, firewalls, acceptance testing, contractual specification and software construction easier.
[11003120] |* The [[hierarchy|hierarchical]] structure is suitable for most (but not all) types of documents.
[11003130] |* It is platform-independent, thus relatively immune to changes in technology.
[11003140] |* Forward and backward compatibility are relatively easy to maintain despite changes in DTD or Schema.
[11003150] |* Its predecessor, [[SGML]], has been in use since [[1986]], so there is extensive experience and software available.
[11003160] |===Disadvantages of XML=== 
[11003170] |* XML syntax is redundant or large relative to binary representations of similar data, especially with [[Table (information)|tabular]] data.
[11003180] |* The redundancy may affect application efficiency through higher storage, transmission and processing costs.
[11003190] |* XML syntax is verbose, especially for human readers, relative to other alternative 'text-based' data transmission formats.
[11003200] |* The [[hierarchical model]] for representation is limited in comparison to an [[object oriented]] [[Graph (mathematics)|graph]].
[11003210] |* Expressing overlapping (non-hierarchical) node relationships requires extra effort.
[11003220] |* XML namespaces are problematic to use and namespace support can be difficult to correctly implement in an XML parser.
[11003230] |* XML is commonly depicted as "[[self-documenting]]" but this depiction ignores critical ambiguities.
[11003240] |* The distinction between content and attributes in XML seems unnatural to some and makes designing XML data structures harder.
[11003250] |== Standardization == 
[11003260] |In addition to the [[ISO]] standards mentioned above, other related document include
[11003270] |* ISO/IEC 8825-4:2002 ''Information technology -- ASN.1 encoding rules: XML Encoding Rules (XER)''
[11003280] |* ISO/IEC 8825-5:2004 ''Information technology -- ASN.1 encoding rules: Mapping W3C XML schema definitions into ASN.1''
[11003290] |* ISO/IEC 9075-14:2006 ''Information technology -- Database languages -- SQL -- Part 14: XML-Related Specifications (SQL/XML)''
[11003300] |* ISO 10303-28:2007 ''Industrial automation systems and integration -- Product data representation and exchange -- Part 28: Implementation methods: XML representations of EXPRESS schemas and data, using XML schemas''
[11003310] |* ISO/IEC 13250-3:2007 ''Information technology -- Topic Maps -- Part 3: XML syntax''
[11003320] |* ISO/IEC 13522-5:1997 ''Information technology -- Coding of multimedia and hypermedia information -- Part 5: Support for base-level interactive applications''
[11003330] |* ISO/IEC 13522-8:2001 ''Information technology -- Coding of multimedia and hypermedia information -- Part 8: XML notation for ISO/IEC 13522-5''
[11003340] |* ISO/IEC 18056:2007 ''Information technology -- Telecommunications and information exchange between systems -- XML Protocol for Computer Supported Telecommunications Applications (CSTA) Phase III''
[11003350] |* ISO/IEC 19503:2005 ''Information technology -- XML Metadata Interchange (XMI)''
[11003360] |* ISO/IEC 19776-1:2005 ''Information technology -- Computer graphics, image processing and environmental data representation -- Extensible 3D (X3D) encodings -- Part 1: Extensible Markup Language (XML) encoding
[11003370] |* ISO/IEC 22537:2006 ''Information technology -- ECMAScript for XML (E4X) specification''
[11003380] |* ISO 22643:2003 ''Space data and information transfer systems -- Data entity dictionary specification language (DEDSL) -- XML/DTD Syntax''
[11003390] |* ISO/IEC 23001-1:2006 ''Information technology -- MPEG systems technologies -- Part 1: Binary MPEG format for XML''
[11003400] |* ISO 24531:2007 ''Intelligent transport systems -- System architecture, taxonomy and terminology -- Using XML in ITS standards, data registries and data dictionaries''
